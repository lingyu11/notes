{"config":{"lang":["zh","en","ja"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to lingyu's note!","text":"<p>\u4ec5\u7528\u4f5c\u4e2a\u4eba\u5b66\u4e60\u8bb0\u5f55</p> <p>Don't just read it; fight it!</p> <p>Ask your own questions,</p> <p>look for your own examples,</p> <p>discover your own proofs. </p> <p>Is the hypothesis necessary?</p> <p>Is the converse true?</p> <p>What happens in the classical special case? </p> <p>What about the degenerate cases? </p> <p>Where does the proof use the hypothesis?</p> <p>\u2014\u2014 Paul Halmos</p>"},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/","title":"\u6ed1\u52a8\u7a97\u53e3\u4e0e\u53cc\u6307\u9488","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#_2","title":"\u8d44\u6599","text":"<ul> <li>\u6ed1\u52a8\u7a97\u53e3\u4e0e\u53cc\u6307\u9488</li> </ul>"},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#_3","title":"\u4e00\u3001\u5b9a\u957f\u6ed1\u52a8\u7a97\u53e3","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#11","title":"\u00a71.1 \u57fa\u7840","text":"<ol> <li> <p>\u5b9a\u957f\u5b50\u4e32\u4e2d\u5143\u97f3\u7684\u6700\u5927\u6570\u76ee\uff1a\u7ed9\u4f60\u5b57\u7b26\u4e32 s \u548c\u6574\u6570 k \u3002\u8bf7\u8fd4\u56de\u5b57\u7b26\u4e32 s \u4e2d\u957f\u5ea6\u4e3a k \u7684\u5355\u4e2a\u5b50\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5305\u542b\u7684\u6700\u5927\u5143\u97f3\u5b57\u6bcd\u6570\u3002\u82f1\u6587\u4e2d\u7684 \u5143\u97f3\u5b57\u6bcd \u4e3a\uff08a, e, i, o, u\uff09\u3002\u793a\u4f8b\uff1a</p> <p>\u8f93\u5165\uff1as = \"abciiidef\", k = 3</p> <p>\u8f93\u51fa\uff1a3</p> <p>\u89e3\u91ca\uff1a\u5b50\u5b57\u7b26\u4e32 \"iii\" \u5305\u542b 3 \u4e2a\u5143\u97f3\u5b57\u6bcd\u3002</p> <pre><code>class Solution:\n    def maxVowels(self, s: str, k: int) -&gt; int:\n        ans = vowel = 0\n        for i, c in enumerate(s):\n            if c in \"aeiou\":            # 1. \u8fdb\u5165\u7a97\u53e3\n                vowel += 1\n            if i &lt; k - 1:               # \u7a97\u53e3\u5927\u5c0f\u4e0d\u8db3 k\n                continue\n            ans = max(ans, vowel)       # 2. \u66f4\u65b0\u7b54\u6848\n            if s[i - k + 1] in \"aeiou\": # 3. \u79bb\u5f00\u7a97\u53e3\n                vowel -= 1\n        return ans\n</code></pre> </li> <li> <p>\u7231\u751f\u6c14\u7684\u4e66\u5e97\u8001\u677f\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u5c06\u95ee\u9898\u62c6\u5206\u6210\u4e24\u4e2a\u5b50\u95ee\u9898</p> <pre><code>class Solution:\n    def maxSatisfied(self, customers: List[int], grumpy: List[int], minutes: int) -&gt; int:\n        # s[0]: \u8001\u677f\u4e0d\u751f\u6c14\u65f6\u7684\u987e\u5ba2\u6570\u91cf\u4e4b\u548c\n        # s[1]: \u957f\u5ea6\u4e3a minutes \u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u4e2d\uff0c\u8001\u677f\u751f\u6c14\u65f6\u7684\u987e\u5ba2\u6570\u91cf\u4e4b\u548c\uff0c\u901a\u8fc7\u5b9a\u957f\u6ed1\u52a8\u7a97\u53e3\u89e3\u51b3\n        # \u6700\u7ec8\u7b54\u6848\u4e3a s0 + max_s1\n        s = [0, 0]\n        max_s1 = 0\n        for i, (c, g) in enumerate(zip(customers, grumpy)):\n            s[g] += c\n            if i &lt; minutes - 1:                     # \u7a97\u53e3\u957f\u5ea6\u4e0d\u8db3 minutes\n                continue\n            max_s1 = max(max_s1, s[1])              # \u66f4\u65b0 max_s1\n            if grumpy[i - minutes + 1]:             # \u56e0\u4e3a s0 \u548c s1 \u662f\u5206\u5f00\u7edf\u8ba1\u7684\uff0c\u6240\u4ee5\u79bb\u5f00\u7a97\u53e3\u65f6\u8981\u5224\u65ad\n                s[1] -= customers[i - minutes + 1]  # \u7a97\u53e3\u6700\u5de6\u8fb9\u5143\u7d20\u79bb\u5f00\u7a97\u53e3\n        return s[0] + max_s1\n</code></pre> </li> <li> <p>\u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u6240\u6709\u957f\u5ea6\u4e3a K \u7684\u4e8c\u8fdb\u5236\u5b50\u4e32\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u7edf\u8ba1\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u957f\u5ea6\u4e3a k \u7684 unique \u5b50\u4e32\uff0c\u5224\u65ad\u7ed3\u679c\u662f\u5426\u548c 2 ** k \u76f8\u7b49</p> <pre><code>class Solution:\n    def hasAllCodes(self, s: str, k: int) -&gt; bool:\n        ans = set()\n        left = 0\n        for right, c in enumerate(s):        # 1. \u8fdb\u5165\u7a97\u53e3\n            if right &lt; k - 1:                # \u7a97\u53e3\u5927\u5c0f\u4e0d\u8db3\n                continue\n            ans.add(s[left : right + 1])     # 2. \u66f4\u65b0\u7b54\u6848\n            left += 1                        # 3. \u79bb\u5f00\u7a97\u53e3\n        return len(ans) == 2 ** k\n</code></pre> </li> <li> <p>\u51e0\u4e4e\u552f\u4e00\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u5229\u7528 Counter \u6765\u7edf\u8ba1\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570</p> <pre><code>class Solution:\n    def maxSum(self, nums: List[int], m: int, k: int) -&gt; int:\n        ans = 0\n        s = sum(nums[:k - 1])         # \u5148\u7edf\u8ba1\u524d k-1 \u4e2a\u6570\n        cnt = Counter(nums[:k - 1])\n        for out, in_ in zip(nums, nums[k - 1:]):\n            s += in_                  # \u518d\u6dfb\u52a0\u4e00\u4e2a\u6570\u5c31\u662f k \u4e2a\u6570\u4e86\n            cnt[in_] += 1\n            if len(cnt) &gt;= m:\n                ans = max(ans, s)     # \u662f\u51e0\u4e4e\u552f\u4e00\u5b50\u6570\u7ec4\uff0c\u66f4\u65b0\u7b54\u6848\n            s -= out                  # \u79bb\u5f00\u7a97\u53e3\n            cnt[out] -= 1\n            if cnt[out] == 0:\n                del cnt[out]\n        return ans\n</code></pre> </li> <li> <p>\u53ef\u83b7\u5f97\u7684\u6700\u5927\u70b9\u6570\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u9006\u5411\u601d\u7ef4 - \u8f6c\u6362\u4e3a\u6c42\u6700\u5c0f\u548c \u27a1\ufe0f \u6700\u5c0f\u5316\u5269\u4e0b\u7684\u70b9\u6570\u548c</p> <pre><code>class Solution:\n    def maxScore(self, cardPoints: List[int], k: int) -&gt; int:\n        n = len(cardPoints)\n        m = n - k\n        s = 0\n        min_s = math.inf\n        # \u6ce8\u610f python \u7684enumerate\u65e0\u6cd5\u63d0\u524d\u53d6\u5230\u540e\u9762\u7684\u5143\u7d20\uff0c\u7279\u6b8a\u60c5\u51b5\u7684\u5224\u65ad\n        if (m == 0):\n            return sum(cardPoints)\n        for i, num in enumerate(cardPoints):\n            s += num\n            if i &lt; m - 1:\n                continue\n            min_s = min(min_s, s)\n            s -= cardPoints[i - m + 1]\n        return sum(cardPoints) - min_s\n</code></pre> <p>\u66f4\u7cbe\u7b80\u7684\u5199\u6cd5\uff1a</p> <pre><code>class Solution:\n    def maxScore(self, cardPoints: List[int], k: int) -&gt; int:\n        n = len(cardPoints)\n        m = n - k\n        min_s = s = sum(cardPoints[:m])\n        for i in range(m, n):\n            s += cardPoints[i] - cardPoints[i - m]\n            min_s = min(min_s, s)\n        return sum(cardPoints) - min_s\n</code></pre> </li> <li> <p>\u62c6\u70b8\u5f39\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u4e3e\u4f8b\u8be6\u7ec6\u63a8\u6f14\uff0c\u627e\u5230\u89c4\u5f8b\uff0c\u53d1\u73b0 k &gt; 0 \u548c k &lt; 0 \u7684\u60c5\u51b5\u76f8\u540c\uff0c\u5b9a\u4e49\u53f3\u8fb9\u754c r \u5f88\u5173\u952e</p> <pre><code>class Solution:\n    def decrypt(self, code: List[int], k: int) -&gt; List[int]:\n        # k &gt; 0\uff0c\u7b2c\u4e00\u4e2a\u7a97\u53e3\u7684\u7684\u4e0b\u6807\u8303\u56f4\u4e3a [1, k + 1)\n        # k &lt; 0\uff0c\u7b2c\u4e00\u4e2a\u7a97\u53e3\u7684\u7684\u4e0b\u6807\u8303\u56f4\u4e3a [n - |k|, n)\n        # \u7a97\u53e3\u603b\u662f\u5411\u53f3\u79fb\u52a8\uff0c\u79fb\u5165\u7a97\u53e3\u7684\u4e0b\u6807\u662f r % n, \u79fb\u51fa\u7684\u662f (r - |k|) % n\n        n = len(code)\n        ans = [0] * n\n        r = k + 1 if k &gt; 0 else n  # \u5173\u952e\u70b9\uff1a\u5b9a\u4e49\u53f3\u8fb9\u754c r\n        k = abs(k)\n        s = sum(code[r - k: r])    # ans[0]\n        for i in range(n):\n            ans[i] = s\n            s += code[r % n] - code[(r - k) % n]\n            r += 1\n        return ans\n</code></pre> </li> <li> <p>\u5b50\u4e32\u7684\u6700\u5927\u51fa\u73b0\u6b21\u6570\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1amaxSize \u662f\u5e72\u6270\u9879\uff0c\u56e0\u4e3a\u957f\u7684\u4e32\u91cd\u590d\u5b83\u7684\u5b50\u4e32\u4e00\u5b9a\u4e5f\u91cd\u590d\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u6ee1\u8db3 minSize \u8981\u6c42</p> <pre><code>class Solution:\n    def maxFreq(self, s: str, maxLetters: int, minSize: int, maxSize: int) -&gt; int:\n        n = len(s)\n        d = collections.defaultdict(int)\n        for i in range(n - minSize + 1):\n            tmp = s[i: i + minSize]\n            c = set(tmp)\n            if len(c) &lt;= maxLetters:\n                d[tmp] += 1\n        return max(d.values()) if d else 0\n</code></pre> </li> </ol>"},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#12","title":"\u00a71.2 \u8fdb\u9636","text":"<ol> <li> <p>\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u6765\u7ec4\u5408\u6240\u6709\u7684 1 II\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a</p> <p>1. \u6211\u4eec\u5df2\u7ecf\u77e5\u9053 1 \u7684\u5168\u90e8\u4e2a\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u62ff 1 \u7684\u4e2a\u6570\u8fd9\u4e48\u957f\u7684\u7a97\u53e3\u6765\u6ed1\u52a8</p> <p>2. \u6c42\u51fa\u7a97\u53e3\u548c\u7684\u6700\u5927\u503c\uff0c\u7528 1 \u7684\u4e2a\u6570\u51cf\u53bb\u7a97\u53e3\u548c\u6700\u5927\u503c\uff0c\u5c31\u662f\u6700\u5c11\u7684\u4ea4\u6362\u6b21\u6570</p> <p>3. \u5bf9\u4e8e\u73af\u72b6\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u539f\u6765\u6570\u7ec4\u518d\u8ffd\u52a0\u5230\u5c3e\u90e8\uff0c\u81ea\u7136\u5c31\u9996\u5c3e\u76f8\u63a5\u4e86</p> <pre><code>class Solution:\n    def minSwaps(self, nums: List[int]) -&gt; int:\n        k = sum(nums)\n        max_s = s = sum(nums[:k])\n        nums.extend(nums)\n        for out, in_ in zip(nums, nums[k:]):\n            s += in_ - out\n            max_s = max(max_s, s)\n        return k - max_s\n</code></pre> </li> <li> <p>\u6ed1\u52a8\u5b50\u6570\u7ec4\u7684\u7f8e\u4e3d\u503c\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a</p> <p>1. -50 &lt;= nums[i] &lt;= 50, \u6700\u591a 101 \u4e2a\u5143\u7d20\u3002\u503c\u57df\u5f88\u5c0f\uff0c\u53ef\u4ee5\u501f\u9274\u8ba1\u6570\u6392\u5e8f\uff0c\u7528\u4e00\u4e2a cnt \u6570\u7ec4\u7ef4\u62a4\u7a97\u53e3\u5185\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002</p> <p>2. \u7f8e\u4e3d\u503c\u662f\u8d1f\u6570\u6216 0\uff0c\u4e0d\u7528\u8003\u8651\u6b63\u6570\u7684\u90a3\u4e00\u534a</p> <p>3. \u6c42\u7b2c x \u5c0f\u7684\u6570\uff1a\u901a\u8fc7\u904d\u5386 cnt \u6570\u7ec4</p> <pre><code>class Solution:\n    def getSubarrayBeauty(self, nums: List[int], k: int, x: int) -&gt; List[int]:\n        n = len(nums)\n        ans = [0] * (n - k + 1)\n        cnt = [0] * 101            # -50 &lt;= nums[i] &lt;= 50, \u6700\u591a 101 \u4e2a\u5143\u7d20\n        # [0, 1, ..., 50, 51, ..., 100]: cnt \u6570\u7ec4\u4e0b\u6807\n        #  0     1 ~ 50     -50 ~ -1   : cnt \u6570\u7ec4\u4e0b\u6807\u4ee3\u8868\u7684\u6570\u5b57 num[i]\n        for num in nums[:k - 1]:   # \u5148\u5f80\u7a97\u53e3\u5185\u6dfb\u52a0 k-1 \u4e2a\u6570\n            cnt[num] += 1\n        for i, (out, in_) in enumerate(zip(nums, nums[k-1:])):\n            cnt[in_] += 1           # \u8fdb\u5165\u7a97\u53e3\uff08\u4fdd\u8bc1\u7a97\u53e3\u6709\u6070\u597d k \u4e2a\u6570\uff09\n            left = x\n            for j in range(-50, 0): # \u66b4\u529b\u679a\u4e3e\u8d1f\u6570\u8303\u56f4 [-50,-1]\n                left -= cnt[j]\n                if left &lt;= 0:       # \u627e\u5230\u7f8e\u4e3d\u503c\n                    ans[i] = j\n                    break\n            cnt[out] -= 1           # \u79bb\u5f00\u7a97\u53e3\n        return ans\n</code></pre> </li> <li> <p>\ud83d\udccc \u4f7f\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u5b57\u7b26\u4ea4\u66ff\u7684\u6700\u5c11\u53cd\u8f6c\u6b21\u6570\uff1a</p> </li> <li> <p>\u5b57\u7b26\u4e32\u7684\u6392\u5217\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u6ed1\u52a8\u7a97\u53e3 + \u5b57\u5178 Counter\uff08\u6392\u5217\u7684\u5224\u65ad\uff1a\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u5b57\u7b26\u7684\u4e2a\u6570\u90fd\u76f8\u7b49\uff09</p> <pre><code>class Solution:\n    def checkInclusion(self, s1: str, s2: str) -&gt; bool:\n        k = len(s1)\n        cnt1 = Counter(s1)\n        cnt2 = Counter(s2[:k-1])\n        for out, in_ in zip(s2, s2[k-1:]):\n            cnt2[in_] += 1\n            if cnt2 == cnt1:\n                return True\n            cnt2[out] -= 1\n        return False\n</code></pre> </li> <li> <p>\ud83d\udccc \u4e32\u8054\u6240\u6709\u5355\u8bcd\u7684\u5b50\u4e32\uff1a</p> </li> <li> <p>\ud83d\udccc \u67e5\u627e\u7ed9\u5b9a\u54c8\u5e0c\u503c\u7684\u5b50\u4e32\uff1a</p> </li> <li> <p>\ud83d\udccc \u7edf\u8ba1\u5b8c\u5168\u5b50\u5b57\u7b26\u4e32\uff1a</p> </li> <li> <p>\ud83d\udccc \u5b50\u4e32\u80fd\u8868\u793a\u4ece 1 \u5230 N \u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u4e32\uff1a</p> <pre><code>class Solution:\n    def queryString(self, s: str, n: int) -&gt; bool:\n        return all(bin(i)[2:] in s for i in range(1, n + 1))\n# 1. \u66b4\u529b\u679a\u4e3e [1,n] \u5185\u7684\u6570\uff0c\u8f6c\u6210\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32: \n#    bin\u51fd\u6570\u53ef\u4ee5\u5c06\u6574\u6570\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u53bb\u9664\u6389\u524d\u9762\u7684 '0b'\n# 2. all\u63a5\u53d7\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u5982\u679c\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u4e3a True \u624d\u8fd4\u56deTrue\n</code></pre> </li> </ol>"},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#13","title":"\u00a71.3 \u5176\u4ed6","text":"<ol> <li> <p>\u5b66\u751f\u5206\u6570\u7684\u6700\u5c0f\u5dee\u503c\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u5148\u5c06\u6570\u7ec4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u53ea\u9700\u53d6\u6ed1\u52a8\u7a97\u53e3\u4e24\u7aef\u7684\u6700\u5c0f\u5dee\u503c\u5373\u53ef</p> <pre><code>class Solution:\n    def minimumDifference(self, nums: List[int], k: int) -&gt; int:\n        nums.sort()\n        return min(in_ - out for out, in_ in zip(nums, nums[k-1:]))\n</code></pre> </li> <li> <p>\ud83d\udccc \u5b58\u5728\u91cd\u590d\u5143\u7d20 III\uff1a</p> </li> </ol>"},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#_4","title":"\u4e8c\u3001\u4e0d\u5b9a\u957f\u6ed1\u52a8\u7a97\u53e3","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#21","title":"\u00a72.1 \u6c42\u6700\u957f/\u6700\u5927","text":"<ol> <li> <p>\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\uff0c\u628a\u961f\u5217\u5de6\u8fb9\u7684\u5143\u7d20\u79fb\u51fa\u76f4\u5230\u6ee1\u8db3\u9898\u76ee\u8981\u6c42</p> <pre><code>class Solution:\ndef lengthOfLongestSubstring(self, s: str) -&gt; int:\n    ans = left = 0\n    cnt = defaultdict(int)\n    for i, c in enumerate(s):\n        cnt[c] += 1\n        while cnt[c] &gt; 1:\n            cnt[s[left]] -= 1\n            left += 1\n        ans = max(ans, i - left + 1)\n    return ans\n</code></pre> <p>\u5199\u6cd5\u4e8c\uff1a</p> <pre><code>class Solution:\n    def lengthOfLongestSubstring(self, s: str) -&gt; int:\n        ans = 0\n        seen = []\n        for c in s:\n            while c in seen:\n                del seen[0]   # \u5220\u9664\u961f\u5217\u5de6\u8fb9\u7b2c\u4e00\u4e2a\uff0c\u76f4\u5230\u6ca1\u6709\u91cd\u590d\u7684\u5b57\u7b26\u4e32\n            seen.append(c)\n            ans = max(ans, len(seen))\n        return ans\n</code></pre> </li> <li> <p>\u6bcf\u4e2a\u5b57\u7b26\u6700\u591a\u51fa\u73b0\u4e24\u6b21\u7684\u6700\u957f\u5b50\u5b57\u7b26\u4e32\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u76f8\u5f53\u4e8e\u4e0a\u9898\u7684\u300c\u51fa\u73b0\u6b21\u6570\u4e0d\u8d85\u8fc7 1\u300d\u6539\u6210\u300c\u51fa\u73b0\u6b21\u6570\u4e0d\u8d85\u8fc7 2\u300d</p> <pre><code>class Solution:\ndef maximumLengthSubstring(self, s: str) -&gt; int:\n    ans = left = 0\n    cnt = defaultdict(int)\n    for i, c in enumerate(s):\n        cnt[c] += 1\n        while cnt[c] &gt; 2:\n            cnt[s[left]] -= 1\n            left += 1\n        ans = max(ans, i - left + 1)\n    return ans\n</code></pre> <p>\u5199\u6cd5\u4e8c\uff1a</p> <pre><code>class Solution:\n    def maximumLengthSubstring(self, s: str) -&gt; int:\n        ans = 0\n        seen = []\n        cnt = defaultdict(int)\n        for c in s:\n            cnt[c] += 1\n            while c in seen and cnt[c] &gt; 2:\n                cnt[seen[0]] -= 1\n                del seen[0]\n            seen.append(c)\n            ans = max(ans, len(seen))\n        return ans\n</code></pre> </li> <li> <p>\u5220\u6389\u4e00\u4e2a\u5143\u7d20\u4ee5\u540e\u5168\u4e3a 1 \u7684\u6700\u957f\u5b50\u6570\u7ec4\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u6ce8\u610f\u9898\u76ee\u8981\u6c42\u4e00\u5b9a\u8981\u5220\u9664\u4e00\u4e2a0</p> <pre><code>class Solution:\n    def longestSubarray(self, nums: List[int]) -&gt; int:\n        ans = left = cnt0 = 0\n        for right in range(len(nums)):\n            cnt0 += 1 - nums[right]      # \u8ba1\u7b97 0 \u7684\u6570\u91cf\n            while cnt0 &gt; 1:              # \u5f53 0 \u7684\u6570\u91cf\u5927\u4e8e1\uff0c\u5de6\u6307\u9488\u5c31\u5f80\u53f3\u6ed1\n                cnt0 -= 1 - nums[left]   # \u5982\u679c nums[left] \u662f 0\uff0c \u8981\u51cf\u6389 \n                left += 1\n            ans = max(ans, right - left) # right - left + 1, \u4f46\u662f\u8fd8\u8981\u53bb\u9664\u4e2d\u95f4\u7684 0\n        return ans\n</code></pre> </li> <li> <p>\u5c3d\u53ef\u80fd\u4f7f\u5b57\u7b26\u4e32\u76f8\u7b49\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u6bcf\u4e00\u6b21\u5b57\u7b26\u8f6c\u5316\u7684 cost \u5df2\u77e5\uff0c \u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u5728\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u548c\u5c0f\u4e8e\u7b49\u4e8e maxCost \u7684\u60c5\u51b5\u4e0b\uff0c\u627e\u5230\u6700\u957f\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u957f\u5ea6\u3002</p> <pre><code>class Solution:\n    def equalSubstring(self, s: str, t: str, maxCost: int) -&gt; int:\n        ans = sum = left = 0\n        for right in range(len(s)):\n            sum += abs(ord(s[right]) - ord(t[right]))\n            while sum &gt; maxCost:\n                sum -= abs(ord(s[left]) - ord(t[left]))\n                left += 1\n            ans = max(ans, right - left + 1)\n        return ans\n</code></pre> </li> <li> <p>\u627e\u5230\u6700\u957f\u7684\u534a\u91cd\u590d\u5b50\u5b57\u7b26\u4e32\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u5b9a\u4e49 same \u6765\u7edf\u8ba1\u76f8\u90bb\u76f8\u540c\u7684\u60c5\u51b5\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u5982\u679c same &gt; 1\uff0c\u5219\u4e0d\u65ad\u79fb\u52a8\u5de6\u6307\u9488 left \u76f4\u5230 s[left] == s[left \u2212 1]\uff0c\u6b64\u65f6\u5c06\u4e00\u5bf9\u76f8\u540c\u7684\u5b57\u7b26\u79fb\u5230\u7a97\u53e3\u4e4b\u5916\uff0c\u7136\u540e\u5c06 same \u7f6e\u4e3a 1</p> <pre><code>class Solution:\n    def longestSemiRepetitiveSubstring(self, s: str) -&gt; int:\n        ans, left, same = 1, 0, 0\n        for right in range(1, len(s)):\n            if s[right] == s[right - 1]:\n                same += 1\n            if same &gt; 1:\n                left += 1\n                while s[left] != s[left - 1]:\n                    left += 1\n                same = 1\n            ans = max(ans, right - left + 1)\n        return ans\n</code></pre> </li> <li> <p>\u6700\u591a K \u4e2a\u91cd\u590d\u5143\u7d20\u7684\u6700\u957f\u5b50\u6570\u7ec4\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u6ce8\u610f\u522b\u8d85\u65f6\uff0c\u81ea\u5df1\u7528\u7a97\u53e3\u957f\u5ea6\u8ba1\u7b97\uff0c\u7528 defaultdict \u7684 sum(cnt.values()) \u4f1a\u8d85\u65f6</p> <pre><code>class Solution:\n    def maxSubarrayLength(self, nums: List[int], k: int) -&gt; int:\n        ans = left = 0\n        cnt = Counter()\n        for right, n in enumerate(nums):\n            cnt[n] += 1\n            while cnt[n] &gt; k:\n                cnt[nums[left]] -= 1\n                left += 1\n            ans = max(ans, right - left + 1)\n        return ans\n</code></pre> </li> <li> <p>\u6570\u7ec4\u7684\u6700\u5927\u7f8e\u4e3d\u503c\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a</p> <p>1. \u9009\u7684\u662f\u5b50\u5e8f\u5217\uff0c\u4e14\u64cd\u4f5c\u540e\u5b50\u5e8f\u5217\u7684\u5143\u7d20\u90fd\u76f8\u7b49\uff0c\u6240\u4ee5\u5143\u7d20\u987a\u5e8f\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff0c\u53ef\u4ee5\u5148\u5bf9\u6570\u7ec4\u6392\u5e8f</p> <p>2. \u6392\u5e8f\u540e\u8981\u6c42 x + k \u2265 y \u2212 k\uff0cx \u4e3a\u5de6\u8fb9\u6700\u5c0f\u503c\uff0cy \u4e3a\u53f3\u8fb9\u6700\u5927\u503c\uff0c\u5373\u4e24\u8005\u6709\u4ea4\u96c6\uff0c\u4e5f\u5c31\u662f y - x \u2264 2k</p> <p>3. \u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u6392\u5e8f\u540e\uff0c\u627e\u6700\u957f\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u5176\u6700\u5927\u503c\u51cf\u6700\u5c0f\u503c \u2264 2k</p> <pre><code>class Solution:\n    def maximumBeauty(self, nums: List[int], k: int) -&gt; int:\n        nums.sort()\n        ans = left = 0\n        for right, n in enumerate(nums):\n            while n - nums[left] &gt; 2 * k:\n                left += 1\n            ans = max(ans, right - left + 1)\n        return ans\n</code></pre> </li> <li> <p>\u8003\u8bd5\u7684\u6700\u5927\u56f0\u6270\u5ea6\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u5c06\u9898\u76ee\u8f6c\u5316\u4e3a\u6c42 answerKey \u7684\u4e00\u4e2a\u6700\u957f\u5b50\u4e32\uff0c\u81f3\u591a\u5305\u542b k \u4e2a T \u6216\u8005\u81f3\u591a\u5305\u542b k \u4e2a F\uff0c\u6ed1\u52a8\u7a97\u53e3\u76f4\u5230 T \u548c F \u7684\u51fa\u73b0\u6b21\u6570\u81f3\u5c11\u6709\u4e00\u4e2a \u2264 k \u5373\u53ef</p> <pre><code>class Solution:\n    def maxConsecutiveAnswers(self, answerKey: str, k: int) -&gt; int:\n        ans = left = 0\n        cnt = defaultdict(int)\n        for right, c in enumerate(answerKey):\n            cnt[c] += 1\n            while cnt['T'] &gt; k and cnt['F'] &gt; k:\n                cnt[answerKey[left]] -= 1\n                left += 1\n            ans = max(ans, right - left + 1)\n        return ans\n</code></pre> </li> <li> <p>\u6700\u9ad8\u9891\u5143\u7d20\u7684\u9891\u6570\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u8f6c\u5316\u4e3a\u6c42\u9762\u79ef\uff0c\u6392\u5e8f\u540e\uff0c\u79fb\u52a8\u7a97\u53e3\u65f6\u6c42\u51fa\u76f8\u90bb\u4e24\u4e2a\u67f1\u5b50\u4e4b\u95f4\u7684\u9762\u79ef\u5dee\uff0c\u4e0d\u65ad\u53e0\u79ef\u9762\u79ef\u77e5\u9053\u6d88\u8017\u5b8c k\uff0c\u5c31\u662f\u6b64\u65f6\u80fd\u591f\u8986\u76d6\u6700\u591a\u7684\u67f1\u5b50\u6570\u91cf\uff0c\u66f4\u65b0\u7b54\u6848</p> <pre><code>class Solution:\n    def maxFrequency(self, nums: List[int], k: int) -&gt; int:\n        nums.sort()\n        ans = 1\n        s = left = 0\n        for right in range(1, len(nums)):\n            s += (nums[right] - nums[right - 1]) * (right - left)\n            while s &gt; k:\n                s -= nums[right] - nums[left]\n                left += 1\n            ans = max(ans, right - left + 1)\n        return ans\n</code></pre> </li> <li> <p>\u6bcf\u79cd\u5b57\u7b26\u81f3\u5c11\u53d6 K \u4e2a\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u76f8\u5f53\u4e8e\u6700\u5927\u5316\u4e2d\u95f4\u7a97\u53e3\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u53ef\u4ee5\u4e00\u5f00\u59cb\u5c06\u6240\u6709\u5143\u7d20\u53d6\u8d70\uff0c\u7136\u540e\u5728\u7a97\u53e3\u79fb\u52a8\u7684\u65f6\u5019\u628a\u5143\u7d20\u653e\u56de\u7a97\u53e3\uff0c\u4e00\u65e6\u7a97\u53e3\u5916\u67d0\u4e2a\u5143\u7d20\u7684\u4e2a\u6570\u964d\u5230\u4e86 k \u4e2a\u4ee5\u4e0b\uff0c\u5c31\u79fb\u52a8\u5de6\u8fb9\u754c</p> <pre><code>class Solution:\n    def takeCharacters(self, s: str, k: int) -&gt; int:\n        cnt = Counter(s)            # \u4e00\u5f00\u59cb\u5c06\u6240\u6709\u5143\u7d20\u53d6\u8d70\n        if any(cnt[c] &lt; k for c in \"abc\"):\n            return -1\n        left = mx = 0               # mx \u8bb0\u5f55\u7a97\u53e3\u7684\u6700\u5927\u957f\u5ea6\n        for right, c in enumerate(s):\n            cnt[c] -= 1              # \u5c06 c \u653e\u5230\u7a97\u53e3\u5185\uff0c\u4e5f\u5c31\u662f\u53d6\u8d70\u7684\u5143\u7d20\u51cf1\n            while cnt[c] &lt; k:\n                cnt[s[left]] += 1 # \u628a left \u5bf9\u5e94\u7684\u5143\u7d20\u53d6\u8d70\n                left += 1\n            mx = max(mx, right - left + 1)\n        return len(s) - mx\n</code></pre> </li> <li> <p>\u627e\u51fa\u6700\u957f\u7b49\u503c\u5b50\u6570\u7ec4\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u5206\u7ec4\u6ed1\u7a97</p> <p>1. \u628a\u76f8\u540c\u5143\u7d20\u5206\u7ec4\uff0c\u76f8\u540c\u5143\u7d20\u7684\u4e0b\u6807\u8bb0\u5f55\u5230\u54c8\u5e0c\u8868\uff08\u6216\u8005\u6570\u7ec4\uff09pos_lists \u4e2d</p> <p>2. \u904d\u5386 pos_lists \u4e2d\u7684\u6bcf\u4e2a\u4e0b\u6807\u5217\u8868 pos\uff0c\u5728 pos \u91cc\u7528\u6ed1\u52a8\u7a97\u53e3\uff0c\u6b64\u65f6\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a pos[right] \u2212 pos[left] + 1\uff0c\u8fd9\u4e2a\u5b50\u6570\u7ec4\u6709 right \u2212 left + 1 \u4e2a\u6570\u90fd\u662f\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u9700\u8981\u5220\u9664\u7684\u5143\u7d20\u4e2a\u6570\u5c31\u662f pos[right] \u2212 pos[left] \u2212 (right \u2212 left)\uff0c\u7528\u5b83\u6765\u548c k \u505a\u6bd4\u8f83</p> <p>3. \u4ee3\u7801\u5b9e\u73b0\u65f6\uff0c\u4e3a\u7b80\u5316\u4e0a\u5f0f\uff0cpos \u5b9e\u9645\u4fdd\u5b58 pos[i] \u2212 i\uff0c\u9700\u8981\u5220\u9664\u7684\u5143\u7d20\u4e2a\u6570\u5219\u7b80\u5316\u4e3a pos[right] \u2212 pos[left]</p> <pre><code>class Solution:\n    def longestEqualSubarray(self, nums: List[int], k: int) -&gt; int:\n        pos_lists = defaultdict(list)\n        for i, n in enumerate(nums):\n            pos_lists[n].append(i - len(pos_lists[n]))\n        ans = 0\n        for pos in pos_lists.values():\n            if len(pos) &lt; ans:\n                continue        # \u65e0\u6cd5\u8ba9 ans \u53d8\u5f97\u66f4\u5927\n            left = 0\n            for right in range(len(pos)):\n                while pos[right] - pos[left] &gt; k:\n                    left += 1\n                ans = max(ans, right - left + 1)\n        return ans\n</code></pre> </li> <li> <p>\ud83d\udccc \u6bef\u5b50\u8986\u76d6\u7684\u6700\u591a\u767d\u8272\u7816\u5757\u6570\uff1a</p> </li> <li> <p>\ud83d\udccc \u6458\u6c34\u679c\uff1a</p> </li> <li>\ud83d\udccc \u4e24\u4e2a\u7ebf\u6bb5\u83b7\u5f97\u7684\u6700\u591a\u5956\u54c1\uff1a</li> <li>\ud83d\udccc \u4f7f\u6570\u7ec4\u8fde\u7eed\u7684\u6700\u5c11\u64cd\u4f5c\u6570\uff1a</li> <li>\ud83d\udccc \u53ef\u89c1\u70b9\u7684\u6700\u5927\u6570\u76ee\uff1a</li> <li>\ud83d\udccc \u6700\u957f\u5408\u6cd5\u5b50\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff1a</li> <li>\ud83d\udccc \u6267\u884c\u64cd\u4f5c\u4f7f\u9891\u7387\u5206\u6570\u6700\u5927\uff1a</li> <li>\ud83d\udccc \u79fb\u52a8\u77f3\u5b50\u76f4\u5230\u8fde\u7eed II\uff1a</li> <li>\ud83d\udccc \u81f3\u5c11\u6709 K \u4e2a\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\uff1a</li> <li>\ud83d\udccc \u6700\u957f\u7684\u7f8e\u597d\u5b50\u5b57\u7b26\u4e32\uff1a</li> </ol>"},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#22","title":"\u00a72.2 \u6c42\u6700\u77ed/\u6700\u5c0f","text":"<ol> <li> <p>\u6700\u77ed\u4e14\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u7f8e\u4e3d\u5b50\u5b57\u7b26\u4e32\uff1a</p> <pre><code>class Solution:\n    def shortestBeautifulSubstring(self, s: str, k: int) -&gt; str:\n        if s.count('1') &lt; k:\n            return ''\n        ans = s\n        cnt1 = left = 0\n        for right, c in enumerate(s):\n            cnt1 += int(c)\n            while cnt1 &gt; k or s[left] == '0':\n                cnt1 -= int(s[left])\n                left += 1\n            if cnt1 == k:\n                t = s[left: right + 1]\n                if len(t) &lt; len(ans) or len(t) == len(ans) and t &lt; ans:\n                    ans = t\n        return ans\n</code></pre> </li> <li> <p>\u66ff\u6362\u5b50\u4e32\u5f97\u5230\u5e73\u8861\u5b57\u7b26\u4e32\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u53ea\u6709\u5f53\u9664\u53bb\u300c\u5f85\u66ff\u6362\u5b50\u4e32\u300d\u5269\u4e0b\u7684\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570 &lt;= m \u65f6\uff0c\u624d\u6ee1\u8db3\u6761\u4ef6\u3002\u4f8b\u5982 QQQQ\uff0c\u53ea\u6709 right \u8d70\u5230 2 (\u300c\u5f85\u66ff\u6362\u5b50\u4e32\u300d\u4e3a QQQ) \u6216 3 (\u300c\u5f85\u66ff\u6362\u5b50\u4e32\u300d\u4e3a QQQQ) \u7684\u65f6\u5019\u624d\u6ee1\u8db3\u6761\u4ef6\uff0c\u6b64\u65f6\u5c06 QQQ \u66ff\u6362\u4e3a\u7c7b\u4f3c WER \u5373\u53ef\u6216\u5c06 QQQQ \u66ff\u6362\u4e3a WERQ</p> <pre><code>class Solution:\n    def balancedString(self, s: str) -&gt; int:\n        m = len(s) // 4\n        cnt = Counter(s) # cnt \u8bb0\u5f55\u9664\u53bb \u5f85\u66ff\u6362\u5b50\u4e32 \u5269\u4e0b\u7684\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\n        if len(cnt) == 4 and min(cnt.values()) == m: # \u5df2\u7ecf\u7b26\u5408\u8981\u6c42\n            return 0\n        ans, left = inf, 0\n        for right, c in enumerate(s):\n            cnt[c] -= 1\n            while max(cnt.values()) &lt;= m: # &gt; m \u5219\u6839\u672c\u65e0\u6cd5\u66ff\u6362\u5f97\u5230\n                ans = min(ans, right - left + 1)\n                cnt[s[left]] += 1\n                left += 1\n        return ans\n</code></pre> </li> <li> <p>\u65e0\u9650\u6570\u7ec4\u7684\u6700\u77ed\u5b50\u6570\u7ec4\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u65e0\u9650\u6570\u7ec4\u7684\u5904\u7406</p> <p></p> <p><pre><code>class Solution:\n    def minSizeSubarray(self, nums: List[int], target: int) -&gt; int:\n        total = sum(nums)\n        n = len(nums)\n        ans = inf\n        left = s = 0\n        new_target = target % total\n        for right in range(2 * n):\n            s += nums[right % n]\n            while s &gt; new_target:\n                s -= nums[left % n]\n                left += 1\n            if s == new_target:\n                ans = min(ans, right - left + 1)\n        return ans + target // total * n if ans != inf else -1\n</code></pre> 4. \u5220\u9664\u6700\u77ed\u7684\u5b50\u6570\u7ec4\u4f7f\u5269\u4f59\u6570\u7ec4\u6709\u5e8f\uff1a</p> <p>\u5173\u952e\u601d\u8def\uff1a\u540c\u5411\u53cc\u6307\u9488\uff08\u4e0d\u5b9a\u957f\u6ed1\u52a8\u7a97\u53e3\uff09</p> <pre><code>class Solution:\n    def findLengthOfShortestSubarray(self, arr: List[int]) -&gt; int:\n        # \u5220\u9664\u4e2d\u95f4\u7684 (left, right)\u7684\u8fd9\u4e00\u6bb5\uff0c\u6ce8\u610f\u4e24\u8fb9\u90fd\u662f\u5f00\u533a\u95f4\n        n = len(arr)\n        right = n - 1\n        while right and arr[right - 1] &lt;= arr[right]:\n            right -= 1\n        if right == 0: # arr \u5df2\u7ecf\u662f\u975e\u9012\u51cf\u6570\u7ec4\n            return 0\n        ans = right    # \u6b64\u65f6 arr[right-1] &gt; arr[right]\uff0c\u5220\u9664 arr[:right]\n        left = 0\n        while left == 0 or arr[left - 1] &lt;= arr[left]:\n            while right &lt; n and arr[left] &gt; arr[right]:\n                right += 1\n            # \u6b64\u65f6 arr[left] &lt;= arr[right]\uff0c\u5220\u9664 arr[left+1:right]\n            ans = min(ans, right - left - 1)\n            left += 1 # \u679a\u4e3e left\n        return ans\n</code></pre> </li> <li> <p>\ud83d\udccc \u6700\u5c0f\u8986\u76d6\u5b50\u4e32\uff1a</p> </li> <li>\ud83d\udccc \u6700\u5c0f\u533a\u95f4\uff1a</li> </ol>"},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#23","title":"\u00a72.3 \u6c42\u5b50\u6570\u7ec4\u4e2a\u6570","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#231","title":"\u00a72.3.1 \u8d8a\u957f\u8d8a\u5408\u6cd5","text":"<p>\u4e00\u822c\u8981\u5199 <code>ans += left</code>\u3002\u6ed1\u52a8\u7a97\u53e3\u7684\u5185\u5c42\u5faa\u73af\u7ed3\u675f\u65f6\uff0c\u53f3\u7aef\u70b9\u56fa\u5b9a\u5728 right\uff0c\u5de6\u7aef\u70b9\u5728 0, 1, 2, \u2026, left \u2212 1 \u7684\u6240\u6709\u5b50\u6570\u7ec4\uff08\u5b50\u4e32\uff09\u90fd\u662f\u5408\u6cd5\u7684\uff0c\u8fd9\u4e00\u5171\u6709 left \u4e2a\u3002</p> <ol> <li> <p>\u5305\u542b\u6240\u6709\u4e09\u79cd\u5b57\u7b26\u7684\u5b50\u5b57\u7b26\u4e32\u6570\u76ee\uff1a</p> <pre><code>class Solution:\n    def numberOfSubstrings(self, s: str) -&gt; int:\n        ans = left = 0\n        cnt = defaultdict(int)\n        for c in s:\n            cnt[c] += 1\n            while len(cnt) == 3:\n                cnt[s[left]] -= 1\n                if cnt[s[left]] == 0:\n                    del cnt[s[left]]\n                left += 1\n            # \u5230\u8fd9\u91cc\u65f6\uff0c\u53f3\u7aef\u70b9\u56fa\u5b9a\u5728 right\uff0c\u5de6\u7aef\u70b9\u5728 0,1,2,\u22ef,left\u22121 \n            # \u7684\u6240\u6709\u5b50\u4e32\u90fd\u662f\u5408\u6cd5\u7684\uff0c\u8fd9\u4e00\u5171\u6709 left \u4e2a\uff0c\u52a0\u5165\u7b54\u6848\n            ans += left\n        return ans\n</code></pre> </li> <li> <p>\u5b57\u7b26\u81f3\u5c11\u51fa\u73b0 K \u6b21\u7684\u5b50\u5b57\u7b26\u4e32 I\uff1a</p> <pre><code>class Solution:\n    def numberOfSubstrings(self, s: str, k: int) -&gt; int:\n        ans = left = 0\n        cnt = defaultdict(int)\n        for c in s:\n            cnt[c] += 1\n            while cnt[c] &gt;= k:\n                cnt[s[left]] -= 1\n                left += 1\n            ans += left\n        return ans\n</code></pre> </li> </ol>"},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#232","title":"\u00a72.3.2 \u8d8a\u77ed\u8d8a\u5408\u6cd5","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#233","title":"\u00a72.3.3 \u6070\u597d\u578b\u6ed1\u52a8\u7a97\u53e3","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#24","title":"\u00a72.4 \u5176\u4ed6","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#_5","title":"\u4e09\u3001\u5355\u5e8f\u5217\u53cc\u6307\u9488","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#31","title":"\u00a73.1 \u76f8\u5411\u53cc\u6307\u9488","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#32","title":"\u00a73.2 \u540c\u5411\u53cc\u6307\u9488","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#33","title":"\u00a73.3 \u80cc\u5411\u53cc\u6307\u9488","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#34","title":"\u00a73.4 \u539f\u5730\u4fee\u6539","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#_6","title":"\u56db\u3001\u53cc\u5e8f\u5217\u53cc\u6307\u9488","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#41","title":"\u00a74.1 \u53cc\u6307\u9488","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#42","title":"\u00a74.2 \u5224\u65ad\u5b50\u5e8f\u5217","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#43","title":"\u00a74.3 \u5176\u4ed6","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#_7","title":"\u4e94\u3001\u4e09\u6307\u9488","text":""},{"location":"DS_Algo/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%8E%E5%8F%8C%E6%8C%87%E9%92%88/#_8","title":"\u516d\u3001\u5206\u7ec4\u5faa\u73af","text":""},{"location":"ICS/ICS_Lab/","title":"Lab","text":""},{"location":"ICS/ICS_Lab/#pa0","title":"PA0 \u5f00\u53d1\u73af\u5883\u914d\u7f6e","text":"<ol> <li>\u672c\u5b9e\u9a8c\u4f7f\u7528\u7684 ISA \u662f riscv32\u3002</li> </ol>"},{"location":"ICS/ICS_Lab/#pa1","title":"PA1 \u6700\u7b80\u5355\u7684\u8ba1\u7b97\u673a","text":""},{"location":"ICS/ICS_Lab/#pa2","title":"PA2 \u51af\u8bfa\u4f9d\u66fc\u8ba1\u7b97\u673a\u7cfb\u7edf","text":""},{"location":"ICS/ICS_Lab/#pa3","title":"PA3 \u6279\u5904\u7406\u7cfb\u7edf","text":""},{"location":"ICS/ICS_Lab/#pa4","title":"PA4 \u5206\u65f6\u591a\u4efb\u52a1","text":""},{"location":"ICS/ICS_Lectures/","title":"Lectures","text":""},{"location":"ICS/ICS_Lectures/#_1","title":"\u8d44\u6599","text":"<ul> <li>\u8bfe\u7a0b\u7f51\u7ad9</li> <li>\u5b9e\u9a8c\u7f51\u7ad9</li> <li>\u8bfe\u7a0b\u89c6\u9891</li> </ul>"},{"location":"ICS/ICS_Lectures/#lecture-1-the-missing-course-of-your-cs-education","title":"Lecture 1 The Missing Course of Your CS Education","text":"<ol> <li> <p>\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60\u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840</p> </li> <li> <p>man\u5feb\u901f\u5165\u95e8</p> </li> <li> <p>Linux\u5165\u95e8\u6559\u7a0b</p> </li> </ol>"},{"location":"ICS/ICS_Lectures/#lecture-2-linuxc","title":"Lecture 2 Linux\u548cC\u8bed\u8a00\u62fe\u9057","text":"<ol> <li> <p>\u7a7a == \u7a7a \u4e3a true\uff08aa\u548cbb\u90fd\u672a\u5b9a\u4e49\uff0c\u662f\u7a7a\uff09\uff0c\u56e0\u6b64\u8f93\u51fa yes</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n#if aa == bb\n    printf(\"Yes\\n\");\n#else\n    printf(\"No\\n\");\n#endif\n}\n</code></pre> <pre><code>linux$ gcc a.c &amp;&amp; ./a.out\nYes\n</code></pre> </li> <li> <p>X-Macros\uff1a</p> <p><code>#x</code> \u662f\u4e00\u4e2a\u9884\u5904\u7406\u8fd0\u7b97\u7b26\uff0c\u5b83\u4f1a\u5c06\u53c2\u6570 <code>x</code> \u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u3002</p> <p><code>#x</code> \u4e24\u8fb9\u65e0\u8bba\u591a\u5c11\u7a7a\u683c\uff0c\u8f93\u51fa\u90fd\u662f\u6ca1\u6709\u7a7a\u683c\u7684:</p> <p><code>puts(\"Hello, \"#x\"!\")</code> \u7b49\u4ef7\u4e8e <code>puts(\"Hello, \" #x \"!\")</code></p> <pre><code>#include &lt;stdio.h&gt;\n\n#define NAMES(X) \\\n    X(Tom) X(Jerry) X(Tyke) X(Spike)\n\nint main() \n{ \n    #define PRINT(x) puts(\"Hello, \"#x\"!\");\n    NAMES(PRINT) \n}\n</code></pre> <pre><code>linux$ gcc a.c &amp;&amp; ./a.out\nHello, Tom!\nHello, Jerry!\nHello, Tyke!\nHello, Spike!\n</code></pre> </li> </ol>"},{"location":"ICS/ICS_Lectures/#lecture-3-c","title":"Lecture 3 C\u8bed\u8a00\u62fe\u9057: \u673a\u5236\u4e0e\u5b9e\u8df5","text":"<ol> <li> <p>a.c</p> <pre><code>int foo(int n) \n{ \n    int sum = 0; \n    for (int i = 1; i &lt;= n; i++) \n    { \n        sum += i; \n    } \n    return sum; \n}\n</code></pre> <p><code>gcc -S a.c</code> \u751f\u6210\u6c47\u7f16\u4ee3\u7801 a.s:</p> <pre><code>foo:\n    pushq   %rbp\n    movq    %rsp, %rbp\n    movl    %edi, -20(%rbp)  # n   -&gt; -20(%rbp)\n    movl    $0, -8(%rbp)     # sum -&gt; -8(%rbp)\n    movl    $1, -4(%rbp)     # i   -&gt; -4(%rbp)\n    jmp .L2\n.L3:\n    movl    -4(%rbp), %eax\n    addl    %eax, -8(%rbp)\n    addl    $1, -4(%rbp)\n.L2:\n    movl    -4(%rbp), %eax\n    cmpl    -20(%rbp), %eax\n    jle .L3\n    movl    -8(%rbp), %eax\n    popq    %rbp\n    ret\n</code></pre> <p>\u53d8\u91cf\u66ff\u6362\u540e\u66f4\u6613\u8bfb\uff1a</p> <pre><code>foo:\n    pushq   %rbp\n    movq    %rsp, %rbp\n    movl    %edi, n\n    movl    $0, sum\n    movl    $1, i\n    jmp .L2\n.L3:\n    movl    i, %eax\n    addl    %eax, sum\n    addl    $1, i\n.L2:\n    movl    i, %eax\n    cmpl    n, %eax\n    jle .L3\n    movl    sum, %eax\n    popq    %rbp\n    ret\n</code></pre> <p></p> </li> <li> <p>b.c</p> <pre><code>#include &lt;stdio.h&gt;\n\nint foo(int n);\n\nint main()\n{\n    printf(\"%d\\n\", foo(100));\n}\n</code></pre> <pre><code>linux$ gcc a.c -c &amp;&amp; gcc b.c -c\nlinux$ gcc a.o b.o -static\nlinux$ objdump -d a.out | less\n0000000000401745 &lt;foo&gt;:\n401745:       f3 0f 1e fa             endbr64 \n401749:       55                      push   %rbp\n40174a:       48 89 e5                mov    %rsp,%rbp\n40174d:       89 7d ec                mov    %edi,-0x14(%rbp)\n401750:       c7 45 f8 00 00 00 00    movl   $0x0,-0x8(%rbp)\n401757:       c7 45 fc 01 00 00 00    movl   $0x1,-0x4(%rbp)\n40175e:       eb 0a                   jmp    40176a &lt;foo+0x25&gt;\n401760:       8b 45 fc                mov    -0x4(%rbp),%eax\n401763:       01 45 f8                add    %eax,-0x8(%rbp)\n401766:       83 45 fc 01             addl   $0x1,-0x4(%rbp)\n40176a:       8b 45 fc                mov    -0x4(%rbp),%eax\n40176d:       3b 45 ec                cmp    -0x14(%rbp),%eax\n401770:       7e ee                   jle    401760 &lt;foo+0x1b&gt;\n401772:       8b 45 f8                mov    -0x8(%rbp),%eax\n401775:       5d                      pop    %rbp\n401776:       c3                      ret    \n\n0000000000401777 &lt;main&gt;:\n401777:       f3 0f 1e fa             endbr64 \n40177b:       55                      push   %rbp\n40177c:       48 89 e5                mov    %rsp,%rbp\n40177f:       bf 64 00 00 00          mov    $0x64,%edi\n401784:       e8 bc ff ff ff          call   401745 &lt;foo&gt; # e8 is call, bc ff ff ff \u662f foo \u76f8\u5bf9\u4e8e\u4e0b\u4e00\u6761 pc \u7684offset\n401789:       89 c6                   mov    %eax,%esi    # \u4e0b\u4e00\u6761 pc \u662f\u8fd9\u4e2a\uff0c\u5730\u5740\u662f 0x401789\n40178b:       48 8d 05 72 68 09 00    lea    0x96872(%rip),%rax        # 498004 &lt;_IO_stdin_used+0x4&gt;\n401792:       48 89 c7                mov    %rax,%rdi\n401795:       b8 00 00 00 00          mov    $0x0,%eax\n40179a:       e8 31 9e 00 00          call   40b5d0 &lt;_IO_printf&gt;\n40179f:       b8 00 00 00 00          mov    $0x0,%eax\n4017a4:       5d                      pop    %rbp\n4017a5:       c3                      ret    \n4017a6:       66 2e 0f 1f 84 00 00    cs nopw 0x0(%rax,%rax,1)\n4017ad:       00 00 00 \n</code></pre> <p>0x401789 + bc ff ff ff = 0x401745 (foo\u7684\u5730\u5740)</p> <p>\u4e4b\u6240\u4ee5\u662f\u76f8\u5bf9\u4e8e\u4e0b\u4e00\u6761 pc \u7684 offset\uff0c\u662f\u56e0\u4e3a\uff1a\u590d\u6742\u6307\u4ee4\u96c6\u6bcf\u4e00\u6761\u6307\u4ee4\u7684\u957f\u5ea6\u5e76\u4e0d\u56fa\u5b9a\uff0c\u5982\u679c\u662f\u76f8\u5bf9\u5f53\u524d\u6307\u4ee4\u7684 offset \u4f1a\u6709\u70b9\u9ebb\u70e6\uff0c\u8fd8\u5f97\u8ba1\u7b97\u5f53\u524d\u6307\u4ee4\u7684\u957f\u5ea6\u662f\u591a\u5c11\u3002</p> </li> <li> <p>\u6570\u5b57\u903b\u8f91\u7535\u8def\u6a21\u62df\u5668</p> <pre><code>int  X = 0,  Y = 0;\nint X1 = 0, Y1 = 0;\nwhile (1)\n{\n    X1 = (!X &amp;&amp; Y) || (X &amp;&amp; !Y);\n    Y1 = !Y;\n    X = X1; Y = Y1;\n}\n</code></pre> <p>\u6539\u5199\u540e\uff0c\u589e\u52a0\u4e00\u4e2a Z \u4e5f\u5f88\u5bb9\u6613\uff1a</p> <pre><code>#define FORALL_REGS(_)      _(X) _(Y) \n#define LOGIC               X1 = (!X &amp;&amp; Y) || (X &amp;&amp; !Y); \\\n                            Y1 = !Y;\n#define DEFINE(X)           static int X, X##1;\n#define UPDATE(X)           X = X##1;\n#define PRINT(X)            printf(#X \" = %d; \", X);\n\nint main() \n{ \n    FORALL_REGS(DEFINE); \n\n    while (1) // clock\n    {\n        FORALL_REGS(PRINT); \n        putchar('\\n\u2019); \n        sleep(1); \n        LOGIC; \n        FORALL_REGS(UPDATE); \n    } \n}\n</code></pre> </li> <li> <p>\u4f7f\u7528\u987a\u65f6\u9488\u87ba\u65cb\u6cd5\u5219\u7684\u6848\u4f8b\uff1a</p> <pre><code>void (*signal (int sig, void (*func)(int)))(int);\n</code></pre> <p></p> <p></p> <p></p> <p>\u53ef\u8bfb\u7248\u672c\uff1a</p> <pre><code>typedef void (*sighandler_t)(int);\nsighandler_t signal(int, sighandler_t);\n</code></pre> </li> </ol>"},{"location":"ICS/ICS_Lectures/#lecture-4-1","title":"Lecture 4 \u4ee3\u7801\u9009\u8bb21\uff1a\u7f16\u8bd1\u8fd0\u884c","text":"<ol> <li> <p>A Visual Git Reference</p> </li> <li> <p>\u8ba1\u7b97\u673a\u662f\u4e2a\u72b6\u6001\u673a\uff0c\u53ef\u4ee5\u628a\u8ba1\u7b97\u673a\u5212\u5206\u6210\u4e24\u90e8\u5206\uff1a</p> <ul> <li>\u65f6\u5e8f\u903b\u8f91\u90e8\u4ef6(\u5b58\u50a8\u5668\uff0c\u8ba1\u6570\u5668\uff0c\u5bc4\u5b58\u5668)</li> <li>\u7ec4\u5408\u903b\u8f91\u90e8\u4ef6(\u52a0\u6cd5\u5668\u7b49)</li> </ul> <p>\u5728\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u5230\u6765\u7684\u65f6\u5019\uff0c\u8ba1\u7b97\u673a\u6839\u636e\u5f53\u524d\u65f6\u5e8f\u903b\u8f91\u90e8\u4ef6\u7684\u72b6\u6001\uff0c\u5728\u7ec4\u5408\u903b\u8f91\u90e8\u4ef6\u7684\u4f5c\u7528\u4e0b\uff0c\u8ba1\u7b97\u51fa\u5e76\u8f6c\u79fb\u5230\u4e0b\u4e00\u65f6\u949f\u5468\u671f\u7684\u65b0\u72b6\u6001\u3002</p> </li> </ol>"},{"location":"ICS/ICS_Lectures/#lecture-5-2","title":"Lecture 5 \u4ee3\u7801\u9009\u8bb22\uff1a\u4ee3\u7801\u5bfc\u8bfb","text":"<ol> <li> <p>static inline\uff1a\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u8f83\u77ed\u4e14\u6027\u80fd\u6538\u5173\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 static inline \u51fd\u6570\u5b9a\u4e49\u5728\u5934\u6587\u4ef6\u4e2d\u3002\u4f8b\u5b50 (/riscv32/reg.h)\uff1a</p> <pre><code>static inline int check_reg_index(int idx) { \n    IFDEF(CONFIG_RT_CHECK, assert(idx &gt;= 0 &amp;&amp; index &lt; 32)); \n    return idx; \n}\n</code></pre> <p>\u5982\u679c\u4ec5\u4ec5\u4f7f\u7528 static\uff0c\u90a3\u4e48\u7531\u4e8e x.c \u4ec5\u4ec5\u662f include \u4e86 a.h\uff0c\u4f46\u5374\u672a\u4f7f\u7528 function f\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5 warning\uff0c\u5728 <code>-Wall -Werror</code> \u9009\u9879\u4e0b\u5219\u662f error \u4e86\uff1a</p> <p></p> <p>\u6ce8\u610f static inline \u4ec5\u4ec5\u662f\u5bf9\u7f16\u8bd1\u5668\u7684\u5efa\u8bae\uff0c\u7f16\u8bd1\u5668\u672a\u5fc5\u4e00\u5b9a\u9075\u5faa\u5b83\u3002</p> </li> <li> <p>\u9519\u8bef\u7684 assert \u5199\u6cd5\uff1a</p> <pre><code>#define assert(cond) if (!(cond)) panic(...);\n</code></pre> <p>\u539f\u56e0\uff1a</p> <pre><code>if (...) assert(0); // \u4e0a\u9762\u7684assert\u9519\u4e86\uff0c\u5bfc\u81f4\u4e24\u4e2aif\u4e00\u4e2aelse\uff0c\u4e0d\u5339\u914d\nelse ...    \n</code></pre> <p>\u6b63\u786e\u7684\u5199\u6cd5\uff1a\u7528 do while(0) \u6216\u8005 ({}) \u5305\u88f9\u8d77\u6765\uff1a</p> <pre><code>#define assert(cond) \\ // nemu/**/debug.h\ndo { \\\n    if (!(cond)) { \\\n        fprintf(stderr, \"Fail @ %s:%d\", __FILE__, __LINE__); \\\n        exit(1); \\\n    } \\\n} while (0)\n\n#define assert(cond) ({ ... }) // GCC\n</code></pre> </li> <li> <p><code>ls -l --color</code>\u4e5f\u662f\u4f7f\u7528 ANSI \u7684\u8f6c\u4e49\u5e8f\u5217 (ANSI Escape Sequences) \u6765\u63a7\u5236\u8f93\u51fa\u7684\u989c\u8272\u3002</p> <pre><code>linux$ ls -l | less\ntotal 56K\ndrwxr-xr-x 3 user user 4.0K Nov 23 20:47 build\ndrwxr-xr-x 2 user user 4.0K Nov 23 20:47 scripts\n-rw-r--r-- 1 user user    6 Nov 23 20:46 test.txt\n-rw-r--r-- 1 user user    0 Nov 23 18:18 Misc\n(END)\nlinux$ ls -l --color | less\ntotal 56K\ndrwxr-xr-x 3 user user 4.0K Nov 23 20:47 ESC[0mESC[01;34mbuildESC[0m\ndrwxr-xr-x 2 user user 4.0K Nov 23 20:47 ESC[01;34mscriptsESC[0m\n-rw-r--r-- 1 user user    6 Nov 23 20:46 test.txt\n-rw-r--r-- 1 user user    0 Nov 23 18:18 Misc\n(END)\n</code></pre> </li> <li> <p>\u5b8f\u5d4c\u5957\u592a\u591a\uff0c\u4eba\u8089\u5c55\u5f00\u592a\u96be\uff1f\u6211\u4eec\u65e2\u7136\u77e5\u9053 Makefile \u91cc\u54ea\u4e00\u884c\u662f .c \u2192 .o \u7684\u8f6c\u6362\uff0c\u6211\u4eec\u6dfb\u4e00\u4e2a\u4e00\u6a21\u4e00\u6837\u7684 gcc -E \u662f\u4e0d\u662f\u5c31\u884c\u4e86\uff1f</p> <pre><code>$(OBJ_DIR)/%.o: src/%.c\n    @$(CC) $(CFLAGS) $(SO_CFLAGS) -c -o $@ $&lt;\n    @$(CC) $(CFLAGS) $(SO_CFLAGS) -E -MF /dev/null $&lt; | \\\n        grep -ve '^#' | \\\n        clang-format - &gt; $(basename $@).i\n</code></pre> <ul> <li><code>-MF</code> \u662fGCC\u7f16\u8bd1\u5668\u7684\u4e00\u4e2a\u9009\u9879\uff0c\u7528\u4e8e\u6307\u5b9a\u751f\u6210\u7684\u4f9d\u8d56\u6587\u4ef6\u7684\u540d\u79f0\u3002\u5177\u4f53\u6765\u8bf4\uff0c<code>-MF</code> \u9009\u9879\u540e\u9762\u8ddf\u7740\u4e00\u4e2a\u6587\u4ef6\u540d\uff0c\u8fd9\u4e2a\u6587\u4ef6\u540d\u662f\u7528\u6765\u5b58\u50a8\u7f16\u8bd1\u5668\u89e3\u6790\u6e90\u6587\u4ef6\u540e\u751f\u6210\u7684\u4f9d\u8d56\u5173\u7cfb\u4fe1\u606f\u7684\u3002</li> <li><code>clang-format</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\uff0c\u7528\u4e8e\u7edf\u4e00\u4ee3\u7801\u98ce\u683c\u3002<code>-</code> \u662f <code>clang-format</code> \u7684\u4e00\u4e2a\u8f93\u5165\u9009\u9879\uff0c\u8868\u793a\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u6570\u636e\u3002</li> </ul> </li> </ol>"},{"location":"ICS/ICS_Lectures/#lecture-6","title":"Lecture 6 \u6570\u636e\u7684\u673a\u5668\u7ea7\u8868\u793a","text":"<ol> <li> <p>Bit Set: \u6c42 S \u4e8c\u8fdb\u5236\u8868\u793a\u6709\u591a\u5c11\u4e2a1</p> <pre><code>int bitset_size(uint32_t S) { \n    int n; \n    for (int i = 0; i &lt; 32; i++) { \n        n += bitset_contains(S, i); \n    } \n    return n; \n}\n\nint bitset_size1(uint32_t S) { // SIMD\uff0c\u66f4\u5feb\n    S = (S &amp; 0x55555555) + ((S &gt;&gt; 1)  &amp; 0x55555555);  // 0101 0101 0101 0101 0101 0101 0101 0101\n    S = (S &amp; 0x33333333) + ((S &gt;&gt; 2)  &amp; 0x33333333);  // 0011 0011 0011 0011 0011 0011 0011 0011\n    S = (S &amp; 0x0F0F0F0F) + ((S &gt;&gt; 4)  &amp; 0x0F0F0F0F);  // 0000 1111 0000 1111 0000 1111 0000 1111\n    S = (S &amp; 0x00FF00FF) + ((S &gt;&gt; 8)  &amp; 0x00FF00FF);  // 0000 0000 1111 1111 0000 0000 1111 1111\n    S = (S &amp; 0x0000FFFF) + ((S &gt;&gt; 16) &amp; 0x0000FFFF);  // 0000 0000 0000 0000 1111 1111 1111 1111\n    return S; \n}\n</code></pre> <p>\u6bcf\u4e24\u4f4d\u7684 1 \u7684\u4e2a\u6570\u76f8\u52a0\uff0c\u7136\u540e\u518d\u6bcf\u56db\u4f4d\u6570\u7684 1 \u7684\u4e2a\u6570\u76f8\u52a0\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6700\u540e\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f 1 \u7684\u4e2a\u6570\u3002example\uff1aS \u662f 0x47CBAE6B = 0b 0100 0111 1100 1011 1010 1110 0110 1011\uff0c\u90a3\u4e48\uff1a</p> <pre><code>\u6bcf2\u4f4d\u7684 1 \u7684\u4e2a\u6570\u76f8\u52a0\u540e:  10 12 20 12 11 21 11 12 = 0b 0100 0110 1000 0110 0101 1001 0101 0110\n\u6bcf4\u4f4d\u7684 1 \u7684\u4e2a\u6570\u76f8\u52a0\u540e:  1  3  2  3  2  3  2  3  = 0b 0001 0011 0010 0011 0010 0011 0010 0011\n\u6bcf8\u4f4d\u7684 1 \u7684\u4e2a\u6570\u76f8\u52a0\u540e:  4     5     5     5     = 0b 0000 0100 0000 0101 0000 0101 0000 0101\n\u6bcf16\u4f4d\u7684 1 \u7684\u4e2a\u6570\u76f8\u52a0\u540e: 9           10          = 0b 0000 0000 0000 1001 0000 0000 0000 1010\n\u6bcf32\u4f4d\u7684 1 \u7684\u4e2a\u6570\u76f8\u52a0\u540e: 19                      = 0b 0000 0000 0000 0000 0000 0000 0001 0011 = 19\n</code></pre> </li> <li> <p>Lowbit\uff1a\u627e\u5230\u6700\u53f3\u8fb9\u76841 \u27a1\ufe0f <code>x &amp; -x</code></p> <p>\u6709\u4e8c\u8fdb\u5236\u6570x = 0b+++++100\uff0c\u6211\u4eec\u5e0c\u671b\u5f97\u5230\u6700\u540e\u90a3\u4e2a100</p> \u8868\u8fbe\u5f0f \u7ed3\u679c x <code>0b+++++100</code> ~x <code>0b-----011</code> ~x+1 <code>0b-----100</code> </li> <li> <p>\u6c42 \\(\\lfloor \\log_2(x) \\rfloor\\) </p> <p>\u65b9\u6cd5\u4e00\uff1a\u7b49\u540c\u4e8e\u6c42 31 \u2212 clz(x)</p> <pre><code>int clz(uint32_t x) { \n    int n = 0; \n    if (x &lt;= 0x0000ffff) n += 16, x &lt;&lt;= 16; \n    if (x &lt;= 0x00ffffff) n += 8, x &lt;&lt;= 8; \n    if (x &lt;= 0x0fffffff) n += 4, x &lt;&lt;= 4; \n    if (x &lt;= 0x3fffffff) n += 2, x &lt;&lt;= 2; \n    if (x &lt;= 0x7fffffff) n ++; \n    return n; \n}\n</code></pre> <p>\u4f8b\u5b50\uff1a0100 \u662f 4\uff0c\\(\\lfloor \\log_2(4) \\rfloor\\) = 2\uff1b0111 \u662f 7\uff0c\\(\\lfloor \\log_2(7) \\rfloor\\) = 2\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5176\u5b9e\u662f\u6c42\u6bd4\u7279\u4e32\u4e2d\u6700\u9ad8\u4f4d\u7684 1 \u540e\u9762\u7684 0/1 \u7684\u4e2a\u6570\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u627e\u5230\u6700\u9ad8\u4f4d 1 \u5de6\u8fb9\u6709\u591a\u5c11\u4e2a0\uff0c\u7528 32 - \u5de6\u8fb9 0 \u7684\u4e2a\u6570 - 1 \u5c31\u662f\u6700\u9ad8\u4f4d 1 \u540e\u9762\u7684 0/1 \u7684\u4e2a\u6570\u3002</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u67e5\u8868\u6cd5</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdint.h&gt;\n\n#define LOG2(x) (\"-01W2?XG3&lt;@kYCHf4-=:AnlLZNDcI\\\\g_5P-V&gt;F;jBeo9mKMb[^OUEid8Ja]Th7`S6RQ\"[(x) % 67] - '0')\n// \u901a\u8fc7\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c x \u4e2a\u5b57\u7b26\u51cf\u53bb\u5b57\u7b26 '0' \u7684 ASCII \u503c\u5f97\u5230 LOG2(x) \u7684\u503c\n\nint main() {\n    for (int i = 0; i &lt; 64; i++) {\n        uint64_t x = 1ULL &lt;&lt; i;\n        printf(\"%016llx %d\\n\", x, LOG2(x));\n    }\n}\n</code></pre> <pre><code>0000000000000001 0\n0000000000000002 1\n0000000000000004 2\n0000000000000008 3\n0000000000000010 4\n...\n2000000000000000 61\n4000000000000000 62\n8000000000000000 63\n</code></pre> <p>\u5982\u4f55\u5f97\u5230\u8fd9\u4e32\u795e\u5947\u7684\u5b57\u7b26\u4e32\uff1f</p> <pre><code>import json\n\nn, base = 64, '0'\n\nfor m in range(n, 10000): \n    # \u68c0\u67e5\u662f\u5426\u5b58\u5728\u4e00\u4e2a m\uff0c\u4f7f\u5f97 2 \u7684 i \u6b21\u65b9\u5bf9 m \u53d6\u6a21\u7684\n    # \u7ed3\u679c\u96c6\u5408\u7684\u957f\u5ea6\u7b49\u4e8e n\u3002\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e n \u4e2a\u4e0d\u540c\u7684 i \u503c\uff0c\n    # 2 \u7684 i \u6b21\u65b9\u5bf9 m \u53d6\u6a21\u7684\u7ed3\u679c\u90fd\u662f\u4e0d\u540c\u7684\u3002\n    if len({ (2**i) % m for i in range(n) }) == n: \n        M = { j: chr(ord(base) + i) \n            for j in range(0, m) \n                for i in range(0, n) \n                    if (2**i) % m == j } \n        break\n\nmagic = json.dumps(''.join( \n    [ M.get(j, '-') for j in range(0, m) ] \n    )).strip('\"') \n\nprint(f'#define LOG2(x) (\"{magic}\"[(x) % {m}] - \\'{base}\\')')\n</code></pre> </li> <li> <p>IEEE754: \u8d8a\u5927\u7684\u6570\u5b57\uff0c\u8ddd\u79bb\u4e0b\u4e00\u4e2a\u5b9e\u6570\u7684\u8ddd\u79bb\u5c31\u8d8a\u5927</p> <ul> <li>\u53ef\u80fd\u4f1a\u5e26\u6765\u76f8\u5f53\u7684\u7edd\u5bf9\u8bef\u5dee</li> <li>\u56e0\u6b64\u5f88\u591a\u6570\u5b66\u5e93\u90fd\u4f1a\u9891\u7e41\u505a\u5f52\u4e00\u5316</li> </ul> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;float.h&gt;\n#include &lt;stdint.h&gt;\n#include &lt;math.h&gt;\n\nint main() {\nfloat x = FLT_MAX;\nprintf(\"x = %e (10^%.1f)\\n\", x, log10(x));\n\nprintf(\"========================================\\n\");\n\nfloat y = 1e38;\nprintf(\"y         = %.0f\\n\", y);\nprintf(\"y + 1e30f = %.0f\\n\", y + 1e30f);\nprintf(\"y + 1e31f = %.0f\\n\", y + 1e31f);\n\nprintf(\"========================================\\n\");\n\nunsigned long n1 = 0, n2 = 0, n3 = 0;\nunion { float f; int i; } z;\n\nfor (uint32_t i = 0; ; i++) {\n    z.i = i;\n    if (-1.0 &lt; z.f &amp;&amp; z.f &lt; 1.0) n1++;\n    if (-0.5f &lt; z.f &amp;&amp; z.f &lt; 0.5f) n2++;\n    if (-0.001 &lt; z.f &amp;&amp; z.f &lt; 0.001) n3++;\n    if (i == UINT32_MAX) break;\n}\n\ndouble n = (double)UINT32_MAX + 1;\nprintf(\"%.2lf%% of floats are in (-1, 1)\\n\", (double)n1 / n * 100);\nprintf(\"%.2lf%% of floats are in (-0.5, 0.5)\\n\", (double)n2 / n * 100);\nprintf(\"%.2lf%% of floats are in (-0.001, 0.001)\\n\", (double)n3 / n * 100);\n}\n</code></pre> <pre><code>linux$ gcc a.c -lm # -lm \u9009\u9879\u544a\u8bc9\u7f16\u8bd1\u5668\u94fe\u63a5\u5230\u6570\u5b66\u5e93\nlinux$ ./a.out\nx = 3.402823e+38 (10^38.5)\n========================================\ny         = 99999996802856924650656260769173209088\ny + 1e30f = 99999996802856924650656260769173209088\ny + 1e31f = 100000006944061726476491472742798852096\n========================================\n49.61% of floats are in (-1, 1)\n49.22% of floats are in (-0.5, 0.5)\n45.71% of floats are in (-0.001, 0.001)\n</code></pre> </li> <li> <p>\u4f8b\u5b50\uff1a\u8ba1\u7b97 \\(1 + \\frac{1}{2} + \\frac{1}{3} + \\cdots + \\frac{1}{n}\\)</p> <pre><code>#define SUM(T, st, ed, d) ({ \\\n    T s = 0; \\\n    for (int i = st; i != ed + d; i += d) \\\n        s += (T)1 / i; \\\n    s; \\\n})\n\n#define n 1000000\n\nint main() {\n    printf(\"%.16f\\n\", SUM(float, 1, n, 1));  // \u5148\u52a0\u5927\u6570\uff0c\u8bef\u5dee\u5927\n    printf(\"%.16f\\n\", SUM(float, n, 1, -1)); // \u5148\u52a0\u5c0f\u6570\uff0c\u8bef\u5dee\u5c0f\n    printf(\"%.16f\\n\", SUM(double, 1, n, 1));\n    printf(\"%.16f\\n\", SUM(double, n, 1, -1));\n}\n</code></pre> <pre><code>linux$ ./a.out\n14.3573579788208008\n14.3926515579223633\n14.3927267228649889\n14.3927267228657723\n</code></pre> </li> </ol>"},{"location":"ICS/ICS_Lectures/#lecture-7-abi","title":"Lecture 7 ABI\u4e0e\u5185\u8054\u6c47\u7f16","text":"<ol> <li> <p>ABI\uff08Application Binary Interface\uff09</p> <ul> <li>\u533a\u522b\u4e8eAPI (Application Programming Interface)<ul> <li>\u7a0b\u5e8f\u6e90\u4ee3\u7801\u4e2d\u7684\u89c4\u8303</li> </ul> </li> <li>\u7ea6\u5b9abinary\u7684\u884c\u4e3a\uff08Linux ABI\uff09<ul> <li>\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u683c\u5f0f</li> <li>\u51fd\u6570\u8c03\u7528\u3001\u7cfb\u7edf\u8c03\u7528\u2026\u2026<ul> <li>C\u8bed\u8a00\u89c4\u8303\u53ea\u5b9a\u4e49\u4e86\u8fd0\u884c\u65f6\u5185\u5b58\u548c\u5185\u5b58\u4e0a\u7684\u8ba1\u7b97</li> <li>printf\u90fd\u65e0\u6cd5\u5b9e\u73b0\uff0c\u5fc5\u987b\u501f\u52a9\u5916\u90e8\u7684\u5e93\u51fd\u6570</li> </ul> </li> <li>\u94fe\u63a5\u3001\u52a0\u8f7d\u7684\u89c4\u8303</li> </ul> </li> </ul> </li> </ol>"},{"location":"ICS/ICS_Lectures/#lecture-8-io","title":"Lecture 8 I/O\u8bbe\u5907","text":"<ol> <li> <p><code>printf(\"Hello World\\n\")</code> \u7684\u5168\u8fc7\u7a0b: markmap</p> <p></p> </li> <li> <p>CPU v.s. GPU</p> <p></p> </li> </ol>"},{"location":"ICS/ICS_Lectures/#lecture-9","title":"Lecture 9 \u94fe\u63a5\u4e0e\u52a0\u8f7d","text":"<ol> <li> <p>ELF \u6587\u4ef6</p> ELF\u6587\u4ef6\u7c7b\u578b \u8bf4\u660e \u5b9e\u4f8b \u53ef\u91cd\u5b9a\u4f4d\u6587\u4ef6 (Relocatable File) \u8fd9\u7c7b\u6587\u4ef6\u5305\u62ec\u4ee3\u7801\u548c\u6570\u636e\uff0c\u53ef\u4ee5\u88ab\u7528\u6765\u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\u6216\u5171\u4eab\u76ee\u6807\u6587\u4ef6\uff0c\u9759\u6001\u94fe\u63a5\u5e93\u4e5f\u53ef\u5f52\u4e3a\u8fd9\u4e00\u7c7b Linux\u7684.o / Windows\u7684.obj \u53ef\u6267\u884c\u6587\u4ef6 (Executable File) \u8fd9\u7c7b\u6587\u4ef6\u5305\u542b\u4e86\u53ef\u4ee5\u76f4\u63a5\u6267\u884c\u7684\u7a0b\u5e8f\uff0c\u5b83\u7684\u4ee3\u8868\u5c31\u662fELF\u53ef\u6267\u884c\u6587\u4ef6 /bin/bash\uff0ca.out, Windows\u7684.exe \u5171\u4eab\u76ee\u6807\u6587\u4ef6 (Shared Object File) \u8fd9\u79cd\u6587\u4ef6\u5305\u542b\u4e86\u4ee3\u7801\u548c\u6570\u636e\uff0c\u53ef\u4ee5\u5728\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5\u4e0b\u4f7f\u7528\uff1a1. \u94fe\u63a5\u5668\u4f7f\u7528\u6b64\u6587\u4ef6\u548c\u5176\u4ed6\u53ef\u91cd\u5b9a\u4f4d\u6587\u4ef6\u548c\u5171\u4eab\u76ee\u6807\u6587\u4ef6\u94fe\u63a5\uff0c\u4ea7\u751f\u65b0\u7684\u76ee\u6807\u6587\u4ef6\uff1b2. \u52a8\u6001\u94fe\u63a5\u5668\u5c06\u51e0\u79cd\u5171\u4eab\u76ee\u6807\u6587\u4ef6\u4e0e\u53ef\u6267\u884c\u6587\u4ef6\u7ed3\u5408\uff0c\u4f5c\u4e3a\u8fdb\u7a0b\u6620\u50cf\u7684\u4e00\u90e8\u5206\u8fd0\u884c Linux\u7684.so (e.g. /lib/glibc-2.5.so) / Windows\u7684DLL \u6838\u5fc3\u8f6c\u50a8\u6587\u4ef6 (Core Dump File) \u5f53\u8fdb\u7a0b\u610f\u5916\u7ec8\u6b62\u65f6\uff0c\u7cfb\u7edf\u53ef\u4ee5\u5c06\u8be5\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u7684\u5185\u5bb9\u53ca\u7ec8\u6b62\u65f6\u7684\u4e00\u4e9b\u4fe1\u606f\u8f6c\u50a8\u5230\u6b64 Linux\u4e0b\u7684core dump </li> <li> <p>ELF \u5934\uff1a\u5b9a\u4e49\u4e86ELF\u9b54\u6570\u3001\u7248\u672c\u3001\u5c0f\u7aef/\u5927\u7aef\u3001\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0\u3001\u76ee\u6807\u6587\u4ef6\u7684\u7c7b\u578b\u3001\u673a\u5668\u7ed3\u6784\u7c7b\u578b\u3001\u8282\u5934\u8868\u7684\u8d77\u59cb\u4f4d\u7f6e\u548c\u957f\u5ea6\u7b49</p> <pre><code>/* The ELF file header.  This appears at the start of every ELF file.  */\n\n#define EI_NIDENT (16)\n\ntypedef struct\n{\n    unsigned char   e_ident[EI_NIDENT]; /* Magic number and other info */\n    Elf32_Half      e_type;             /* Object file type */\n    Elf32_Half      e_machine;          /* Architecture */\n    Elf32_Word      e_version;          /* Object file version */\n    Elf32_Addr      e_entry;            /* Entry point virtual address */\n    Elf32_Off       e_phoff;            /* Program header table file offset */\n    Elf32_Off       e_shoff;            /* Section header table file offset */\n    Elf32_Word      e_flags;            /* Processor-specific flags */\n    Elf32_Half      e_ehsize;           /* ELF header size in bytes */\n    Elf32_Half      e_phentsize;        /* Program header table entry size */\n    Elf32_Half      e_phnum;            /* Program header table entry count */\n    Elf32_Half      e_shentsize;        /* Section header table entry size */\n    Elf32_Half      e_shnum;            /* Section header table entry count */\n    Elf32_Half      e_shstrndx;         /* Section header string table index */\n} Elf32_Ehdr;\n</code></pre> <p> </p> <ul> <li>.text \u8282\uff1a\u7f16\u8bd1\u6c47\u7f16\u540e\u7684\u4ee3\u7801\u90e8\u5206</li> <li>.rodata \u8282\uff1a\u53ea\u8bfb\u6570\u636e\uff0c\u5982printf \u683c\u5f0f\u4e32\u3001switch \u8df3\u8f6c\u8868\u7b49</li> <li>.data \u8282\uff1a\u5df2\u521d\u59cb\u5316\u4e14\u521d\u503c\u4e0d\u4e3a0\u7684\u5168\u5c40/\u9759\u6001\u53d8\u91cf</li> <li>.bss \u8282\uff1a\u672a\u521d\u59cb\u5316\u6216\u521d\u503c\u4e3a0\u7684\u5168\u5c40/\u9759\u6001\u53d8\u91cf\uff0c\u4ec5\u662f\u5360\u4f4d\u7b26\uff0c\u4e0d\u5360\u4efb\u4f55\u5b9e\u9645\u78c1\u76d8\u7a7a\u95f4\u3002\u533a\u5206bss\u8282\u662f\u4e3a\u4e86\u7a7a\u95f4\u6548\u7387\u3002</li> </ul> <p>Section header table (\u8282\u5934\u8868)\uff1a\u5b58\u50a8\u4e86ELF\u6587\u4ef6\u7684\u5404\u4e2a\u8282\u7684\u4fe1\u606f\u3002</p> <pre><code>/* Section header.  */\n\ntypedef struct\n{\n    Elf32_Word  sh_name;        /* Section name (string tbl index) */\n    Elf32_Word  sh_type;        /* Section type */\n    Elf32_Word  sh_flags;       /* Section flags */\n    Elf32_Addr  sh_addr;        /* Section virtual addr at execution */\n    Elf32_Off   sh_offset;      /* Section file offset */\n    Elf32_Word  sh_size;        /* Section size in bytes */\n    Elf32_Word  sh_link;        /* Link to another section */\n    Elf32_Word  sh_info;        /* Additional section information */\n    Elf32_Word  sh_addralign;   /* Section alignment */\n    Elf32_Word  sh_entsize;     /* Entry size if section holds table */\n} Elf32_Shdr;\n</code></pre> <p> </p> </li> <li> <p>\u94fe\u63a5\u591a\u4e2a .o: \u5408\u5e76\u76f8\u540c\u7684\u8282</p> <p></p> <p>\u94fe\u63a5 Two-pass linking</p> <ul> <li>\u7a7a\u95f4\u548c\u5730\u5740\u7684\u5206\u914d<ul> <li>\u91cd\u65b0\u5efa\u7acb\u7b26\u53f7\u8868\uff0c\u5408\u5e76\u6bb5\uff0c\u5e76\u8ba1\u7b97\u6bb5\u957f\u5ea6\u5efa\u7acb\u6620\u5c04\u5173\u7cfb</li> </ul> </li> <li>\u7b26\u53f7\u89e3\u6790\u548c\u91cd\u5b9a\u4f4d<ul> <li>\u786e\u5b9a\u6807\u53f7\u5f15\u7528\u5173\u7cfb</li> </ul> </li> </ul> <p>a.c </p> <pre><code>int foo(int a, int b) {\n    return a + b;\n}\n</code></pre> <p>b.c</p> <pre><code>int x = 100, y = 200;\n</code></pre> <p>main.c</p> <pre><code>extern int x, y;\nint foo(int a, int b); // \u53ef\u4ee5\u8bd5\u8bd5extern int foo;\nint main() {\n    printf(\"%d + %d = %d\\n\", x, y, foo(x, y));\n}\n</code></pre> <pre><code>linux$ gcc -c -fno-pic a.c\nlinux$ gcc -c -fno-pic b.c\nlinux$ gcc -c -fno-pic main.c\nlinux$ gcc -static a.o b.o main.o\nlinux$ ./a.out \n100 + 200 = 300\nlinux$ readelf -a main.o\nRelocation section '.rela.text' at offset 0x210 contains 7 entries:\nOffset          Info           Type           Sym. Value    Sym. Name + Addend\n00000000000a  000500000002 R_X86_64_PC32     0000000000000000 y - 4\n000000000010  000600000002 R_X86_64_PC32     0000000000000000 x - 4\n000000000019  000700000004 R_X86_64_PLT32    0000000000000000 foo - 4\n000000000021  000500000002 R_X86_64_PC32     0000000000000000 y - 4\n000000000027  000600000002 R_X86_64_PC32     0000000000000000 x - 4\n00000000002e  00030000000a R_X86_64_32       0000000000000000 .rodata + 0\n000000000038  000800000004 R_X86_64_PLT32    0000000000000000 printf - 4\nlinux$ objdump -d main.o\nDisassembly of section .text:\n\n0000000000000000 &lt;main&gt;:\n0:    f3 0f 1e fa             endbr64 \n4:    55                      push   %rbp\n5:    48 89 e5                mov    %rsp,%rbp\n8:    8b 15 00 00 00 00       mov    0x0(%rip),%edx        # e &lt;main+0xe&gt;\ne:    8b 05 00 00 00 00       mov    0x0(%rip),%eax        # 14 &lt;main+0x14&gt;\n14:   89 d6                   mov    %edx,%esi\n16:   89 c7                   mov    %eax,%edi\n18:   e8 00 00 00 00          call   1d &lt;main+0x1d&gt;\n1d:   89 c1                   mov    %eax,%ecx\n1f:   8b 15 00 00 00 00       mov    0x0(%rip),%edx        # 25 &lt;main+0x25&gt;\n25:   8b 05 00 00 00 00       mov    0x0(%rip),%eax        # 2b &lt;main+0x2b&gt;\n2b:   89 c6                   mov    %eax,%esi\n2d:   bf 00 00 00 00          mov    $0x0,%edi\n32:   b8 00 00 00 00          mov    $0x0,%eax\n37:   e8 00 00 00 00          call   3c &lt;main+0x3c&gt;\n3c:   b8 00 00 00 00          mov    $0x0,%eax\n41:   5d                      pop    %rbp\n42:   c3                      ret    \nlinux$ objdump -d a.out\n000000000040175d &lt;main&gt;:\n40175d:       f3 0f 1e fa             endbr64 \n401761:       55                      push   %rbp\n401762:       48 89 e5                mov    %rsp,%rbp\n401765:       8b 15 89 39 0c 00       mov    0xc3989(%rip),%edx        # 4c50f4 &lt;y&gt;\n40176b:       8b 05 7f 39 0c 00       mov    0xc397f(%rip),%eax        # 4c50f0 &lt;x&gt;\n401771:       89 d6                   mov    %edx,%esi\n401773:       89 c7                   mov    %eax,%edi\n401775:       e8 cb ff ff ff          call   401745 &lt;foo&gt;\n40177a:       89 c1                   mov    %eax,%ecx\n40177c:       8b 15 72 39 0c 00       mov    0xc3972(%rip),%edx        # 4c50f4 &lt;y&gt;\n401782:       8b 05 68 39 0c 00       mov    0xc3968(%rip),%eax        # 4c50f0 &lt;x&gt;\n401788:       89 c6                   mov    %eax,%esi\n40178a:       bf 04 80 49 00          mov    $0x498004,%edi\n40178f:       b8 00 00 00 00          mov    $0x0,%eax\n401794:       e8 27 9e 00 00          call   40b5c0 &lt;_IO_printf&gt;\n401799:       b8 00 00 00 00          mov    $0x0,%eax\n40179e:       5d                      pop    %rbp\n40179f:       c3                      ret  \nlinux$ readelf -a a.out\nSymbol table '.symtab' contains 2096 entries:\nNum:    Value          Size Type    Bind   Vis      Ndx Name\n...\n1639: 00000000004c50f4     4 OBJECT  GLOBAL DEFAULT   21 y\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u662f y - 4? \u27a1\ufe0f y \u662f\u76f8\u5bf9\u5f53\u524d\u6307\u4ee4\u7684 offset\uff0c\u800c\u6211\u4eec\u5728 8b 15 \u540e\u8981\u586b\u7684\u662f\u76f8\u5bf9\u4e8e\u4e0b\u4e00\u6761 pc \u7684 offset</p> <p></p> <p>0x4c50f4 = 0x40176b + 0x0c3989</p> </li> <li> <p>\u53ef\u6267\u884c\u6587\u4ef6\uff1a</p> <p></p> </li> <li> <p>\u52a8\u6001\u94fe\u63a5\uff1a\u57fa\u672c\u6b3e\u5c31\u662f GOT\uff0c\u800c\u8c6a\u534e\u6b3e PLT \u53ef\u4ee5 lazy binding\uff0c\u7528\u5230\u54ea\u4e2a\u624d\u4f1a\u53bb\u94fe\u63a5\uff0c\u53ea\u6709\u5728\u7b2c\u4e00\u6b21\u7684\u65f6\u5019\u624d\u9700\u8981\u586b\u8868\uff0c\u540e\u9762\u518d\u6b21\u7528\u5230\u7684\u65f6\u5019\u5df2\u6709\u4e86\u3002</p> <p></p> </li> <li> <p>\u9759\u6001\u94fe\u63a5 v.s \u52a8\u6001\u94fe\u63a5</p> <p> </p> </li> </ol>"},{"location":"ICS/ICS_Lectures/#lecture-10","title":"Lecture 10 \u7cfb\u7edf\u7f16\u7a0b\u4e0e\u57fa\u7840\u8bbe\u65bd","text":"<ol> <li> <p>Differential Testing</p> <pre><code>import sys\n\nfor i in range(int(sys.argv[1])):\n    print('\\n'.join(['si'] + [f'p ${r}' for r in ['eax', ...]]))\n</code></pre> <pre><code>N=10000\n\ndiff &lt;(python3 cmdgen.py $N | ./x86-nemu-datui img) \\\n    &lt;(python3 cmdgen.py $N | ./x86-nemu img)\n</code></pre> </li> </ol>"},{"location":"ICS/ICS_Lectures/#lecture-11","title":"Lecture 11 \u4e2d\u65ad\u4e0e\u5206\u65f6\u591a\u4efb\u52a1","text":""},{"location":"Linux/Linux/","title":"Linux","text":""},{"location":"Linux/Linux/#learning-material","title":"Learning Material","text":"<ol> <li>\u5144\u5f1f\u8fdeLinux\u6559\u7a0b\uff0c\u53c2\u8003\u7b14\u8bb0</li> </ol>"},{"location":"Linux/Linux/#linux-vs-windows","title":"Linux vs Windows","text":"<ol> <li> <p>Linux\u548cWindows\u5bf9\u6bd4\uff1a</p> Linux Windows Note cat a.csv type a.csv \u6253\u5370\u6587\u4ef6\u5185\u5bb9 ls dir \u770b\u76ee\u5f55\u4e0b\u7684\u6709\u54ea\u4e9b\u6587\u4ef6 <ul> <li>Linux\u7684cmd\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u800cWindows\u4e0d\u533a\u5206</li> <li>Linux\u6240\u6709\u5185\u5bb9\u4ee5\u6587\u4ef6\u5f62\u5f0f\u4fdd\u5b58\uff0c\u5305\u62ec\u786c\u4ef6\uff0c\u4f8b\u5982\u786c\u76d8\u662f/dev/sd[a-p]</li> <li>Linux\u662f\u4e0d\u9760\u6269\u5c55\u540d\u6765\u533a\u5206\u6587\u4ef6\u7684\uff0c\u5c11\u6570\u6709\u6269\u5c55\u540d\u7684\u6587\u4ef6\u4ec5\u4ec5\u662f\u4e3a\u4e86\u6211\u4eec\u81ea\u5df1\u65b9\u4fbf\u533a\u5206\u800c\u5df2</li> </ul> </li> </ol>"},{"location":"Linux/Linux/#linux_1","title":"Linux\u76ee\u5f55","text":"<ol> <li> <p>Linux\u5404\u76ee\u5f55\u7684\u4f5c\u7528\uff1a</p> \u76ee\u5f55 \u4f5c\u7528 /bin \u5b58\u653e\u7cfb\u7edf\u547d\u4ee4\u7684\u76ee\u5f55\uff0c\u666e\u901a\u7528\u6237\u548c\u8d85\u7ea7\u7528\u6237\u90fd\u53ef\u4ee5\u6267\u884c\u3002\u4e0d\u8fc7\u653e\u5728/bin\u4e0b\u7684\u547d\u4ee4\u5728\u5355\u7528\u6237\u6a21\u5f0f\u4e0b\u4e5f\u53ef\u4ee5\u6267\u884c /sbin \u4fdd\u5b58\u548c\u7cfb\u7edf\u73af\u5883\u8bbe\u7f6e\u76f8\u5173\u7684\u547d\u4ee4\uff0c\u53ea\u6709\u8d85\u7ea7\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u547d\u4ee4\u8fdb\u884c\u7cfb\u7edf\u73af\u5883\u8bbe\u7f6e\uff0c\u4f46\u662f\u6709\u4e9b\u547d\u4ee4\u53ef\u4ee5\u5141\u8bb8\u666e\u901a\u7528\u6237\u67e5\u770b /usr/bin \u5b58\u653e\u7cfb\u7edf\u547d\u4ee4\u7684\u76ee\u5f55\uff0c\u666e\u901a\u7528\u6237\u548c\u8d85\u7ea7\u7528\u6237\u90fd\u53ef\u4ee5\u6267\u884c\u3002\u8fd9\u4e9b\u547d\u4ee4\u548c\u7cfb\u7edf\u542f\u52a8\u65e0\u5173\uff0c\u5728\u5355\u7528\u6237\u6a21\u5f0f\u4e0b\u4e0d\u80fd\u6267\u884c /usr/sbin \u5b58\u653e\u6839\u6587\u4ef6\u7cfb\u7edf\u4e0d\u5fc5\u8981\u7684\u7cfb\u7edf\u7ba1\u7406\u547d\u4ee4\uff0c\u4f8b\u5982\u591a\u6570\u670d\u52a1\u7a0b\u5e8f\u3002\u53ea\u6709\u8d85\u7ea7\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u3002\u5927\u5bb6\u5176\u5b9e\u53ef\u4ee5\u6ce8\u610f\u5230Linux\u7684\u7cfb\u7edf\uff0c\u5728\u6240\u6709\"sbin\"\u76ee\u5f55\u4e2d\u4fdd\u5b58\u7684\u547d\u4ee4\u53ea\u6709\u8d85\u7ea7\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\uff0c\"bin\"\u76ee\u5f55\u4e2d\u4fdd\u5b58\u7684\u547d\u4ee4\u6240\u6709\u7528\u6237\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002 /boot \u7cfb\u7edf\u542f\u52a8\u76ee\u5f55\uff0c\u4fdd\u5b58\u7cfb\u7edf\u542f\u52a8\u76f8\u5173\u7684\u6587\u4ef6\uff0c\u5982\u5185\u6838\u6587\u4ef6\u548c\u542f\u52a8\u5f15\u5bfc\u7a0b\u5e8f(grub)\u6587\u4ef6\u7b49 /dev \u8bbe\u5907\u6587\u4ef6\u4fdd\u5b58\u4f4d\u7f6e\u3002\u6211\u4eec\u5df2\u7ecf\u8bf4\u8fc7Linux\u4e2d\u6240\u6709\u5185\u5bb9\u4ee5\u6587\u4ef6\u5f62\u5f0f\u4fdd\u5b58\uff0c\u5305\u62ec\u786c\u4ef6\u3002\u90a3\u4e48\u8fd9\u4e2a\u76ee\u5f55\u5c31\u662f\u7528\u6765\u4fdd\u5b58\u6240\u6709\u786c\u4ef6\u8bbe\u5907\u6587\u4ef6\u7684 /etc \u914d\u7f6e\u6587\u4ef6\u4fdd\u5b58\u4f4d\u7f6e\u3002\u7cfb\u7edf\u5185\u6240\u6709\u91c7\u7528\u9ed8\u8ba4\u5b89\u88c5\u65b9\u5f0f\uff08rpm\u5b89\u88c5\uff09\u7684\u670d\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u5168\u90e8\u90fd\u4fdd\u5b58\u5728\u8fd9\u4e2a\u76ee\u5f55\u5f53\u4e2d\uff0c\u5982\u7528\u6237\u8d26\u6237\u548c\u5bc6\u7801\uff0c\u670d\u52a1\u7684\u542f\u52a8\u811a\u672c\uff0c\u5e38\u7528\u670d\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u7b49 /home \u666e\u901a\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u3002\u5efa\u7acb\u6bcf\u4e2a\u7528\u6237\u65f6\uff0c\u6bcf\u4e2a\u7528\u6237\u8981\u6709\u4e00\u4e2a\u9ed8\u8ba4\u767b\u5f55\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u5c31\u662f\u8fd9\u4e2a\u7528\u6237\u7684\u5bb6\u76ee\u5f55\uff0c\u6240\u6709\u666e\u901a\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u5c31\u662f\u5728/home\u4e0b\u5efa\u7acb\u4e00\u4e2a\u548c\u7528\u6237\u540d\u76f8\u540c\u7684\u76ee\u5f55\u3002\u5982\u7528\u6237user1\u7684\u5bb6\u76ee\u5f55\u5c31\u662f/home/user1 /lib \u7cfb\u7edf\u8c03\u7528\u7684\u51fd\u6570\u5e93\u4fdd\u5b58\u4f4d\u7f6e /lost+found \u5f53\u7cfb\u7edf\u610f\u5916\u5d29\u6e83\u6216\u673a\u5668\u610f\u5916\u5173\u673a\uff0c\u800c\u4ea7\u751f\u4e00\u4e9b\u6587\u4ef6\u788e\u7247\u653e\u5728\u8fd9\u91cc\u3002\u5f53\u7cfb\u7edf\u542f\u52a8\u7684\u8fc7\u7a0b\u4e2dfsck\u5de5\u5177\u4f1a\u68c0\u67e5\u8fd9\u91cc\uff0c\u5e76\u4fee\u590d\u5df2\u7ecf\u635f\u574f\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u8fd9\u4e2a\u76ee\u5f55\u53ea\u5728\u6bcf\u4e2a\u5206\u533a\u4e2d\u51fa\u73b0\uff0c\u4f8b\u5982/lost+found\u5c31\u662f\u6839\u5206\u533a\u7684\u5907\u4efd\u6062\u590d\u76ee\u5f55\uff0c/boot/lost+found\u5c31\u662f /boot\u5206\u533a\u7684\u5907\u4efd\u6062\u590d\u76ee\u5f55 /media \u6302\u8f7d\u76ee\u5f55\u3002\u7cfb\u7edf\u5efa\u8bae\u662f\u7528\u6765\u6302\u8f7d\u5a92\u4f53\u8bbe\u5907\u7684\uff0c\u4f8b\u5982\u8f6f\u76d8\u548c\u5149\u76d8 /mnt \u6302\u8f7d\u76ee\u5f55\uff0c\u65e9\u671fLinux\u4e2d\u53ea\u6709\u8fd9\u4e00\u4e2a\u6302\u8f7d\u76ee\u5f55\uff0c\u5e76\u6ca1\u6709\u7ec6\u5206\u3002\u73b0\u5728\u8fd9\u4e2a\u76ee\u5f55\u7cfb\u7edf\u5efa\u8bae\u6302\u8f7d\u989d\u5916\u8bbe\u5907\uff0c\u5982U\u76d8\uff0c\u79fb\u52a8\u786c\u76d8\u548c\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u7684\u5206\u533a /misc \u6302\u8f7d\u76ee\u5f55\u3002\u7cfb\u7edf\u5efa\u8bae\u7528\u6765\u6302\u8f7dNFS\u670d\u52a1\u7684\u5171\u4eab\u76ee\u5f55\u3002\u6211\u4eec\u5728\u521a\u521a\u5df2\u7ecf\u89e3\u91ca\u4e86\u6302\u8f7d\uff0c\u7ae5\u978b\u4eec\u5e94\u8be5\u77e5\u9053\u53ea\u8981\u662f\u4e00\u4e2a\u5df2\u7ecf\u5efa\u7acb\u7684\u7a7a\u76ee\u5f55\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u6302\u8f7d\u70b9\u3002\u90a3\u4e48\u7cfb\u7edf\u867d\u7136\u51c6\u5907\u4e86\u4e09\u4e2a\u9ed8\u8ba4\u6302\u8f7d\u76ee\u5f55/media\u3001/mnt\u3001/misc\uff0c\u4f46\u662f\u5230\u5e95\u5728\u54ea\u4e2a\u76ee\u5f55\u4e2d\u6302\u8f7d\u4ec0\u4e48\u8bbe\u5907\u90fd\u53ef\u4ee5\u7531\u7ba1\u7406\u5458\u81ea\u5df1\u51b3\u5b9a\u3002\u4f8b\u5982\u8d85\u54e5\u63a5\u89e6Linux\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u6302\u8f7d\u76ee\u5f55\u53ea\u6709/mnt\u4e00\u4e2a\uff0c\u6240\u4ee5\u517b\u6210\u4e86\u5728/mnt\u4e0b\u5efa\u7acb\u4e0d\u540c\u76ee\u5f55\u6302\u8f7d\u4e0d\u540c\u8bbe\u5907\u7684\u4e60\u60ef\u3002\u5982/mnt/cdrom\u6302\u8f7d\u5149\u76d8\uff0c/mnt/usb\u6302\u8f7dU\u76d8\uff0c\u8fd9\u90fd\u662f\u53ef\u4ee5\u7684 /opt \u7b2c\u4e09\u65b9\u5b89\u88c5\u7684\u8f6f\u4ef6\u4fdd\u5b58\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u76ee\u5f55\u5c31\u662f\u653e\u7f6e\u548c\u5b89\u88c5\u5176\u4ed6\u8f6f\u4ef6\u7684\u4f4d\u7f6e\uff0c\u6211\u624b\u5de5\u5b89\u88c5\u7684\u6e90\u7801\u5305\u8f6f\u4ef6\u90fd\u53ef\u4ee5\u5b89\u88c5\u5230\u8fd9\u4e2a\u76ee\u5f55\u5f53\u4e2d\u3002\u4e0d\u8fc7\u6211\u8fd8\u662f\u66f4\u52a0\u4e60\u60ef\u628a\u8f6f\u4ef6\u653e\u7f6e\u5230/usr/local/\u76ee\u5f55\u5f53\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4/usr/local/\u76ee\u5f55\u4e5f\u53ef\u4ee5\u7528\u6765\u5b89\u88c5\u8f6f\u4ef6 /proc \u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff0c\u8be5\u76ee\u5f55\u4e2d\u7684\u6570\u636e\u5e76\u4e0d\u4fdd\u5b58\u5230\u786c\u76d8\u5f53\u4e2d\uff0c\u800c\u662f\u4fdd\u5b58\u5230\u5185\u5b58\u5f53\u4e2d\u3002\u4e3b\u8981\u4fdd\u5b58\u7cfb\u7edf\u7684\u5185\u6838\uff0c\u8fdb\u7a0b\uff0c\u5916\u90e8\u8bbe\u5907\u72b6\u6001\u548c\u7f51\u7edc\u72b6\u6001\u706f\u3002\u5982/proc/cpuinfo\u662f\u4fdd\u5b58CPU\u4fe1\u606f\u7684\uff0c /proc/devices\u662f\u4fdd\u5b58\u8bbe\u5907\u9a71\u52a8\u7684\u5217\u8868\u7684\uff0c/proc/filesystems\u662f\u4fdd\u5b58\u6587\u4ef6\u7cfb\u7edf\u5217\u8868\u7684\uff0c /proc/net/\u662f\u4fdd\u5b58\u7f51\u7edc\u534f\u8bae\u4fe1\u606f\u7684 /sys \u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u3002\u548c/proc\u76ee\u5f55\u76f8\u4f3c\uff0c\u90fd\u662f\u4fdd\u5b58\u5728\u5185\u5b58\u5f53\u4e2d\u7684\uff0c\u4e3b\u8981\u662f\u4fdd\u5b58\u4e8e\u5185\u6838\u76f8\u5173\u4fe1\u606f\u7684 /root \u8d85\u7ea7\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u3002\u666e\u901a\u7528\u6237\u5bb6\u76ee\u5f55\u5728\"/home\"\u4e0b\uff0c\u8d85\u7ea7\u7528\u4e8e\u5bb6\u76ee\u5f55\u76f4\u63a5\u5728\"/\"\u4e0b /srv \u670d\u52a1\u6570\u636e\u76ee\u5f55\u3002\u4e00\u4e9b\u7cfb\u7edf\u670d\u52a1\u542f\u52a8\u4e4b\u540e\uff0c\u53ef\u4ee5\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u4fdd\u5b58\u6240\u9700\u8981\u7684\u6570\u636e /tmp \u4e34\u65f6\u76ee\u5f55\u3002\u7cfb\u7edf\u5b58\u653e\u4e34\u65f6\u6587\u4ef6\u7684\u76ee\u5f55\uff0c\u8be5\u76ee\u5f55\u4e0b\u6240\u6709\u7528\u6237\u90fd\u53ef\u4ee5\u8bbf\u95ee\u548c\u5199\u5165\u3002\u6211\u4eec\u5efa\u8bae\u6b64\u76ee\u5f55\u4e2d\u4e0d\u80fd\u4fdd\u5b58\u91cd\u8981\u6570\u636e\uff0c\u6700\u597d\u6bcf\u6b21\u5f00\u673a\u90fd\u628a\u8be5\u76ee\u5f55\u6e05\u7a7a /usr \u7cfb\u7edf\u8f6f\u4ef6\u8d44\u6e90\u76ee\u5f55\u3002\u6ce8\u610fusr\u4e0d\u662fuser\u7684\u7f29\u5199\uff0c\u800c\u662f\"Unix Softwre Resource\"\u7684\u7f29\u5199\uff0c\u6240\u4ee5\u4e0d\u662f\u5b58\u653e\u7528\u6237\u6570\u636e\uff0c\u800c\u662f\u5b58\u653e\u7cfb\u7edf\u8f6f\u4ef6\u8d44\u6e90\u7684\u76ee\u5f55\u3002\u7cfb\u7edf\u4e2d\u5b89\u88c5\u7684\u8f6f\u4ef6\u5927\u591a\u6570\u4fdd\u5b58\u5728\u8fd9\u91cc /var \u52a8\u6001\u6570\u636e\u4fdd\u5b58\u4f4d\u7f6e\u3002\u4e3b\u8981\u4fdd\u5b58\u7f13\u5b58\u3001\u65e5\u5fd7\u4ee5\u53ca\u8f6f\u4ef6\u8fd0\u884c\u6240\u4ea7\u751f\u7684\u6587\u4ef6 <p></p> </li> </ol> <p>sbin / usr</p> <p>sbin\u4e2d\u7684s\u8868\u793asuper\uff0c\u5c31\u662f\u8d85\u7ea7\u7528\u6237\u7684\u610f\u601d\u3002usr\u4e0d\u662fuser\uff0c\u800c\u662f<code>unix software resource</code></p>"},{"location":"Linux/Linux/#_1","title":"\u547d\u4ee4\u683c\u5f0f","text":"<ol> <li> <p>\u547d\u4ee4\u683c\u5f0f\uff1a  \u547d\u4ee4 [\u2014\u9009\u9879] [\u53c2\u6570]  \u4f8b\uff1als -la /etc</p> <p>\u8bf4\u660e\uff1a   1\uff09\u4e2a\u522b\u547d\u4ee4\u4f7f\u7528\u4e0d\u9075\u5faa\u6b64\u683c\u5f0f   2\uff09\u5f53\u6709\u591a\u4e2a\u9009\u9879\u65f6\uff0c\u53ef\u4ee5\u5199\u5728\u4e00\u8d77   3\uff09\u7b80\u5316\u9009\u9879\u4e0e\u5b8c\u6574\u9009\u9879\uff1a-a \u7b49\u4e8e -all </p> </li> </ol>"},{"location":"Linux/Linux/#_2","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"Linux/useful_cmd/","title":"Useful cmd","text":""},{"location":"Linux/useful_cmd/#useful-cmds","title":"Useful cmds","text":"<ol> <li> <p><code>find . | grep '\\.cpp$' | xargs cat | wc -l</code></p> <ul> <li>\u89e3\u91ca\uff1a\u7edf\u8ba1\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709\u4ee5 .cpp \u4e3a\u540e\u7f00\u7684\u6587\u4ef6\u7684\u603b\u884c\u6570\u3002</li> <li><code>find .</code>\uff1a\u67e5\u627e\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\u3002</li> <li><code>grep '\\.cpp$'</code>\uff1a\u4f7f\u7528 grep \u547d\u4ee4\u8fc7\u6ee4\u51fa\u4ee5 .cpp \u4e3a\u540e\u7f00\u7684\u6587\u4ef6\u3002<code>\\.</code> \u8868\u793a\u5339\u914d\u70b9\u53f7\uff0c<code>$</code> \u8868\u793a\u5339\u914d\u884c\u5c3e\u3002</li> <li><code>xargs cat</code>\uff1a\u4f7f\u7528 xargs \u547d\u4ee4\u5c06\u8fc7\u6ee4\u540e\u7684\u6587\u4ef6\u540d\u4f20\u9012\u7ed9 cat \u547d\u4ee4\u3002cat \u547d\u4ee4\u7528\u4e8e\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u5e76\u8f93\u51fa\u3002</li> <li><code>wc -l</code>\uff1a\u4f7f\u7528 wc \u547d\u4ee4\u7edf\u8ba1\u8f93\u5165\u7684\u884c\u6570\u3002-l \u9009\u9879\u8868\u793a\u53ea\u7edf\u8ba1\u884c\u6570\u3002</li> </ul> </li> <li> <p><code>history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr</code></p> <ul> <li>\u89e3\u91ca\uff1a\u7edf\u8ba1\u547d\u4ee4\u884c\u547d\u4ee4\u7684\u9891\u7387\u3002</li> <li><code>history</code>\uff1a\u663e\u793a\u5f53\u524d\u7528\u6237\u7684\u547d\u4ee4\u5386\u53f2\u8bb0\u5f55\u3002</li> <li><code>tr -s ' '</code>\uff1a\u4f7f\u7528 tr \u5de5\u5177\u6765\u538b\u7f29\uff08\u6216\u5220\u9664\uff09\u8f93\u5165\u4e2d\u7684\u91cd\u590d\u7a7a\u683c\u3002\u8fd9\u4f7f\u5f97\u6bcf\u4e2a\u5355\u8bcd\u4e4b\u95f4\u53ea\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u65e0\u8bba\u539f\u59cb\u8f93\u5165\u4e2d\u6709\u591a\u5c11\u4e2a\u7a7a\u683c\u3002tr \u4ee3\u8868 \"translate\"\uff08\u8f6c\u6362\uff09\uff0c\u800c -s \u9009\u9879\u5219\u8868\u793a \"squeeze\"\uff08\u538b\u7f29\uff09\u3002 \u5f53\u4f7f\u7528 tr -s \u65f6\uff0c\u5b83\u4f1a\u5c06\u8f93\u5165\u4e2d\u7684\u91cd\u590d\u5b57\u7b26\u5e8f\u5217\u538b\u7f29\u6210\u5355\u4e2a\u5b57\u7b26\u3002</li> <li><code>cut -d ' ' -f3</code>\uff1a\u4f7f\u7528 cut \u5de5\u5177\u4ece\u8f93\u5165\u4e2d\u63d0\u53d6\u7b2c\u4e09\u4e2a\u5b57\u6bb5\uff08\u4ee5\u7a7a\u683c\u4e3a\u5206\u9694\u7b26<code>-d ' '</code>\uff09\u3002f1\u662fhistory\u8f93\u51fa\u7684\u7a7a\u683c\uff0cf2\u662f\u547d\u4ee4\u51fa\u73b0\u7684\u7f16\u53f7\uff0cf3\u624d\u662f\u547d\u4ee4\u3002</li> <li><code>sort</code>\uff1a\u5bf9\u8f93\u5165\u8fdb\u884c\u6392\u5e8f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f1a\u6309\u7167\u5b57\u6bcd\u987a\u5e8f\u5bf9\u63d0\u53d6\u7684\u547d\u4ee4\u8fdb\u884c\u6392\u5e8f\u3002</li> <li><code>uniq -c</code>\uff1a\u5220\u9664\u76f8\u90bb\u7684\u91cd\u590d\u884c\uff0c-c\u8868\u793a\u6bcf\u884c\u7684\u524d\u9762\u663e\u793a\u51fa\u73b0\u7684\u6b21\u6570\u3002</li> <li><code>sort -nr</code>\uff1a\u6309\u7167\u6570\u503c\uff08-n\uff09\u4ece\u5927\u5230\u5c0f\uff08-r\uff09\u5bf9\u8f93\u51fa\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u4f7f\u5f97\u6700\u5e38\u7528\u7684\u547d\u4ee4\u51fa\u73b0\u5728\u5217\u8868\u7684\u9876\u90e8\u3002</li> </ul> <pre><code>linux:~$ history\n    1  history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr\n    2  ls\n    3  history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr\n    4  cat\n    5  history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr\n    6  history\nlinux:~$ history | tr -s ' '\n    1 history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr\n    2 ls\n    3 history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr\n    4 cat\n    5 history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr\n    6 history\n    7 history | tr -s ' '\nlinux:~$ history | tr -s ' ' | cut -d ' ' -f3\n    history\n    ls\n    history\n    cat\n    history\n    history\n    history\n    history\nlinux:~$ history | tr -s ' ' | cut -d ' ' -f3 | sort\n    cat\n    history\n    history\n    history\n    history\n    history\n    history\n    history\n    ls\nlinux:~$ history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c\n    1 cat\n    8 history\n    1 ls\nlinux:~$ history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr\n    9 history\n    1 ls\n    1 cat\nlinux:~$ \n</code></pre> </li> <li> <p><code>command1 |&amp; command2</code>: \u4f1a\u5c06<code>command1</code>\u7684\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u5408\u5e76\uff0c\u7136\u540e\u5c06\u5408\u5e76\u540e\u7684\u8f93\u51fa\u4f20\u9012\u7ed9<code>command2</code></p> </li> <li> <p><code>xxd -r -p</code>:</p> <ul> <li>\u89e3\u91ca\uff1a\u5c06\u8f93\u5165\u7684\u7eaf\u5341\u516d\u8fdb\u5236\u6570\u636e\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u6570\u636e\u3002</li> <li><code>-r</code>: \u8868\u793a\u53cd\u5411\u64cd\u4f5c\uff0c\u5373\u4ece\u5341\u516d\u8fdb\u5236\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u3002</li> <li><code>-p</code>: \u8868\u793a\u4ee5\u7eaf\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u8bfb\u53d6\u8f93\u5165\uff0c\u5373\u4e0d\u5305\u542b\u4efb\u4f55\u989d\u5916\u7684\u683c\u5f0f\u4fe1\u606f\uff0c\u53ea\u8bfb\u53d6\u5341\u516d\u8fdb\u5236\u6570\u636e\u3002</li> </ul> </li> <li> <p><code>find . -name \"*.[ch]\" | xargs grep \"#include\" | sort | uniq</code>:</p> <ul> <li>\u5217\u51fa\u4e00\u4e2aC\u8bed\u8a00\u9879\u76ee\u4e2d\u6240\u6709\u88ab\u5305\u542b\u8fc7\u7684\u5934\u6587\u4ef6\u3002</li> </ul> </li> <li> <p><code>find . -name \"*.c\" -o -name \"*.h\" | xargs cat | wc -l</code></p> <ul> <li><code>-o</code>: \u8868\u793a \"or\"\uff0c\u8868\u793a\u540c\u65f6\u5339\u914d\u591a\u4e2a\u6761\u4ef6\u3002</li> <li>\u7edf\u8ba1\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709 .c \u548c .h \u6587\u4ef6\u7684\u4ee3\u7801\u884c\u6570\u3002</li> <li>\u7b49\u4ef7\u4e8e <code>find . -name \"*.[ch]\" | xargs cat | wc -l</code></li> </ul> </li> </ol>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/","title":"\u73a9\u8f6cLinux\u64cd\u4f5c\u7cfb\u7edf","text":"<p>\u73a9\u8f6cLinux\u64cd\u4f5c\u7cfb\u7edf</p> <p>\u8bf4\u660e\uff1a\u672c\u6587\u4e2d\u5bf9Linux\u547d\u4ee4\u7684\u8bb2\u89e3\u90fd\u662f\u57fa\u4e8e\u540d\u4e3aCentOS\u7684Linux\u53d1\u884c\u7248\u672c\uff0c\u4e0d\u540c\u7684Linux\u53d1\u884c\u7248\u672c\u5728Shell\u547d\u4ee4\u548c\u5de5\u5177\u7a0b\u5e8f\u4e0a\u4f1a\u6709\u4e00\u4e9b\u5dee\u522b\uff0c\u4f46\u662f\u8fd9\u4e9b\u5dee\u522b\u662f\u5f88\u5c0f\u7684\u3002</p>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_1","title":"\u64cd\u4f5c\u7cfb\u7edf\u53d1\u5c55\u53f2","text":"<p>\u53ea\u6709\u786c\u4ef6\u6ca1\u6709\u8f6f\u4ef6\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u88ab\u79f0\u4e4b\u4e3a\u201c\u88f8\u673a\u201d\uff0c\u6211\u4eec\u5f88\u96be\u7528\u201c\u88f8\u673a\u201d\u6765\u5b8c\u6210\u8ba1\u7b97\u673a\u65e5\u5e38\u7684\u5de5\u4f5c\uff08\u5982\u5b58\u50a8\u548c\u8fd0\u7b97\uff09\uff0c\u6240\u4ee5\u5fc5\u987b\u7528\u7279\u5b9a\u7684\u8f6f\u4ef6\u6765\u63a7\u5236\u786c\u4ef6\u7684\u5de5\u4f5c\u3002\u6700\u9760\u8fd1\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u8f6f\u4ef6\u662f\u7cfb\u7edf\u8f6f\u4ef6\uff0c\u5176\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u5c31\u662f\u201c\u64cd\u4f5c\u7cfb\u7edf\u201d\u3002\u201c\u64cd\u4f5c\u7cfb\u7edf\u201d\u662f\u63a7\u5236\u548c\u7ba1\u7406\u6574\u4e2a\u8ba1\u7b97\u673a\u786c\u4ef6\u548c\u8f6f\u4ef6\u8d44\u6e90\u3001\u5b9e\u73b0\u8d44\u6e90\u5206\u914d\u548c\u4efb\u52a1\u8c03\u914d\u3001\u4e3a\u7cfb\u7edf\u7528\u6237\u4ee5\u53ca\u5176\u4ed6\u8f6f\u4ef6\u63d0\u4f9b\u63a5\u53e3\u548c\u73af\u5883\u7684\u7a0b\u5e8f\u7684\u96c6\u5408\u3002</p>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_2","title":"\u6ca1\u6709\u64cd\u4f5c\u7cfb\u7edf\uff08\u624b\u5de5\u64cd\u4f5c\uff09","text":"<p>\u5728\u8ba1\u7b97\u673a\u8bde\u751f\u4e4b\u521d\u6ca1\u6709\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e74\u4ee3\uff0c\u4eba\u4eec\u5148\u628a\u7a0b\u5e8f\u7eb8\u5e26\uff08\u6216\u5361\u7247\uff09\u88c5\u4e0a\u8ba1\u7b97\u673a\uff0c\u7136\u540e\u542f\u52a8\u8f93\u5165\u673a\u628a\u7a0b\u5e8f\u9001\u5165\u8ba1\u7b97\u673a\uff0c\u63a5\u7740\u901a\u8fc7\u63a7\u5236\u53f0\u5f00\u5173\u542f\u52a8\u7a0b\u5e8f\u8fd0\u884c\u3002\u5f53\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\uff0c\u6253\u5370\u673a\u8f93\u51fa\u8ba1\u7b97\u7684\u7ed3\u679c\uff0c\u7528\u6237\u5378\u4e0b\u5e76\u53d6\u8d70\u7eb8\u5e26\uff08\u6216\u5361\u7247\uff09\u3002\u7b2c\u4e8c\u4e2a\u7528\u6237\u4e0a\u673a\uff0c\u91cd\u590d\u540c\u6837\u7684\u6b65\u9aa4\u3002\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u7528\u6237\u72ec\u5360\u673a\u5668\uff0cCPU\u7b49\u5f85\u624b\u5de5\u64cd\u4f5c\uff0c\u8d44\u6e90\u5229\u7528\u7387\u6781\u4f4e\u3002</p>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_3","title":"\u6279\u5904\u7406\u7cfb\u7edf","text":"<p>\u9996\u5148\u542f\u52a8\u8ba1\u7b97\u673a\u4e0a\u7684\u4e00\u4e2a\u76d1\u7763\u7a0b\u5e8f\uff0c\u5728\u76d1\u7763\u7a0b\u5e8f\u7684\u63a7\u5236\u4e0b\uff0c\u8ba1\u7b97\u673a\u80fd\u591f\u81ea\u52a8\u7684\u3001\u6210\u6279\u7684\u5904\u7406\u4e00\u4e2a\u6216\u591a\u4e2a\u7528\u6237\u7684\u4f5c\u4e1a\u3002\u5b8c\u6210\u4e00\u6279\u4f5c\u4e1a\u540e\uff0c\u76d1\u7763\u7a0b\u5ea6\u53c8\u4ece\u8f93\u5165\u673a\u8bfb\u53d6\u4f5c\u4e1a\u5b58\u5165\u78c1\u5e26\u673a\u3002\u6309\u7167\u4e0a\u9762\u7684\u6b65\u9aa4\u91cd\u590d\u5904\u7406\u4efb\u52a1\u3002\u76d1\u7763\u7a0b\u5e8f\u4e0d\u505c\u7684\u5904\u7406\u5404\u4e2a\u4f5c\u4e1a\uff0c\u5b9e\u73b0\u4e86\u4f5c\u4e1a\u7684\u81ea\u52a8\u8f6c\u63a5\uff0c\u51cf\u5c11\u4e86\u4f5c\u4e1a\u7684\u5efa\u7acb\u65f6\u95f4\u548c\u624b\u5de5\u64cd\u4f5c\u65f6\u95f4\uff0c\u63d0\u9ad8\u4e86\u8ba1\u7b97\u673a\u8d44\u6e90\u7684\u5229\u7528\u7387\u3002\u00a0\u6279\u5904\u7406\u7cfb\u7edf\u53c8\u53ef\u4ee5\u5206\u4e3a\u5355\u9053\u6279\u5904\u7406\u7cfb\u7edf\u3001\u591a\u9053\u6279\u5904\u7406\u7cfb\u7edf\u3001\u8054\u673a\u6279\u5904\u7406\u7cfb\u7edf\u3001\u8131\u673a\u6279\u5904\u7406\u7cfb\u7edf\u3002</p>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_4","title":"\u5206\u65f6\u7cfb\u7edf\u548c\u5b9e\u65f6\u7cfb\u7edf","text":"<p>\u5206\u65f6\u7cfb\u7edf\u662f\u628a\u5904\u7406\u5668\u7684\u8fd0\u884c\u65f6\u95f4\u5206\u6210\u5f88\u77ed\u7684\u65f6\u95f4\u7247\uff0c\u6309\u65f6\u95f4\u7247\u8f6e\u6d41\u628a\u5904\u7406\u673a\u5206\u914d\u7ed9\u5404\u8054\u673a\u4f5c\u4e1a\u4f7f\u7528\u3002 \u82e5\u67d0\u4e2a\u4f5c\u4e1a\u5728\u5206\u914d\u7ed9\u5b83\u7684\u65f6\u95f4\u7247\u5185\u4e0d\u80fd\u5b8c\u6210\u5176\u8ba1\u7b97\uff0c\u5219\u8be5\u4f5c\u4e1a\u6682\u65f6\u4e2d\u65ad\uff0c\u628a\u5904\u7406\u673a\u8ba9\u7ed9\u53e6\u4e00\u4f5c\u4e1a\u4f7f\u7528\uff0c\u7b49\u5f85\u4e0b\u4e00\u8f6e\u8c03\u5ea6\u65f6\u518d\u7ee7\u7eed\u5176\u8fd0\u884c\u3002\u7531\u4e8e\u8ba1\u7b97\u673a\u901f\u5ea6\u5f88\u5feb\uff0c\u4f5c\u4e1a\u8fd0\u884c\u8f6e\u8f6c\u5f97\u5f88\u5feb\uff0c\u7ed9\u6bcf\u4e2a\u7528\u6237\u7684\u611f\u89c9\u662f\u4ed6\u72ec\u5360\u4e86\u4e00\u53f0\u8ba1\u7b97\u673a\u3002\u800c\u6bcf\u4e2a\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u81ea\u5df1\u7684\u7ec8\u7aef\u5411\u7cfb\u7edf\u53d1\u51fa\u5404\u79cd\u64cd\u4f5c\u63a7\u5236\u547d\u4ee4\uff0c\u5728\u5145\u5206\u7684\u4eba\u673a\u4ea4\u4e92\u60c5\u51b5\u4e0b\uff0c\u5b8c\u6210\u4f5c\u4e1a\u7684\u8fd0\u884c\u3002\u4e3a\u4e86\u89e3\u51b3\u5206\u65f6\u7cfb\u7edf\u4e0d\u80fd\u53ca\u65f6\u54cd\u5e94\u7528\u6237\u6307\u4ee4\u7684\u60c5\u51b5\uff0c\u53c8\u51fa\u73b0\u4e86\u80fd\u591f\u5728\u5728\u4e25\u683c\u7684\u65f6\u95f4\u8303\u56f4\u5185\u5b8c\u6210\u4e8b\u4ef6\u5904\u7406\uff0c\u53ca\u65f6\u54cd\u5e94\u968f\u673a\u5916\u90e8\u4e8b\u4ef6\u7684\u5b9e\u65f6\u7cfb\u7edf\u3002</p>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_5","title":"\u901a\u7528\u64cd\u4f5c\u7cfb\u7edf","text":"<ol> <li> <p>1960s\uff1aIBM\u7684System/360\u7cfb\u5217\u7684\u673a\u5668\u6709\u4e86\u7edf\u4e00\u7684\u64cd\u4f5c\u7cfb\u7edfOS/360\u3002</p> </li> <li> <p>1965\u5e74\uff1aAT&amp;T\u7684\u8d1d\u5c14\u5b9e\u9a8c\u5ba4\u52a0\u5165GE\u548cMIT\u7684\u5408\u4f5c\u8ba1\u5212\u5f00\u59cb\u5f00\u53d1MULTICS\u3002</p> </li> <li> <p>1969\u5e74\uff1aMULTICS\u9879\u76ee\u5931\u8d25\uff0cKen Tompson\u8d4b\u95f2\u5728\u5bb6\uff0c\u4e3a\u4e86\u73a9\u201cSpace Travel\u201d\u6e38\u620f\u7528\u6c47\u7f16\u8bed\u8a00\u5728\u5f53\u65f6\u5df2\u7ecf\u88ab\u6dd8\u6c70\u7684PDP-7\u4e0a\u5f00\u53d1\u4e86Unics\u3002</p> </li> </ol> <p>\u6ce8\uff1a\u5f88\u96be\u60f3\u8c61\uff0cUnix\u8fd9\u4e48\u4f1f\u5927\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5c45\u7136\u662f\u4e00\u4e2a\u8d4b\u95f2\u5728\u5bb6\u7684\u7a0b\u5e8f\u5458\uff08\u5173\u952e\u662f\u8001\u5a46\u56de\u5a18\u5bb6\u8fd8\u5e26\u4e0a\u4e86\u5b69\u5b50\uff09\u5728\u4e00\u53f0\u88ab\u6dd8\u6c70\u7684\u8bbe\u5907\u4e0a\u4e3a\u4e86\u73a9\u6e38\u620f\u5f00\u53d1\u51fa\u6765\u7684\u3002</p> <ol> <li>1970\u5e74~1971\u5e74\uff1aKen Thompson\u548cDennis Ritchie\u7528B\u8bed\u8a00\u5728PDP-11\u4e0a\u91cd\u5199\u4e86Unics\uff0c\u5e76\u5728Brian Kernighan\u7684\u5efa\u8bae\u4e0b\u5c06\u5176\u66f4\u540d\u4e3aUnix\u3002</li> </ol> <p></p> <ol> <li> <p>1972\u5e74~1973\u5e74\uff1aDennis Ritchie\u53d1\u660e\u4e86C\u8bed\u8a00\u6765\u53d6\u4ee3\u53ef\u79fb\u690d\u6027\u8f83\u5dee\u7684B\u8bed\u8a00\uff0c\u5e76\u5f00\u542f\u4e86\u7528C\u8bed\u8a00\u91cd\u5199Unix\u7684\u5de5\u4f5c\u3002</p> </li> <li> <p>1974\u5e74\uff1aUnix\u63a8\u51fa\u4e86\u91cc\u7a0b\u7891\u610f\u4e49\u7684\u7b2c5\u7248\uff0c\u51e0\u4e4e\u5b8c\u5168\u7528C\u8bed\u8a00\u6765\u5b9e\u73b0\u3002</p> </li> <li> <p>1979\u5e74\uff1a\u4eceUnix\u7b2c7\u7248\u5f00\u59cb\uff0cAT&amp;T\u53d1\u5e03\u65b0\u7684\u4f7f\u7528\u6761\u6b3e\uff0c\u5c06Unix\u79c1\u6709\u5316\u3002</p> </li> <li> <p>1987\u5e74\uff1aAndrew S. Tanenbaum\u6559\u6388\u4e3a\u4e86\u80fd\u5728\u8bfe\u5802\u4e0a\u4e3a\u5b66\u751f\u8bb2\u89e3\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u4f5c\u7684\u7ec6\u8282\uff0c\u51b3\u5b9a\u5728\u4e0d\u4f7f\u7528\u4efb\u4f55AT&amp;T\u7684\u6e90\u4ee3\u7801\u524d\u63d0\u4e0b\uff0c\u81ea\u884c\u5f00\u53d1\u4e0eUnix\u517c\u5bb9\u7684\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u907f\u514d\u7248\u6743\u4e0a\u7684\u4e89\u8bae\uff0c\u8be5\u7cfb\u7edf\u88ab\u547d\u540d\u4e3aMinix\u3002</p> </li> </ol> <p></p> <ol> <li>1991\u5e74\uff1aLinus Torvalds\u5c31\u8bfb\u4e8e\u82ac\u5170\u8d6b\u5c14\u8f9b\u57fa\u5927\u5b66\u671f\u95f4\uff0c\u5c1d\u8bd5\u5728Minix\u4e0a\u505a\u4e00\u4e9b\u5f00\u53d1\u5de5\u4f5c\uff0c\u4f46\u56e0\u4e3aMinix\u53ea\u662f\u4f5c\u4e3a\u6559\u5b66\u7528\u9014\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u529f\u80fd\u5e76\u4e0d\u5f3a\u5927\uff0c\u4e3a\u4e86\u65b9\u4fbf\u5728\u5b66\u6821\u7684\u65b0\u95fb\u7ec4\u548c\u90ae\u4ef6\u7cfb\u7edf\u4e2d\u8bfb\u5199\u548c\u4e0b\u8f7d\u6587\u4ef6\uff0cLinus\u7f16\u5199\u4e86\u78c1\u76d8\u9a71\u52a8\u7a0b\u5e8f\u548c\u6587\u4ef6\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u4e1c\u897f\u5f62\u6210\u4e86Linux\u7cfb\u7edf\u5185\u6838\u7684\u96cf\u5f62\u3002</li> </ol> <p></p> <p>\u4e0b\u56fe\u662fUnix\u64cd\u4f5c\u7cfb\u7edf\u5bb6\u65cf\u7684\u56fe\u8c31\u3002</p> <p></p>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#linux","title":"Linux\u6982\u8ff0","text":"<p>Linux\u662f\u4e00\u4e2a\u901a\u7528\u64cd\u4f5c\u7cfb\u7edf\u3002\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u8981\u8d1f\u8d23\u4efb\u52a1\u8c03\u5ea6\u3001\u5185\u5b58\u5206\u914d\u3001\u5904\u7406\u5916\u56f4\u8bbe\u5907I/O\u7b49\u64cd\u4f5c\u3002\u64cd\u4f5c\u7cfb\u7edf\u901a\u5e38\u7531\u5185\u6838\uff08\u8fd0\u884c\u5176\u4ed6\u7a0b\u5e8f\uff0c\u7ba1\u7406\u50cf\u78c1\u76d8\u3001\u6253\u5370\u673a\u7b49\u786c\u4ef6\u8bbe\u5907\u7684\u6838\u5fc3\u7a0b\u5e8f\uff09\u548c\u7cfb\u7edf\u7a0b\u5e8f\uff08\u8bbe\u5907\u9a71\u52a8\u3001\u5e95\u5c42\u5e93\u3001shell\u3001\u670d\u52a1\u7a0b\u5e8f\u7b49\uff09\u4e24\u90e8\u5206\u7ec4\u6210\u3002</p> <p>Linux\u5185\u6838\u662f\u82ac\u5170\u4ebaLinus Torvalds\u5f00\u53d1\u7684\uff0c\u4e8e1991\u5e749\u6708\u53d1\u5e03\u3002\u800cLinux\u64cd\u4f5c\u7cfb\u7edf\u4f5c\u4e3aInternet\u65f6\u4ee3\u7684\u4ea7\u7269\uff0c\u5b83\u662f\u7531\u5168\u4e16\u754c\u8bb8\u591a\u5f00\u53d1\u8005\u5171\u540c\u5408\u4f5c\u5f00\u53d1\u7684\uff0c\u662f\u4e00\u4e2a\u81ea\u7531\u7684\u64cd\u4f5c\u7cfb\u7edf\uff08\u6ce8\u610f\u81ea\u7531\u548c\u514d\u8d39\u5e76\u4e0d\u662f\u540c\u4e00\u4e2a\u6982\u5ff5\uff0c\u60f3\u4e86\u89e3\u4e8c\u8005\u7684\u5dee\u522b\u53ef\u4ee5\u70b9\u51fb\u8fd9\u91cc\uff09\u3002</p>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#linux_1","title":"Linux\u7cfb\u7edf\u4f18\u70b9","text":"<ol> <li>\u901a\u7528\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4e0d\u8ddf\u7279\u5b9a\u7684\u786c\u4ef6\u7ed1\u5b9a\u3002</li> <li>\u7528C\u8bed\u8a00\u7f16\u5199\uff0c\u53ef\u79fb\u690d\u6027\u5f3a\uff0c\u6709\u5185\u6838\u7f16\u7a0b\u63a5\u53e3\u3002</li> <li>\u652f\u6301\u591a\u7528\u6237\u548c\u591a\u4efb\u52a1\uff0c\u652f\u6301\u5b89\u5168\u7684\u5206\u5c42\u6587\u4ef6\u7cfb\u7edf\u3002</li> <li>\u5927\u91cf\u7684\u5b9e\u7528\u7a0b\u5e8f\uff0c\u5b8c\u5584\u7684\u7f51\u7edc\u529f\u80fd\u4ee5\u53ca\u5f3a\u5927\u7684\u652f\u6301\u6587\u6863\u3002</li> <li>\u53ef\u9760\u7684\u5b89\u5168\u6027\u548c\u826f\u597d\u7684\u7a33\u5b9a\u6027\uff0c\u5bf9\u5f00\u53d1\u8005\u66f4\u53cb\u597d\u3002</li> </ol>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#linux_2","title":"Linux\u7cfb\u7edf\u53d1\u884c\u7248\u672c","text":"<ol> <li>Redhat</li> <li>Ubuntu</li> <li>CentOS</li> <li>Fedora</li> <li>Debian</li> <li>openSUSE</li> </ol>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_6","title":"\u57fa\u7840\u547d\u4ee4","text":"<p>Linux\u7cfb\u7edf\u7684\u547d\u4ee4\u901a\u5e38\u90fd\u662f\u5982\u4e0b\u6240\u793a\u7684\u683c\u5f0f\uff1a</p> <pre><code>\u547d\u4ee4\u540d\u79f0 [\u547d\u540d\u53c2\u6570] [\u547d\u4ee4\u5bf9\u8c61]\n</code></pre> <ol> <li> <p>\u83b7\u53d6\u767b\u5f55\u4fe1\u606f - w / who / last/ lastb\u3002</p> <pre><code>[root ~]# w\n 23:31:16 up 12:16,  2 users,  load average: 0.00, 0.01, 0.05\nUSER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    182.139.66.250   23:03    4.00s  0.02s  0.00s w\njackfrue pts/1    182.139.66.250   23:26    3:56   0.00s  0.00s -bash\n[root ~]# who\nroot     pts/0        2018-04-12 23:03 (182.139.66.250)\njackfrued pts/1        2018-04-12 23:26 (182.139.66.250)\n[root ~]# who am i\nroot     pts/0        2018-04-12 23:03 (182.139.66.250)\n[root ~]# who mom likes\nroot     pts/0        2018-04-12 23:03 (182.139.66.250)\n[root ~]# last\nroot     pts/0        117.136.63.184   Sun May 26 18:57   still logged in   \nreboot   system boot  3.10.0-957.10.1. Mon May 27 02:52 - 19:10  (-7:-42)   \nroot     pts/4        117.136.63.184   Sun May 26 18:51 - crash  (08:01)    \nroot     pts/4        117.136.63.184   Sun May 26 18:49 - 18:49  (00:00)    \nroot     pts/3        117.136.63.183   Sun May 26 18:35 - crash  (08:17)    \nroot     pts/2        117.136.63.183   Sun May 26 18:34 - crash  (08:17)    \nroot     pts/0        117.136.63.183   Sun May 26 18:10 - crash  (08:42)    \n</code></pre> </li> <li> <p>\u67e5\u770b\u81ea\u5df1\u4f7f\u7528\u7684Shell - ps\u3002</p> <p>Shell\u4e5f\u88ab\u79f0\u4e3a\u201c\u58f3\u201d\u6216\u201c\u58f3\u7a0b\u5e8f\u201d\uff0c\u5b83\u662f\u7528\u6237\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u4ea4\u6d41\u7684\u7ffb\u8bd1\u5b98\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4eba\u4e0e\u8ba1\u7b97\u673a\u4ea4\u4e92\u7684\u754c\u9762\u548c\u63a5\u53e3\u3002\u76ee\u524d\u5f88\u591aLinux\u7cfb\u7edf\u9ed8\u8ba4\u7684Shell\u90fd\u662fbash\uff08Bourne Again SHell\uff09\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u4f7f\u7528tab\u952e\u8fdb\u884c\u547d\u4ee4\u548c\u8def\u5f84\u8865\u5168\u3001\u53ef\u4ee5\u4fdd\u5b58\u5386\u53f2\u547d\u4ee4\u3001\u53ef\u4ee5\u65b9\u4fbf\u7684\u914d\u7f6e\u73af\u5883\u53d8\u91cf\u4ee5\u53ca\u6267\u884c\u6279\u5904\u7406\u64cd\u4f5c\u3002</p> <pre><code>[root ~]# ps\n  PID TTY          TIME CMD\n 3531 pts/0    00:00:00 bash\n 3553 pts/0    00:00:00 ps\n</code></pre> </li> <li> <p>\u67e5\u770b\u547d\u4ee4\u7684\u8bf4\u660e\u548c\u4f4d\u7f6e - whatis / which / whereis\u3002</p> <pre><code>[root ~]# whatis ps\nps (1)        - report a snapshot of the current processes.\n[root ~]# whatis python\npython (1)    - an interpreted, interactive, object-oriented programming language\n[root ~]# whereis ps\nps: /usr/bin/ps /usr/share/man/man1/ps.1.gz\n[root ~]# whereis python\npython: /usr/bin/python /usr/bin/python2.7 /usr/lib/python2.7 /usr/lib64/python2.7 /etc/python /usr/include/python2.7 /usr/share/man/man1/python.1.gz\n[root ~]# which ps\n/usr/bin/ps\n[root ~]# which python\n/usr/bin/python\n</code></pre> </li> <li> <p>\u6e05\u9664\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u5185\u5bb9 - clear\u3002</p> </li> <li> <p>\u67e5\u770b\u5e2e\u52a9\u6587\u6863 - man / info / --help / apropos\u3002</p> <pre><code>[root@izwz97tbgo9lkabnat2lo8z ~]# ps --help\nUsage:\n ps [options]\n Try 'ps --help &lt;simple|list|output|threads|misc|all&gt;'\n  or 'ps --help &lt;s|l|o|t|m|a&gt;'\n for additional help text.\nFor more details see ps(1).\n[root@izwz97tbgo9lkabnat2lo8z ~]# man ps\nPS(1)                                User Commands                                PS(1)\nNAME\n       ps - report a snapshot of the current processes.\nSYNOPSIS\n       ps [options]\nDESCRIPTION\n...\n</code></pre> </li> <li> <p>\u67e5\u770b\u7cfb\u7edf\u548c\u4e3b\u673a\u540d - uname / hostname\u3002</p> <pre><code>[root@izwz97tbgo9lkabnat2lo8z ~]# uname\nLinux\n[root@izwz97tbgo9lkabnat2lo8z ~]# hostname\nizwz97tbgo9lkabnat2lo8z\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# cat /etc/centos-release\nCentOS Linux release 7.6.1810 (Core)\n</code></pre> <p>\u8bf4\u660e\uff1a<code>cat</code>\u662f\u8fde\u63a5\u6587\u4ef6\u5185\u5bb9\u5e76\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\u7684\u547d\u4ee4\uff0c\u540e\u9762\u4f1a\u8bb2\u5230\u8be5\u547d\u4ee4\uff1b<code>/etc</code>\u662fLinux\u7cfb\u7edf\u4e0a\u7684\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u76ee\u5f55\uff0c\u5b83\u4fdd\u5b58\u4e86\u5f88\u591a\u7684\u914d\u7f6e\u6587\u4ef6\uff1b<code>centos-release</code>\u662f\u8be5\u76ee\u5f55\u4e0b\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u56e0\u4e3a\u6211\u81ea\u5df1\u4f7f\u7528\u7684Linux\u53d1\u884c\u7248\u672c\u662fCentOS 7.6\uff0c\u56e0\u6b64\u8fd9\u91cc\u4f1a\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u6587\u4ef6\u3002</p> </li> <li> <p>\u65f6\u95f4\u548c\u65e5\u671f - date / cal\u3002</p> <pre><code>[root@iZwz97tbgo9lkabnat2lo8Z ~]# date\nWed Jun 20 12:53:19 CST 2018\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# cal\n      June 2018\nSu Mo Tu We Th Fr Sa\n                1  2\n 3  4  5  6  7  8  9\n10 11 12 13 14 15 16\n17 18 19 20 21 22 23\n24 25 26 27 28 29 30\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# cal 5 2017\n      May 2017\nSu Mo Tu We Th Fr Sa\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n</code></pre> </li> <li> <p>\u91cd\u542f\u548c\u5173\u673a - reboot / shutdown\u3002</p> <pre><code>[root ~]# shutdown -h +5\nShutdown scheduled for Sun 2019-05-26 19:34:27 CST, use 'shutdown -c' to cancel.\n[root ~]# \nBroadcast message from root (Sun 2019-05-26 19:29:27 CST):\n\nThe system is going down for power-off at Sun 2019-05-26 19:34:27 CST!\n[root ~]# shutdown -c\n\nBroadcast message from root (Sun 2019-05-26 19:30:22 CST):\n\nThe system shutdown has been cancelled at Sun 2019-05-26 19:31:22 CST!\n[root ~]# shutdown -r 23:58\nShutdown scheduled for Sun 2019-05-26 23:58:00 CST, use 'shutdown -c' to cancel.\n[root ~]# shutdown -c\n\nBroadcast message from root (Sun 2019-05-26 19:31:06 CST):\n\nThe system shutdown has been cancelled at Sun 2019-05-26 19:32:06 CST!\n</code></pre> <p>\u8bf4\u660e\uff1a\u5728\u6267\u884c<code>shutdown</code>\u547d\u4ee4\u65f6\u4f1a\u5411\u767b\u5f55\u7cfb\u7edf\u7684\u7528\u6237\u53d1\u51fa\u8b66\u544a\uff0c\u53ef\u4ee5\u5728\u547d\u4ee4\u540e\u9762\u8ddf\u4e0a\u8b66\u544a\u6d88\u606f\u6765\u66ff\u6362\u9ed8\u8ba4\u7684\u8b66\u544a\u6d88\u606f\uff0c\u4e5f\u53ef\u4ee5\u5728<code>-h</code>\u53c2\u6570\u540e\u901a\u8fc7<code>now</code>\u6765\u8868\u793a\u7acb\u523b\u5173\u673a\u3002</p> </li> <li> <p>\u9000\u51fa\u767b\u5f55 -  exit / logout\u3002</p> </li> <li> <p>\u67e5\u770b\u5386\u53f2\u547d\u4ee4 - history\u3002</p> <pre><code>[root@iZwz97tbgo9lkabnat2lo8Z ~]# history\n...\n452  ls\n453  cd Python-3.6.5/\n454  clear\n455  history\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# !454\n</code></pre> <p>\u8bf4\u660e\uff1a\u67e5\u770b\u5230\u5386\u53f2\u547d\u4ee4\u4e4b\u540e\uff0c\u53ef\u4ee5\u7528<code>!\u5386\u53f2\u547d\u4ee4\u7f16\u53f7</code>\u6765\u91cd\u65b0\u6267\u884c\u8be5\u547d\u4ee4\uff1b\u901a\u8fc7<code>history -c</code>\u53ef\u4ee5\u6e05\u9664\u5386\u53f2\u547d\u4ee4\u3002</p> </li> </ol>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_7","title":"\u5b9e\u7528\u7a0b\u5e8f","text":""},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_8","title":"\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u64cd\u4f5c","text":"<ol> <li> <p>\u521b\u5efa/\u5220\u9664\u7a7a\u76ee\u5f55 - mkdir / rmdir\u3002</p> <pre><code>[root ~]# mkdir abc\n[root ~]# mkdir -p xyz/abc\n[root ~]# rmdir abc\n</code></pre> </li> <li> <p>\u521b\u5efa/\u5220\u9664\u6587\u4ef6 - touch / rm\u3002</p> <pre><code>[root ~]# touch readme.txt\n[root ~]# touch error.txt\n[root ~]# rm error.txt\nrm: remove regular empty file \u2018error.txt\u2019? y\n[root ~]# rm -rf xyz\n</code></pre> <ul> <li><code>touch</code>\u547d\u4ee4\u7528\u4e8e\u521b\u5efa\u7a7a\u767d\u6587\u4ef6\u6216\u4fee\u6539\u6587\u4ef6\u65f6\u95f4\u3002\u5728Linux\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u6587\u4ef6\u6709\u4e09\u79cd\u65f6\u95f4\uff1a<ul> <li>\u66f4\u6539\u5185\u5bb9\u7684\u65f6\u95f4 - mtime\u3002</li> <li>\u66f4\u6539\u6743\u9650\u7684\u65f6\u95f4 - ctime\u3002</li> <li>\u6700\u540e\u8bbf\u95ee\u65f6\u95f4 - atime\u3002</li> </ul> </li> <li><code>rm</code>\u7684\u51e0\u4e2a\u91cd\u8981\u53c2\u6570\uff1a<ul> <li><code>-i</code>\uff1a\u4ea4\u4e92\u5f0f\u5220\u9664\uff0c\u6bcf\u4e2a\u5220\u9664\u9879\u90fd\u4f1a\u8fdb\u884c\u8be2\u95ee\u3002</li> <li><code>-r</code>\uff1a\u5220\u9664\u76ee\u5f55\u5e76\u9012\u5f52\u7684\u5220\u9664\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u548c\u76ee\u5f55\u3002</li> <li><code>-f</code>\uff1a\u5f3a\u5236\u5220\u9664\uff0c\u5ffd\u7565\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u6ca1\u6709\u4efb\u4f55\u63d0\u793a\u3002</li> </ul> </li> </ul> </li> <li> <p>\u5207\u6362\u548c\u67e5\u770b\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 - cd / pwd\u3002</p> <p>\u8bf4\u660e\uff1a<code>cd</code>\u547d\u4ee4\u540e\u9762\u53ef\u4ee5\u8ddf\u76f8\u5bf9\u8def\u5f84\uff08\u4ee5\u5f53\u524d\u8def\u5f84\u4f5c\u4e3a\u53c2\u7167\uff09\u6216\u7edd\u5bf9\u8def\u5f84\uff08\u4ee5<code>/</code>\u5f00\u5934\uff09\u6765\u5207\u6362\u5230\u6307\u5b9a\u7684\u76ee\u5f55\uff0c\u4e5f\u53ef\u4ee5\u7528<code>cd ..</code>\u6765\u8fd4\u56de\u4e0a\u4e00\u7ea7\u76ee\u5f55\u3002\u8bf7\u5927\u5bb6\u60f3\u4e00\u60f3\uff0c\u5982\u679c\u8981\u8fd4\u56de\u5230\u4e0a\u4e0a\u4e00\u7ea7\u76ee\u5f55\u5e94\u8be5\u7ed9<code>cd</code>\u547d\u4ee4\u52a0\u4e0a\u4ec0\u4e48\u6837\u7684\u53c2\u6570\u5462\uff1f</p> </li> <li> <p>\u67e5\u770b\u76ee\u5f55\u5185\u5bb9 - ls\u3002</p> <ul> <li><code>-l</code>\uff1a\u4ee5\u957f\u683c\u5f0f\u67e5\u770b\u6587\u4ef6\u548c\u76ee\u5f55\u3002</li> <li><code>-a</code>\uff1a\u663e\u793a\u4ee5\u70b9\u5f00\u5934\u7684\u6587\u4ef6\u548c\u76ee\u5f55\uff08\u9690\u85cf\u6587\u4ef6\uff09\u3002</li> <li><code>-R</code>\uff1a\u9047\u5230\u76ee\u5f55\u8981\u8fdb\u884c\u9012\u5f52\u5c55\u5f00\uff08\u7ee7\u7eed\u5217\u51fa\u76ee\u5f55\u4e0b\u9762\u7684\u6587\u4ef6\u548c\u76ee\u5f55\uff09\u3002</li> <li><code>-d</code>\uff1a\u53ea\u5217\u51fa\u76ee\u5f55\uff0c\u4e0d\u5217\u51fa\u5176\u4ed6\u5185\u5bb9\u3002</li> <li><code>-S</code> / <code>-t</code>\uff1a\u6309\u5927\u5c0f/\u65f6\u95f4\u6392\u5e8f\u3002</li> </ul> </li> <li> <p>\u67e5\u770b\u6587\u4ef6\u5185\u5bb9 - cat / tac / head / tail / more / less / rev / od\u3002</p> <pre><code>[root ~]# wget http://www.sohu.com/ -O sohu.html\n--2018-06-20 18:42:34--  http://www.sohu.com/\nResolving www.sohu.com (www.sohu.com)... 14.18.240.6\nConnecting to www.sohu.com (www.sohu.com)|14.18.240.6|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 212527 (208K) [text/html]\nSaving to: \u2018sohu.html\u2019\n100%[==================================================&gt;] 212,527     --.-K/s   in 0.03s\n2018-06-20 18:42:34 (7.48 MB/s) - \u2018sohu.html\u2019 saved [212527/212527]\n[root ~]# cat sohu.html\n...\n[root ~]# head -10 sohu.html\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;\u641c\u72d0&lt;/title&gt;\n&lt;meta name=\"Keywords\" content=\"\u641c\u72d0,\u95e8\u6237\u7f51\u7ad9,\u65b0\u5a92\u4f53,\u7f51\u7edc\u5a92\u4f53,\u65b0\u95fb,\u8d22\u7ecf,\u4f53\u80b2,\u5a31\u4e50,\u65f6\u5c1a,\u6c7d\u8f66,\u623f\u4ea7,\u79d1\u6280,\u56fe\u7247,\u8bba\u575b,\u5fae\u535a,\u535a\u5ba2,\u89c6\u9891,\u7535\u5f71,\u7535\u89c6\u5267\"/&gt;\n&lt;meta name=\"Description\" content=\"\u641c\u72d0\u7f51\u4e3a\u7528\u6237\u63d0\u4f9b24\u5c0f\u65f6\u4e0d\u95f4\u65ad\u7684\u6700\u65b0\u8d44\u8baf\uff0c\u53ca\u641c\u7d22\u3001\u90ae\u4ef6\u7b49\u7f51\u7edc\u670d\u52a1\u3002\u5185\u5bb9\u5305\u62ec\u5168\u7403\u70ed\u70b9\u4e8b\u4ef6\u3001\u7a81\u53d1\u65b0\u95fb\u3001\u65f6\u4e8b\u8bc4\u8bba\u3001\u70ed\u64ad\u5f71\u89c6\u5267\u3001\u4f53\u80b2\u8d5b\u4e8b\u3001\u884c\u4e1a\u52a8\u6001\u3001\u751f\u6d3b\u670d\u52a1\u4fe1\u606f\uff0c\u4ee5\u53ca\u8bba\u575b\u3001\u535a\u5ba2\u3001\u5fae\u535a\u3001\u6211\u7684\u641c\u72d0\u7b49\u4e92\u52a8\u7a7a\u95f4\u3002\" /&gt;\n&lt;meta name=\"shenma-site-verification\" content=\"1237e4d02a3d8d73e96cbd97b699e9c3_1504254750\"&gt;\n&lt;meta charset=\"utf-8\"/&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge,chrome=1\"/&gt;\n[root ~]# tail -2 sohu.html\n&lt;/body&gt;\n&lt;/html&gt;\n[root ~]# less sohu.html\n...\n[root ~]# cat -n sohu.html | more\n...\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u7528\u5230\u4e86\u4e00\u4e2a\u540d\u4e3a<code>wget</code>\u7684\u547d\u4ee4\uff0c\u5b83\u662f\u4e00\u4e2a\u7f51\u7edc\u4e0b\u8f7d\u5668\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u4ece\u6307\u5b9a\u7684URL\u4e0b\u8f7d\u8d44\u6e90\u3002</p> </li> <li> <p>\u62f7\u8d1d/\u79fb\u52a8\u6587\u4ef6 - cp / mv\u3002</p> <pre><code>[root ~]# mkdir backup\n[root ~]# cp sohu.html backup/\n[root ~]# cd backup\n[root backup]# ls\nsohu.html\n[root backup]# mv sohu.html sohu_index.html\n[root backup]# ls\nsohu_index.html\n</code></pre> </li> <li> <p>\u6587\u4ef6\u91cd\u547d\u540d - rename\u3002</p> <pre><code>[root@iZwz97tbgo9lkabnat2lo8Z ~]# rename .htm .html *.htm\n</code></pre> </li> <li> <p>\u67e5\u627e\u6587\u4ef6\u548c\u67e5\u627e\u5185\u5bb9 - find / grep\u3002</p> <pre><code>[root@iZwz97tbgo9lkabnat2lo8Z ~]# find / -name \"*.html\"\n/root/sohu.html\n/root/backup/sohu_index.html\n[root@izwz97tbgo9lkabnat2lo8z ~]# find . -atime 7 -type f -print\n[root@izwz97tbgo9lkabnat2lo8z ~]# find . -type f -size +2k\n[root@izwz97tbgo9lkabnat2lo8z ~]# find . -type f -name \"*.swp\" -delete\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# grep \"&lt;script&gt;\" sohu.html -n\n20:&lt;script&gt;\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# grep -E \\&lt;\\/?script.*\\&gt; sohu.html -n\n20:&lt;script&gt;\n22:&lt;/script&gt;\n24:&lt;script src=\"//statics.itc.cn/web/v3/static/js/es5-shim-08e41cfc3e.min.js\"&gt;&lt;/script&gt;\n25:&lt;script src=\"//statics.itc.cn/web/v3/static/js/es5-sham-1d5fa1124b.min.js\"&gt;&lt;/script&gt;\n26:&lt;script src=\"//statics.itc.cn/web/v3/static/js/html5shiv-21fc8c2ba6.js\"&gt;&lt;/script&gt;\n29:&lt;script type=\"text/javascript\"&gt;\n52:&lt;/script&gt;\n...\n</code></pre> <p>\u8bf4\u660e\uff1a<code>grep</code>\u5728\u641c\u7d22\u5b57\u7b26\u4e32\u65f6\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u7528<code>grep -E</code>\u6216\u8005\u76f4\u63a5\u4f7f\u7528<code>egrep</code>\u3002</p> </li> <li> <p>\u521b\u5efa\u94fe\u63a5\u548c\u67e5\u770b\u94fe\u63a5 - ln / readlink\u3002</p> <pre><code>[root@iZwz97tbgo9lkabnat2lo8Z ~]# ls -l sohu.html\n-rw-r--r-- 1 root root 212131 Jun 20 19:15 sohu.html\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# ln /root/sohu.html /root/backup/sohu_backup\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# ls -l sohu.html\n-rw-r--r-- 2 root root 212131 Jun 20 19:15 sohu.html\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# ln /root/sohu.html /root/backup/sohu_backup2\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# ls -l sohu.html\n-rw-r--r-- 3 root root 212131 Jun 20 19:15 sohu.html\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# ln -s /etc/centos-release sysinfo\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# ls -l sysinfo\nlrwxrwxrwx 1 root root 19 Jun 20 19:21 sysinfo -&gt; /etc/centos-release\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# cat sysinfo\nCentOS Linux release 7.4.1708 (Core)\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# cat /etc/centos-release\nCentOS Linux release 7.4.1708 (Core)\n</code></pre> <p>\u8bf4\u660e\uff1a\u94fe\u63a5\u53ef\u4ee5\u5206\u4e3a\u786c\u94fe\u63a5\u548c\u8f6f\u94fe\u63a5\uff08\u7b26\u53f7\u94fe\u63a5\uff09\u3002\u786c\u94fe\u63a5\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u6307\u5411\u6587\u4ef6\u6570\u636e\u7684\u6307\u9488\uff0c\u5c31\u50cfPython\u4e2d\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u6bcf\u6dfb\u52a0\u4e00\u4e2a\u786c\u94fe\u63a5\uff0c\u6587\u4ef6\u7684\u5bf9\u5e94\u94fe\u63a5\u6570\u5c31\u589e\u52a01\uff0c\u53ea\u6709\u5f53\u6587\u4ef6\u7684\u94fe\u63a5\u6570\u4e3a0\u65f6\uff0c\u6587\u4ef6\u6240\u5bf9\u5e94\u7684\u5b58\u50a8\u7a7a\u95f4\u624d\u6709\u53ef\u80fd\u88ab\u5176\u4ed6\u6587\u4ef6\u8986\u76d6\u3002\u6211\u4eec\u5e73\u5e38\u5220\u9664\u6587\u4ef6\u65f6\u5176\u5b9e\u5e76\u6ca1\u6709\u5220\u9664\u786c\u76d8\u4e0a\u7684\u6570\u636e\uff0c\u6211\u4eec\u5220\u9664\u7684\u53ea\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6216\u8005\u8bf4\u662f\u6570\u636e\u7684\u4e00\u6761\u4f7f\u7528\u8bb0\u5f55\uff0c\u6240\u4ee5\u7c7b\u4f3c\u4e8e\u201c\u6587\u4ef6\u7c89\u788e\u673a\u201d\u4e4b\u7c7b\u7684\u8f6f\u4ef6\u5728\u201c\u7c89\u788e\u201d\u6587\u4ef6\u65f6\u9664\u4e86\u5220\u9664\u6587\u4ef6\u6307\u9488\uff0c\u8fd8\u4f1a\u5728\u6587\u4ef6\u5bf9\u5e94\u7684\u5b58\u50a8\u533a\u57df\u586b\u5165\u6570\u636e\u6765\u4fdd\u8bc1\u6587\u4ef6\u65e0\u6cd5\u518d\u6062\u590d\u3002\u8f6f\u94fe\u63a5\u7c7b\u4f3c\u4e8eWindows\u7cfb\u7edf\u4e0b\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u5f53\u8f6f\u94fe\u63a5\u94fe\u63a5\u7684\u6587\u4ef6\u88ab\u5220\u9664\u65f6\uff0c\u8f6f\u94fe\u63a5\u4e5f\u5c31\u5931\u6548\u4e86\u3002</p> </li> <li> <p>\u538b\u7f29/\u89e3\u538b\u7f29\u548c\u5f52\u6863/\u89e3\u5f52\u6863 - gzip / gunzip / xz\u3002</p> <pre><code>[root@iZwz97tbgo9lkabnat2lo8Z ~]# wget http://download.redis.io/releases/redis-4.0.10.tar.gz\n--2018-06-20 19:29:59--  http://download.redis.io/releases/redis-4.0.10.tar.gz\nResolving download.redis.io (download.redis.io)... 109.74.203.151\nConnecting to download.redis.io (download.redis.io)|109.74.203.151|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 1738465 (1.7M) [application/x-gzip]\nSaving to: \u2018redis-4.0.10.tar.gz\u2019\n100%[==================================================&gt;] 1,738,465   70.1KB/s   in 74s\n2018-06-20 19:31:14 (22.9 KB/s) - \u2018redis-4.0.10.tar.gz\u2019 saved [1738465/1738465]\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# ls redis*\nredis-4.0.10.tar.gz\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# gunzip redis-4.0.10.tar.gz\n[root@iZwz97tbgo9lkabnat2lo8Z ~]# ls redis*\nredis-4.0.10.tar\n</code></pre> </li> <li> <p>\u5f52\u6863\u548c\u89e3\u5f52\u6863 - tar\u3002</p> <pre><code>[root@iZwz97tbgo9lkabnat2lo8Z ~]# tar -xvf redis-4.0.10.tar\nredis-4.0.10/\nredis-4.0.10/.gitignore\nredis-4.0.10/00-RELEASENOTES\nredis-4.0.10/BUGS\nredis-4.0.10/CONTRIBUTING\nredis-4.0.10/COPYING\nredis-4.0.10/INSTALL\nredis-4.0.10/MANIFESTO\nredis-4.0.10/Makefile\nredis-4.0.10/README.md\nredis-4.0.10/deps/\nredis-4.0.10/deps/Makefile\nredis-4.0.10/deps/README.md\n...\n</code></pre> <p>\u8bf4\u660e\uff1a\u5f52\u6863\uff08\u4e5f\u79f0\u4e3a\u521b\u5efa\u5f52\u6863\uff09\u548c\u89e3\u5f52\u6863\u90fd\u4f7f\u7528<code>tar</code>\u547d\u4ee4\uff0c\u901a\u5e38\u521b\u5efa\u5f52\u6863\u9700\u8981<code>-cvf</code>\u4e09\u4e2a\u53c2\u6570\uff0c\u5176\u4e2d<code>c</code>\u8868\u793a\u521b\u5efa\uff08create\uff09\uff0c<code>v</code>\u8868\u793a\u663e\u793a\u521b\u5efa\u5f52\u6863\u8be6\u60c5\uff08verbose\uff09\uff0c<code>f</code>\u8868\u793a\u6307\u5b9a\u5f52\u6863\u7684\u6587\u4ef6\uff08file\uff09\uff1b\u89e3\u5f52\u6863\u9700\u8981\u52a0\u4e0a<code>-xvf</code>\u53c2\u6570\uff0c\u5176\u4e2d<code>x</code>\u8868\u793a\u62bd\u53d6\uff08extract\uff09\uff0c\u5176\u4ed6\u4e24\u4e2a\u53c2\u6570\u8ddf\u521b\u5efa\u5f52\u6863\u76f8\u540c\u3002</p> </li> <li> <p>\u5c06\u6807\u51c6\u8f93\u5165\u8f6c\u6210\u547d\u4ee4\u884c\u53c2\u6570 - xargs\u3002</p> <p>\u4e0b\u9762\u7684\u547d\u4ee4\u4f1a\u5c06\u67e5\u627e\u5f53\u524d\u8def\u5f84\u4e0b\u7684html\u6587\u4ef6\uff0c\u7136\u540e\u901a\u8fc7<code>xargs</code>\u5c06\u8fd9\u4e9b\u6587\u4ef6\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9<code>rm</code>\u547d\u4ee4\uff0c\u5b9e\u73b0\u67e5\u627e\u5e76\u5220\u9664\u6587\u4ef6\u7684\u64cd\u4f5c\u3002</p> <pre><code>[root@iZwz97tbgo9lkabnat2lo8Z ~]# find . -type f -name \"*.html\" | xargs rm -f\n</code></pre> <p>\u4e0b\u9762\u7684\u547d\u4ee4\u5c06a.txt\u6587\u4ef6\u4e2d\u7684\u591a\u884c\u5185\u5bb9\u53d8\u6210\u4e00\u884c\u8f93\u51fa\u5230b.txt\u6587\u4ef6\u4e2d\uff0c\u5176\u4e2d<code>&lt;</code>\u8868\u793a\u4ecea.txt\u4e2d\u8bfb\u53d6\u8f93\u5165\uff0c<code>&gt;</code>\u8868\u793a\u5c06\u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c\u8f93\u51fa\u5230b.txt\u4e2d\u3002</p> <pre><code>[root@iZwz97tbgo9lkabnat2lo8Z ~]# xargs &lt; a.txt &gt; b.txt\n</code></pre> <p>\u8bf4\u660e\uff1a\u8fd9\u4e2a\u547d\u4ee4\u5c31\u50cf\u4e0a\u9762\u6f14\u793a\u7684\u90a3\u6837\u5e38\u5728\u7ba1\u9053\uff08\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u4e00\u79cd\u65b9\u5f0f\uff09\u548c\u91cd\u5b9a\u5411\uff08\u91cd\u65b0\u6307\u5b9a\u8f93\u5165\u8f93\u51fa\u7684\u4f4d\u7f6e\uff09\u64cd\u4f5c\u4e2d\u7528\u5230\uff0c\u540e\u9762\u7684\u5185\u5bb9\u4e2d\u4f1a\u8bb2\u5230\u7ba1\u9053\u64cd\u4f5c\u548c\u8f93\u5165\u8f93\u51fa\u91cd\u5b9a\u5411\u64cd\u4f5c\u3002</p> </li> <li> <p>\u663e\u793a\u6587\u4ef6\u6216\u76ee\u5f55 - basename / dirname\u3002</p> </li> <li> <p>\u5176\u4ed6\u76f8\u5173\u5de5\u5177\u3002 </p> <ul> <li>sort - \u5bf9\u5185\u5bb9\u6392\u5e8f</li> <li>uniq - \u53bb\u6389\u76f8\u90bb\u91cd\u590d\u5185\u5bb9</li> <li>tr - \u66ff\u6362\u6307\u5b9a\u5185\u5bb9\u4e3a\u65b0\u5185\u5bb9</li> <li>cut / paste - \u526a\u5207/\u9ecf\u8d34\u5185\u5bb9</li> <li>split - \u62c6\u5206\u6587\u4ef6</li> <li>file - \u5224\u65ad\u6587\u4ef6\u7c7b\u578b</li> <li>wc - \u7edf\u8ba1\u6587\u4ef6\u884c\u6570\u3001\u5355\u8bcd\u6570\u3001\u5b57\u8282\u6570</li> <li>iconv - \u7f16\u7801\u8f6c\u6362</li> </ul> <pre><code>[root ~]# cat foo.txt\ngrape\napple\npitaya\n[root ~]# cat bar.txt\n100\n200\n300\n400\n[root ~]# paste foo.txt bar.txt\ngrape   100\napple   200\npitaya  300\n        400\n[root ~]# paste foo.txt bar.txt &gt; hello.txt\n[root ~]# cut -b 4-8 hello.txt\npe      10\nle      20\naya     3\n0\n[root ~]# cat hello.txt | tr '\\t' ','\ngrape,100\napple,200\npitaya,300\n,400\n[root ~]# split -l 100 sohu.html hello\n[root ~]# wget https://www.baidu.com/img/bd_logo1.png\n[root ~]# file bd_logo1.png\nbd_logo1.png: PNG image data, 540 x 258, 8-bit colormap, non-interlaced\n[root ~]# wc sohu.html\n  2979   6355 212527 sohu.html\n[root ~]# wc -l sohu.html\n2979 sohu.html\n[root ~]# wget http://www.qq.com -O qq.html\n[root ~]# iconv -f gb2312 -t utf-8 qq.html\n</code></pre> </li> </ol>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_9","title":"\u7ba1\u9053\u548c\u91cd\u5b9a\u5411","text":"<ol> <li> <p>\u7ba1\u9053\u7684\u4f7f\u7528 - |\u3002</p> <p>\u4f8b\u5b50\uff1a\u67e5\u627e\u5f53\u524d\u76ee\u5f55\u4e0b\u6587\u4ef6\u4e2a\u6570\u3002</p> <pre><code>[root ~]# find ./ | wc -l\n6152\n</code></pre> <p>\u4f8b\u5b50\uff1a\u5217\u51fa\u5f53\u524d\u8def\u5f84\u4e0b\u7684\u6587\u4ef6\u548c\u6587\u4ef6\u5939\uff0c\u7ed9\u6bcf\u4e00\u9879\u52a0\u4e00\u4e2a\u7f16\u53f7\u3002</p> <pre><code>[root ~]# ls | cat -n\n     1  dump.rdb\n     2  mongodb-3.6.5\n     3  Python-3.6.5\n     4  redis-3.2.11\n     5  redis.conf\n</code></pre> <p>\u4f8b\u5b50\uff1a\u67e5\u627erecord.log\u4e2d\u5305\u542bAAA\uff0c\u4f46\u4e0d\u5305\u542bBBB\u7684\u8bb0\u5f55\u7684\u603b\u6570</p> <pre><code>[root ~]# cat record.log | grep AAA | grep -v BBB | wc -l\n</code></pre> </li> <li> <p>\u8f93\u51fa\u91cd\u5b9a\u5411\u548c\u9519\u8bef\u91cd\u5b9a\u5411 - &gt; / &gt;&gt; / 2&gt;\u3002</p> <pre><code>[root ~]# cat readme.txt\nbanana\napple\ngrape\napple\ngrape\nwatermelon\npear\npitaya\n[root ~]# cat readme.txt | sort | uniq &gt; result.txt\n[root ~]# cat result.txt\napple\nbanana\ngrape\npear\npitaya\nwatermelon\n</code></pre> </li> <li> <p>\u8f93\u5165\u91cd\u5b9a\u5411 - \\&lt;\u3002</p> <pre><code>[root ~]# echo 'hello, world!' &gt; hello.txt\n[root ~]# wall &lt; hello.txt\n[root ~]#\nBroadcast message from root (Wed Jun 20 19:43:05 2018):\nhello, world!\n[root ~]# echo 'I will show you some code.' &gt;&gt; hello.txt\n[root ~]# wall &lt; hello.txt\n[root ~]#\nBroadcast message from root (Wed Jun 20 19:43:55 2018):\nhello, world!\nI will show you some code.\n</code></pre> </li> <li> <p>\u591a\u91cd\u5b9a\u5411 - tee\u3002</p> <p>\u4e0b\u9762\u7684\u547d\u4ee4\u9664\u4e86\u5728\u7ec8\u7aef\u663e\u793a\u547d\u4ee4<code>ls</code>\u7684\u7ed3\u679c\u4e4b\u5916\uff0c\u8fd8\u4f1a\u8ffd\u52a0\u8f93\u51fa\u5230<code>ls.txt</code>\u6587\u4ef6\u4e2d\u3002</p> <pre><code>[root ~]# ls | tee -a ls.txt\n</code></pre> </li> </ol>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_10","title":"\u522b\u540d","text":"<ol> <li> <p>alias</p> <pre><code>[root ~]# alias ll='ls -l'\n[root ~]# alias frm='rm -rf'\n[root ~]# ll\n...\ndrwxr-xr-x  2 root       root   4096 Jun 20 12:52 abc\n...\n[root ~]# frm abc\n</code></pre> </li> <li> <p>unalias</p> <pre><code>[root ~]# unalias frm\n[root ~]# frm sohu.html\n-bash: frm: command not found\n</code></pre> </li> </ol>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_11","title":"\u6587\u672c\u5904\u7406","text":"<ol> <li> <p>\u5b57\u7b26\u6d41\u7f16\u8f91\u5668 - sed\u3002</p> <p>sed\u662f\u64cd\u4f5c\u3001\u8fc7\u6ee4\u548c\u8f6c\u6362\u6587\u672c\u5185\u5bb9\u7684\u5de5\u5177\u3002\u5047\u8bbe\u6709\u4e00\u4e2a\u540d\u4e3afruit.txt\u7684\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>[root ~]# cat -n fruit.txt \n     1  banana\n     2  grape\n     3  apple\n     4  watermelon\n     5  orange\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5728\u7b2c2\u884c\u540e\u9762\u6dfb\u52a0\u4e00\u4e2apitaya\u3002</p> <pre><code>[root ~]# sed '2a pitaya' fruit.txt \nbanana\ngrape\npitaya\napple\nwatermelon\norange\n</code></pre> <p>\u6ce8\u610f\uff1a\u521a\u624d\u7684\u547d\u4ee4\u548c\u4e4b\u524d\u6211\u4eec\u8bb2\u8fc7\u7684\u5f88\u591a\u547d\u4ee4\u4e00\u6837\u5e76\u6ca1\u6709\u6539\u53d8fruit.txt\u6587\u4ef6\uff0c\u800c\u662f\u5c06\u6dfb\u52a0\u4e86\u65b0\u884c\u7684\u5185\u5bb9\u8f93\u51fa\u5230\u7ec8\u7aef\u4e2d\uff0c\u5982\u679c\u60f3\u4fdd\u5b58\u5230fruit.txt\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u8f93\u51fa\u91cd\u5b9a\u5411\u64cd\u4f5c\u3002</p> <p>\u5728\u7b2c2\u884c\u524d\u9762\u63d2\u5165\u4e00\u4e2awaxberry\u3002</p> <pre><code>[root ~]# sed '2i waxberry' fruit.txt\nbanana\nwaxberry\ngrape\napple\nwatermelon\norange\n</code></pre> <p>\u5220\u9664\u7b2c3\u884c\u3002</p> <pre><code>[root ~]# sed '3d' fruit.txt\nbanana\ngrape\nwatermelon\norange\n</code></pre> <p>\u5220\u9664\u7b2c2\u884c\u5230\u7b2c4\u884c\u3002</p> <pre><code>[root ~]# sed '2,4d' fruit.txt\nbanana\norange\n</code></pre> <p>\u5c06\u6587\u672c\u4e2d\u7684\u5b57\u7b26a\u66ff\u6362\u4e3a@\u3002</p> <pre><code>[root ~]# sed 's#a#@#' fruit.txt \nb@nana\ngr@pe\n@pple\nw@termelon\nor@nge\n</code></pre> <p>\u5c06\u6587\u672c\u4e2d\u7684\u5b57\u7b26a\u66ff\u6362\u4e3a@\uff0c\u4f7f\u7528\u5168\u5c40\u6a21\u5f0f\u3002</p> <pre><code>[root ~]# sed 's#a#@#g' fruit.txt \nb@n@n@\ngr@pe\n@pple\nw@termelon\nor@nge\n</code></pre> </li> <li> <p>\u6a21\u5f0f\u5339\u914d\u548c\u5904\u7406\u8bed\u8a00 - awk\u3002</p> <p>awk\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e5f\u662fLinux\u7cfb\u7edf\u4e2d\u5904\u7406\u6587\u672c\u6700\u4e3a\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u5b83\u7684\u4f5c\u8005\u4e4b\u4e00\u548c\u73b0\u5728\u7684\u7ef4\u62a4\u8005\u5c31\u662f\u4e4b\u524d\u63d0\u5230\u8fc7\u7684Brian Kernighan\uff08ken\u548cdmr\u6700\u4eb2\u5bc6\u7684\u4f19\u4f34\uff09\u3002\u901a\u8fc7\u8be5\u547d\u4ee4\u53ef\u4ee5\u4ece\u6587\u672c\u4e2d\u63d0\u53d6\u51fa\u6307\u5b9a\u7684\u5217\u3001\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u4ece\u6587\u672c\u4e2d\u53d6\u51fa\u6211\u4eec\u60f3\u8981\u7684\u5185\u5bb9\u3001\u663e\u793a\u6307\u5b9a\u7684\u884c\u4ee5\u53ca\u8fdb\u884c\u7edf\u8ba1\u548c\u8fd0\u7b97\uff0c\u603b\u4e4b\u5b83\u975e\u5e38\u5f3a\u5927\u3002</p> <p>\u5047\u8bbe\u6709\u4e00\u4e2a\u540d\u4e3afruit2.txt\u7684\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>[root ~]# cat fruit2.txt \n1       banana      120\n2       grape       500\n3       apple       1230\n4       watermelon  80\n5       orange      400\n</code></pre> <p>\u663e\u793a\u6587\u4ef6\u7684\u7b2c3\u884c\u3002</p> <pre><code>[root ~]# awk 'NR==3' fruit2.txt \n3       apple       1230\n</code></pre> <p>\u663e\u793a\u6587\u4ef6\u7684\u7b2c2\u5217\u3002</p> <pre><code>[root ~]# awk '{print $2}' fruit2.txt \nbanana\ngrape\napple\nwatermelon\norange\n</code></pre> <p>\u663e\u793a\u6587\u4ef6\u7684\u6700\u540e\u4e00\u5217\u3002</p> <pre><code>[root ~]# awk '{print $NF}' fruit2.txt \n120\n500\n1230\n80\n400\n</code></pre> <p>\u8f93\u51fa\u672b\u5c3e\u6570\u5b57\u5927\u4e8e\u7b49\u4e8e300\u7684\u884c\u3002</p> <pre><code>[root ~]# awk '{if($3 &gt;= 300) {print $0}}' fruit2.txt \n2       grape       500\n3       apple       1230\n5       orange      400\n</code></pre> <p>\u4e0a\u9762\u5c55\u793a\u7684\u53ea\u662fawk\u547d\u4ee4\u7684\u51b0\u5c71\u4e00\u89d2\uff0c\u66f4\u591a\u7684\u5185\u5bb9\u7559\u7ed9\u8bfb\u8005\u81ea\u5df1\u5728\u5b9e\u8df5\u4e2d\u53bb\u63a2\u7d22\u3002</p> </li> </ol>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_12","title":"\u7528\u6237\u7ba1\u7406","text":"<ol> <li> <p>\u521b\u5efa\u548c\u5220\u9664\u7528\u6237 - useradd / userdel\u3002</p> <pre><code>[root home]# useradd hellokitty\n[root home]# userdel hellokitty\n</code></pre> <ul> <li><code>-d</code> - \u521b\u5efa\u7528\u6237\u65f6\u4e3a\u7528\u6237\u6307\u5b9a\u7528\u6237\u4e3b\u76ee\u5f55</li> <li><code>-g</code> - \u521b\u5efa\u7528\u6237\u65f6\u6307\u5b9a\u7528\u6237\u6240\u5c5e\u7684\u7528\u6237\u7ec4</li> </ul> </li> <li> <p>\u521b\u5efa\u548c\u5220\u9664\u7528\u6237\u7ec4 - groupadd / groupdel\u3002</p> <p>\u8bf4\u660e\uff1a\u7528\u6237\u7ec4\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u5bf9\u4e00\u4e2a\u7ec4\u91cc\u9762\u6240\u6709\u7528\u6237\u7684\u7ba1\u7406\u3002</p> </li> <li> <p>\u4fee\u6539\u5bc6\u7801 - passwd\u3002</p> <pre><code>[root ~]# passwd hellokitty\nNew password: \nRetype new password: \npasswd: all authentication tokens updated successfully.\n</code></pre> <p>\u8bf4\u660e\uff1a\u8f93\u5165\u5bc6\u7801\u548c\u786e\u8ba4\u5bc6\u7801\u6ca1\u6709\u56de\u663e\u4e14\u5fc5\u987b\u4e00\u6c14\u5475\u6210\u7684\u8f93\u5165\u5b8c\u6210\uff08\u4e0d\u80fd\u4f7f\u7528\u9000\u683c\u952e\uff09\uff0c\u5bc6\u7801\u548c\u786e\u8ba4\u5bc6\u7801\u9700\u8981\u4e00\u81f4\u3002\u5982\u679c\u4f7f\u7528<code>passwd</code>\u547d\u4ee4\u65f6\u6ca1\u6709\u6307\u5b9a\u547d\u4ee4\u4f5c\u7528\u7684\u5bf9\u8c61\uff0c\u5219\u8868\u793a\u8981\u4fee\u6539\u5f53\u524d\u7528\u6237\u7684\u5bc6\u7801\u3002\u5982\u679c\u60f3\u6279\u91cf\u4fee\u6539\u7528\u6237\u5bc6\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528<code>chpasswd</code>\u547d\u4ee4\u3002</p> <ul> <li><code>-l</code> / <code>-u</code> - \u9501\u5b9a/\u89e3\u9501\u7528\u6237\u3002</li> <li><code>-d</code> - \u6e05\u9664\u7528\u6237\u5bc6\u7801\u3002</li> <li><code>-e</code> - \u8bbe\u7f6e\u5bc6\u7801\u7acb\u5373\u8fc7\u671f\uff0c\u7528\u6237\u767b\u5f55\u65f6\u4f1a\u5f3a\u5236\u8981\u6c42\u4fee\u6539\u5bc6\u7801\u3002</li> <li><code>-i</code> - \u8bbe\u7f6e\u5bc6\u7801\u8fc7\u671f\u591a\u5c11\u5929\u4ee5\u540e\u7981\u7528\u8be5\u7528\u6237\u3002</li> </ul> </li> <li> <p>\u67e5\u770b\u548c\u4fee\u6539\u5bc6\u7801\u6709\u6548\u671f - chage\u3002</p> <p>\u8bbe\u7f6ehellokitty\u7528\u6237100\u5929\u540e\u5fc5\u987b\u4fee\u6539\u5bc6\u7801\uff0c\u8fc7\u671f\u524d15\u5929\u901a\u77e5\u8be5\u7528\u6237\uff0c\u8fc7\u671f\u540e7\u5929\u7981\u7528\u8be5\u7528\u6237\u3002</p> <pre><code>chage -M 100 -W 15 -I 7 hellokitty\n</code></pre> </li> <li> <p>\u5207\u6362\u7528\u6237 - su\u3002</p> <pre><code>[root ~]# su hellokitty\n[hellokitty root]$\n</code></pre> </li> <li> <p>\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u6267\u884c\u547d\u4ee4 - sudo\u3002</p> <pre><code>[hellokitty ~]$ ls /root\nls: cannot open directory /root: Permission denied\n[hellokitty ~]$ sudo ls /root\n[sudo] password for hellokitty:\n</code></pre> <p>\u8bf4\u660e\uff1a\u5982\u679c\u5e0c\u671b\u7528\u6237\u80fd\u591f\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u6267\u884c\u547d\u4ee4\uff0c\u7528\u6237\u5fc5\u987b\u8981\u51fa\u73b0\u5728sudoers\u540d\u5355\u4e2d\uff0csudoers\u6587\u4ef6\u5728 <code>/etc</code>\u76ee\u5f55\u4e0b\uff0c\u5982\u679c\u5e0c\u671b\u76f4\u63a5\u7f16\u8f91\u8be5\u6587\u4ef6\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u3002</p> </li> <li> <p>\u7f16\u8f91sudoers\u6587\u4ef6 - visudo\u3002</p> <p>\u8fd9\u91cc\u4f7f\u7528\u7684\u7f16\u8f91\u5668\u662fvi\uff0c\u5173\u4e8evi\u7684\u77e5\u8bc6\u5728\u540e\u9762\u6709\u8bb2\u89e3\u3002\u8be5\u6587\u4ef6\u7684\u90e8\u5206\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>## Allow root to run any commands anywhere \nroot    ALL=(ALL)   ALL\n\n## Allows members of the 'sys' group to run networking, software, \n## service management apps and more.\n# %sys ALL = NETWORKING, SOFTWARE, SERVICES, STORAGE, DELEGATING, PROCESSES, LOCATE, DRIVERS\n## Allows people in group wheel to run all commands\n%wheel  ALL=(ALL)   ALL\n\n## Same thing without a password\n# %wheel    ALL=(ALL)   NOPASSWD: ALL\n\n## Allows members of the users group to mount and unmount the\n## cdrom as root\n# %users  ALL=/sbin/mount /mnt/cdrom, /sbin/umount /mnt/cdrom\n\n## Allows members of the users group to shutdown this system\n# %users  localhost=/sbin/shutdown -h now\n</code></pre> </li> <li> <p>\u663e\u793a\u7528\u6237\u4e0e\u7528\u6237\u7ec4\u7684\u4fe1\u606f - id\u3002</p> </li> <li> <p>\u7ed9\u5176\u4ed6\u7528\u6237\u53d1\u6d88\u606f -write / wall\u3002</p> <p>\u53d1\u9001\u65b9\uff1a</p> <pre><code>[root ~]# write hellokitty\nDinner is on me.\nCall me at 6pm.\n</code></pre> <p>\u63a5\u6536\u65b9\uff1a</p> <pre><code>[hellokitty ~]$ \nMessage from root on pts/0 at 17:41 ...\nDinner is on me.\nCall me at 6pm.\nEOF\n</code></pre> </li> <li> <p>\u67e5\u770b/\u8bbe\u7f6e\u662f\u5426\u63a5\u6536\u5176\u4ed6\u7528\u6237\u53d1\u9001\u7684\u6d88\u606f - mesg\u3002</p> <pre><code>[hellokitty ~]$ mesg\nis y\n[hellokitty ~]$ mesg n\n[hellokitty ~]$ mesg\nis n\n</code></pre> </li> </ol>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_13","title":"\u6587\u4ef6\u7cfb\u7edf","text":""},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_14","title":"\u6587\u4ef6\u548c\u8def\u5f84","text":"<ol> <li>\u547d\u540d\u89c4\u5219\uff1a\u6587\u4ef6\u540d\u7684\u6700\u5927\u957f\u5ea6\u4e0e\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b\u6709\u5173\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6587\u4ef6\u540d\u4e0d\u5e94\u8be5\u8d85\u8fc7255\u4e2a\u5b57\u7b26\uff0c\u867d\u7136\u7edd\u5927\u591a\u6570\u7684\u5b57\u7b26\u90fd\u53ef\u4ee5\u7528\u4e8e\u6587\u4ef6\u540d\uff0c\u4f46\u662f\u6700\u597d\u4f7f\u7528\u82f1\u6587\u5927\u5c0f\u5199\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u3001\u70b9\u8fd9\u6837\u7684\u7b26\u53f7\u3002\u6587\u4ef6\u540d\u4e2d\u867d\u7136\u53ef\u4ee5\u4f7f\u7528\u7a7a\u683c\uff0c\u4f46\u5e94\u8be5\u5c3d\u53ef\u80fd\u907f\u514d\u4f7f\u7528\u7a7a\u683c\uff0c\u5426\u5219\u5728\u8f93\u5165\u6587\u4ef6\u540d\u65f6\u9700\u8981\u7528\u5c06\u6587\u4ef6\u540d\u653e\u5728\u53cc\u5f15\u53f7\u4e2d\u6216\u8005\u901a\u8fc7<code>\\</code>\u5bf9\u7a7a\u683c\u8fdb\u884c\u8f6c\u4e49\u3002</li> <li>\u6269\u5c55\u540d\uff1a\u5728Linux\u7cfb\u7edf\u4e0b\u6587\u4ef6\u7684\u6269\u5c55\u540d\u662f\u53ef\u9009\u7684\uff0c\u4f46\u662f\u4f7f\u7528\u6269\u5c55\u540d\u6709\u52a9\u4e8e\u5bf9\u6587\u4ef6\u5185\u5bb9\u7684\u7406\u89e3\u3002\u6709\u4e9b\u5e94\u7528\u7a0b\u5e8f\u8981\u901a\u8fc7\u6269\u5c55\u540d\u6765\u8bc6\u522b\u6587\u4ef6\uff0c\u4f46\u662f\u66f4\u591a\u7684\u5e94\u7528\u7a0b\u5e8f\u5e76\u4e0d\u4f9d\u8d56\u6587\u4ef6\u7684\u6269\u5c55\u540d\uff0c\u5c31\u50cf<code>file</code>\u547d\u4ee4\u5728\u8bc6\u522b\u6587\u4ef6\u65f6\u5e76\u4e0d\u662f\u4f9d\u636e\u6269\u5c55\u540d\u6765\u5224\u5b9a\u6587\u4ef6\u7684\u7c7b\u578b\u3002</li> <li>\u9690\u85cf\u6587\u4ef6\uff1a\u4ee5\u70b9\u5f00\u5934\u7684\u6587\u4ef6\u5728Linux\u7cfb\u7edf\u4e2d\u662f\u9690\u85cf\u6587\u4ef6\uff08\u4e0d\u53ef\u89c1\u6587\u4ef6\uff09\u3002</li> </ol>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_15","title":"\u76ee\u5f55\u7ed3\u6784","text":"<ol> <li>/bin - \u57fa\u672c\u547d\u4ee4\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002</li> <li>/boot - \u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u7684\u9759\u6001\u6587\u4ef6\u3002</li> <li>/dev - \u8bbe\u5907\u6587\u4ef6\u3002</li> <li>/etc - \u914d\u7f6e\u6587\u4ef6\u3002</li> <li>/home - \u666e\u901a\u7528\u6237\u4e3b\u76ee\u5f55\u7684\u7236\u76ee\u5f55\u3002</li> <li>/lib - \u5171\u4eab\u5e93\u6587\u4ef6\u3002</li> <li>/lib64 - \u5171\u4eab64\u4f4d\u5e93\u6587\u4ef6\u3002</li> <li>/lost+found - \u5b58\u653e\u672a\u94fe\u63a5\u6587\u4ef6\u3002</li> <li>/media - \u81ea\u52a8\u8bc6\u522b\u8bbe\u5907\u7684\u6302\u8f7d\u76ee\u5f55\u3002</li> <li>/mnt - \u4e34\u65f6\u6302\u8f7d\u6587\u4ef6\u7cfb\u7edf\u7684\u6302\u8f7d\u70b9\u3002</li> <li>/opt - \u53ef\u9009\u63d2\u4ef6\u8f6f\u4ef6\u5305\u5b89\u88c5\u4f4d\u7f6e\u3002</li> <li>/proc -  \u5185\u6838\u548c\u8fdb\u7a0b\u4fe1\u606f\u3002</li> <li>/root - \u8d85\u7ea7\u7ba1\u7406\u5458\u7528\u6237\u4e3b\u76ee\u5f55\u3002</li> <li>/run - \u5b58\u653e\u7cfb\u7edf\u8fd0\u884c\u65f6\u9700\u8981\u7684\u4e1c\u897f\u3002</li> <li>/sbin - \u8d85\u7ea7\u7528\u6237\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002</li> <li>/sys - \u8bbe\u5907\u7684\u4f2a\u6587\u4ef6\u7cfb\u7edf\u3002</li> <li>/tmp - \u4e34\u65f6\u6587\u4ef6\u5939\u3002</li> <li>/usr - \u7528\u6237\u5e94\u7528\u76ee\u5f55\u3002</li> <li>/var - \u53d8\u91cf\u6570\u636e\u76ee\u5f55\u3002</li> </ol>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_16","title":"\u8bbf\u95ee\u6743\u9650","text":"<ol> <li> <p>chmod - \u6539\u53d8\u6587\u4ef6\u6a21\u5f0f\u6bd4\u7279\u3002</p> <pre><code>[root ~]# ls -l\n...\n-rw-r--r--  1 root       root 211878 Jun 19 16:06 sohu.html\n...\n[root ~]# chmod g+w,o+w sohu.html\n[root ~]# ls -l\n...\n-rw-rw-rw-  1 root       root 211878 Jun 19 16:06 sohu.html\n...\n[root ~]# chmod 644 sohu.html\n[root ~]# ls -l\n...\n-rw-r--r--  1 root       root 211878 Jun 19 16:06 sohu.html\n...\n</code></pre> <p>\u8bf4\u660e\uff1a\u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\uff0c\u7528<code>chmod</code>\u6539\u53d8\u6587\u4ef6\u6a21\u5f0f\u6bd4\u7279\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u4e00\u79cd\u662f\u5b57\u7b26\u8bbe\u5b9a\u6cd5\uff0c\u53e6\u4e00\u79cd\u662f\u6570\u5b57\u8bbe\u5b9a\u6cd5\u3002\u9664\u4e86<code>chmod</code>\u4e4b\u5916\uff0c\u53ef\u4ee5\u901a\u8fc7<code>umask</code>\u6765\u8bbe\u5b9a\u54ea\u4e9b\u6743\u9650\u5c06\u5728\u65b0\u6587\u4ef6\u7684\u9ed8\u8ba4\u6743\u9650\u4e2d\u88ab\u5220\u9664\u3002</p> <p>\u957f\u683c\u5f0f\u67e5\u770b\u76ee\u5f55\u6216\u6587\u4ef6\u65f6\u663e\u793a\u7ed3\u679c\u53ca\u5176\u5bf9\u5e94\u6743\u9650\u7684\u6570\u503c\u5982\u4e0b\u8868\u6240\u793a\u3002</p> <p></p> </li> <li> <p>chown - \u6539\u53d8\u6587\u4ef6\u6240\u6709\u8005\u3002</p> <pre><code>[root ~]# ls -l\n...\n-rw-r--r--  1 root root     54 Jun 20 10:06 readme.txt\n...\n[root ~]# chown hellokitty readme.txt\n[root ~]# ls -l\n...\n-rw-r--r--  1 hellokitty root     54 Jun 20 10:06 readme.txt\n...\n</code></pre> </li> <li> <p>chgrp - \u6539\u53d8\u7528\u6237\u7ec4\u3002</p> </li> </ol>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_17","title":"\u78c1\u76d8\u7ba1\u7406","text":"<ol> <li> <p>\u5217\u51fa\u6587\u4ef6\u7cfb\u7edf\u7684\u78c1\u76d8\u4f7f\u7528\u72b6\u51b5 - df\u3002</p> <pre><code>[root ~]# df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vda1        40G  5.0G   33G  14% /\ndevtmpfs        486M     0  486M   0% /dev\ntmpfs           497M     0  497M   0% /dev/shm\ntmpfs           497M  356K  496M   1% /run\ntmpfs           497M     0  497M   0% /sys/fs/cgroup\ntmpfs           100M     0  100M   0% /run/user/0\n</code></pre> </li> <li> <p>\u78c1\u76d8\u5206\u533a\u8868\u64cd\u4f5c - fdisk\u3002</p> <pre><code>[root ~]# fdisk -l\nDisk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x000a42f4\n   Device Boot      Start         End      Blocks   Id  System\n/dev/vda1   *        2048    83884031    41940992   83  Linux\nDisk /dev/vdb: 21.5 GB, 21474836480 bytes, 41943040 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\n</code></pre> </li> <li> <p>\u78c1\u76d8\u5206\u533a\u5de5\u5177 - parted\u3002</p> </li> <li> <p>\u683c\u5f0f\u5316\u6587\u4ef6\u7cfb\u7edf - mkfs\u3002</p> <pre><code>[root ~]# mkfs -t ext4 -v /dev/sdb\n</code></pre> <ul> <li><code>-t</code> - \u6307\u5b9a\u6587\u4ef6\u7cfb\u7edf\u7684\u7c7b\u578b\u3002</li> <li><code>-c</code> - \u521b\u5efa\u6587\u4ef6\u7cfb\u7edf\u65f6\u68c0\u67e5\u78c1\u76d8\u635f\u574f\u60c5\u51b5\u3002</li> <li><code>-v</code> - \u663e\u793a\u8be6\u7ec6\u4fe1\u606f\u3002</li> </ul> </li> <li> <p>\u6587\u4ef6\u7cfb\u7edf\u68c0\u67e5 - fsck\u3002</p> </li> <li> <p>\u8f6c\u6362\u6216\u62f7\u8d1d\u6587\u4ef6 - dd\u3002</p> </li> <li> <p>\u6302\u8f7d/\u5378\u8f7d - mount / umount\u3002</p> </li> <li> <p>\u521b\u5efa/\u6fc0\u6d3b/\u5173\u95ed\u4ea4\u6362\u5206\u533a - mkswap / swapon / swapoff\u3002</p> </li> </ol> <p>\u8bf4\u660e\uff1a\u6267\u884c\u4e0a\u9762\u8fd9\u4e9b\u547d\u4ee4\u4f1a\u5e26\u6709\u4e00\u5b9a\u7684\u98ce\u9669\uff0c\u5982\u679c\u4e0d\u6e05\u695a\u8fd9\u4e9b\u547d\u4ee4\u7684\u7528\u6cd5\uff0c\u6700\u597d\u4e0d\u7528\u968f\u610f\u4f7f\u7528\uff0c\u5728\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6700\u597d\u5bf9\u7167\u53c2\u8003\u8d44\u6599\u8fdb\u884c\u64cd\u4f5c\uff0c\u5e76\u5728\u64cd\u4f5c\u524d\u786e\u8ba4\u662f\u5426\u8981\u8fd9\u4e48\u505a\u3002</p>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#-vim","title":"\u7f16\u8f91\u5668 - vim","text":"<ol> <li>\u542f\u52a8vim\u3002\u53ef\u4ee5\u901a\u8fc7<code>vi</code>\u6216<code>vim</code>\u547d\u4ee4\u6765\u542f\u52a8vim\uff0c\u542f\u52a8\u65f6\u53ef\u4ee5\u6307\u5b9a\u6587\u4ef6\u540d\u6765\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u6587\u4ef6\u540d\uff0c\u4e5f\u53ef\u4ee5\u5728\u4fdd\u5b58\u7684\u65f6\u5019\u6307\u5b9a\u6587\u4ef6\u540d\u3002</li> </ol> <pre><code>[root ~]# vim guess.py\n</code></pre> <ol> <li> <p>\u547d\u4ee4\u6a21\u5f0f\u3001\u7f16\u8f91\u6a21\u5f0f\u548c\u672b\u884c\u6a21\u5f0f\uff1a\u542f\u52a8vim\u8fdb\u5165\u7684\u662f\u547d\u4ee4\u6a21\u5f0f\uff08\u4e5f\u79f0\u4e3aNormal\u6a21\u5f0f\uff09\uff0c\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u8f93\u5165\u82f1\u6587\u5b57\u6bcd<code>i</code>\u4f1a\u8fdb\u5165\u7f16\u8f91\u6a21\u5f0f\uff08Insert\u6a21\u5f0f\uff09\uff0c\u5c4f\u5e55\u4e0b\u65b9\u51fa\u73b0<code>-- INSERT --</code>\u63d0\u793a\uff1b\u5728\u7f16\u8f91\u6a21\u5f0f\u4e0b\u6309\u4e0b<code>Esc</code>\u4f1a\u56de\u5230\u547d\u4ee4\u6a21\u5f0f\uff0c\u6b64\u65f6\u5982\u679c\u8f93\u5165\u82f1\u6587<code>:</code>\u4f1a\u8fdb\u5165\u672b\u884c\u6a21\u5f0f\uff0c\u5728\u672b\u884c\u6a21\u5f0f\u4e0b\u8f93\u5165<code>q!</code>\u53ef\u4ee5\u5728\u4e0d\u4fdd\u5b58\u5f53\u524d\u5de5\u4f5c\u7684\u60c5\u51b5\u4e0b\u5f3a\u884c\u9000\u51favim\uff1b\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u8f93\u5165<code>v</code>\u4f1a\u8fdb\u5165\u53ef\u89c6\u6a21\u5f0f\uff08Visual\u6a21\u5f0f\uff09\uff0c\u53ef\u4ee5\u7528\u5149\u6807\u9009\u62e9\u4e00\u4e2a\u533a\u57df\u518d\u5b8c\u6210\u5bf9\u5e94\u7684\u64cd\u4f5c\u3002</p> </li> <li> <p>\u4fdd\u5b58\u548c\u9000\u51favim\uff1a\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u8f93\u5165<code>:</code> \u8fdb\u5165\u672b\u884c\u6a21\u5f0f\uff0c\u8f93\u5165<code>wq</code>\u53ef\u4ee5\u5b9e\u73b0\u4fdd\u5b58\u9000\u51fa\uff1b\u5982\u679c\u60f3\u653e\u5f03\u7f16\u8f91\u7684\u5185\u5bb9\u8f93\u5165<code>q!</code>\u5f3a\u884c\u9000\u51fa\uff0c\u8fd9\u4e00\u70b9\u521a\u624d\u5df2\u7ecf\u63d0\u5230\u8fc7\u4e86\uff1b\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8f93\u5165<code>ZZ</code>\u5b9e\u73b0\u4fdd\u5b58\u9000\u51fa\u3002\u5982\u679c\u53ea\u60f3\u4fdd\u5b58\u6587\u4ef6\u4e0d\u9000\u51fa\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u672b\u884c\u6a21\u5f0f\u4e0b\u8f93\u5165<code>w</code>\uff1b\u53ef\u4ee5\u5728<code>w</code>\u540e\u9762\u8f93\u5165\u7a7a\u683c\u518d\u6307\u5b9a\u8981\u4fdd\u5b58\u7684\u6587\u4ef6\u540d\u3002</p> </li> <li> <p>\u5149\u6807\u64cd\u4f5c\u3002</p> <ul> <li>\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u53ef\u4ee5\u901a\u8fc7<code>h</code>\u3001<code>j</code>\u3001<code>k</code>\u3001<code>l</code>\u6765\u63a7\u5236\u5149\u6807\u5411\u5de6\u3001\u4e0b\u3001\u4e0a\u3001\u53f3\u7684\u65b9\u5411\u79fb\u52a8\uff0c\u53ef\u4ee5\u5728\u5b57\u6bcd\u524d\u8f93\u5165\u6570\u5b57\u6765\u8868\u793a\u79fb\u52a8\u7684\u8ddd\u79bb\uff0c\u4f8b\u5982\uff1a<code>10h</code>\u8868\u793a\u5411\u5de6\u79fb\u52a810\u4e2a\u5b57\u7b26\u3002</li> <li>\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u53ef\u4ee5\u901a\u8fc7<code>Ctrl+y</code>\u548c<code>Ctrl+e</code>\u6765\u5b9e\u73b0\u5411\u4e0a\u3001\u5411\u4e0b\u6eda\u52a8\u4e00\u884c\u6587\u672c\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u901a\u8fc7<code>Ctrl+f</code>\u548c<code>Ctrl+b</code>\u6765\u5b9e\u73b0\u5411\u524d\u548c\u5411\u540e\u7ffb\u9875\u7684\u64cd\u4f5c\u3002</li> <li>\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u53ef\u4ee5\u901a\u8fc7\u8f93\u5165\u82f1\u6587\u5b57\u6bcd<code>G</code>\u5c06\u5149\u6807\u79fb\u5230\u6587\u4ef6\u7684\u672b\u5c3e\uff0c\u53ef\u4ee5\u901a\u8fc7<code>gg</code>\u5c06\u5149\u6807\u79fb\u5230\u6587\u4ef6\u7684\u5f00\u59cb\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728<code>G</code>\u524d\u8f93\u5165\u6570\u5b57\u6765\u5c06\u5149\u6807\u79fb\u52a8\u5230\u6307\u5b9a\u7684\u884c\u3002</li> </ul> </li> <li> <p>\u6587\u672c\u64cd\u4f5c\u3002</p> <ul> <li>\u5220\u9664\uff1a\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u53ef\u4ee5\u7528<code>dd</code>\u6765\u5220\u9664\u6574\u884c\uff1b\u53ef\u4ee5\u5728<code>dd</code>\u524d\u52a0\u6570\u5b57\u6765\u6307\u5b9a\u5220\u9664\u7684\u884c\u6570\uff1b\u53ef\u4ee5\u7528<code>d$</code>\u6765\u5b9e\u73b0\u5220\u9664\u4ece\u5149\u6807\u5904\u5220\u5230\u884c\u5c3e\u7684\u64cd\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7<code>d0</code>\u6765\u5b9e\u73b0\u4ece\u5149\u6807\u5904\u5220\u5230\u884c\u9996\u7684\u64cd\u4f5c\uff1b\u5982\u679c\u60f3\u5220\u9664\u4e00\u4e2a\u5355\u8bcd\uff0c\u53ef\u4ee5\u4f7f\u7528<code>dw</code>\uff1b\u5982\u679c\u8981\u5220\u9664\u5168\u6587\uff0c\u53ef\u4ee5\u5728\u8f93\u5165<code>:%d</code>\uff08\u5176\u4e2d<code>:</code>\u7528\u6765\u4ece\u547d\u4ee4\u6a21\u5f0f\u8fdb\u5165\u672b\u884c\u6a21\u5f0f\uff09\u3002</li> <li>\u590d\u5236\u548c\u7c98\u8d34\uff1a\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u53ef\u4ee5\u7528<code>yy</code>\u6765\u590d\u5236\u6574\u884c\uff1b\u53ef\u4ee5\u5728<code>yy</code>\u524d\u52a0\u6570\u5b57\u6765\u6307\u5b9a\u590d\u5236\u7684\u884c\u6570\uff1b\u53ef\u4ee5\u901a\u8fc7<code>p</code>\u5c06\u590d\u5236\u7684\u5185\u5bb9\u7c98\u8d34\u5230\u5149\u6807\u6240\u5728\u7684\u5730\u65b9\u3002</li> <li>\u64a4\u9500\u548c\u6062\u590d\uff1a\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u8f93\u5165<code>u</code>\u53ef\u4ee5\u64a4\u9500\u4e4b\u524d\u7684\u64cd\u4f5c\uff1b\u901a\u8fc7<code>Ctrl+r</code>\u53ef\u4ee5\u6062\u590d\u88ab\u64a4\u9500\u7684\u64cd\u4f5c\u3002</li> <li>\u5bf9\u5185\u5bb9\u8fdb\u884c\u6392\u5e8f\uff1a\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u8f93\u5165<code>%!sort</code>\u3002</li> </ul> </li> <li> <p>\u67e5\u627e\u548c\u66ff\u6362\u3002</p> <ul> <li>\u67e5\u627e\u64cd\u4f5c\u9700\u8981\u8f93\u5165<code>/</code>\u8fdb\u5165\u672b\u884c\u6a21\u5f0f\u5e76\u63d0\u4f9b\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5339\u914d\u4e0e\u4e4b\u5bf9\u5e94\u7684\u5185\u5bb9\uff0c\u4f8b\u5982\uff1a<code>/doc.*\\.</code>\uff0c\u8f93\u5165<code>n</code>\u6765\u5411\u524d\u641c\u7d22\uff0c\u4e5f\u53ef\u4ee5\u8f93\u5165<code>N</code>\u6765\u5411\u540e\u641c\u7d22\u3002</li> <li>\u66ff\u6362\u64cd\u4f5c\u9700\u8981\u8f93\u5165<code>:</code>\u8fdb\u5165\u672b\u884c\u6a21\u5f0f\u5e76\u6307\u5b9a\u641c\u7d22\u7684\u8303\u56f4\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u4ee5\u53ca\u66ff\u6362\u540e\u7684\u5185\u5bb9\u548c\u5339\u914d\u9009\u9879\uff0c\u4f8b\u5982\uff1a<code>:1,$s/doc.*/hello/gice</code>\uff0c\u5176\u4e2d\uff1a<ul> <li><code>g</code> - global\uff1a\u5168\u5c40\u5339\u914d\u3002</li> <li><code>i</code> - ignore case\uff1a\u5ffd\u7565\u5927\u5c0f\u5199\u5339\u914d\u3002</li> <li><code>c</code> - confirm\uff1a\u66ff\u6362\u65f6\u9700\u8981\u786e\u8ba4\u3002</li> <li><code>e</code> - error\uff1a\u5ffd\u7565\u9519\u8bef\u3002</li> </ul> </li> </ul> </li> <li> <p>\u53c2\u6570\u8bbe\u5b9a\uff1a\u5728\u8f93\u5165<code>:</code>\u8fdb\u5165\u672b\u884c\u6a21\u5f0f\u540e\u53ef\u4ee5\u5bf9vim\u8fdb\u884c\u8bbe\u5b9a\u3002</p> <ul> <li> <p>\u8bbe\u7f6eTab\u952e\u7684\u7a7a\u683c\u6570\uff1a<code>set ts=4</code></p> </li> <li> <p>\u8bbe\u7f6e\u663e\u793a/\u4e0d\u663e\u793a\u884c\u53f7\uff1a<code>set nu</code> / <code>set nonu</code></p> </li> <li> <p>\u8bbe\u7f6e\u542f\u7528/\u5173\u95ed\u9ad8\u4eae\u8bed\u6cd5\uff1a<code>syntax on</code> / <code>syntax off</code></p> </li> <li> <p>\u8bbe\u7f6e\u663e\u793a\u6807\u5c3a\uff08\u5149\u6807\u6240\u5728\u7684\u884c\u548c\u5217\uff09\uff1a <code>set ruler</code></p> </li> <li> <p>\u8bbe\u7f6e\u542f\u7528/\u5173\u95ed\u641c\u7d22\u7ed3\u679c\u9ad8\u4eae\uff1a<code>set hls</code> / <code>set nohls</code></p> </li> </ul> <p>\u8bf4\u660e\uff1a\u5982\u679c\u5e0c\u671b\u4e0a\u9762\u7684\u8fd9\u4e9b\u8bbe\u5b9a\u5728\u6bcf\u6b21\u542f\u52a8vim\u65f6\u90fd\u80fd\u81ea\u52a8\u751f\u6548\uff0c\u9700\u8981\u5c06\u8fd9\u4e9b\u8bbe\u5b9a\u5199\u5230\u7528\u6237\u4e3b\u76ee\u5f55\u4e0b\u7684.vimrc\u6587\u4ef6\u4e2d\u3002</p> </li> <li> <p>\u9ad8\u7ea7\u6280\u5de7</p> </li> <li> <p>\u6bd4\u8f83\u591a\u4e2a\u6587\u4ef6\u3002</p> <p><pre><code>[root ~]# vim -d foo.txt bar.txt\n</code></pre> </p> </li> <li> <p>\u6253\u5f00\u591a\u4e2a\u6587\u4ef6\u3002</p> <pre><code>[root ~]# vim foo.txt bar.txt hello.txt\n</code></pre> <p>\u542f\u52a8vim\u540e\u53ea\u6709\u4e00\u4e2a\u7a97\u53e3\u663e\u793a\u7684\u662ffoo.txt\uff0c\u53ef\u4ee5\u5728\u672b\u884c\u6a21\u5f0f\u4e2d\u8f93\u5165<code>ls</code>\u67e5\u770b\u5230\u6253\u5f00\u7684\u4e09\u4e2a\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u5728\u672b\u884c\u6a21\u5f0f\u4e2d\u8f93\u5165<code>b &lt;num&gt;</code>\u6765\u663e\u793a\u53e6\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f8b\u5982\u53ef\u4ee5\u7528<code>:b 2</code>\u5c06bar.txt\u663e\u793a\u51fa\u6765\uff0c\u53ef\u4ee5\u7528<code>:b 3</code>\u5c06hello.txt\u663e\u793a\u51fa\u6765\u3002</p> </li> <li> <p>\u62c6\u5206\u548c\u5207\u6362\u7a97\u53e3\u3002</p> <p>\u53ef\u4ee5\u5728\u672b\u884c\u6a21\u5f0f\u4e2d\u8f93\u5165<code>sp</code>\u6216<code>vs</code>\u6765\u5b9e\u73b0\u5bf9\u7a97\u53e3\u7684\u6c34\u5e73\u6216\u5782\u76f4\u62c6\u5206\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u540c\u65f6\u6253\u5f00\u591a\u4e2a\u7f16\u8f91\u7a97\u53e3\uff0c\u901a\u8fc7\u6309\u4e24\u6b21<code>Ctrl+w</code>\u5c31\u53ef\u4ee5\u5b9e\u73b0\u7f16\u8f91\u7a97\u53e3\u7684\u5207\u6362\uff0c\u5728\u4e00\u4e2a\u7a97\u53e3\u4e2d\u6267\u884c\u9000\u51fa\u64cd\u4f5c\u53ea\u4f1a\u5173\u95ed\u5bf9\u5e94\u7684\u7a97\u53e3\uff0c\u5176\u4ed6\u7684\u7a97\u53e3\u7ee7\u7eed\u4fdd\u7559\u3002</p> <p></p> </li> <li> <p>\u6620\u5c04\u5feb\u6377\u952e\uff1a\u5728vim\u4e0b\u53ef\u4ee5\u5c06\u4e00\u4e9b\u5e38\u7528\u64cd\u4f5c\u6620\u5c04\u4e3a\u5feb\u6377\u952e\u6765\u63d0\u5347\u5de5\u4f5c\u6548\u7387\u3002</p> <ul> <li>\u4f8b\u5b501\uff1a\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u8f93\u5165<code>F4</code>\u6267\u884c\u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\u5220\u966410000\u884c\u4ee3\u7801\u7684\u64cd\u4f5c\u3002</li> </ul> <p><code>:map &lt;F4&gt; gg10000dd</code>\u3002</p> <p>\u4f8b\u5b502\uff1a\u5728\u7f16\u8f91\u6a21\u5f0f\u4e0b\u8f93\u5165<code>__main</code>\u76f4\u63a5\u8865\u5168\u4e3a<code>if __name__ == '__main__':</code>\u3002</p> <p><code>:inoremap __main if __name__ == '__main__':</code></p> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u4f8b\u5b502\u7684<code>inoremap</code>\u4e2d\u7684<code>i</code>\u8868\u793a\u6620\u5c04\u7684\u952e\u5728\u7f16\u8f91\u6a21\u5f0f\u4f7f\u7528\uff0c <code>nore</code>\u8868\u793a\u4e0d\u8981\u9012\u5f52\uff0c\u8fd9\u4e00\u70b9\u975e\u5e38\u91cd\u8981\uff0c\u5426\u5219\u5982\u679c\u952e\u5bf9\u5e94\u7684\u5185\u5bb9\u4e2d\u53c8\u51fa\u73b0\u952e\u672c\u8eab\uff0c\u5c31\u4f1a\u5f15\u53d1\u9012\u5f52\uff08\u76f8\u5f53\u4e8e\u8fdb\u5165\u4e86\u6b7b\u5faa\u73af\uff09\u3002\u5982\u679c\u5e0c\u671b\u6620\u5c04\u7684\u5feb\u6377\u952e\u6bcf\u6b21\u542f\u52a8vim\u65f6\u90fd\u80fd\u751f\u6548\uff0c\u9700\u8981\u5c06\u6620\u5c04\u5199\u5230\u7528\u6237\u4e3b\u76ee\u5f55\u4e0b\u7684.vimrc\u6587\u4ef6\u4e2d\u3002</p> </li> <li> <p>\u5f55\u5236\u5b8f\u3002</p> <ul> <li> <p>\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u8f93\u5165<code>qa</code>\u5f00\u59cb\u5f55\u5236\u5b8f\uff08\u5176\u4e2d<code>a</code>\u662f\u5bc4\u5b58\u5668\u7684\u540d\u5b57\uff0c\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u82f1\u6587\u5b57\u6bcd\u62160-9\u7684\u6570\u5b57\uff09\u3002</p> </li> <li> <p>\u6267\u884c\u4f60\u7684\u64cd\u4f5c\uff08\u5149\u6807\u64cd\u4f5c\u3001\u7f16\u8f91\u64cd\u4f5c\u7b49\uff09\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u4f1a\u88ab\u5f55\u5236\u4e0b\u6765\u3002</p> </li> <li> <p>\u5982\u679c\u5f55\u5236\u7684\u64cd\u4f5c\u5df2\u7ecf\u5b8c\u6210\u4e86\uff0c\u6309<code>q</code>\u7ed3\u675f\u5f55\u5236\u3002</p> </li> <li> <p>\u901a\u8fc7<code>@a</code>\uff08<code>a</code>\u662f\u521a\u624d\u4f7f\u7528\u7684\u5bc4\u5b58\u5668\u7684\u540d\u5b57\uff09\u64ad\u653e\u5b8f\uff0c\u5982\u679c\u8981\u591a\u6b21\u6267\u884c\u5b8f\u53ef\u4ee5\u5728\u524d\u9762\u52a0\u6570\u5b57\uff0c\u4f8b\u5982<code>100@a</code>\u8868\u793a\u5c06\u5b8f\u64ad\u653e100\u6b21\u3002</p> </li> <li> <p>\u53ef\u4ee5\u8bd5\u4e00\u8bd5\u4e0b\u9762\u7684\u4f8b\u5b50\u6765\u4f53\u9a8c\u5f55\u5236\u5b8f\u7684\u64cd\u4f5c\uff0c\u8be5\u4f8b\u5b50\u6765\u6e90\u4e8eHarttle Land\u7f51\u7ad9\uff0c\u8be5\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u4e86\u5f88\u591a\u5173\u4e8evim\u7684\u4f7f\u7528\u6280\u5de7\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0b\u3002</p> </li> </ul> <p></p> </li> </ol>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_18","title":"\u8f6f\u4ef6\u5b89\u88c5\u548c\u914d\u7f6e","text":""},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_19","title":"\u4f7f\u7528\u5305\u7ba1\u7406\u5de5\u5177","text":"<ol> <li>yum - Yellowdog Updater Modified\u3002</li> <li><code>yum search</code>\uff1a\u641c\u7d22\u8f6f\u4ef6\u5305\uff0c\u4f8b\u5982<code>yum search nginx</code>\u3002</li> <li><code>yum list installed</code>\uff1a\u5217\u51fa\u5df2\u7ecf\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\uff0c\u4f8b\u5982<code>yum list installed | grep zlib</code>\u3002</li> <li><code>yum install</code>\uff1a\u5b89\u88c5\u8f6f\u4ef6\u5305\uff0c\u4f8b\u5982<code>yum install nginx</code>\u3002</li> <li><code>yum remove</code>\uff1a\u5220\u9664\u8f6f\u4ef6\u5305\uff0c\u4f8b\u5982<code>yum remove nginx</code>\u3002</li> <li><code>yum update</code>\uff1a\u66f4\u65b0\u8f6f\u4ef6\u5305\uff0c\u4f8b\u5982<code>yum update</code>\u53ef\u4ee5\u66f4\u65b0\u6240\u6709\u8f6f\u4ef6\u5305\uff0c\u800c<code>yum update tar</code>\u53ea\u4f1a\u66f4\u65b0tar\u3002</li> <li><code>yum check-update</code>\uff1a\u68c0\u67e5\u6709\u54ea\u4e9b\u53ef\u4ee5\u66f4\u65b0\u7684\u8f6f\u4ef6\u5305\u3002</li> <li><code>yum info</code>\uff1a\u663e\u793a\u8f6f\u4ef6\u5305\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u4f8b\u5982<code>yum info nginx</code>\u3002</li> <li>rpm - Redhat Package Manager\u3002</li> <li>\u5b89\u88c5\u8f6f\u4ef6\u5305\uff1a<code>rpm -ivh &lt;packagename&gt;.rpm</code>\u3002</li> <li>\u79fb\u9664\u8f6f\u4ef6\u5305\uff1a<code>rpm -e &lt;packagename&gt;</code>\u3002</li> <li>\u67e5\u8be2\u8f6f\u4ef6\u5305\uff1a<code>rpm -qa</code>\uff0c\u4f8b\u5982\u53ef\u4ee5\u7528<code>rpm -qa | grep mysql</code>\u6765\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u4e86MySQL\u76f8\u5173\u7684\u8f6f\u4ef6\u5305\u3002</li> </ol> <p>\u4e0b\u9762\u4ee5Nginx\u4e3a\u4f8b\uff0c\u6f14\u793a\u5982\u4f55\u4f7f\u7528yum\u5b89\u88c5\u8f6f\u4ef6\u3002</p> <pre><code>[root ~]# yum -y install nginx\n...\nInstalled:\n  nginx.x86_64 1:1.12.2-2.el7\nDependency Installed:\n  nginx-all-modules.noarch 1:1.12.2-2.el7\n  nginx-mod-http-geoip.x86_64 1:1.12.2-2.el7\n  nginx-mod-http-image-filter.x86_64 1:1.12.2-2.el7\n  nginx-mod-http-perl.x86_64 1:1.12.2-2.el7\n  nginx-mod-http-xslt-filter.x86_64 1:1.12.2-2.el7\n  nginx-mod-mail.x86_64 1:1.12.2-2.el7\n  nginx-mod-stream.x86_64 1:1.12.2-2.el7\nComplete!\n[root ~]# yum info nginx\nLoaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile\nInstalled Packages\nName        : nginx\nArch        : x86_64\nEpoch       : 1\nVersion     : 1.12.2\nRelease     : 2.el7\nSize        : 1.5 M\nRepo        : installed\nFrom repo   : epel\nSummary     : A high performance web server and reverse proxy server\nURL         : http://nginx.org/\nLicense     : BSD\nDescription : Nginx is a web server and a reverse proxy server for HTTP, SMTP, POP3 and\n            : IMAP protocols, with a strong focus on high concurrency, performance and low\n            : memory usage.\n[root ~]# nginx -v\nnginx version: nginx/1.12.2\n</code></pre> <p>\u79fb\u9664Nginx\u3002</p> <pre><code>[root ~]# yum -y remove nginx\n</code></pre> <p>\u4e0b\u9762\u4ee5MySQL\u4e3a\u4f8b\uff0c\u6f14\u793a\u5982\u4f55\u4f7f\u7528rpm\u5b89\u88c5\u8f6f\u4ef6\u3002\u8981\u5b89\u88c5MySQL\u9700\u8981\u5148\u5230MySQL\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d\u5bf9\u5e94\u7684RPM\u6587\u4ef6\uff0c\u5f53\u7136\u8981\u9009\u62e9\u548c\u4f60\u4f7f\u7528\u7684Linux\u7cfb\u7edf\u5bf9\u5e94\u7684\u7248\u672c\u3002MySQL\u73b0\u5728\u662fOracle\u516c\u53f8\u65d7\u4e0b\u7684\u4ea7\u54c1\uff0c\u5728MySQL\u88ab\u6536\u8d2d\u540e\uff0cMySQL\u7684\u4f5c\u8005\u91cd\u65b0\u5236\u4f5c\u4e86\u4e00\u4e2aMySQL\u7684\u5206\u652fMariaDB\uff0c\u53ef\u4ee5\u901a\u8fc7yum\u8fdb\u884c\u5b89\u88c5\u3002</p> <pre><code>[root mysql]# ls\nmysql-community-client-5.7.22-1.el7.x86_64.rpm\nmysql-community-common-5.7.22-1.el7.x86_64.rpm\nmysql-community-libs-5.7.22-1.el7.x86_64.rpm\nmysql-community-server-5.7.22-1.el7.x86_64.rpm\n[root mysql]# yum -y remove mariadb-libs\n[root mysql]# yum -y install libaio\n[root mysql]#rpm -ivh mysql-community-common-5.7.26-1.el7.x86_64.rpm\n...\n[root mysql]#rpm -ivh mysql-community-libs-5.7.26-1.el7.x86_64.rpm\n...\n[root mysql]#rpm -ivh mysql-community-client-5.7.26-1.el7.x86_64.rpm\n...\n[root mysql]#rpm -ivh mysql-community-server-5.7.26-1.el7.x86_64.rpm\n...\n</code></pre> <p>\u8bf4\u660e\uff1a\u7531\u4e8eMySQL\u548cMariaDB\u7684\u5e95\u5c42\u4f9d\u8d56\u5e93\u662f\u6709\u51b2\u7a81\u7684\uff0c\u6240\u4ee5\u4e0a\u9762\u6211\u4eec\u9996\u5148\u7528<code>yum</code>\u79fb\u9664\u4e86\u540d\u4e3amariadb-libs\u7684\u4f9d\u8d56\u5e93\u5e76\u5b89\u88c5\u4e86\u540d\u4e3alibaio\u652f\u6301\u5f02\u6b65I/O\u64cd\u4f5c\u7684\u4f9d\u8d56\u5e93\u3002\u5173\u4e8eMySQL\u548cMariaDB\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u9605\u8bfb\u7ef4\u57fa\u767e\u79d1\u4e0a\u5173\u4e8eMariaDB\u7684\u4ecb\u7ecd\u3002</p> <p>\u79fb\u9664\u5b89\u88c5\u7684MySQL\u3002</p> <pre><code>[root ~]# rpm -qa | grep mysql | xargs rpm -e\n</code></pre>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_20","title":"\u4e0b\u8f7d\u89e3\u538b\u914d\u7f6e\u73af\u5883\u53d8\u91cf","text":"<p>\u4e0b\u9762\u4ee5\u5b89\u88c5MongoDB\u4e3a\u4f8b\uff0c\u6f14\u793a\u8fd9\u7c7b\u8f6f\u4ef6\u5e94\u8be5\u5982\u4f55\u5b89\u88c5\u3002</p> <pre><code>[root ~]# wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel70-3.6.5.tgz\n--2018-06-21 18:32:53--  https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel70-3.6.5.tgz\nResolving fastdl.mongodb.org (fastdl.mongodb.org)... 52.85.83.16, 52.85.83.228, 52.85.83.186, ...\nConnecting to fastdl.mongodb.org (fastdl.mongodb.org)|52.85.83.16|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 100564462 (96M) [application/x-gzip]\nSaving to: \u2018mongodb-linux-x86_64-rhel70-3.6.5.tgz\u2019\n100%[==================================================&gt;] 100,564,462  630KB/s   in 2m 9s\n2018-06-21 18:35:04 (760 KB/s) - \u2018mongodb-linux-x86_64-rhel70-3.6.5.tgz\u2019 saved [100564462/100564462]\n[root ~]# gunzip mongodb-linux-x86_64-rhel70-3.6.5.tgz\n[root ~]# tar -xvf mongodb-linux-x86_64-rhel70-3.6.5.tar\nmongodb-linux-x86_64-rhel70-3.6.5/README\nmongodb-linux-x86_64-rhel70-3.6.5/THIRD-PARTY-NOTICES\nmongodb-linux-x86_64-rhel70-3.6.5/MPL-2\nmongodb-linux-x86_64-rhel70-3.6.5/GNU-AGPL-3.0\nmongodb-linux-x86_64-rhel70-3.6.5/bin/mongodump\nmongodb-linux-x86_64-rhel70-3.6.5/bin/mongorestore\nmongodb-linux-x86_64-rhel70-3.6.5/bin/mongoexport\nmongodb-linux-x86_64-rhel70-3.6.5/bin/mongoimport\nmongodb-linux-x86_64-rhel70-3.6.5/bin/mongostat\nmongodb-linux-x86_64-rhel70-3.6.5/bin/mongotop\nmongodb-linux-x86_64-rhel70-3.6.5/bin/bsondump\nmongodb-linux-x86_64-rhel70-3.6.5/bin/mongofiles\nmongodb-linux-x86_64-rhel70-3.6.5/bin/mongoreplay\nmongodb-linux-x86_64-rhel70-3.6.5/bin/mongoperf\nmongodb-linux-x86_64-rhel70-3.6.5/bin/mongod\nmongodb-linux-x86_64-rhel70-3.6.5/bin/mongos\nmongodb-linux-x86_64-rhel70-3.6.5/bin/mongo\nmongodb-linux-x86_64-rhel70-3.6.5/bin/install_compass\n[root ~]# vim .bash_profile\n...\nPATH=$PATH:$HOME/bin:$HOME/mongodb-linux-x86_64-rhel70-3.6.5/bin\nexport PATH\n...\n[root ~]# source .bash_profile\n[root ~]# mongod --version\ndb version v3.6.5\ngit version: a20ecd3e3a174162052ff99913bc2ca9a839d618\nOpenSSL version: OpenSSL 1.0.1e-fips 11 Feb 2013\nallocator: tcmalloc\nmodules: none\nbuild environment:\n    distmod: rhel70\n    distarch: x86_64\n    target_arch: x86_64\n[root ~]# mongo --version\nMongoDB shell version v3.6.5\ngit version: a20ecd3e3a174162052ff99913bc2ca9a839d618\nOpenSSL version: OpenSSL 1.0.1e-fips 11 Feb 2013\nallocator: tcmalloc\nmodules: none\nbuild environment:\n    distmod: rhel70\n    distarch: x86_64\n    target_arch: x86_64\n</code></pre> <p>\u8bf4\u660e\uff1a\u5f53\u7136\u4e5f\u53ef\u4ee5\u901a\u8fc7yum\u6765\u5b89\u88c5MongoDB\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u7167\u5b98\u65b9\u7f51\u7ad9\u4e0a\u7ed9\u51fa\u7684\u8bf4\u660e\u3002</p>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_21","title":"\u6e90\u4ee3\u7801\u6784\u5efa\u5b89\u88c5","text":"<ol> <li>\u5b89\u88c5Python 3.6\u3002</li> </ol> <pre><code>[root ~]# yum install gcc\n[root ~]# wget https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tgz\n[root ~]# gunzip Python-3.6.5.tgz\n[root ~]# tar -xvf Python-3.6.5.tar\n[root ~]# cd Python-3.6.5\n[root ~]# ./configure --prefix=/usr/local/python36 --enable-optimizations\n[root ~]# yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel\n[root ~]# make &amp;&amp; make install\n...\n[root ~]# ln -s /usr/local/python36/bin/python3.6 /usr/bin/python3\n[root ~]# python3 --version\nPython 3.6.5\n[root ~]# python3 -m pip install -U pip\n[root ~]# pip3 --version\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u5728\u5b89\u88c5\u597dPython\u4e4b\u540e\u8fd8\u9700\u8981\u6ce8\u518cPATH\u73af\u5883\u53d8\u91cf\uff0c\u5c06Python\u5b89\u88c5\u8def\u5f84\u4e0bbin\u6587\u4ef6\u5939\u7684\u7edd\u5bf9\u8def\u5f84\u6ce8\u518c\u5230PATH\u73af\u5883\u53d8\u91cf\u4e2d\u3002\u6ce8\u518c\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u4fee\u6539\u7528\u6237\u4e3b\u76ee\u5f55\u4e0b\u7684.bash_profile\u6216\u8005/etc\u76ee\u5f55\u4e0b\u7684profile\u6587\u4ef6\uff0c\u4e8c\u8005\u7684\u533a\u522b\u5728\u4e8e\u524d\u8005\u76f8\u5f53\u4e8e\u662f\u7528\u6237\u73af\u5883\u53d8\u91cf\uff0c\u800c\u540e\u8005\u76f8\u5f53\u4e8e\u662f\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u3002</p> <ol> <li>\u5b89\u88c5Redis-3.2.12\u3002</li> </ol> <pre><code>[root ~]# wget http://download.redis.io/releases/redis-3.2.12.tar.gz\n[root ~]# gunzip redis-3.2.12.tar.gz\n[root ~]# tar -xvf redis-3.2.12.tar\n[root ~]# cd redis-3.2.12\n[root ~]# make &amp;&amp; make install\n[root ~]# redis-server --version\nRedis server v=3.2.12 sha=00000000:0 malloc=jemalloc-4.0.3 bits=64 build=5bc5cd3c03d6ceb6\n[root ~]# redis-cli --version\nredis-cli 3.2.12\n</code></pre>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_22","title":"\u914d\u7f6e\u670d\u52a1","text":"<p>\u6211\u4eec\u53ef\u4ee5Linux\u7cfb\u7edf\u4e0b\u5b89\u88c5\u548c\u914d\u7f6e\u5404\u79cd\u670d\u52a1\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u628aLinux\u7cfb\u7edf\u6253\u9020\u6210\u6570\u636e\u5e93\u670d\u52a1\u5668\u3001Web\u670d\u52a1\u5668\u3001\u7f13\u5b58\u670d\u52a1\u5668\u3001\u6587\u4ef6\u670d\u52a1\u5668\u3001\u6d88\u606f\u961f\u5217\u670d\u52a1\u5668\u7b49\u7b49\u3002Linux\u4e0b\u7684\u5927\u591a\u6570\u670d\u52a1\u90fd\u88ab\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u8fdb\u7a0b\uff08\u9a7b\u7559\u5728\u7cfb\u7edf\u540e\u53f0\u8fd0\u884c\uff0c\u4f46\u4e0d\u4f1a\u56e0\u4e3a\u670d\u52a1\u8fd8\u5728\u8fd0\u884c\u800c\u5bfc\u81f4Linux\u65e0\u6cd5\u505c\u6b62\u8fd0\u884c\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u5b89\u88c5\u7684\u670d\u52a1\u901a\u5e38\u540d\u5b57\u540e\u9762\u90fd\u6709\u4e00\u4e2a\u5b57\u6bcd<code>d</code>\uff0c\u5b83\u662f\u82f1\u6587\u5355\u8bcd<code>daemon</code>\u7684\u7f29\u5199\uff0c\u4f8b\u5982\uff1a\u9632\u706b\u5899\u670d\u52a1\u53ebfirewalld\uff0c\u6211\u4eec\u4e4b\u524d\u5b89\u88c5\u7684MySQL\u670d\u52a1\u53ebmysqld\uff0cApache\u670d\u52a1\u5668\u53ebhttpd\u7b49\u3002\u5728\u5b89\u88c5\u597d\u670d\u52a1\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528<code>systemctl</code>\u547d\u4ee4\u6216<code>service</code>\u547d\u4ee4\u6765\u5b8c\u6210\u5bf9\u670d\u52a1\u7684\u542f\u52a8\u3001\u505c\u6b62\u7b49\u64cd\u4f5c\uff0c\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\u6240\u793a\u3002</p> <ol> <li>\u542f\u52a8\u9632\u706b\u5899\u670d\u52a1\u3002</li> </ol> <pre><code>[root ~]# systemctl start firewalld\n</code></pre> <ol> <li>\u7ec8\u6b62\u9632\u706b\u5899\u670d\u52a1\u3002</li> </ol> <pre><code>[root ~]# systemctl stop firewalld\n</code></pre> <ol> <li>\u91cd\u542f\u9632\u706b\u5899\u670d\u52a1\u3002</li> </ol> <pre><code>[root ~]# systemctl restart firewalld\n</code></pre> <ol> <li> <p>\u67e5\u770b\u9632\u706b\u5899\u670d\u52a1\u72b6\u6001\u3002</p> <pre><code>[root ~]# systemctl status firewalld\n</code></pre> </li> <li> <p>\u8bbe\u7f6e/\u7981\u7528\u9632\u706b\u5899\u670d\u52a1\u5f00\u673a\u81ea\u542f\u3002</p> </li> </ol> <pre><code>[root ~]# systemctl enable firewalld\nCreated symlink from /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service to /usr/lib/systemd/system/firewalld.service.\nCreated symlink from /etc/systemd/system/multi-user.target.wants/firewalld.service to /usr/lib/systemd/system/firewalld.service.\n[root ~]# systemctl disable firewalld\nRemoved symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.\nRemoved symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.\n</code></pre>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_23","title":"\u8ba1\u5212\u4efb\u52a1","text":"<ol> <li> <p>\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u6267\u884c\u547d\u4ee4\u3002</p> </li> <li> <p>at - \u5c06\u4efb\u52a1\u6392\u961f\uff0c\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u6267\u884c\u3002</p> </li> <li>atq - \u67e5\u770b\u5f85\u6267\u884c\u7684\u4efb\u52a1\u961f\u5217\u3002</li> <li>atrm - \u4ece\u961f\u5217\u4e2d\u5220\u9664\u5f85\u6267\u884c\u7684\u4efb\u52a1\u3002</li> </ol> <p>\u6307\u5b9a3\u5929\u4ee5\u540e\u4e0b\u53485\u70b9\u8981\u6267\u884c\u7684\u4efb\u52a1\u3002</p> <pre><code>[root ~]# at 5pm+3days\nat&gt; rm -f /root/*.html\nat&gt; &lt;EOT&gt;\njob 9 at Wed Jun  5 17:00:00 2019\n</code></pre> <p>\u67e5\u770b\u5f85\u6267\u884c\u7684\u4efb\u52a1\u961f\u5217\u3002</p> <pre><code>[root ~]# atq\n9       Wed Jun  5 17:00:00 2019 a root\n</code></pre> <p>\u4ece\u961f\u5217\u4e2d\u5220\u9664\u6307\u5b9a\u7684\u4efb\u52a1\u3002</p> <pre><code>[root ~]$ atrm 9\n</code></pre> <ol> <li>\u8ba1\u5212\u4efb\u52a1\u8868 - crontab\u3002</li> </ol> <pre><code>[root ~]# crontab -e\n* * * * * echo \"hello, world!\" &gt;&gt; /root/hello.txt\n59 23 * * * rm -f /root/*.log\n</code></pre> <p>\u8bf4\u660e\uff1a\u8f93\u5165<code>crontab -e</code>\u547d\u4ee4\u4f1a\u6253\u5f00vim\u6765\u7f16\u8f91Cron\u8868\u8fbe\u5f0f\u5e76\u6307\u5b9a\u89e6\u53d1\u7684\u4efb\u52a1\uff0c\u4e0a\u9762\u6211\u4eec\u5b9a\u5236\u4e86\u4e24\u4e2a\u8ba1\u5212\u4efb\u52a1\uff0c\u4e00\u4e2a\u662f\u6bcf\u5206\u949f\u5411/root\u76ee\u5f55\u4e0b\u7684hello.txt\u4e2d\u8ffd\u52a0\u8f93\u51fa<code>hello, world!</code>\uff1b\u53e6\u4e00\u4e2a\u662f\u6bcf\u592923\u65f659\u5206\u6267\u884c\u5220\u9664/root\u76ee\u5f55\u4e0b\u4ee5log\u4e3a\u540e\u7f00\u540d\u7684\u6587\u4ef6\u3002\u5982\u679c\u4e0d\u77e5\u9053Cron\u8868\u8fbe\u5f0f\u5982\u4f55\u4e66\u5199\uff0c\u53ef\u4ee5\u53c2\u7167/etc/crontab\u6587\u4ef6\u4e2d\u7684\u63d0\u793a\uff08\u4e0b\u9762\u4f1a\u8bb2\u5230\uff09\u6216\u8005\u7528\u641c\u7d22\u5f15\u64ce\u627e\u4e00\u4e0b\u201cCron\u8868\u8fbe\u5f0f\u5728\u7ebf\u751f\u6210\u5668\u201d\u6765\u751f\u6210Cron\u8868\u8fbe\u5f0f\u3002</p> <p>\u548ccrontab\u76f8\u5173\u7684\u6587\u4ef6\u5728<code>/etc</code>\u76ee\u5f55\u4e0b\uff0c\u901a\u8fc7\u4fee\u6539<code>/etc</code>\u76ee\u5f55\u4e0b\u7684crontab\u6587\u4ef6\u4e5f\u80fd\u591f\u5b9a\u5236\u8ba1\u5212\u4efb\u52a1\u3002</p> <pre><code>[root ~]# cd /etc\n[root etc]# ls -l | grep cron\n-rw-------.  1 root root      541 Aug  3  2017 anacrontab\ndrwxr-xr-x.  2 root root     4096 Mar 27 11:56 cron.d\ndrwxr-xr-x.  2 root root     4096 Mar 27 11:51 cron.daily\n-rw-------.  1 root root        0 Aug  3  2017 cron.deny\ndrwxr-xr-x.  2 root root     4096 Mar 27 11:50 cron.hourly\ndrwxr-xr-x.  2 root root     4096 Jun 10  2014 cron.monthly\n-rw-r--r--   1 root root      493 Jun 23 15:09 crontab\ndrwxr-xr-x.  2 root root     4096 Jun 10  2014 cron.weekly\n[root etc]# vim crontab\n  1 SHELL=/bin/bash\n  2 PATH=/sbin:/bin:/usr/sbin:/usr/bin\n  3 MAILTO=root\n  4\n  5 # For details see man 4 crontabs\n  6\n  7 # Example of job definition:\n  8 # .---------------- minute (0 - 59)\n  9 # |  .------------- hour (0 - 23)\n 10 # |  |  .---------- day of month (1 - 31)\n 11 # |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...\n 12 # |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat\n 13 # |  |  |  |  |\n 14 # *  *  *  *  * user-name  command to be executed\n</code></pre>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_24","title":"\u7f51\u7edc\u8bbf\u95ee\u548c\u7ba1\u7406","text":"<ol> <li> <p>\u5b89\u5168\u8fdc\u7a0b\u8fde\u63a5 - ssh\u3002</p> <pre><code>[root ~]$ ssh root@120.77.222.217\nThe authenticity of host '120.77.222.217 (120.77.222.217)' can't be established.\nECDSA key fingerprint is SHA256:BhUhykv+FvnIL03I9cLRpWpaCxI91m9n7zBWrcXRa8w.\nECDSA key fingerprint is MD5:cc:85:e9:f0:d7:07:1a:26:41:92:77:6b:7f:a0:92:65.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '120.77.222.217' (ECDSA) to the list of known hosts.\nroot@120.77.222.217's password: \n</code></pre> </li> <li> <p>\u901a\u8fc7\u7f51\u7edc\u83b7\u53d6\u8d44\u6e90 - wget\u3002</p> </li> <li> <p>-b \u540e\u53f0\u4e0b\u8f7d\u6a21\u5f0f</p> </li> <li>-O \u4e0b\u8f7d\u5230\u6307\u5b9a\u7684\u76ee\u5f55</li> <li> <p>-r \u9012\u5f52\u4e0b\u8f7d</p> </li> <li> <p>\u53d1\u9001\u548c\u63a5\u6536\u90ae\u4ef6 - mail\u3002</p> </li> <li> <p>\u7f51\u7edc\u914d\u7f6e\u5de5\u5177\uff08\u65e7\uff09 - ifconfig\u3002</p> </li> </ol> <pre><code>[root ~]# ifconfig eth0\neth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n        inet 172.18.61.250  netmask 255.255.240.0  broadcast 172.18.63.255\n        ether 00:16:3e:02:b6:46  txqueuelen 1000  (Ethernet)\n        RX packets 1067841  bytes 1296732947 (1.2 GiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 409912  bytes 43569163 (41.5 MiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions \n</code></pre> <ol> <li>\u7f51\u7edc\u914d\u7f6e\u5de5\u5177\uff08\u65b0\uff09 - ip\u3002</li> </ol> <pre><code>[root ~]# ip address\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000\n    link/ether 00:16:3e:02:b6:46 brd ff:ff:ff:ff:ff:ff\n    inet 172.18.61.250/20 brd 172.18.63.255 scope global eth0\n       valid_lft forever preferred_lft forever\n</code></pre> <ol> <li>\u7f51\u7edc\u53ef\u8fbe\u6027\u68c0\u67e5 - ping\u3002</li> </ol> <pre><code>[root ~]# ping www.baidu.com -c 3\nPING www.a.shifen.com (220.181.111.188) 56(84) bytes of data.\n64 bytes from 220.181.111.188 (220.181.111.188): icmp_seq=1 ttl=51 time=36.3 ms\n64 bytes from 220.181.111.188 (220.181.111.188): icmp_seq=2 ttl=51 time=36.4 ms\n64 bytes from 220.181.111.188 (220.181.111.188): icmp_seq=3 ttl=51 time=36.4 ms\n--- www.a.shifen.com ping statistics ---\n3 packets transmitted, 3 received, 0% packet loss, time 2002ms\nrtt min/avg/max/mdev = 36.392/36.406/36.427/0.156 ms\n</code></pre> <ol> <li> <p>\u663e\u793a\u6216\u7ba1\u7406\u8def\u7531\u8868 - route\u3002</p> </li> <li> <p>\u67e5\u770b\u7f51\u7edc\u670d\u52a1\u548c\u7aef\u53e3 - netstat / ss\u3002</p> </li> </ol> <pre><code>[root ~]# netstat -nap | grep nginx\n</code></pre> <ol> <li> <p>\u7f51\u7edc\u76d1\u542c\u6293\u5305 - tcpdump\u3002</p> </li> <li> <p>\u5b89\u5168\u6587\u4ef6\u62f7\u8d1d - scp\u3002</p> </li> </ol> <pre><code>[root ~]# scp root@1.2.3.4:/root/guido.jpg hellokitty@4.3.2.1:/home/hellokitty/pic.jpg\n</code></pre> <ol> <li> <p>\u6587\u4ef6\u540c\u6b65\u5de5\u5177 - rsync\u3002</p> <p>\u8bf4\u660e\uff1a\u4f7f\u7528<code>rsync</code>\u53ef\u4ee5\u5b9e\u73b0\u6587\u4ef6\u7684\u81ea\u52a8\u540c\u6b65\uff0c\u8fd9\u4e2a\u5bf9\u4e8e\u6587\u4ef6\u670d\u52a1\u5668\u6765\u8bf4\u76f8\u5f53\u91cd\u8981\u3002\u5173\u4e8e\u8fd9\u4e2a\u547d\u4ee4\u7684\u7528\u6cd5\uff0c\u6211\u4eec\u5728\u540e\u9762\u8bb2\u9879\u76ee\u90e8\u7f72\u7684\u65f6\u5019\u4e3a\u5927\u5bb6\u8be6\u7ec6\u8bf4\u660e\u3002</p> </li> <li> <p>\u5b89\u5168\u6587\u4ef6\u4f20\u8f93 - sftp\u3002</p> <pre><code>[root ~]# sftp root@1.2.3.4\nroot@1.2.3.4's password:\nConnected to 1.2.3.4.\nsftp&gt;\n</code></pre> <ul> <li> <p><code>help</code>\uff1a\u663e\u793a\u5e2e\u52a9\u4fe1\u606f\u3002</p> </li> <li> <p><code>ls</code>/<code>lls</code>\uff1a\u663e\u793a\u8fdc\u7aef/\u672c\u5730\u76ee\u5f55\u5217\u8868\u3002</p> </li> <li> <p><code>cd</code>/<code>lcd</code>\uff1a\u5207\u6362\u8fdc\u7aef/\u672c\u5730\u8def\u5f84\u3002</p> </li> <li> <p><code>mkdir</code>/<code>lmkdir</code>\uff1a\u521b\u5efa\u8fdc\u7aef/\u672c\u5730\u76ee\u5f55\u3002</p> </li> <li> <p><code>pwd</code>/<code>lpwd</code>\uff1a\u663e\u793a\u8fdc\u7aef/\u672c\u5730\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002</p> </li> <li> <p><code>get</code>\uff1a\u4e0b\u8f7d\u6587\u4ef6\u3002</p> </li> <li> <p><code>put</code>\uff1a\u4e0a\u4f20\u6587\u4ef6\u3002</p> </li> <li> <p><code>rm</code>\uff1a\u5220\u9664\u8fdc\u7aef\u6587\u4ef6\u3002</p> </li> <li> <p><code>bye</code>/<code>exit</code>/<code>quit</code>\uff1a\u9000\u51fasftp\u3002</p> </li> </ul> </li> </ol>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_25","title":"\u8fdb\u7a0b\u7ba1\u7406","text":"<ol> <li>\u67e5\u770b\u8fdb\u7a0b - ps\u3002</li> </ol> <pre><code>[root ~]# ps -ef\nUID        PID  PPID  C STIME TTY          TIME CMD\nroot         1     0  0 Jun23 ?        00:00:05 /usr/lib/systemd/systemd --switched-root --system --deserialize 21\nroot         2     0  0 Jun23 ?        00:00:00 [kthreadd]\n...\n[root ~]# ps -ef | grep mysqld\nroot      4943  4581  0 22:45 pts/0    00:00:00 grep --color=auto mysqld\nmysql    25257     1  0 Jun25 ?        00:00:39 /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/mysqld.pid\n</code></pre> <ol> <li> <p>\u663e\u793a\u8fdb\u7a0b\u72b6\u6001\u6811 - pstree\u3002</p> <pre><code>[root ~]# pstree\nsystemd\u2500\u252c\u2500AliYunDun\u2500\u2500\u250018*[{AliYunDun}]\n        \u251c\u2500AliYunDunUpdate\u2500\u2500\u25003*[{AliYunDunUpdate}]\n        \u251c\u25002*[agetty]\n        \u251c\u2500aliyun-service\u2500\u2500\u25002*[{aliyun-service}]\n        \u251c\u2500atd\n        \u251c\u2500auditd\u2500\u2500\u2500{auditd}\n        \u251c\u2500dbus-daemon\n        \u251c\u2500dhclient\n        \u251c\u2500irqbalance\n        \u251c\u2500lvmetad\n        \u251c\u2500mysqld\u2500\u2500\u250028*[{mysqld}]\n        \u251c\u2500nginx\u2500\u2500\u25002*[nginx]\n        \u251c\u2500ntpd\n        \u251c\u2500polkitd\u2500\u2500\u25006*[{polkitd}]\n        \u251c\u2500rsyslogd\u2500\u2500\u25002*[{rsyslogd}]\n        \u251c\u2500sshd\u2500\u2500\u2500sshd\u2500\u2500\u2500bash\u2500\u2500\u2500pstree\n        \u251c\u2500systemd-journal\n        \u251c\u2500systemd-logind\n        \u251c\u2500systemd-udevd\n        \u2514\u2500tuned\u2500\u2500\u25004*[{tuned}]\n</code></pre> </li> <li> <p>\u67e5\u627e\u4e0e\u6307\u5b9a\u6761\u4ef6\u5339\u914d\u7684\u8fdb\u7a0b - pgrep\u3002</p> </li> </ol> <pre><code>[root ~]$ pgrep mysqld\n3584\n</code></pre> <ol> <li>\u901a\u8fc7\u8fdb\u7a0b\u53f7\u7ec8\u6b62\u8fdb\u7a0b - kill\u3002</li> </ol> <pre><code>[root ~]$ kill -l\n 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL       5) SIGTRAP\n 6) SIGABRT      7) SIGBUS       8) SIGFPE       9) SIGKILL     10) SIGUSR1\n11) SIGSEGV     12) SIGUSR2     13) SIGPIPE     14) SIGALRM     15) SIGTERM\n16) SIGSTKFLT   17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP\n21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU     25) SIGXFSZ\n26) SIGVTALRM   27) SIGPROF     28) SIGWINCH    29) SIGIO       30) SIGPWR\n31) SIGSYS      34) SIGRTMIN    35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3\n38) SIGRTMIN+4  39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8\n43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13\n48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12\n53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7\n58) SIGRTMAX-6  59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2\n63) SIGRTMAX-1  64) SIGRTMAX\n[root ~]# kill 1234\n[root ~]# kill -9 1234\n</code></pre> <ol> <li> <p>\u901a\u8fc7\u8fdb\u7a0b\u540d\u7ec8\u6b62\u8fdb\u7a0b - killall / pkill\u3002</p> <p>\u7ed3\u675f\u540d\u4e3amysqld\u7684\u8fdb\u7a0b\u3002</p> <pre><code>[root ~]# pkill mysqld\n</code></pre> <p>\u7ed3\u675fhellokitty\u7528\u6237\u7684\u6240\u6709\u8fdb\u7a0b\u3002</p> <pre><code>[root ~]# pkill -u hellokitty\n</code></pre> <p>\u8bf4\u660e\uff1a\u8fd9\u6837\u7684\u64cd\u4f5c\u4f1a\u8ba9hellokitty\u7528\u6237\u548c\u670d\u52a1\u5668\u65ad\u5f00\u8fde\u63a5\u3002</p> </li> <li> <p>\u5c06\u8fdb\u7a0b\u7f6e\u4e8e\u540e\u53f0\u8fd0\u884c\u3002</p> </li> <li> <p><code>Ctrl+Z</code> - \u5feb\u6377\u952e\uff0c\u7528\u4e8e\u505c\u6b62\u8fdb\u7a0b\u5e76\u7f6e\u4e8e\u540e\u53f0\u3002</p> </li> <li><code>&amp;</code> - \u5c06\u8fdb\u7a0b\u7f6e\u4e8e\u540e\u53f0\u8fd0\u884c\u3002</li> </ol> <pre><code>[root ~]# mongod &amp;\n[root ~]# redis-server\n...\n^Z\n[4]+  Stopped                 redis-server\n</code></pre> <ol> <li>\u67e5\u8be2\u540e\u53f0\u8fdb\u7a0b - jobs\u3002</li> </ol> <pre><code>[root ~]# jobs\n[2]   Running                 mongod &amp;\n[3]-  Stopped                 cat\n[4]+  Stopped                 redis-server\n</code></pre> <ol> <li>\u8ba9\u8fdb\u7a0b\u5728\u540e\u53f0\u7ee7\u7eed\u8fd0\u884c - bg\u3002</li> </ol> <pre><code>[root ~]# bg %4\n[4]+ redis-server &amp;\n[root ~]# jobs\n[2]   Running                 mongod &amp;\n[3]+  Stopped                 cat\n[4]-  Running                 redis-server &amp;\n</code></pre> <ol> <li> <p>\u5c06\u540e\u53f0\u8fdb\u7a0b\u7f6e\u4e8e\u524d\u53f0 - fg\u3002</p> <pre><code>[root ~]# fg %4\nredis-server\n</code></pre> <p>\u8bf4\u660e\uff1a\u7f6e\u4e8e\u524d\u53f0\u7684\u8fdb\u7a0b\u53ef\u4ee5\u4f7f\u7528<code>Ctrl+C</code>\u6765\u7ec8\u6b62\u5b83\u3002</p> </li> <li> <p>\u8c03\u6574\u7a0b\u5e8f/\u8fdb\u7a0b\u8fd0\u884c\u65f6\u4f18\u5148\u7ea7 - nice / renice\u3002</p> </li> <li> <p>\u7528\u6237\u767b\u51fa\u540e\u8fdb\u7a0b\u7ee7\u7eed\u5de5\u4f5c - nohup\u3002</p> <pre><code>[root ~]# nohup ping www.baidu.com &gt; result.txt &amp;\n</code></pre> </li> <li> <p>\u8ddf\u8e2a\u8fdb\u7a0b\u7cfb\u7edf\u8c03\u7528\u60c5\u51b5 - strace\u3002</p> <pre><code>[root ~]# pgrep mysqld\n8803\n[root ~]# strace -c -p 8803\nstrace: Process 8803 attached\n^Cstrace: Process 8803 detached\n% time     seconds  usecs/call     calls    errors syscall\n------ ----------- ----------- --------- --------- ----------------\n 99.18    0.005719        5719         1           restart_syscall\n  0.49    0.000028          28         1           mprotect\n  0.24    0.000014          14         1           clone\n  0.05    0.000003           3         1           mmap\n  0.03    0.000002           2         1           accept\n------ ----------- ----------- --------- --------- ----------------\n100.00    0.005766                     5           total\n</code></pre> <p>\u8bf4\u660e\uff1a\u8fd9\u4e2a\u547d\u4ee4\u7684\u7528\u6cd5\u548c\u53c2\u6570\u90fd\u6bd4\u8f83\u590d\u6742\uff0c\u5efa\u8bae\u5927\u5bb6\u5728\u771f\u6b63\u7528\u5230\u8fd9\u4e2a\u547d\u4ee4\u7684\u65f6\u5019\u518d\u6839\u636e\u5b9e\u9645\u9700\u8981\u8fdb\u884c\u4e86\u89e3\u3002</p> </li> <li> <p>\u67e5\u770b\u5f53\u524d\u8fd0\u884c\u7ea7\u522b - runlevel\u3002</p> <pre><code>[root ~]# runlevel\nN 3\n</code></pre> </li> <li> <p>\u5b9e\u65f6\u76d1\u63a7\u8fdb\u7a0b\u5360\u7528\u8d44\u6e90\u72b6\u51b5 - top\u3002</p> <pre><code>[root ~]# top\ntop - 23:04:23 up 3 days, 14:10,  1 user,  load average: 0.00, 0.01, 0.05\nTasks:  65 total,   1 running,  64 sleeping,   0 stopped,   0 zombie\n%Cpu(s):  0.3 us,  0.3 sy,  0.0 ni, 99.3 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\nKiB Mem :  1016168 total,   191060 free,   324700 used,   500408 buff/cache\nKiB Swap:        0 total,        0 free,        0 used.   530944 avail Mem\n...\n</code></pre> <ul> <li><code>-c</code> - \u663e\u793a\u8fdb\u7a0b\u7684\u6574\u4e2a\u8def\u5f84\u3002</li> <li><code>-d</code> - \u6307\u5b9a\u4e24\u6b21\u5237\u5c4f\u4e4b\u95f4\u7684\u95f4\u9694\u65f6\u95f4\uff08\u79d2\u4e3a\u5355\u4f4d\uff09\u3002</li> <li><code>-i</code> - \u4e0d\u663e\u793a\u95f2\u7f6e\u8fdb\u7a0b\u6216\u50f5\u5c38\u8fdb\u7a0b\u3002</li> <li><code>-p</code> - \u663e\u793a\u6307\u5b9a\u8fdb\u7a0b\u7684\u4fe1\u606f\u3002</li> </ul> </li> </ol>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_26","title":"\u7cfb\u7edf\u8bca\u65ad","text":"<ol> <li> <p>\u7cfb\u7edf\u542f\u52a8\u5f02\u5e38\u8bca\u65ad - dmesg\u3002</p> </li> <li> <p>\u67e5\u770b\u7cfb\u7edf\u6d3b\u52a8\u4fe1\u606f - sar\u3002</p> </li> </ol> <pre><code>[root ~]# sar -u -r 5 10\nLinux 3.10.0-957.10.1.el7.x86_64 (izwz97tbgo9lkabnat2lo8z)      06/02/2019      _x86_64_        (2 CPU)\n\n06:48:30 PM     CPU     %user     %nice   %system   %iowait    %steal     %idle\n06:48:35 PM     all      0.10      0.00      0.10      0.00      0.00     99.80\n\n06:48:30 PM kbmemfree kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty\n06:48:35 PM   1772012   2108392     54.33    102816   1634528    784940     20.23    793328   1164704         0\n</code></pre> <ul> <li><code>-A</code> - \u663e\u793a\u6240\u6709\u8bbe\u5907\uff08CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\uff09\u7684\u8fd0\u884c\u72b6\u51b5\u3002</li> <li><code>-u</code> - \u663e\u793a\u6240\u6709CPU\u7684\u8d1f\u8f7d\u60c5\u51b5\u3002</li> <li><code>-d</code> - \u663e\u793a\u6240\u6709\u78c1\u76d8\u7684\u4f7f\u7528\u60c5\u51b5\u3002</li> <li><code>-r</code> - \u663e\u793a\u5185\u5b58\u7684\u4f7f\u7528\u60c5\u51b5\u3002</li> <li> <p><code>-n</code> - \u663e\u793a\u7f51\u7edc\u8fd0\u884c\u72b6\u6001\u3002</p> </li> <li> <p>\u67e5\u770b\u5185\u5b58\u4f7f\u7528\u60c5\u51b5 - free\u3002</p> </li> </ul> <pre><code>[root ~]# free\n              total        used        free      shared  buff/cache   available\nMem:        1016168      323924      190452         356      501792      531800\nSwap:             0           0           0\n</code></pre> <ol> <li>\u865a\u62df\u5185\u5b58\u7edf\u8ba1 - vmstat\u3002</li> </ol> <pre><code>[root ~]# vmstat\nprocs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----\n r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st\n 2  0      0 204020  79036 667532    0    0     5    18  101   58  1  0 99  0  0\n</code></pre> <ol> <li>CPU\u4fe1\u606f\u7edf\u8ba1 - mpstat\u3002</li> </ol> <pre><code>[root ~]# mpstat\nLinux 3.10.0-957.5.1.el7.x86_64 (iZ8vba0s66jjlfmo601w4xZ)       05/30/2019      _x86_64_        (1 CPU)\n\n01:51:54 AM  CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest  %gnice   %idle\n01:51:54 AM  all    0.71    0.00    0.17    0.04    0.00    0.00    0.00    0.00    0.00   99.07\n</code></pre> <ol> <li>\u67e5\u770b\u8fdb\u7a0b\u4f7f\u7528\u5185\u5b58\u72b6\u51b5 - pmap\u3002</li> </ol> <pre><code>[root ~]# ps\n  PID TTY          TIME CMD\n 4581 pts/0    00:00:00 bash\n 5664 pts/0    00:00:00 ps\n[root ~]# pmap 4581\n4581:   -bash\n0000000000400000    884K r-x-- bash\n00000000006dc000      4K r---- bash\n00000000006dd000     36K rw--- bash\n00000000006e6000     24K rw---   [ anon ]\n0000000001de0000    400K rw---   [ anon ]\n00007f82fe805000     48K r-x-- libnss_files-2.17.so\n00007f82fe811000   2044K ----- libnss_files-2.17.so\n...\n</code></pre> <ol> <li>\u62a5\u544a\u8bbe\u5907CPU\u548cI/O\u7edf\u8ba1\u4fe1\u606f - iostat\u3002</li> </ol> <pre><code>[root ~]# iostat\nLinux 3.10.0-693.11.1.el7.x86_64 (iZwz97tbgo9lkabnat2lo8Z)      06/26/2018      _x86_64_       (1 CPU)\navg-cpu:  %user   %nice %system %iowait  %steal   %idle\n           0.79    0.00    0.20    0.04    0.00   98.97\nDevice:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn\nvda               0.85         6.78        21.32    2106565    6623024\nvdb               0.00         0.01         0.00       2088          0\n</code></pre> <ol> <li>\u663e\u793a\u6240\u6709PCI\u8bbe\u5907 - lspci\u3002</li> </ol> <pre><code>[root ~]# lspci\n00:00.0 Host bridge: Intel Corporation 440FX - 82441FX PMC [Natoma] (rev 02)\n00:01.0 ISA bridge: Intel Corporation 82371SB PIIX3 ISA [Natoma/Triton II]\n00:01.1 IDE interface: Intel Corporation 82371SB PIIX3 IDE [Natoma/Triton II]\n00:01.2 USB controller: Intel Corporation 82371SB PIIX3 USB [Natoma/Triton II] (rev 01)\n00:01.3 Bridge: Intel Corporation 82371AB/EB/MB PIIX4 ACPI (rev 03)\n00:02.0 VGA compatible controller: Cirrus Logic GD 5446\n00:03.0 Ethernet controller: Red Hat, Inc. Virtio network device\n00:04.0 Communication controller: Red Hat, Inc. Virtio console\n00:05.0 SCSI storage controller: Red Hat, Inc. Virtio block device\n00:06.0 SCSI storage controller: Red Hat, Inc. Virtio block device\n00:07.0 Unclassified device [00ff]: Red Hat, Inc. Virtio memory balloon\n</code></pre> <ol> <li>\u663e\u793a\u8fdb\u7a0b\u95f4\u901a\u4fe1\u8bbe\u65bd\u7684\u72b6\u6001 - ipcs\u3002</li> </ol> <pre><code>[root ~]# ipcs\n\n------ Message Queues --------\nkey        msqid      owner      perms      used-bytes   messages    \n\n------ Shared Memory Segments --------\nkey        shmid      owner      perms      bytes      nattch     status      \n\n------ Semaphore Arrays --------\nkey        semid      owner      perms      nsems\n</code></pre>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#shell","title":"Shell\u7f16\u7a0b","text":"<p>\u4e4b\u524d\u6211\u4eec\u63d0\u5230\u8fc7\uff0cShell\u662f\u4e00\u4e2a\u8fde\u63a5\u7528\u6237\u548c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u63d0\u4f9b\u4e86\u4eba\u673a\u4ea4\u4e92\u7684\u754c\u9762\uff08\u63a5\u53e3\uff09\uff0c\u7528\u6237\u901a\u8fc7\u8fd9\u4e2a\u754c\u9762\u8bbf\u95ee\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7684\u670d\u52a1\u3002Shell\u811a\u672c\u662f\u4e00\u79cd\u4e3aShell\u7f16\u5199\u7684\u811a\u672c\u7a0b\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Shell\u811a\u672c\u6765\u8fdb\u884c\u7cfb\u7edf\u7ba1\u7406\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5b83\u8fdb\u884c\u6587\u4ef6\u64cd\u4f5c\u3002\u603b\u4e4b\uff0c\u7f16\u5199Shell\u811a\u672c\u5bf9\u4e8e\u4f7f\u7528Linux\u7cfb\u7edf\u7684\u4eba\u6765\u8bf4\uff0c\u5e94\u8be5\u662f\u4e00\u9879\u6807\u914d\u6280\u80fd\u3002</p> <p>\u4e92\u8054\u7f51\u4e0a\u6709\u5927\u91cf\u5173\u4e8eShell\u811a\u672c\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u6211\u4e0d\u6253\u7b97\u518d\u6b64\u5bf9Shell\u811a\u672c\u505a\u4e00\u4e2a\u5168\u9762\u7cfb\u7edf\u7684\u8bb2\u89e3\uff0c\u6211\u4eec\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u611f\u6027\u7684\u8ba4\u8bc6\u4e0bShell\u811a\u672c\u5c31\u884c\u4e86\u3002</p> <p>\u4f8b\u5b501\uff1a\u8f93\u5165\u4e24\u4e2a\u6574\u6570m\u548cn\uff0c\u8ba1\u7b97\u4ecem\u5230n\u7684\u6574\u6570\u6c42\u548c\u7684\u7ed3\u679c\u3002</p> <pre><code>#!/usr/bin/bash\nprintf 'm = '\nread m\nprintf 'n = '\nread n\na=$m\nsum=0\nwhile [ $a -le $n ]\ndo\n    sum=$[ sum + a ]\n    a=$[ a + 1 ]\ndone\necho '\u7ed3\u679c: '$sum\n</code></pre> <p>\u4f8b\u5b502\uff1a\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939\u548c\u6307\u5b9a\u6570\u91cf\u7684\u6587\u4ef6\u3002</p> <pre><code>#!/usr/bin/bash\nprintf '\u8f93\u5165\u6587\u4ef6\u5939\u540d: '\nread dir\nprintf '\u8f93\u5165\u6587\u4ef6\u540d: '\nread file\nprintf '\u8f93\u5165\u6587\u4ef6\u6570\u91cf(&lt;1000): '\nread num\nif [ $num -ge 1000 ]\nthen\n    echo '\u6587\u4ef6\u6570\u91cf\u4e0d\u80fd\u8d85\u8fc71000'\nelse\n    if [ -e $dir -a -d $dir ]\n    then\n        rm -rf $dir\n    else\n        if [ -e $dir -a -f $dir ]\n        then\n            rm -f $dir\n        fi\n    fi\n    mkdir -p $dir\n    index=1\n    while [ $index -le $num ]\n    do\n        if [ $index -lt 10 ]\n        then\n            pre='00'\n        elif [ $index -lt 100 ]\n        then\n            pre='0'\n        else\n            pre=''\n        fi\n        touch $dir'/'$file'_'$pre$index\n        index=$[ index + 1 ]\n    done\nfi\n</code></pre> <p>\u4f8b\u5b503\uff1a\u81ea\u52a8\u5b89\u88c5\u6307\u5b9a\u7248\u672c\u7684Redis\u3002</p> <pre><code>#!/usr/bin/bash\ninstall_redis() {\n    if ! which redis-server &gt; /dev/null\n    then\n        cd /root\n        wget $1$2'.tar.gz' &gt;&gt; install.log\n        gunzip /root/$2'.tar.gz'\n        tar -xf /root/$2'.tar'\n        cd /root/$2\n        make &gt;&gt; install.log\n        make install &gt;&gt; install.log\n        echo '\u5b89\u88c5\u5b8c\u6210'\n    else\n        echo '\u5df2\u7ecf\u5b89\u88c5\u8fc7Redis'\n    fi\n}\n\ninstall_redis 'http://download.redis.io/releases/' $1\n</code></pre>"},{"location":"Linux/%E7%8E%A9%E8%BD%ACLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/#_27","title":"\u76f8\u5173\u8d44\u6e90","text":"<ol> <li>Linux\u547d\u4ee4\u884c\u5e38\u7528\u5feb\u6377\u952e</li> </ol> \u5feb\u6377\u952e \u529f\u80fd\u8bf4\u660e tab \u81ea\u52a8\u8865\u5168\u547d\u4ee4\u6216\u8def\u5f84 Ctrl+a \u5c06\u5149\u6807\u79fb\u52a8\u5230\u547d\u4ee4\u884c\u884c\u9996 Ctrl+e \u5c06\u5149\u6807\u79fb\u52a8\u5230\u547d\u4ee4\u884c\u884c\u5c3e Ctrl+f \u5c06\u5149\u6807\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 Ctrl+b \u5c06\u5149\u6807\u5411\u5de6\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26 Ctrl+k \u526a\u5207\u4ece\u5149\u6807\u5230\u884c\u5c3e\u7684\u5b57\u7b26 Ctrl+u \u526a\u5207\u4ece\u5149\u6807\u5230\u884c\u9996\u7684\u5b57\u7b26 Ctrl+w \u526a\u5207\u5149\u6807\u524d\u9762\u7684\u4e00\u4e2a\u5355\u8bcd Ctrl+y \u590d\u5236\u526a\u5207\u547d\u540d\u526a\u5207\u7684\u5185\u5bb9 Ctrl+c \u4e2d\u65ad\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1 Ctrl+h \u5220\u9664\u5149\u6807\u524d\u9762\u7684\u4e00\u4e2a\u5b57\u7b26 Ctrl+d \u9000\u51fa\u5f53\u524d\u547d\u4ee4\u884c Ctrl+r \u641c\u7d22\u5386\u53f2\u547d\u4ee4 Ctrl+g \u9000\u51fa\u5386\u53f2\u547d\u4ee4\u641c\u7d22 Ctrl+l \u6e05\u9664\u5c4f\u5e55\u4e0a\u6240\u6709\u5185\u5bb9\u5728\u5c4f\u5e55\u7684\u6700\u4e0a\u65b9\u5f00\u542f\u4e00\u4e2a\u65b0\u884c Ctrl+s \u9501\u5b9a\u7ec8\u7aef\u4f7f\u4e4b\u6682\u65f6\u65e0\u6cd5\u8f93\u5165\u5185\u5bb9 Ctrl+q \u9000\u51fa\u7ec8\u7aef\u9501\u5b9a Ctrl+z \u5c06\u6b63\u5728\u7ec8\u7aef\u6267\u884c\u7684\u4efb\u52a1\u505c\u4e0b\u6765\u653e\u5230\u540e\u53f0 !! \u6267\u884c\u4e0a\u4e00\u6761\u547d\u4ee4 !\u6570\u5b57 \u6267\u884c\u6570\u5b57\u5bf9\u5e94\u7684\u5386\u53f2\u547d\u4ee4 !\u5b57\u6bcd \u6267\u884c\u6700\u8fd1\u7684\u4ee5\u5b57\u6bcd\u6253\u5934\u7684\u547d\u4ee4 !$ / Esc+. \u83b7\u5f97\u4e0a\u4e00\u6761\u547d\u4ee4\u6700\u540e\u4e00\u4e2a\u53c2\u6570 Esc+b \u79fb\u52a8\u5230\u5f53\u524d\u5355\u8bcd\u7684\u5f00\u5934 Esc+f \u79fb\u52a8\u5230\u5f53\u524d\u5355\u8bcd\u7684\u7ed3\u5c3e <ol> <li>man\u67e5\u9605\u547d\u4ee4\u624b\u518c\u7684\u5185\u5bb9\u8bf4\u660e</li> </ol> \u624b\u518c\u4e2d\u7684\u6807\u9898 \u529f\u80fd\u8bf4\u660e NAME \u547d\u4ee4\u7684\u8bf4\u660e\u548c\u4ecb\u7ecd SYNOPSIS \u4f7f\u7528\u8be5\u547d\u4ee4\u7684\u57fa\u672c\u8bed\u6cd5 DESCRIPTION \u4f7f\u7528\u8be5\u547d\u4ee4\u7684\u8be6\u7ec6\u63cf\u8ff0\uff0c\u5404\u4e2a\u53c2\u6570\u7684\u4f5c\u7528\uff0c\u6709\u65f6\u5019\u8fd9\u4e9b\u4fe1\u606f\u4f1a\u51fa\u73b0\u5728OPTIONS\u4e2d OPTIONS \u547d\u4ee4\u76f8\u5173\u53c2\u6570\u9009\u9879\u7684\u8bf4\u660e EXAMPLES \u4f7f\u7528\u8be5\u547d\u4ee4\u7684\u53c2\u8003\u4f8b\u5b50 EXIT STATUS \u547d\u4ee4\u7ed3\u675f\u7684\u9000\u51fa\u72b6\u6001\u7801\uff0c\u901a\u5e380\u8868\u793a\u6210\u529f\u6267\u884c SEE ALSO \u548c\u547d\u4ee4\u76f8\u5173\u7684\u5176\u4ed6\u547d\u4ee4\u6216\u4fe1\u606f BUGS \u548c\u547d\u4ee4\u76f8\u5173\u7684\u7f3a\u9677\u7684\u63cf\u8ff0 AUTHOR \u8be5\u547d\u4ee4\u7684\u4f5c\u8005\u4ecb\u7ecd"},{"location":"Misc/Memo/","title":"Memo","text":""},{"location":"Misc/Memo/#mkdocs","title":"mkdocs","text":"<ul> <li>\u4ece\u5934\u6559\u4f60\u7528<code>mkdocs</code>\u6784\u5efa\u4e2a\u4eba\u535a\u5ba2\u7cfb\u7edf: blog.csdn.net.</li> <li>Mkdocs Material\u4f7f\u7528\u5b66\u4e60\uff1aMkdocs Material</li> <li>My notes: local\u9875\u9762\uff0cpublic\u9879\u76ee\u9875\u9762\uff0cpublic\u4e2a\u4eba\u9875\u9762.</li> <li>\u672c\u5730\u6587\u4ef6\u5b58\u653e\u76ee\u5f55\u4e3a<code>C:\\Users\\username\\notes</code>\uff0c\u5bf9\u5e94\u4e8eGitHub\u4ed3\u5e93\u4e3a\uff1a<ul> <li>\u6e90\u6587\u6863\u5b58\u653e\u5728<code>master</code>\u5206\u652f</li> <li>site\u76ee\u5f55\u4e0b\u7684\u6587\u6863\u5b58\u653e\u5728<code>gh-pages</code>\u5206\u652f\uff0c\u7528\u4e8e\u90e8\u7f72</li> </ul> </li> <li>\u4e2a\u4eba\u9875\u9762\u5b58\u653e\u76ee\u5f55\u4e3a<code>C:\\Users\\username\\lingyu11.github.io</code>\uff0c\u5bf9\u5e94\u4e8eGitHub\u4ed3\u5e93\u4e3a\uff1a<ul> <li>site\u76ee\u5f55\u4e0b\u7684\u6587\u6863\u5b58\u653e\u5728<code>master</code>\u5206\u652f\uff0c\u7528\u4e8e\u90e8\u7f72\uff08\u4ec5\u4ec5\u662f\u4e3a\u4e86\u4e2a\u4eba\u9875\u9762\u80fd\u591f\u8bbf\u95ee\uff09</li> </ul> </li> <li>\u5982\u4f55\u66f4\u65b0\u7b14\u8bb0\uff1a<ul> <li>Step1: \u90e8\u7f72<code>C:\\Users\\username\\lingyu11.github.io&gt; python -m mkdocs gh-deploy --config-file ../notes/mkdocs.yml --remote-branch master</code></li> <li>Step2: \u5b58\u6863 <code>C:\\Users\\username\\notes&gt; git add ./git commit -m \"commit message\"/git push</code></li> </ul> </li> <li>\u672c\u5730\u7b14\u8bb0\u91cd\u542f\uff1a<code>C:\\Users\\username\\notes&gt;python -m mkdocs serve</code></li> <li>\u6362\u7535\u8111\u540e\u9700\u8981 clone \u7684\u4ed3\u5e93\u4e3a\uff1a<ul> <li>\u6e90\u6587\u6863</li> <li>site\u76ee\u5f55\u4e0b\u7684\u6587\u6863</li> </ul> </li> <li>\u6362\u7535\u8111\u540e\u9700\u8981\u5b89\u88c5\u7684\u5305\u6709\uff1a<ul> <li><code>pip install mkdocs</code></li> <li><code>pip install mkdocs-material</code></li> <li><code>pip install mkdocs-jupyter</code></li> <li><code>pip install mkdocs-changelog-plugin</code></li> <li><code>pip install mkdocs-git-revision-date-localized-plugin</code></li> </ul> </li> </ul>"},{"location":"Misc/Memo/#useful-links","title":"Useful links","text":"<ul> <li>\u5f00\u6e90\u4e16\u754c\u65c5\u884c\u624b\u518c</li> <li>Linux C\u7f16\u7a0b\u4e00\u7ad9\u5f0f\u5b66\u4e60</li> <li>awesome-c</li> <li>\u5929\u5751\u4e13\u4e1a\u8f6c\u7801\u81ea\u6551\u6307\u5357</li> <li>Python\u624b\u518c</li> </ul>"},{"location":"Misc/Todo/","title":"Todo","text":""},{"location":"Misc/Todo/#todo","title":"Todo","text":"<p>\ud83d\udccc \u5185\u8054\u56de\u8c03\u51fd\u6570\uff1ahttps://python3-cookbook.readthedocs.io/zh-cn/latest/c07/p11_inline_callback_functions.html</p> <p>\ud83d\udccc \u7b2c\u4e94\u7ae0\uff1a\u6587\u4ef6\u4e0eIO https://python3-cookbook.readthedocs.io/zh-cn/latest/chapters/p05_files_and_io.html</p> <p>\ud83d\udccc \u7b2c\u516d\u7ae0\uff1a\u6570\u636e\u7f16\u7801\u548c\u5904\u7406 https://python3-cookbook.readthedocs.io/zh-cn/latest/chapters/p06_data_encoding_and_process.html</p> <p>\ud83d\udccc jackfrued\u6570\u636e\u5206\u6790 P34</p>"},{"location":"Misc/Todo/#os-todo","title":"OS Todo","text":"<p>\ud83d\udccc AbstractMachine: \u62bd\u8c61\u8ba1\u7b97\u673a</p> <p>\ud83d\udccc \u8be6\u7ec6\u9605\u8bfb\u4ee3\u7801</p> <ul> <li>Lect1/mini-rv32 </li> <li>Lect4/mosaic</li> <li>\u7406\u89e3Lect13/lockdep.cc\u91cc\u7684Floyd-Warshall's algorithm</li> <li>\u914d\u7f6e\u597dvscode\uff0cdebug Lect21/thread-os.c (\u4e0a\u4e0b\u6587\u5207\u6362)</li> <li>\u8ddf\u7740\u89c6\u9891debug Lect23/xv6-riscv (\u4e0a\u4e0b\u6587\u5207\u6362)</li> </ul> <p>\ud83d\udccc \u505alab</p> <ul> <li>L0: \u4e3a\u8ba1\u7b97\u673a\u786c\u4ef6\u7f16\u7a0b</li> <li>L1: \u7269\u7406\u5185\u5b58\u7ba1\u7406 (pmm)</li> <li>L2: \u5185\u6838\u7ebf\u7a0b\u7ba1\u7406 (kmt)</li> <li>M3: GPT-2 \u5e76\u884c\u63a8\u7406 (gpt.c)</li> <li>M6: \u6587\u4ef6\u7cfb\u7edf\u683c\u5f0f\u5316\u6062\u590d (fsrecov)</li> <li>Lecture 27 \u91cc \u5b9e\u73b0\u6587\u4ef6/\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f/ioctl\u518d\u770b\u770b\uff0c28\u4e5f\u53ef\u4ee5\u518d\u770b\u770b\u3002</li> </ul> <p>\ud83d\udccc \u8bfe\u672c</p> <ul> <li>Preface \u524d\u8a00</li> <li>\u7b2c 1 \u7ae0 - Dialogue on the Book</li> <li>\u7b2c 2 \u7ae0 - Introduction to Operating Systems</li> <li>\u7b2c 25 \u7ae0 - Dialogue on Concurrency</li> <li>\u7b2c 26 \u7ae0 - Concurrency and Threads</li> <li>\u7b2c 27 \u7ae0 - Thread API</li> <li>\u7b2c 29 \u7ae0 - Locked Data Structures</li> <li>\u7b2c 30 \u7ae0 - Condition Variables</li> <li>\u7b2c 31 \u7ae0 - Semaphores</li> <li>\u7b2c 33 \u7ae0 - Event-based Concurrency</li> <li>\u7b2c 32 \u7ae0 - Concurrency Bugs</li> <li>\u7b2c 3 \u7ae0 - Dialogue</li> <li>\u7b2c 4 \u7ae0 - Processes</li> <li>\u7b2c 5 \u7ae0 - Process API</li> <li>\u7b2c 12 \u7ae0 - Dialogue</li> <li>\u7b2c 13 \u7ae0 - Address Spaces</li> <li>\u7b2c 14 \u7ae0 - Memory API</li> <li>\u7b2c 15 \u7ae0 - Address Translation</li> <li>\u7b2c 16 \u7ae0 - Segmentation</li> <li>\u7b2c 17 \u7ae0 - Free Space Management</li> <li>\u7b2c 18 \u7ae0 - Introduction to Paging</li> <li>\u7b2c 6 \u7ae0 - Direct Execution</li> <li>\u7b2c 19 \u7ae0 - Translation Lookaside Buffers</li> <li>\u7b2c 20 \u7ae0 - Advanced Page Tables</li> <li>\u7b2c 21 \u7ae0 - Swapping: Mechanisms</li> <li>\u7b2c 22 \u7ae0 - Swapping: Policies</li> <li>\u7b2c 23 \u7ae0 - Complete VM Systems</li> <li>\u7b2c 7 \u7ae0 - CPU Scheduling</li> <li>\u7b2c 8 \u7ae0 - Multi-level Feedback</li> <li>\u7b2c 9 \u7ae0 - Lottery Scheduling</li> <li>\u7b2c 10 \u7ae0 - Multi-CPU Scheduling</li> <li>\u7b2c 11 \u7ae0 - Summary</li> <li>\u7b2c 37 \u7ae0 - Hard Disk Drives</li> <li>\u7b2c 44 \u7ae0 - Flash-based SSDs</li> <li>\u7b2c 36 \u7ae0 - I/O Devices</li> <li>\u7b2c 39 \u7ae0 - Files and Directories</li> <li>\u7b2c 40 \u7ae0 - File System Implementation</li> <li>\u7b2c 41 \u7ae0 - Fast File System (FFS)</li> <li>\u7b2c 38 \u7ae0 - Redundant Disk Arrays (RAID)</li> <li>\u7b2c 42 \u7ae0 - FSCK and Journaling</li> <li>\u7b2c 43 \u7ae0 - Log-structured File System (LFS)</li> </ul>"},{"location":"OS/CodingForSSD/","title":"Coding for SSD","text":""},{"location":"OS/CodingForSSD/#_1","title":"\u8d44\u6599","text":"<ul> <li>Coding for SSD</li> </ul>"},{"location":"OS/CodingForSSD/#architecture-of-an-ssd","title":"Architecture of an SSD","text":"<ol> <li> <p>A solid-state drives (SSD) is a flash-memory based data storage device. Bits are stored into cells, which exist in three types: </p> <ul> <li>1 bit per cell (single level cell, SLC) \u27a1\ufe0f the best choice for high-update workloads</li> <li>2 bits per cell (multiple level cell, MLC)</li> <li>3 bits per cell (triple-level cell, TLC) \u27a1\ufe0f for high-read and low-write workloads (ex: video storage and streaming)</li> </ul> <p> Architecture of a solid-state drive </p> </li> </ol>"},{"location":"OS/CodingForSSD/#workloads-and-metrics","title":"Workloads and metrics","text":"<ol> <li> <p>The parameters used are generally the following:</p> <ul> <li>The type of workload: can be a specific benchmark based on data collected from users, or just only sequential or random accesses of the same type (ex: only random writes)</li> <li>The percentages of reads and writes performed concurrently (ex: 30% reads and 70% writes)</li> <li>The queue length: this is the number of concurrent execution threads running commands on a drive</li> <li>The size of the data chunks being accessed (4 KB, 8 KB, etc.)</li> </ul> </li> <li> <p>Benchmark results are presented using different metrics. The most common are:</p> <ul> <li>Throughput: The speed of transfer, generally in KB/s or MB/s, respectively kilobytes per second, and megabytes per second. This is the metric chosen for sequential benchmarks.</li> <li>IOPS: the number of Input/Output Operations Per Second, each operations being of the same data chunk size (generally 4 KB/s). This is the metrics chosen for the random benchmarks.</li> <li>Latency: the response time of a device after a command is emitted, generally in \u03bcs or ms, respectively microseconds or milliseconds.</li> </ul> </li> </ol>"},{"location":"OS/CodingForSSD/#pages-blocks-and-the-flash-translation-layer","title":"Pages, Blocks, and the Flash Translation Layer","text":"<ol> <li> <p>Read, write, erase</p> <ul> <li>Reads are aligned on page size</li> <li>Writes are aligned on page size</li> <li>Erases are aligned on block size</li> <li>Pages cannot be overwritten</li> </ul> </li> <li> <p>Write amplification and read-modify-write</p> <ul> <li>Never write less than a page<ul> <li>Any write operation that is not both aligned on the page size and a multiple of the page size will require more data to be written than necessary, a concept called write amplification</li> </ul> </li> <li>Align writes<ul> <li>Writing data in an unaligned way causes the pages to be read into cache before being modified and written back to the drive, which is slower than directly writing pages to the disk. This operations is known as read-modify-write, and should be avoided whenever possible</li> </ul> </li> <li>Buffer small writes</li> </ul> </li> <li> <p>Flash Translation Layer (FTL) has two main purposes: </p> <ul> <li>logical block mapping</li> <li>garbage collection</li> </ul> </li> <li> <p>\ud83d\udccc Flash Translation Layer (FTL)</p> </li> </ol>"},{"location":"OS/Lab/","title":"Lab","text":"<p>Tip</p> <p>github \u4e0a\u641c\u7d22 os-workbench\uff0c\u53ef\u4ee5\u770b\u5230\u4e00\u4e9b\u53c2\u8003\u5b9e\u73b0\u3002\u4f8b\u5982 os-workbench\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u641c\u7d22\u5b9e\u9a8c\u67e5\u770b\u5230\u4e00\u4e9b blog \u7b49\u3002</p>"},{"location":"OS/Lab/#m1-pstree","title":"M1: \u6253\u5370\u8fdb\u7a0b\u6811 (pstree)","text":"<ol> <li> <p>\u9996\u5148\u89c2\u5bdf\u5230Linux\u7684pstree\u662f\u8fd9\u6837\u5b9e\u73b0\u7684\uff1a\u6253\u5f00 <code>/proc/pid/stat</code>\uff0c\u7136\u540e\u8bfb\u53d6\u91cc\u9762\u7684\u4fe1\u606f\u3002\u5176\u6b21\u6ce8\u610f\u5230 <code>pstree -V /dev/null</code> \u4f9d\u7136\u8f93\u51fa\u4e86\uff0c\u662f fprintf \u5230 stderr \u5b9e\u73b0\u7684\u3002</p> <p><pre><code>linux$ strace pstree\nopenat(AT_FDCWD, \"/proc/30206/stat\", O_RDONLY) = 4\nnewfstatat(AT_FDCWD, \"/proc/30206\", {st_mode=S_IFDIR|0555, st_size=0, ...}, 0) = 0\n...\nlinux$ pstree -V /dev/null\npstree (PSmisc) 23.4\nCopyright (C) 1993-2020 Werner Almesberger and Craig Small\n\nPSmisc comes with ABSOLUTELY NO WARRANTY.\nThis is free software, and you are welcome to redistribute it under\nthe terms of the GNU General Public License.\nFor more information about these matters, see the files named COPYING.\n</code></pre> 2. pstree.c</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;stdint.h&gt;\n#include &lt;ctype.h&gt;\n#include &lt;stdbool.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;dirent.h&gt;\n//\u601d\u8def\uff1a\u5148\u4ece1\u53f7\u8fdb\u7a0b\u4e3a\u6839\u8fdb\u884c\u641c\u7d22\u5efa\u6811\uff0c\u7136\u540e\u641c\u7d22/proc\u7684\u5176\u4ed6\u6587\u4ef6\u5939\uff0c\u628a\u4e0d\u5728\u6811\u4e2d\u7684\u52a0\u5165\u8fdb\u53bb\n\n#define pid_t int\n\nbool P = false;\nbool N = false;\nbool V = false;\n\ntypedef struct childs {\n    pid_t pid;\n    struct childs* next;\n} childs;\n\ntypedef struct proc {\n    char name[128];\n    pid_t pid;\n    pid_t ppid;\n    int child_num;\n    pid_t child_pid[128];\n    struct proc *next;\n} proc;\n\nproc root_proc= {.pid = 1, .ppid = 0, .child_num = 0, .next = NULL};\nproc *root = &amp;root_proc;\nchar path1[600];\nchar path2[600];\nchar tmp;\n\n\nbool is_num(char *str) {\n    for (int i = 0; i &lt; strlen(str); i++) {\n        if (isdigit(str[i]) == 0) return false;\n    }\n    return true;\n}\n\nproc *get_last_proc() {\n    proc *pr = root;\n    while (pr-&gt;next != NULL) pr = pr-&gt;next;\n    return pr;\n}\n\nproc *find_proc(int pid) {\n    for (proc *p = root; p != NULL; p = p-&gt;next) {\n        if (p-&gt;pid == pid) {\n            return p;\n        }\n    }\n    return NULL;\n}\n\nvoid print_tree(proc *p){\n    if (P) {\n        printf(\"%s(%d)\", p-&gt;name, p-&gt;pid);\n    } \n    else {\n        printf(\"%s\", p-&gt;name);\n    }\n\n    if (p-&gt;child_num == 0) {\n        printf(\"\\n\");\n        return;\n    }\n    else\n    {\n        printf(\" - \");\n    }\n\n    for (int i = 0; i &lt; p-&gt;child_num; i++) {\n        proc *child = find_proc(p-&gt;child_pid[i]);\n        if (child) {\n            print_tree(child);\n        }\n    }\n}\n\n\nvoid get_procs() {\n    DIR *dir = opendir(\"/proc\");\n    struct dirent *dire;\n    while ((dire = readdir(dir)) != NULL) {\n        if (dire-&gt;d_type == 4 &amp;&amp; is_num(dire-&gt;d_name)) { // \u68c0\u67e5\u7c7b\u578b\u662f\u5426\u4e3a\u76ee\u5f55\uff0c\u4ee5\u53ca\u662f\u5426\u53ea\u5305\u542b\u6570\u5b57(pid)\n            sprintf(path1, \"/proc/%s/stat\", dire-&gt;d_name);\n            sprintf(path2, \"/proc/%s/task/%s/children\", dire-&gt;d_name, dire-&gt;d_name);\n            FILE *fp = fopen(path1, \"r\");\n            if (strcmp(dire-&gt;d_name, \"1\") == 0) { // 1\u53f7\u8fdb\u7a0b\n                if (fscanf(fp,\"%d (%s %c %d\", &amp;root-&gt;pid, root-&gt;name, &amp;tmp, &amp;root-&gt;ppid))\n                {\n                    root-&gt;name[strlen(root-&gt;name) - 1] = '\\0';\n                    fclose(fp);\n                    fp = fopen(path2, \"r\");\n                    pid_t child_pid;\n                    while (fscanf(fp, \"%d\", &amp;child_pid) != EOF) {\n                        root-&gt;child_pid[root-&gt;child_num++] = child_pid;\n                        assert(root-&gt;child_num &lt;= 128);\n                    }\n                }\n            }\n            else { // \u5176\u4ed6\u8fdb\u7a0b\n                proc *last_proc = get_last_proc();\n                proc *cur_proc = malloc(sizeof(proc));\n                if (fscanf(fp,\"%d (%s %c %d\", &amp;cur_proc-&gt;pid, cur_proc-&gt;name, &amp;tmp, &amp;cur_proc-&gt;ppid))\n                {\n                    cur_proc-&gt;name[strlen(cur_proc-&gt;name) - 1] = '\\0';\n                    last_proc-&gt;next = cur_proc;\n                    fclose(fp);\n                    fp = fopen(path2, \"r\");\n                    pid_t child_pid;\n                    cur_proc-&gt;child_num = 0;\n                    cur_proc-&gt;next = NULL;\n                    while (fscanf(fp, \"%d\", &amp;child_pid) != EOF) {\n                        cur_proc-&gt;child_pid[cur_proc-&gt;child_num++] = child_pid;\n                        assert(cur_proc-&gt;child_num &lt;= 128);\n                    }\n                }\n            }\n            fclose(fp); \n        }\n    }\n}\n\nint main(int argc, char *argv[]) {\n    for (int i = 0; i &lt; argc; i++) {\n        if (strcmp(argv[i], \"-p\") == 0 || strcmp(argv[i], \"--show-pids\") == 0) {\n            P = true;\n        }\n        else if (strcmp(argv[i], \"-n\") == 0 || strcmp(argv[i], \"--numeric-sort\") == 0 ){\n            N = true;\n        }\n        else if (strcmp(argv[i], \"-V\") == 0 || strcmp(argv[i], \"--version\") == 0) {\n            V = true;\n        }\n    }\n    if (V) {\n        fprintf(stderr, \"pstree version 1.0 CopyRight (C) 2024 Lingyu\\n\");\n    }\n    else {\n        get_procs();\n        print_tree(root);\n    }\n    return 0;\n}\n</code></pre> </li> </ol>"},{"location":"OS/Lab/#m2-libco","title":"M2: \u534f\u7a0b\u5e93 (libco)","text":"<ol> <li> <p><code>setjmp</code> \u548c <code>longjmp</code>: <code>setjmp</code> \u548c <code>longjmp</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u63d0\u4f9b\u7684\u4e00\u7ec4\u7528\u4e8e\u975e\u5c40\u90e8\u8df3\u8f6c\u7684\u51fd\u6570\u3002\u5b83\u4eec\u901a\u5e38\u4e00\u8d77\u4f7f\u7528\uff0c\u7528\u4e8e\u5b9e\u73b0\u534f\u7a0b\uff08coroutine\uff09\u3001\u5f02\u5e38\u5904\u7406\u673a\u5236\u6216\u8005\u5728\u51fd\u6570\u8c03\u7528\u6808\u4e2d\u8fdb\u884c\u957f\u8ddd\u79bb\u8df3\u8f6c\u3002</p> <ul> <li> <p>\ud83d\udce5<code>setjmp</code> \u51fd\u6570\u7528\u4e8e\u4fdd\u5b58\u5f53\u524d\u7684\u7a0b\u5e8f\u6267\u884c\u73af\u5883\uff08\u4e0a\u4e0b\u6587\uff09\u5230\u4e00\u4e2a <code>jmp_buf</code> \u7c7b\u578b\u7684\u7f13\u51b2\u533a\u4e2d\u3002\u8fd9\u4e2a\u7f13\u51b2\u533a\u901a\u5e38\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u7528\u4e8e\u5b58\u50a8\u5bc4\u5b58\u5668\u7684\u503c\u3001\u6808\u6307\u9488\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668\u7b49\u5173\u952e\u4fe1\u606f\u3002<code>setjmp</code> \u51fd\u6570\u7684\u8fd4\u56de\u503c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u8c03\u7528 <code>setjmp</code>\uff0c\u5b83\u4f1a\u8fd4\u56de 0\uff0c\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u73af\u5883\u3002</li> <li>\u5982\u679c\u662f\u901a\u8fc7 <code>longjmp</code> \u51fd\u6570\u8fdb\u884c\u8df3\u8f6c\uff0c\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u975e\u96f6\u503c\uff0c\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u6062\u590d\u7684\u73af\u5883\u3002</li> </ul> </li> <li> <p>\u21aa\ufe0f<code>longjmp</code> \u51fd\u6570\u7528\u4e8e\u4ece\u5f53\u524d\u7684\u6267\u884c\u70b9\u8df3\u8f6c\u5230\u4e4b\u524d\u901a\u8fc7 <code>setjmp</code> \u4fdd\u5b58\u7684\u73af\u5883\u4e2d\u3002\u5b83\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff1a</p> <ul> <li><code>jmp_buf</code> \u7c7b\u578b\u7684\u7f13\u51b2\u533a\uff0c\u8fd9\u4e2a\u7f13\u51b2\u533a\u662f\u4e4b\u524d\u901a\u8fc7 <code>setjmp</code> \u4fdd\u5b58\u7684\u3002</li> <li>\u4e00\u4e2a\u6574\u6570\u503c\uff0c\u8fd9\u4e2a\u503c\u4f1a\u88ab\u7528\u4f5c <code>setjmp</code> \u7684\u8fd4\u56de\u503c\u3002</li> </ul> </li> </ul> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;setjmp.h&gt;\n\njmp_buf env;\n\nvoid foo() {\n    printf(\"In foo()\\n\");\n    longjmp(env, 1); // \u8df3\u8f6c\u5230 setjmp \u5904\uff0c\u5e76\u8bbe\u7f6e\u8fd4\u56de\u503c\u4e3a 1\n}\n\nint main() {\n    int ret = setjmp(env); // \u4fdd\u5b58\u5f53\u524d\u73af\u5883\n    if (ret == 0) {\n        printf(\"First time through\\n\");\n        foo();\n    } else {\n        printf(\"Back in main via longjmp, ret = %d\\n\", ret);\n    }\n    return 0;\n}\n</code></pre> <pre><code>linux$ ./a.out \nFirst time through\nIn foo()\nBack in main via longjmp, ret = 1\n</code></pre> </li> <li> <p>co.c <pre><code>#include \"co.h\"\n#include &lt;stdint.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;setjmp.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;time.h&gt;\n\n#define KB *1024\n#define STACK_SIZE (64 KB)\n// #define DEBUG 1\n#ifdef DEBUG\n#define Log(format, ...) \\\n    printf(\"\\33[1;34m[%s, %d, %s] \" format \"\\33[0m\\n\", \\\n        __FILE__, __LINE__, __func__, ## __VA_ARGS__)\n#else\n#define Log(format, ...)\n#endif\n\nstatic inline void\nstack_switch_call(void *sp, void *entry, uintptr_t arg) {\n  asm volatile (\n#if __x86_64__\n    \"movq %0, %%rsp; movq %2, %%rdi; jmp *%1\"\n      :\n      : \"b\"((uintptr_t)sp),\n        \"d\"(entry),\n        \"a\"(arg)\n      : \"memory\"\n    // \u9996\u5148\u5c06\u65b0\u5806\u6808\u6307\u9488 sp \u79fb\u52a8\u5230 rsp \u5bc4\u5b58\u5668\uff0c\u7136\u540e\u5c06\u53c2\u6570 arg \u79fb\u52a8\u5230 rdi \u5bc4\u5b58\u5668\uff0c\u6700\u540e\u8df3\u8f6c\u5230 entry \u6307\u5411\u7684\u5730\u5740\u6267\u884c\n#else\n    \"movl %0, %%esp; movl %2, 4(%0); jmp *%1\"\n      :\n      : \"b\"((uintptr_t)sp - 8),\n        \"d\"(entry),\n        \"a\"(arg)\n      : \"memory\"\n#endif\n    );\n}\n\nenum co_status {\n  CO_NEW = 1, // \u65b0\u521b\u5efa\uff0c\u8fd8\u672a\u6267\u884c\u8fc7\n  CO_RUNNING, // \u5df2\u7ecf\u6267\u884c\u8fc7\n  CO_WAITING, // \u5728 co_wait \u4e0a\u7b49\u5f85\n  CO_DEAD,    // \u5df2\u7ecf\u7ed3\u675f\uff0c\u4f46\u8fd8\u672a\u91ca\u653e\u8d44\u6e90\n};\n\nstruct co {\n  const char *name;\n  void (*func)(void *);   // co_start \u6307\u5b9a\u7684\u5165\u53e3\u5730\u5740\u548c\u53c2\u6570\n  void *arg;\n  void *stackptr;\n  enum co_status status;  // \u534f\u7a0b\u7684\u72b6\u6001\n  jmp_buf context;        // \u5bc4\u5b58\u5668\u73b0\u573a (setjmp.h)\n  struct co *next;\n  struct co *prev;\n  struct co *waiter;\n  uint8_t stack[STACK_SIZE] __attribute__ ((aligned(16))); // \u534f\u7a0b\u7684\u5806\u6808\n};\n\nstruct co *co_main, *co_current;\nint co_num = 0;\n\n// __attribute__((constructor)) \u5c5e\u6027\u7684\u51fd\u6570\u4f1a\u5728 main \u6267\u884c\u524d\u88ab\u8fd0\u884c\n__attribute__((constructor)) void co_init() {\n  co_main = malloc(sizeof(struct co));\n  co_main-&gt;name = \"main\";\n  co_main-&gt;stackptr = co_main-&gt;stack + sizeof(co_main-&gt;stack);\n  co_main-&gt;status = CO_RUNNING;\n  memset(co_main-&gt;stack, 0, sizeof(co_main-&gt;stack));\n  co_main-&gt;next = co_main;\n  co_main-&gt;prev = co_main;\n  co_current = co_main;\n  co_num += 1;\n}\n\nvoid debugprint() {\n  struct co *p = co_main;\n  printf(\"debugprint begin\\n\");\n  for (int i = 0; i &lt; co_num; i++) {\n    Log(\"co: %s, co_num: %d\", p-&gt;name, co_num);\n    p = p-&gt;next;\n  }\n  printf(\"debugprint end\\n\");\n}\n\n// \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\nstruct co* co_start(const char *name, void (*func)(void *), void *arg) {\n  struct co *co_new = malloc(sizeof(struct co));\n  co_new-&gt;name = name;\n  co_new-&gt;func = func;\n  co_new-&gt;arg = arg;\n  co_new-&gt;status = CO_NEW;\n  co_new-&gt;stackptr = co_new-&gt;stack + sizeof(co_new-&gt;stack);\n  memset(co_new-&gt;stack, 0, sizeof(co_new-&gt;stack));\n  struct co *prev = co_main-&gt;prev;\n  co_new-&gt;next = co_main;\n  co_main-&gt;prev = co_new;\n  co_new-&gt;prev = prev;\n  prev-&gt;next = co_new;\n  co_num += 1;\n  //debugprint();\n  return co_new;\n};\n\nvoid wrapper() {\n  co_current-&gt;status = CO_RUNNING;\n  co_current-&gt;func(co_current-&gt;arg);\n  co_current-&gt;status = CO_DEAD;\n  if (co_current-&gt;waiter != NULL) {\n    co_current-&gt;waiter-&gt;status = CO_RUNNING;\n    co_current-&gt;waiter = NULL;\n  }\n  co_yield();\n}\n\n// \u5b9e\u73b0\u534f\u7a0b\u7684\u5207\u6362\nvoid co_yield() {\n  int val = setjmp(co_current-&gt;context); // \u5c06\u5f53\u524d\u534f\u7a0b\u7684\u4e0a\u4e0b\u6587\uff08\u5bc4\u5b58\u5668\u72b6\u6001\u7b49\uff09\u4fdd\u5b58\u5230 co_current-&gt;context \u4e2d\n  if (val == 0) { // \u8868\u793a\u8fd9\u662f\u7b2c\u4e00\u6b21\u8c03\u7528 setjmp\uff0c\u6b64\u65f6\u6211\u4eec\u9700\u8981\u9009\u62e9\u4e0b\u4e00\u4e2a\u5f85\u8fd0\u884c\u7684\u534f\u7a0b (\u76f8\u5f53\u4e8e\u4fee\u6539 current)\uff0c\u5e76\u5207\u6362\u5230\u8fd9\u4e2a\u534f\u7a0b\u8fd0\u884c\n    struct co *next = co_current-&gt;next;\n    while (next-&gt;status == CO_WAITING || next-&gt;status == CO_DEAD) next = next-&gt;next;\n    co_current = next;\n    if (next-&gt;status == CO_NEW) {\n      if (sizeof(void*) == 4) stack_switch_call(next-&gt;stackptr, wrapper, (uintptr_t)NULL); // 32\u4f4d\u7cfb\u7edf\n      else {                                                                               // 64\u4f4d\u7cfb\u7edf\n        asm volatile(\"mov %0, %%rsp\" :: \"b\"((uintptr_t)next-&gt;stackptr));\n        wrapper();\n      }\n    }\n    else { // next \u4e0d\u662f\u65b0\u521b\u5efa\u7684\uff0c\u5219\u8c03\u7528 longjmp \u51fd\u6570\u6062\u590d\u4e0b\u4e00\u4e2a\u534f\u7a0b\u7684\u4e0a\u4e0b\u6587\uff0c\u4f7f\u5176\u7ee7\u7eed\u6267\u884c\u3002\n      longjmp(next-&gt;context, 1);\n    } \n  }\n  else { /* do nothing */}\n  // setjmp \u662f\u7531\u53e6\u4e00\u4e2a longjmp \u8fd4\u56de\u7684\uff0c\u6b64\u65f6\u4e00\u5b9a\u662f\u56e0\u4e3a\u67d0\u4e2a\u534f\u7a0b\u8c03\u7528 co_yield()\uff0c\u6b64\u65f6\u4ee3\u8868\u4e86\u5bc4\u5b58\u5668\u73b0\u573a\u7684\u6062\u590d\uff0c\n  // \u56e0\u6b64\u4e0d\u5fc5\u505a\u4efb\u4f55\u64cd\u4f5c\uff0c\u76f4\u63a5\u8fd4\u56de\u5373\u53ef\u3002\n}\n\n// \u8868\u793a\u5f53\u524d\u534f\u7a0b\u9700\u8981\u7b49\u5f85\uff0c\u76f4\u5230 co \u534f\u7a0b\u7684\u6267\u884c\u5b8c\u6210\u624d\u80fd\u7ee7\u7eed\u6267\u884c\nvoid co_wait(struct co *co) {\n  if (co-&gt;status == CO_DEAD) {\n    Log(\"free %s\", co-&gt;name);\n    struct co *prev = co-&gt;prev;\n    struct co *next = co-&gt;next;\n    prev-&gt;next = next;\n    next-&gt;prev = prev;\n    free(co);\n  }\n  else {\n    co-&gt;waiter = co_current;\n    co_current-&gt;status = CO_WAITING;\n    co_yield();\n  }\n}\n</code></pre></p> </li> </ol>"},{"location":"OS/Lab/#m3-gpt-2-gptc","title":"M3: GPT-2 \u5e76\u884c\u63a8\u7406 (gpt.c)","text":""},{"location":"OS/Lab/#m4-c-read-eval-print-loop-crepl","title":"M4: C Read-Eval-Print-Loop (crepl)","text":"<ol> <li>crepl.c <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;wait.h&gt;\n#include &lt;dlfcn.h&gt;\n#include &lt;stdbool.h&gt;\n\n#if defined(__i386__)\n  #define TARGET \"-m32\"\n#elif defined(__x86_64__)\n  #define TARGET \"-m64\"\n#endif\n\nstatic char line[4096];\nstatic char tmp[4];\nstatic char src_filename[32];\nstatic char dst_filename[32];\nstatic int (*f)();\nstatic int value;\n\nvoid compile(bool func) {\n  sprintf(src_filename, \"/tmp/func_c_XXXXXX\");\n  sprintf(dst_filename, \"/tmp/func_so_XXXXXX\");\n  if (mkstemp(src_filename) == -1) printf(\"\\033[1;31m      Mkstemp Failed!\\033[0m\\n\");\n  if (mkstemp(dst_filename) == -1) printf(\"\\033[1;31m      Mkstemp Failed!\\033[0m\\n\");\n  FILE *fp = fopen(src_filename, \"w\");\n  if (func) fprintf(fp, \"%s\", line);\n  else fprintf(fp, \"int wrap_func() {return (%s);}\", line);\n  fclose(fp);\n  char *exec_argv[] = {\"gcc\", TARGET, \"-x\", \"c\", \"-fPIC\", \"-w\", \"-shared\", \"-o\", dst_filename, src_filename, NULL};\n  int pid = fork();\n  if (pid == 0) {  // \u5b50\u8fdb\u7a0b\n    int fd = open(\"/dev/null\", O_RDWR);\n    dup2(fd, STDOUT_FILENO); // \u5c06 fd \u590d\u5236\u5230\u6807\u51c6\u8f93\u51fa\uff08STDOUT_FILENO\uff09\u548c\u6807\u51c6\u9519\u8bef\uff08STDERR_FILENO\uff09\n    dup2(fd, STDERR_FILENO); // \u610f\u5473\u7740\u5b50\u8fdb\u7a0b\u7684\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u90fd\u5c06\u88ab\u91cd\u5b9a\u5411\u5230 /dev/null\uff0c\u5373\u4e22\u5f03\u6240\u6709\u8f93\u51fa\n    execvp(exec_argv[0], exec_argv); // execve \u63a5\u53d7\u4e00\u4e2a\u8def\u5f84\u540d\u4f5c\u4e3a\u53c2\u6570\uff0cexecvp \u63a5\u53d7\u4e00\u4e2a\u6587\u4ef6\u540d\u4f5c\u4e3a\u53c2\u6570\n    // example\uff1aexecve(\"/bin/ls\", args, envp);  execvp(\"ls\", args);\n  }\n  else {           // \u7236\u8fdb\u7a0b\n    int status;\n    wait(&amp;status); // \u7cfb\u7edf\u8c03\u7528\uff0c\u7528\u4e8e\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f\u5e76\u83b7\u53d6\u5176\u9000\u51fa\u72b6\u6001\u3002\n    if (status != 0) printf(\"\\033[1;31m      Compile Error!\\033[0m\\n\");\n    else {\n      // dlopen \u51fd\u6570: \u52a0\u8f7d\u4e00\u4e2a\u52a8\u6001\u94fe\u63a5\u5e93\uff08.so \u6587\u4ef6\uff09\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u7528\u4e8e\u540e\u7eed\u8bbf\u95ee\u8be5\u5e93\u4e2d\u7684\u51fd\u6570\u548c\u53d8\u91cf\n      void *handle = dlopen(dst_filename, RTLD_NOW | RTLD_GLOBAL);\n      if (!handle) printf(\"\\033[1;31m      Compile Error!\\033[0m\\n\");\n      else { \n        if (func) printf(\"\\033[1;32m      Added: \\033[1;30m%s\\033[0m\", line);\n        else {\n          f = dlsym(handle, \"wrap_func\"); // dlsym \u51fd\u6570: \u4ece\u52a8\u6001\u94fe\u63a5\u5e93\u4e2d\u67e5\u627e\u5e76\u83b7\u53d6\u4e00\u4e2a\u7b26\u53f7\u7684\u5730\u5740\n          value = f();\n          printf(\"\\033[1;32m      Result: \\033[1;30m%d\\033[0m\\n\", value);\n          dlclose(handle); \n        }\n      }\n    }\n  }\n  unlink(src_filename); // \u7cfb\u7edf\u8c03\u7528\uff0c\u7528\u4e8e\u5220\u9664\u6587\u4ef6\n  unlink(dst_filename);\n}\n\nint main(int argc, char *argv[]) {\n  while (1) {\n    printf(\"crepl&gt; \");\n    memset(line, '\\0', sizeof(line));\n    memset(tmp, '\\0', sizeof(tmp));\n    fflush(stdout);\n    if (!fgets(line, sizeof(line), stdin)) {\n      break;\n    }\n    sscanf(line, \"%3s\", tmp);\n    compile(strncmp(line, \"int\", 3) == 0);\n  }\n}\n</code></pre></li> </ol>"},{"location":"OS/Lab/#m5-profiler-sperf","title":"M5: \u7cfb\u7edf\u8c03\u7528 Profiler (sperf)","text":"<ol> <li> <p>sperf.c <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;regex.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\n#include &lt;ctype.h&gt;\n#include &lt;dirent.h&gt;\n#include &lt;stdbool.h&gt;\n\n#define BUFFER_SIZE 8192\n#define PRINT_NUM 5\n#define TIME_INTERVAL_SEC 1\n\n// \u94fe\u8868\ntypedef struct list_node {\n  char *name;\n  double time;\n  struct list_node *next;\n} list_node;\n\n// \u94fe\u8868\u63d2\u5165\u8282\u70b9\uff0c\u540c\u65f6\u4fdd\u8bc1\u65f6\u95f4\u59cb\u7ec8\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\nlist_node *insert_list_node(list_node *head, list_node *node) {\n  if (node == NULL) {\n    return head;\n  }\n\n  if (head == NULL || head-&gt;time &lt; node-&gt;time) {\n    if (head != NULL) {\n      node-&gt;next = head;\n    }\n    return node;\n  }\n\n  list_node *prev = head;\n  for (list_node *curr = head-&gt;next; curr != NULL; curr = curr-&gt;next) {\n    if (curr-&gt;time &lt; node-&gt;time) {\n      break;\n    }\n    prev = curr;\n  }\n\n  // prev -&gt; node -&gt; curr (\u5c06 node \u63d2\u5165 prev \u548c curr \u4e4b\u95f4)\n  node-&gt;next = prev-&gt;next;\n  prev-&gt;next = node;\n  return head;\n}\n\n// \u91ca\u653e\u94fe\u8868\u5185\u5b58\nvoid free_list(list_node *head) {\n  list_node *curr = head;\n  while (curr != NULL) {\n    list_node *next = curr-&gt;next;\n    if (curr-&gt;name != NULL) {\n      free(curr-&gt;name);\n    }\n    curr-&gt;name = NULL;\n    free(curr);\n    curr = next;\n  }\n  return;\n}\n\n\nint main(int argc, char *argv[])  {\n  int fd[2]; // fd[0]: \u8bfb\u53e3\uff0cfd[1]: \u5199\u53e3\n  if (pipe(fd) == -1) {\n    // \u521b\u5efa\u7ba1\u9053\u5931\u8d25\n    perror(\"pipe failed\\n\");\n    exit(EXIT_FAILURE);\n  }\n  int pid = fork();\n  if (pid == -1) {\n    // \u5b50\u8fdb\u7a0b\u521b\u5efa\u5931\u8d25\n    perror(\"fork failed\\n\");\n    exit(EXIT_FAILURE);\n  } else if (pid == 0) {\n    // \u5b50\u8fdb\u7a0b\uff0c\u6267\u884cstrace\u547d\u4ee4\n    // \u5173\u95ed\u7ba1\u9053\u8bfb\u53d6\u7aef\uff0c\u5e76\u5c06\u7ba1\u9053\u5199\u5165\u7aef\u91cd\u5b9a\u5411\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\n    close(fd[0]);\n    if (dup2(fd[1], STDERR_FILENO) == -1) {\n      // \u91cd\u5b9a\u5411\u5931\u8d25\n      perror(\"dup2 failed!\\n\");\n      close(fd[1]);\n      exit(EXIT_FAILURE);\n    }\n    // \u6267\u884cstrace\n    char *exec_argv[argc + 2];\n    exec_argv[0] = \"strace\";\n    exec_argv[1] = \"-T\";\n    for (int i = 1; i &lt; argc; i++) {\n      exec_argv[i + 1] = argv[i];\n    }\n    exec_argv[argc + 1] = NULL;\n\n    char *exec_envp[] = {\n        \"PATH=/bin\",\n        NULL,\n    };\n    execve(\"strace\", exec_argv, exec_envp);\n    execve(\"/bin/strace\", exec_argv, exec_envp);\n    execve(\"/usr/bin/strace\", exec_argv, exec_envp);\n    perror(argv[0]); // \u5982\u679c\u524d\u9762\u7684\u4e09\u4e2a execve \u8c03\u7528\u90fd\u5931\u8d25\u4e86\uff0c\u5373\u6ca1\u6709\n    // \u627e\u5230 strace \u547d\u4ee4\u6216\u8005\u6267\u884c strace \u547d\u4ee4\u5931\u8d25\uff0c\u90a3\u4e48\u7a0b\u5e8f\u4f1a\u6267\u884c\u5230\u8fd9\u91cc\n    close(fd[1]);\n    exit(EXIT_FAILURE);\n  } else {\n    // \u7236\u8fdb\u7a0b\uff0c\u8bfb\u53d6strace\u8f93\u51fa\u5e76\u7edf\u8ba1\n    regex_t reg1, reg2; // reg1: \u8c03\u7528\u51fd\u6570\u540d  reg2: \u82b1\u8d39\u65f6\u95f4\n    if (regcomp(&amp;reg1, \"[^\\\\(\\n\\r\\b\\t]*\\\\(\", REG_EXTENDED) ||\n        regcomp(&amp;reg2, \"&lt;.*&gt;\", REG_EXTENDED)) {\n      perror(\"regcomp failed!\\n\");\n      exit(EXIT_FAILURE);\n    }\n    // \u94fe\u8868\u8bb0\u5f55\u5404\u9879\u8c03\u7528\u65f6\u95f4\u4fe1\u606f\n    list_node *head = NULL;\n    // \u8c03\u7528\u603b\u65f6\u95f4\n    double total_time = 0;\n    // \u7ba1\u9053\u8bfb\u53d6\u7f13\u5b58\n    char buffer[BUFFER_SIZE];\n    // \u5173\u95ed\u7ba1\u9053\u5199\u5165\u7aef\uff0c\u5e76\u4ece\u7ba1\u9053\u4e2d\u8bfb\u53d6\u6570\u636e\n    close(fd[1]);\n    FILE *fp = fdopen(fd[0], \"r\");\n    // \u5f53\u524d\u65f6\u95f4\n    int curr_time = 1;\n    // \u8fd0\u884c\u6807\u5fd7\n    int run_flag = 1;\n    while (run_flag) {\n      while (fgets(buffer, BUFFER_SIZE, fp) &gt; 0) {\n        // \u8bfb\u53d6\u5230 +++ exited with 1/0 +++ \u9000\u51fa\n        if (strstr(buffer, \"+++ exited with 0 +++\") != NULL ||\n            strstr(buffer, \"+++ exited with 1 +++\") != NULL) {\n          run_flag = 0;\n          break;\n        }\n        // \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u83b7\u53d6\u4fe1\u606f\n        regmatch_t regmat1, regmat2;\n        if (regexec(&amp;reg1, buffer, 1, &amp;regmat1, 0) ||\n            regexec(&amp;reg2, buffer, 1, &amp;regmat2, 0)) {\n          continue;\n        }\n        // \u8bfb\u53d6\u8c03\u7528\u540d\u79f0\u4fe1\u606f\n        int len = 0;\n        len = regmat1.rm_eo - regmat1.rm_so;\n        char *name = (char *)malloc(sizeof(char) * len);\n        strncpy(name, buffer + regmat1.rm_so, len);\n        name[len - 1] = '\\0';\n        // \u8bfb\u53d6\u65f6\u95f4\u4fe1\u606f\n        len = regmat2.rm_eo - regmat2.rm_so - 2;\n        char *value = (char *)malloc(sizeof(char) * len);\n        strncpy(value, buffer + regmat2.rm_so + 1, len);\n        double spent_time = atof(value);\n        // \u53ca\u65f6\u91ca\u653evalue\u5185\u5b58\n        free(value);\n        value = NULL;\n        // \u66f4\u65b0\u603b\u65f6\u95f4\n        total_time += spent_time;\n        // \u5c06\u4fe1\u606f\u4fdd\u5b58\u5230\u94fe\u8868\u4e2d\n        list_node *node = NULL;\n        int find_flag = 0;\n        list_node *prev = NULL;\n        for (list_node *curr = head; curr != NULL; curr = curr-&gt;next) {\n          // \u82e5\u4fe1\u606f\u5df2\u5b58\u5728\uff0c\u5219\u5c06\u5176\u66f4\u65b0\u540e\uff0c\u91cd\u65b0\u63d2\u5165\n          if (strcmp(curr-&gt;name, name) == 0) {\n            find_flag = 1;\n            if (prev == NULL) {\n              head = curr-&gt;next;\n            } else {\n              prev-&gt;next = curr-&gt;next;\n            }\n            node = curr;\n            // \u4fe1\u606f\u5b58\u5728\uff0c\u53ca\u65f6\u91ca\u653ename\u5185\u5b58\n            free(name);\n            name = NULL;\n            break;\n          }\n          prev = curr;\n        }\n\n        if (find_flag) {\n          // \u66f4\u65b0\u4fe1\u606f\n          node-&gt;time += spent_time;\n        } else {\n          // \u65b0\u5efa\u8282\u70b9\uff0c\u521d\u59cb\u5316\u4fe1\u606f\n          node = (list_node *)malloc(sizeof(list_node));\n          node-&gt;name = name;\n          node-&gt;time = spent_time;\n        }\n        // \u63d2\u5165\u94fe\u8868\n        head = insert_list_node(head, node);\n      }\n\n      // \u683c\u5f0f\u5316\u6253\u5370\u524d\u4e94\u5360\u6bd4\u8c03\u7528\u4fe1\u606f\n      printf(\"Time: %ds\\n\", curr_time);\n      int k = 0;\n      for (list_node *node = head; node != NULL; node = node-&gt;next) {\n        if (k++ &gt;= PRINT_NUM) {\n          break;\n        }\n        printf(\"%s (%0.1f%%)\\n\", node-&gt;name, node-&gt;time / total_time * 100);\n      }\n      printf(\"=============\\n\");\n      curr_time += TIME_INTERVAL_SEC;\n      sleep(TIME_INTERVAL_SEC);\n    }\n    // \u5173\u95ed\u7ba1\u9053\u8bfb\u53d6\u7aef\uff0c\u91ca\u653e\u76f8\u5173\u8d44\u6e90\n    regfree(&amp;reg1);\n    regfree(&amp;reg2);\n    fclose(fp);\n    close(fd[0]);\n    free_list(head);\n    exit(EXIT_SUCCESS);\n  }\n}\n</code></pre></p> </li> <li> <p>output <pre><code>linux$ ./sperf-64 ls\nMakefile  sperf-32  sperf-64  sperf.c\nTime: 1s\nmmap (21.5%)\nmprotect (12.6%)\nopenat (7.5%)\nclose (6.8%)\nnewfstatat (6.1%)\n=============\n</code></pre></p> </li> </ol>"},{"location":"OS/Lab/#m6-fsrecov","title":"M6: \u6587\u4ef6\u7cfb\u7edf\u683c\u5f0f\u5316\u6062\u590d (fsrecov)","text":"<ol> <li> <p>FAT\uff08File Allocation Table\uff0c\u6587\u4ef6\u5206\u914d\u8868\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u7ba1\u7406\u78c1\u76d8\u6587\u4ef6\u5b58\u50a8\u7684\u6587\u4ef6\u7cfb\u7edf\u3002BPB\uff08BIOS Parameter Block\uff0cBIOS\u53c2\u6570\u5757\uff09\u662fFAT\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u5b83\u5305\u542b\u4e86\u6587\u4ef6\u7cfb\u7edf\u7684\u5173\u952e\u53c2\u6570\u548c\u8bbe\u7f6e\u3002</p> <p>BPB\u901a\u5e38\u4f4d\u4e8e\u78c1\u76d8\u7684\u7b2c\u4e00\u4e2a\u6247\u533a\uff08\u5f15\u5bfc\u6247\u533a\uff09\uff0c\u5b83\u63d0\u4f9b\u4e86\u6587\u4ef6\u7cfb\u7edf\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u5982\u6bcf\u6247\u533a\u5b57\u8282\u6570\u3001\u6bcf\u7c07\u6247\u533a\u6570\u3001\u4fdd\u7559\u6247\u533a\u6570\u3001FAT\u8868\u4e2a\u6570\u3001\u6839\u76ee\u5f55\u9879\u6570\u7b49\u3002\u8fd9\u4e9b\u53c2\u6570\u5bf9\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6b63\u786e\u8bbf\u95ee\u548c\u7ba1\u7406\u6587\u4ef6\u7cfb\u7edf\u81f3\u5173\u91cd\u8981\u3002</p> </li> <li> <p>fsrecov.c <pre><code>#include &lt;stdio.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;stdint.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;sys/mman.h&gt;\n#include &lt;string.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;stdbool.h&gt;\n#include &lt;ctype.h&gt;\n#include &lt;math.h&gt;\n#include &lt;time.h&gt;\n\n#define B 1\n\n//#define __DEBUG__\n//#define __DDEBUG__\n\n#define KB (1024 * B)\n#define MB (1024 * KB)\n#define GB (1024 * KB)\n\n#ifdef __DEBUG__\n#define print(...) printf(__VA_ARGS__)\n#else\n#define print(...) \n#endif\n\n#ifdef __DDEBUG__\n#define printk(...) printf(__VA_ARGS__)\n#else\n#define printk(...) \n#endif\n\n#define Unknown (-1)\n#define DirEntry 1\n#define beNotUsed 2\n#define BMPContent 3\n\n// FAT \u7684 BPB(BIOS Parameter Block) \u662fFAT\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\n// \u5b83\u5305\u542b\u4e86\u6587\u4ef6\u7cfb\u7edf\u7684\u5173\u952e\u53c2\u6570\u548c\u8bbe\u7f6e\u3002\nint BPB_BytsPerSec;\nint BPB_SecPerClus;\nint BPB_RootClus;\nint BPB_FATSz32;\nint BPB_HiddSec;\nint BPB_RsvdSecCnt;\nint BPB_NumFATs;\nint offset;\nint clusSize;\n\ninline bool inFile(const void* nowAddr, const void* fileStart, int fileSize) {\n    return ((intptr_t)(nowAddr) - (intptr_t)(fileStart)) &lt; fileSize ? true : false;\n}\ninline int getClusterIndex(const void* addr, const void* start, int clusterSize) {\n    return ((intptr_t)addr - (intptr_t) start) / clusterSize;\n}\ninline void* nextClus(const void* Clus) {\n    return (void*)((intptr_t)(Clus) + BPB_BytsPerSec * BPB_SecPerClus);\n}\n\nstruct FATHeader {\n    uint8_t  BS_jmpBoot[3];\n    uint8_t  BS_OEMName[8];\n    uint16_t BPB_BytsPerSec;\n    uint8_t  BPB_SecPerClus;\n    uint16_t BPB_RsvdSecCnt;\n    uint8_t  BPB_NumFATs;\n    uint16_t BPB_RootEntCnt;\n    uint16_t BPB_TotSec16;\n    uint8_t  BPB_Media;\n    uint16_t BPB_FATSz16;\n    uint16_t BPB_SecPerTrk;\n    uint16_t BPB_NumHeads;\n    uint32_t BPB_HiddSec;\n    uint32_t BPB_TotSec32;\n    uint32_t BPB_FATSz32;\n    uint16_t BPB_ExtFlags;\n    uint16_t BPB_FSVer;\n    uint32_t BPB_RootClus;\n    uint16_t BPB_FSInfo;\n    uint16_t BPB_BkBootSec;\n    uint8_t  BPB_Reserved[12];\n    uint8_t  BS_DrvNum;\n    uint8_t  BS_Reserved;\n    uint8_t  BS_BootSig;\n    uint32_t BS_VolID; \n    uint8_t  BS_VolLab[11];\n    uint8_t  BS_FilSysType0;\n    uint8_t  BS_FilSysType1;\n    uint8_t  BS_FilSysType2;\n    uint8_t  BS_FilSysType3;\n    uint8_t  BS_FilSysType4;\n    uint8_t  BS_FilSysType5;\n    uint8_t  BS_FilSysType6;\n    uint8_t  BS_FilSysType7;\n    uint8_t  padding[420];\n    uint16_t Signature_word;\n}__attribute__((packed));\n\nstruct BMPHeader {\n    uint8_t  bfType[2];\n    uint32_t bfSize;\n    uint16_t bfReserved1;\n    uint16_t bfReserved2;\n    uint32_t bfOffBits;\n}__attribute__((packed));\n\nstruct BMPInfoHeader {\n    uint32_t biSize;\n    int32_t  biWidth;\n    uint32_t biHeight;\n    uint16_t biPlanes;\n    uint16_t biBitCount;\n    uint32_t biCompression;\n    uint32_t biSizeImage;\n    int32_t  biXPelsPerMeter;\n    int32_t  biYPelsPerMeter;\n    uint32_t biClrUsed;\n    uint32_t biClrImportant;\n}__attribute__((packed));\n\nstruct FATShortDirectory {\n    uint8_t  DIR_Name[11];\n    uint8_t  DIR_Attr;\n    uint8_t  DIR_NTRes;\n    uint8_t  DIR_CrtTimeTenth;\n    uint16_t DIR_CrtTime;\n    uint16_t DIR_CrtDate;\n    uint16_t DIR_LstAccDate;\n    uint16_t DIR_FstClusHI;\n    uint16_t DIR_WrtTime;\n    uint16_t DIR_WrtDate;\n    uint16_t DIR_FstClusLO;\n    uint32_t DIR_FileSize;\n}__attribute__((packed));\n\nstruct FATLongDirectory {\n    uint8_t  LDIR_Ord;\n    uint16_t LDIR_Name1[5];\n    uint8_t  LDIR_Attr;\n    uint8_t  LDIR_Type;\n    uint8_t  LDIR_Chksum;\n    uint16_t LDIR_Name2[6];\n    uint16_t LDIR_FstClusLO;\n    uint16_t LDIR_Name3[2];\n}__attribute__((packed));\n\nbool isFATLongDirectory(const struct FATLongDirectory* pFATldir);\nbool isFATShortDirectory(const struct FATShortDirectory*);\nchar* readCompleteInfoFromFATShortDirectory(struct FATShortDirectory* pFATsd);\nstatic inline struct FATLongDirectory* nextLongDirectory(struct FATLongDirectory* longDirectory){\n    return (struct FATLongDirectory*)((intptr_t)(longDirectory) + sizeof(struct FATLongDirectory));\n\n}\ndouble sobelY(uint8_t* lowerline, uint8_t* nowline, uint8_t* higherline, int pixels);\nstatic inline struct FATShortDirectory* nextShortDirectory(struct FATShortDirectory* shortDirectory){\n    return (struct FATShortDirectory*)((intptr_t)(shortDirectory) + sizeof(struct FATShortDirectory));\n}\nbool isValidFileName(char* name);\nint dirClus[100];\n\nvoid* getClusterFromIndex(int index_from_zero, void* initialClusterAddr) {\n    return initialClusterAddr + index_from_zero * clusSize;\n}\n\nvoid initAttr(struct FATHeader* pfatheader) {\n    BPB_BytsPerSec = pfatheader-&gt;BPB_BytsPerSec;\n    BPB_SecPerClus = pfatheader-&gt;BPB_SecPerClus;\n    BPB_RootClus = pfatheader-&gt;BPB_RootClus;\n    BPB_FATSz32 = pfatheader-&gt;BPB_FATSz32;\n    BPB_HiddSec = pfatheader-&gt;BPB_HiddSec;\n    BPB_RsvdSecCnt = pfatheader-&gt;BPB_RsvdSecCnt;\n    BPB_NumFATs = pfatheader-&gt;BPB_NumFATs;\n    clusSize = BPB_SecPerClus * BPB_BytsPerSec;\n}\n\nvoid dirClusAdd(int index) {\n    assert(index &gt;= 0);\n    for (int i = 0; i &lt; 100; i++) {\n        if (dirClus[i] == -1) {\n            dirClus[i] = index;\n            return;\n        }\n    }\n    assert(0);\n}\n\nint main (int argc, char* argv[]) {\n    srand(time(NULL));\n    char* imgName = argv[1];\n    struct stat statbuf;\n    stat(imgName, &amp;statbuf);    // \u83b7\u53d6img\u6587\u4ef6\u7684\u72b6\u6001\u4fe1\u606f\n    int imgSize = statbuf.st_size;\n    int imgFd = open(imgName, O_RDONLY, 0);\n    struct FATHeader* pFATHeader = (struct FATHeader *) mmap(NULL, imgSize, PROT_READ, MAP_SHARED, imgFd, 0);\n    uint8_t picture[4 * MB];\n    uint8_t lowerline[128 * KB];\n    uint8_t nowline[128 * KB];\n    uint8_t higherline[128 * KB];\n    uint8_t tmpnowline[128 * KB];\n    uint8_t tmphigherline[128 * KB];\n    BPB_BytsPerSec = 512;\n    BPB_SecPerClus = 8;\n    BPB_RootClus   = pFATHeader-&gt;BPB_RootClus;\n    BPB_FATSz32    = pFATHeader-&gt;BPB_FATSz32;\n    BPB_HiddSec    = pFATHeader-&gt;BPB_HiddSec;\n    BPB_RsvdSecCnt = pFATHeader-&gt;BPB_RsvdSecCnt;\n    BPB_NumFATs    = pFATHeader-&gt;BPB_NumFATs;\n    clusSize       = BPB_BytsPerSec * BPB_SecPerClus;\n    // \u8ba1\u7b97\u56fe\u50cf\u6570\u636e\u5728\u6587\u4ef6\u4e2d\u7684\u504f\u79fb\u91cf\u3002\u4fdd\u7559\u6247\u533a\u3001FAT \u8868\u3001\u6839\u76ee\u5f55(\u7c07\u53f7\u4ece2\u5f00\u59cb)\u3001\u9690\u85cf\u6247\u533a\u3001\u56fe\u50cf\n    int imgOffset = (BPB_RsvdSecCnt + BPB_NumFATs * BPB_FATSz32 + (BPB_RootClus - 2) * BPB_SecPerClus + BPB_HiddSec) * BPB_BytsPerSec;\n    struct FATShortDirectory* pFATshdir = (void* )pFATHeader + imgOffset;\n    void* imgDataStart = (void* )pFATHeader + imgOffset;\n    int imgDataSize = imgSize - imgOffset;\n    int tmpi = 0;\n    int clusNum = imgDataSize / clusSize;\n    int* cluses = malloc(sizeof(int) * clusNum); // \u5728\u5185\u5b58\u4e2d\u52a8\u6001\u5206\u914d\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u7528\u4e8eimgData\u4e2d\u6bcf\u4e2a\u7c07\u7684\u72b6\u6001\n    for (int i = 0; i &lt; clusNum; i++) \n        cluses[i] = Unknown;\n    // \u904d\u5386imgData\u4e2d\u7684\u7c07\uff0c\u5e76\u68c0\u67e5\u6bcf\u4e2a\u7c07\u4e2d\u7684\u77ed\u76ee\u5f55\u9879\uff08FATShortDirectory\uff09\u548c\u957f\u76ee\u5f55\u9879\uff08FATLongDirectory\uff09\n    // \u8fd9\u4e2a\u5faa\u73af\u7684\u4e3b\u8981\u76ee\u7684\u662f\u8bc6\u522b\u548c\u6807\u8bb0\u90a3\u4e9b\u5305\u542b\u76ee\u5f55\u9879\u7684\u7c07\n    for (void* cluster = imgDataStart; inFile(cluster, imgDataStart, imgDataSize); cluster = nextClus(cluster)) {\n        int countsh = 0; // \u77ed\u76ee\u5f55\u9879\u6570\u91cf\n        int countl = 0;  // \u957f\u76ee\u5f55\u9879\u6570\u91cf\n        for (struct FATShortDirectory* ptmp = cluster; inFile(ptmp, cluster, clusSize); ptmp++) {\n            if (isFATShortDirectory(ptmp)) {\n                char nameTmp[12];\n                memcpy(nameTmp, ptmp-&gt;DIR_Name, 11);\n                nameTmp[11] = '\\0';\n                tmpi++;\n                countsh++;\n                if (isFATLongDirectory((void*)(ptmp - 1)))\n                    countl++;\n                if (isFATLongDirectory((void*)(ptmp - 2)))\n                    countl++;\n            }\n        }\n        if (countsh &gt; 6 &amp;&amp; countl &gt;= countsh) {\n            int index = getClusterIndex(cluster, imgDataStart, clusSize);\n            cluses[index] = DirEntry;\n        }\n    }\n    for (int i = 0; i &lt; clusNum; i++) {\n        if (cluses[i] == DirEntry) {\n            void* cluster = getClusterFromIndex(i, imgDataStart);\n            int j = 0;\n            for (struct FATShortDirectory* ptmp = cluster; inFile(ptmp, cluster, clusSize); ptmp++) {\n                if (isFATShortDirectory(ptmp) &amp;&amp; isFATLongDirectory((void*)(ptmp - 1))) {\n                    char* name = readCompleteInfoFromFATShortDirectory(ptmp);\n                    if (name != NULL) {\n                        char* prefix = \"/tmp/\";\n                        int picNameSize = strlen(prefix) + strlen(name) + 1;\n                        char* abspath = malloc(sizeof(char) * picNameSize);\n                        memset(abspath, '\\0', picNameSize);\n                        strcat(strcat(abspath, prefix), name);\n\n                        struct BMPHeader* picStart = (void*) ((uintptr_t)pFATHeader + imgOffset + (ptmp-&gt;DIR_FstClusLO - BPB_RootClus) * clusSize);\n                        FILE* pfdpic = fopen(abspath, \"w+\");\n                        fwrite(picStart, 1, sizeof(*picStart), pfdpic);\n                        fclose(pfdpic);\n                        pfdpic = fopen(abspath, \"a+\");\n                        struct BMPInfoHeader* picInfo = (struct BMPInfoHeader*)(picStart + 1);\n                        fwrite(picInfo, 1, picStart-&gt;bfOffBits - sizeof(*picStart), pfdpic);\n                        fclose(pfdpic);\n\n                        pfdpic = fopen(abspath, \"a+\");\n                        void* picData = (struct BMPInfoHeader*)(picInfo + 1);\n                        int picDataSize = picStart-&gt;bfSize - picStart-&gt;bfOffBits;\n\n                        int ByteperPixel = picInfo-&gt;biBitCount / 8;\n                        int picHeight = picInfo-&gt;biHeight;\n                        int realWidthSize = (picInfo-&gt;biWidth * picInfo-&gt;biBitCount + 31) / 32 * 4;\n                        void* source = NULL;\n                        source = picData;\n                        int r = rand();\n                        // \u901a\u8fc7Sobel\u8fb9\u7f18\u68c0\u6d4b\u7b97\u6cd5\u6765\u4f18\u5316\u56fe\u50cf\u7684\u8fb9\u7f18\u8d28\u91cf\uff0c\u7279\u522b\u662f\u5728\u6570\u636e\u8de8\u7c07\u5b58\u50a8\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u5bfb\u627e\u6700\u4f18\u7684\u7c07\u7ec4\u5408\u6765\u51cf\u5c11\u8fb9\u7f18\u7684\u4e0d\u8fde\u7eed\u6027\u3002\n                        for (int i = 0; i &lt; picHeight; i++) {\n                            memcpy(nowline, source + i * realWidthSize, realWidthSize);\n                            if (i != 0) { // \u53ea\u5bf9\u975e\u7b2c\u4e00\u884c\u7684\u884c\u8fdb\u884c\u5904\u7406\n                                if (r % 10 &gt; 1) {\n                                    if (getClusterIndex(source + i * realWidthSize, imgDataStart, clusSize) != getClusterIndex(source + (i + 1) * realWidthSize, imgDataStart, clusSize)) {\n                                        int nowIndex = getClusterIndex(source + i * realWidthSize, imgDataStart, clusSize);\n                                        int nowLength = (intptr_t)(getClusterFromIndex(nowIndex + 1, imgDataStart)) - (intptr_t)(source + i * realWidthSize);\n\n                                        int requiredLength = realWidthSize - nowLength;\n                                        int pixels = realWidthSize / ByteperPixel;\n                                        double mean = sobelY(lowerline, nowline, higherline, pixels);\n                                        if (mean &gt; 11500) {\n                                            double tmpLow = mean;\n                                            int tmpLowIndex = -1;\n                                            for (int j = 0; j &lt; clusNum; j++) {\n                                                void* tmpcluster = getClusterFromIndex(j, imgDataStart);\n                                                memcpy(tmpnowline, nowline, nowLength);\n                                                memcpy(tmpnowline + nowLength, tmpcluster, requiredLength);\n                                                double tmpd = sobelY(lowerline, tmpnowline, tmphigherline, pixels);\n                                                if (tmpd &lt; tmpLow) {\n                                                    tmpLow = tmpd;\n                                                    tmpLowIndex = j;\n                                                }\n                                            }\n                                            void* newCluster = getClusterFromIndex(tmpLowIndex, imgDataStart);\n                                            source = newCluster - i * realWidthSize + requiredLength - realWidthSize;\n                                            memcpy(nowline+nowLength, newCluster, requiredLength);\n\n                                        }\n                                    }\n                                }\n                            }\n                            memcpy(picture + i * realWidthSize, nowline, realWidthSize);\n                            memcpy(lowerline, nowline, realWidthSize);\n                        }\n                        // \u7ed3\u675f\n\n                        fwrite(picture, 1, picDataSize, pfdpic);\n                        fclose(pfdpic);\n                        char buf[41];\n                        buf[40] = 0;\n                        char cmd[100];\n                        memset(cmd, 0, 100);\n                        int pipefds[2];\n                        if (pipe(pipefds) &lt; 0) {\n                            assert(0);\n                        }\n                        int pid = fork();\n                        char* argv[3];\n                        argv[0] = \"sha1sum\";\n                        argv[1] = abspath;\n                        argv[2] = NULL;\n                        if (pid == 0) {\n                            close(pipefds[0]);\n                            dup2(pipefds[1], fileno(stderr));\n                            dup2(pipefds[1], fileno(stdout));\n                            execvp(\"sha1sum\", argv);\n                        } else {\n                            close(pipefds[1]);\n                            read(pipefds[0], buf, 40);\n                            printf(\"%s   %s\\n\", buf, name);\n                            fflush(stdout);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n\nbool isFATShortDirectory(const struct FATShortDirectory* ptmp) {\n    if (strncmp((char*)&amp;ptmp-&gt;DIR_Name[8], \"BMP\", 3) == 0) {\n        return true;\n    }\n    return false;\n}\n\nbool isFATLongDirectory(const struct FATLongDirectory* pFATldir) {\n    // \u68c0\u67e5 pFATldir-&gt;LDIR_Ord \u7684\u9ad8 4 \u4f4d\u662f\u5426\u65e2\u4e0d\u662f 0x4 \u4e5f\u4e0d\u662f 0\n    if ((pFATldir-&gt;LDIR_Ord &gt;&gt; 4) != 0x4 &amp;&amp; (pFATldir-&gt;LDIR_Ord &gt;&gt; 4) != 0) {\n        return false;\n    }\n    if (pFATldir-&gt;LDIR_FstClusLO != 0 || pFATldir-&gt;LDIR_Type != 0)\n        return false;\n    else    \n        return true;\n}\n\nchar* readCompleteInfoFromFATShortDirectory(struct FATShortDirectory* pFATsd) {\n\n    char* name = malloc(sizeof(char) * 200);\n    memset(name, '\\0', 200);\n    struct FATLongDirectory* pFATld = (struct FATLongDirectory*) (pFATsd-1);\n    int i = -1;\n    if ((pFATld-&gt;LDIR_Ord &gt;&gt; 4) != 0x4 &amp;&amp; (pFATld-&gt;LDIR_Ord &gt;&gt; 4) != 0) {\n        return NULL;\n    }\n    while ((pFATld-&gt;LDIR_Ord &gt;&gt; 4) == 0) {\n        i += 1;\n        name[i*13+0] = (char) pFATld-&gt;LDIR_Name1[0];\n        name[i*13+1] = (char) pFATld-&gt;LDIR_Name1[1];\n        name[i*13+2] = (char) pFATld-&gt;LDIR_Name1[2];\n        name[i*13+3] = (char) pFATld-&gt;LDIR_Name1[3];\n        name[i*13+4] = (char) pFATld-&gt;LDIR_Name1[4];\n        name[i*13+5] = (char) pFATld-&gt;LDIR_Name2[0];\n        name[i*13+6] = (char) pFATld-&gt;LDIR_Name2[1];\n        name[i*13+7] = (char) pFATld-&gt;LDIR_Name2[2];\n        name[i*13+8] = (char) pFATld-&gt;LDIR_Name2[3];\n        name[i*13+9] = (char) pFATld-&gt;LDIR_Name2[4];\n        name[i*13+10] = (char) pFATld-&gt;LDIR_Name2[5];\n        name[i*13+11] = (char) pFATld-&gt;LDIR_Name3[0];\n        name[i*13+12] = (char) pFATld-&gt;LDIR_Name3[1];\n        pFATld = pFATld-1;\n    }\n    i += 1;\n    name[i*13+0] = (char) pFATld-&gt;LDIR_Name1[0];\n    name[i*13+1] = (char) pFATld-&gt;LDIR_Name1[1];\n    name[i*13+2] = (char) pFATld-&gt;LDIR_Name1[2];\n    name[i*13+3] = (char) pFATld-&gt;LDIR_Name1[3];\n    name[i*13+4] = (char) pFATld-&gt;LDIR_Name1[4];\n    name[i*13+5] = (char) pFATld-&gt;LDIR_Name2[0];\n    name[i*13+6] = (char) pFATld-&gt;LDIR_Name2[1];\n    name[i*13+7] = (char) pFATld-&gt;LDIR_Name2[2];\n    name[i*13+8] = (char) pFATld-&gt;LDIR_Name2[3];\n    name[i*13+9] = (char) pFATld-&gt;LDIR_Name2[4];\n    name[i*13+10] = (char) pFATld-&gt;LDIR_Name2[5];\n    name[i*13+11] = (char) pFATld-&gt;LDIR_Name3[0];\n    name[i*13+12] = (char) pFATld-&gt;LDIR_Name3[1];\n    for (int j = 12; j &gt; -1; j--) {\n        if (name[i*13+j] == 'p' &amp;&amp; name[i*13+j-1] == 'm' &amp;&amp; name[i*13+j-2] == 'b' &amp;&amp; name[i*13+j-3] == '.' ) {\n            name[i*13+j+1]= 0;\n            break;\n        }\n    }\n    for (int i = 0; i &lt; strlen(name); i++) {\n        if (!isprint(name[i]))\n            return NULL;\n    }\n    return name;\n}\n\nint comp(const void* a, const void* b) {\n    return *(double*)a - *(double*)b;\n}\n\ndouble sobelY(uint8_t* lowerline, uint8_t* nowline, uint8_t* higherline, int pixels) {\n    double r, g, b, sum;\n    sum = r = g = b = 0;\n    for (int i = 0; i &lt; pixels; i++) {\n        r = nowline[i*3+0]-lowerline[i*3+0];\n        g = nowline[i*3+1]-lowerline[i*3+1];\n        b = nowline[i*3+2]-lowerline[i*3+2];\n        sum += pow(r,2)+pow(g,2)+pow(b,2);\n    }\n    double mean;\n    mean = sum/pixels;\n    return mean;\n}\n</code></pre></p> </li> <li> <p>output: <pre><code>linux$ ./fsrecov-64 /tmp/fsrecov.img | grep C0NrniO8Tu5T.bmp\na9d9d319d3ca10870e31d1595f00d5c27dee7f1b  C0NrniO8Tu5T.bmp\nlinux$ cd /mnt/DCIM &amp;&amp; sha1sum *.bmp | grep C0NrniO8Tu5T.bmp\na9d9d319d3ca10870e31d1595f00d5c27dee7f1b  C0NrniO8Tu5T.bmp\n</code></pre></p> </li> </ol>"},{"location":"OS/Lab/#l0","title":"L0: \u4e3a\u8ba1\u7b97\u673a\u786c\u4ef6\u7f16\u7a0b","text":""},{"location":"OS/Lab/#l1-pmm","title":"L1: \u7269\u7406\u5185\u5b58\u7ba1\u7406 (pmm)","text":""},{"location":"OS/Lab/#l2-kmt","title":"L2: \u5185\u6838\u7ebf\u7a0b\u7ba1\u7406 (kmt)","text":""},{"location":"OS/OSTEP/","title":"OSTEP","text":""},{"location":"OS/OSTEP/#_1","title":"\u8d44\u6599","text":"<ul> <li>OSTEP</li> </ul>"},{"location":"OS/OSTEP/#introduction","title":"Introduction","text":"<ol> <li>\ud83d\udccc P13 Beyond Libraries: Protection </li> </ol>"},{"location":"OS/SJTU_OS/","title":"SJTU OS","text":""},{"location":"OS/SJTU_OS/#_1","title":"\u8d44\u6599","text":"<ul> <li>\u64cd\u4f5c\u7cfb\u7edf\uff1a\u539f\u7406\u4e0e\u5b9e\u73b0</li> <li>\u8bfe\u7a0b\u7f51\u7ad9</li> <li>OS-Course-Lab</li> <li>\u8bfe\u7a0b\u89c6\u9891</li> <li>\u597d\u5927\u5b66\u5728\u7ebf</li> <li>Lab\u89c6\u9891</li> </ul>"},{"location":"OS/%E5%B9%B6%E5%8F%91/","title":"\u5e76\u53d1","text":""},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-5","title":"Lecture 5 \u591a\u5904\u7406\u5668\u7f16\u7a0b","text":"<p>Take-away Messages</p> <p>\u5728\u7b80\u5316\u591a\u7ebf\u7a0b\u7684\u6a21\u578b\u4e2d\uff0c\u5e76\u53d1\u7a0b\u5e8f\u5c31\u662f \u201c\u72b6\u6001\u673a\u7684\u96c6\u5408\u201d\uff0c\u6bcf\u4e00\u6b65\u9009\u4e00\u4e2a\u72b6\u6001\u673a\u6267\u884c\u4e00\u6b65\u3002\u7136\u800c\uff0c\u771f\u5b9e\u7684\u7cfb\u7edf\u5374\u56e0\u4e3a \u201c\u7f16\u8bd1\u5668\u201d \u7684\u65e0\u5904\u4e0d\u5728\uff0c\u4f7f\u5171\u4eab\u5185\u5b58\u5e76\u53d1\u7684\u884c\u4e3a\u5341\u5206\u590d\u6742\u3002</p> <p>\u4e0d\u5e78\u7684\u662f\uff0c\u4eba\u7c7b\u672c\u8d28\u4e0a\u662f\u7269\u7406\u4e16\u754c (\u5b8f\u89c2\u65f6\u95f4) \u4e2d\u7684 \u201csequential creature\u201d\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u7f16\u7a0b\u65f6\uff0c\u6211\u4eec\u7684\u76f4\u89c9\u4e5f\u53ea\u4e60\u60ef\u4e8e\u5355\u7ebf\u7a0b\u7684\u987a\u5e8f/\u9009\u62e9/\u5faa\u73af\u7ed3\u6784\uff0c\u771f\u5b9e\u591a\u5904\u7406\u5668\u4e0a\u7684\u5e76\u53d1\u7f16\u7a0b\u662f\u975e\u5e38\u5177\u6709\u6311\u6218\u6027\u7684 \u201c\u5e95\u5c42\u6280\u672f\u201d\u3002\u5728\u540e\u7eed\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u63d0\u51fa\u82e5\u5e72\u5e76\u53d1\u63a7\u5236\u6280\u672f\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u5728\u9700\u8981\u7684\u65f6\u5019\u907f\u514d\u5e76\u53d1\u7684\u53d1\u751f\uff0c\u4f7f\u5e76\u53d1\u7a0b\u5e8f\u9000\u56de\u5230\u987a\u5e8f\u7a0b\u5e8f\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u80fd\u591f\u7406\u89e3\u548c\u63a7\u5236\u5e76\u53d1\u3002</p> <ol> <li>\u7b80\u5316\u7684\u7ebf\u7a0b API (thread.h)<ul> <li><code>create(fn)</code><ul> <li>\u521b\u5efa\u4e00\u4e2a\u5165\u53e3\u51fd\u6570\u662f <code>fn</code> \u7684\u7ebf\u7a0b\uff0c\u5e76\u7acb\u5373\u5f00\u59cb\u6267\u884c<ul> <li><code>void fn(int tid) { ... }</code></li> <li>\u53c2\u6570 <code>tid</code> \u4ece 1 \u5f00\u59cb\u7f16\u53f7</li> </ul> </li> <li>\u884c\u4e3a\uff1a<code>sys_spawn(fn, tid)</code></li> </ul> </li> <li><code>join()</code><ul> <li>\u7b49\u5f85\u6240\u6709\u8fd0\u884c\u7ebf\u7a0b\u7684\u8fd4\u56de (\u4e5f\u53ef\u4ee5\u4e0d\u8c03\u7528)</li> <li>\u884c\u4e3a\uff1a<code>while (done != T) sys_sched()</code></li> </ul> </li> </ul> </li> <li> <p>hello.c\u4ea4\u66ff\u6253\u5370 a \u548c b</p> <pre><code>#include \"thread.h\"\n\nvoid T_a() { while (1) { printf(\"a\"); } }\nvoid T_b() { while (1) { printf(\"b\"); } }\n\nint main() {\n    create(T_a);\n    create(T_b);\n}\n</code></pre> <p><code>top -d 0.5</code>: \u67e5\u770b\u8fdb\u7a0b\u7684 CPU \u5360\u7528\u7387\uff0c\u53ef\u4ee5\u770b\u5230 CPU \u4f7f\u7528\u7387\u8fd1\u4e4e 200%\uff0c\u8bf4\u660e\u4e24\u4e2a\u7ebf\u7a0b\u51e0\u4e4e\u540c\u65f6\u8fd0\u884c\u3002\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u628a\u7ebf\u7a0b\u653e\u7f6e\u5728\u4e0d\u540c\u7684\u5904\u7406\u5668\u4e0a\uff0c\u4ee5\u63d0\u9ad8\u6548\u7387\u3002</p> <pre><code>PID   USER      PR   NI  VIRT   RES  SHR S %CPU   %MEM  TIME+   COMMAND\n26408 username  20   0   84796  956  868 S 196.0  0.0   0:43.42 hello\n</code></pre> </li> <li> <p>T_a \u548c T_b \u771f\u7684\u5171\u4eab\u5185\u5b58\u5417\uff1f\u2192 memory.c</p> <pre><code>#include \"thread.h\"\n\n// We claim that n is shared among threads.\nint n;\n\nvoid T_hello(int id) {\n    // To validate this claim, each thread reads and increments\n    // n, and we expect to see different numbers being printed.\n    int i = n++;\n    printf(\"%d\\n\", i);\n}\n\nint main() {\n    for (int i = 0; i &lt; 10; i++) {\n        create(T_hello);\n    }\n}\n</code></pre> </li> <li> <p>\u5982\u4f55\u8bc1\u660e\u7ebf\u7a0b\u5177\u6709\u72ec\u7acb\u5806\u6808 (\u4ee5\u53ca\u786e\u5b9a\u5806\u6808\u7684\u8303\u56f4)\uff1f\u2192 stack.c</p> <pre><code>#include \"thread.h\"\n\n#define N 4\n\nchar * volatile low[N];\nchar * volatile high[N];\n\nvoid update_range(int T, char *ptr) {\n    // We have a witness of thread T accessing stack pointer\n    // ptr. So we keep this record.\n    if (ptr &lt; low[T]) {\n        low[T] = ptr;\n    }\n    if (ptr &gt; high[T]) {\n        high[T] = ptr;\n    }\n}\n\nvoid probe(int T, int n) {\n    // Local variables are stack-allocated.\n    char scratch[64];\n    update_range(T, scratch);\n\n    printf(\"Stack(T%d) &gt;= %ld KB\\n\",\n        T, (high[T] - low[T]) / 1024);\n\n    probe(T, n + 1); // Infinite recursion.\n}\n\nvoid T_probe(int T) {\n    T -= 1; // \u521b\u5efa\u7684\u7ebf\u7a0bpid\u4ece1\u5f00\u59cb\uff0c\u6240\u4ee5T-1\u4ee5\u62ff\u5230\u6b63\u786e\u7684low[T]\n    low[T] = (char *)-1;  // 0xffffffffffffffff\n    high[T] = (char *)0;  // 0x0000000000000000\n    probe(T, 0);\n}\n\nint main() {\n    // Disable printf buffering. Try to make more lines being\n    // printed, because the program will eventually crash (and\n    // all buffered contents are lost).\n    setbuf(stdout, NULL);\n\n    for (int i = 0; i &lt; N; i++) {\n        create(T_probe);\n    }\n}\n</code></pre> <p>\u7a0b\u5e8f\u8f93\u51fa\uff1a <pre><code>----- Shared Memory Test -----\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n----- Stack Probe Test -----\nSegmentation fault (core dumped)\nStack(T2) &gt;= 8177 KB\n</code></pre> 8177KB\u6700\u63a5\u8fd18192KB\uff0c\u4e5f\u5c31\u662f\u8bf4\u7ebf\u7a0b\u5e93\u9ed8\u8ba4\u63d0\u4f9b\u7684stack\u5927\u5c0f\u662f8MB\uff0c\u8fd9\u4e2a\u5927\u5c0f\u8db3\u4ee5\u591f\u4e00\u822c\u7684\u7a0b\u5e8f\u4f7f\u7528\u4e86\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u5e76\u53d1\u7f16\u7a0b\uff0c\u8981\u820d\u5f03\u4e00\u4e9b\u6211\u4eec\u4e4b\u524d\u5bf9\u5355\u7ebf\u7a0b\u987a\u5e8f\u7a0b\u5e8f\u7684\u7406\u89e3:</p> <ul> <li>\u72b6\u6001\u8fc1\u79fb\u539f\u5b50\u6027\u7684\u5047\u8bbe: \u5171\u4eab\u5185\u5b58\u63a8\u7ffb\u4e86 \u201c\u539f\u5b50\u6027\u201d \u5047\u8bbe<ul> <li>\u4efb\u4f55\u65f6\u5019\uff0cload \u8bfb\u5230\u7684\u503c\u90fd\u53ef\u80fd\u662f\u522b\u7684\u7ebf\u7a0b\u5199\u5165\u7684</li> <li>\u6211\u4eec\u4e60\u4ee5\u4e3a\u5e38\u7684\u7b80\u5316\u4f1a\u6f0f\u6389\u5e76\u53d1\u7a0b\u5e8f\u53ef\u80fd\u7684\u884c\u4e3a</li> </ul> </li> <li>\u7a0b\u5e8f\u987a\u5e8f\u6267\u884c\u7684\u5047\u8bbe: \u7f16\u8bd1\u5668\u4f1a\u8bd5\u56fe\u4f18\u5316\u72b6\u6001\u8fc1\u79fb\uff0c\u6539\u53d8\u6267\u884c\u6d41</li> <li>\u5b58\u5728\u5168\u5c40\u6307\u4ee4\u6267\u884c\u987a\u5e8f\u7684\u5047\u8bbe: \u4e0d\u540c\u5904\u7406\u5668\u53ef\u80fd\u770b\u5230\u4e0d\u540c\u7684\u5171\u4eab\u5185\u5b58, \u201c\u4e00\u4e2a\u5171\u4eab\u5185\u5b58\u201d \u53ea\u662f\u4e2a\u7b80\u5316\u7684\u5e7b\u89c9\u3002\u7531\u4e8e\u52a8\u6001\u6307\u4ee4\u8c03\u5ea6\u548c\u7f13\u5b58\u7684\u5171\u540c\u4f5c\u7528\uff0c\u5b9e\u9645\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u66f4\u53ef\u80fd\u8d85\u51fa\u6211\u4eec\u7684\u9884\u671f\u3002</li> </ul> </li> <li> <p>\u72b6\u6001\u8fc1\u79fb\u539f\u5b50\u6027\u7684\u5047\u8bbe: alipay.c     <pre><code>#include \"thread.h\"\n\nunsigned long balance = 100;\n\nvoid Alipay_withdraw(int amt) {\n    if (balance &gt;= amt) {\n        // Bugs may only manifest on specific timings. Sometimes\n        // we reproduce bugs by inserting sleep()s.\n        usleep(1); // \u5f15\u53d1sys_sched()\n\n        balance -= amt;\n    }\n}\n\nvoid T_alipay() {\n    Alipay_withdraw(100);\n}\n\nint main() {\n    create(T_alipay);\n    create(T_alipay);\n    join();\n    printf(\"balance = %lu\\n\", balance);\n}\n</code></pre></p> <p>\u5728usleep(1)\u7684\u60c5\u51b5\u4e0b\u8f93\u51fa\u662f<code>balance = 18446744073709551516</code>\uff0c\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u6ee1\u8db3<code>balance &gt;= amt</code>\uff0c\u76f8\u5f53\u4e8e\u51cf\u4e86\u4e24\u6b21100\u3002</p> </li> <li> <p>\u4ee5\u4e0b\u4ee3\u7801 sum \u7684\u6700\u5c0f\u503c\u662f2\u7684\u60c5\u51b5\uff1a\u8be5\u7ebf\u7a0b\u6267\u884c\u5230\u6700\u540e\u4e00\u4e2afor\u5faa\u73af\u65f6\uff0cload\u5230\u7684sum\u4e3a1\uff08\u6ce8\u610f\u4e0d\u53ef\u80fdload\u5230sum\u4e3a0\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u672c\u7ebf\u7a0b\u800c\u8a00\u5df2\u7ecf\u6267\u884c\u8fc7\u4e24\u4e2afor\u5faa\u73af\u4e86\uff0c\u5982\u679c\u662fload\u672c\u7ebf\u7a0b\u7684sum\u5e94\u5f53\u662f2\uff0c\u4e00\u5b9a\u662fload\u522b\u7684\u7ebf\u7a0b\u6539\u5199\u540e\u7684sum\u3002\u522b\u7684\u7ebf\u7a0b\u4e00\u5b9a\u8981\u81f3\u5c11\u6267\u884c\u8fc7\u4e00\u6b21load-store\u628asum\u5199\u8fdb\u53bb\uff0c\u6240\u4ee5\u6b64\u65f6\u522b\u7684\u7ebf\u7a0b\u91ccsum\u6700\u5c0f\u4e3a1\uff09\uff0c\u7136\u540e\u63a5\u7740\u5176\u4ed6\u7ebf\u7a0b\u90fd\u6267\u884c\u5b8c\u6240\u6709\u5faa\u73af\u7ed3\u675f\u4e86\u3002\u8be5\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\u5b8c\u5269\u4e0b\u7684<code>t += 1; store(sum, t);</code>\u5bfc\u81f4\u6700\u540esum\u4e3a2\u3002     <pre><code>// \u521d\u59cb\u65f6 sum = 0; \u5047\u8bbe\u5355\u884c\u8bed\u53e5\u7684\u6267\u884c\u662f\u539f\u5b50\u7684\n// \u5e76\u53d1\u6267\u884c\u4e09\u4e2a T_sum\uff0csum \u7684\u6700\u5c0f\u503c\u662f\u591a\u5c11\uff1f\u2192 \u662f2\nvoid T_sum() {\n    for (int i = 0; i &lt; 3; i++) {\n        int t = load(sum);\n        t += 1;\n        store(sum, t);\n    }\n}\n</code></pre></p> </li> <li> <p>sum.c\uff1a     <pre><code>#include \"thread.h\"\n\n#define N 100000000\n\nlong sum = 0;\n\nvoid T_sum() {\n    for (int i = 0; i &lt; N; i++) {\n        sum++;\n\n        // Won't work even if we force a single-instruction\n        // increment.\n\n        // asm volatile(\n        //     \"incq %0\" : \"+m\"(sum)\n        // );\n    }\n}\n\nint main() {\n    create(T_sum);\n    create(T_sum);\n\n    join();\n\n    printf(\"sum = %ld\\n\", sum);\n    printf(\"2*n = %ld\\n\", 2L * N);\n}\n</code></pre></p> <p>\u4e0d\u540c\u7684\u7f16\u8bd1\u4f18\u5316\u8f93\u51fa\u4e0d\u4e00\u6837\uff1a</p> <ul> <li> <p>-O0\u8f93\u51fa<code>sum = 119137703 2*n = 200000000</code></p> <pre><code>00000000000013d9 &lt;T_sum&gt;:\n    13d9:       f3 0f 1e fa             endbr64 \n    13dd:       55                      push   %rbp\n    13de:       48 89 e5                mov    %rsp,%rbp\n    13e1:       c7 45 fc 00 00 00 00    movl   $0x0,-0x4(%rbp)\n    13e8:       eb 16                   jmp    1400 &lt;T_sum+0x27&gt;\n    13ea:       48 8b 05 4f 2c 00 00    mov    0x2c4f(%rip),%rax        # 4040 &lt;sum&gt;\n    13f1:       48 83 c0 01             add    $0x1,%rax\n    13f5:       48 89 05 44 2c 00 00    mov    %rax,0x2c44(%rip)        # 4040 &lt;sum&gt;\n    13fc:       83 45 fc 01             addl   $0x1,-0x4(%rbp)\n    1400:       81 7d fc ff e0 f5 05    cmpl   $0x5f5e0ff,-0x4(%rbp)\n    1407:       7e e1                   jle    13ea &lt;T_sum+0x11&gt;\n    1409:       90                      nop\n    140a:       90                      nop\n    140b:       5d                      pop    %rbp\n    140c:       c3                      ret\n</code></pre> </li> <li> <p>-O1\u8f93\u51fa<code>sum = 100000000 2*n = 200000000</code></p> <pre><code>00000000000011e3 &lt;T_sum&gt;:\n    11e3:       f3 0f 1e fa             endbr64 \n    11e7:       48 8b 15 52 2e 00 00    mov    0x2e52(%rip),%rdx        # 4040 &lt;sum&gt;\n    11ee:       48 8d 42 01             lea    0x1(%rdx),%rax\n    11f2:       48 81 c2 01 e1 f5 05    add    $0x5f5e101,%rdx\n    11f9:       48 89 c1                mov    %rax,%rcx\n    11fc:       48 83 c0 01             add    $0x1,%rax\n    1200:       48 39 d0                cmp    %rdx,%rax\n    1203:       75 f4                   jne    11f9 &lt;T_sum+0x16&gt;\n    1205:       48 89 0d 34 2e 00 00    mov    %rcx,0x2e34(%rip)        # 4040 &lt;sum&gt;\n    120c:       c3                      ret\n</code></pre> </li> <li> <p>-O2\u8f93\u51fa<code>sum = 200000000 2*n = 200000000</code>\uff0c\u5373\u4fbf\u5982\u6b64\uff0c\u76f4\u63a5\u53d8\u6210\u4e00\u6761addq\u6307\u4ee4\uff0csum\u7684\u8f93\u51fa\u4ecd\u65e7\u4e0d\u4e00\u5b9a\u6b63\u786e\uff01\u5982\u540calipay\u7684\u4f8b\u5b50\u4e00\u6837\u5982\u679c\u52a0\u5165usleep(1)\u8fd8\u662f\u53ef\u4ee5\u770b\u5230\u6bcf\u6b21\u7ed3\u679c\u90fd\u4e0d\u4e00\u6837\u3002</p> <pre><code>0000000000001260 &lt;T_sum&gt;:\n    1260:       f3 0f 1e fa             endbr64 \n    1264:       48 81 05 d1 2d 00 00    addq   $0x5f5e100,0x2dd1(%rip)        # 4040 &lt;sum&gt;\n    126b:       00 e1 f5 05 \n    126f:       c3                      ret\n</code></pre> </li> </ul> </li> <li> <p>memory model:</p> <ul> <li>\u4f60\u4ee5\u4e3a\u7684\u5171\u4eab\u5185\u5b58: </li> <li>\u5b9e\u9645\u7684\u5171\u4eab\u5185\u5b58: \u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u5185\u5b58\u526f\u672c\uff0c\u4ed6\u4eec\u4e4b\u95f4\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u540c\u6b65 </li> <li>x86\uff1a\u5e02\u9762 \u201c\u6700\u5f3a\u201d \u5185\u5b58\u6a21\u578b (\u7c7b\u6bd4 ARM/RISC-V) </li> </ul> <p>mem_model.c: <pre><code>#include &lt;thread.h&gt;\n#include &lt;stdatomic.h&gt;\n\nint x = 0, y = 0;\natomic_int flag;\n\n#define F1  1\n#define F2  2\n\n#define FLAG \\\n    atomic_load(&amp;flag)\n#define FLAG_XOR(val) \\\n    atomic_fetch_xor(&amp;flag, val)\n#define WAIT_FOR(cond) \\\n    while (!(cond))    \\\n        ;\n\n__attribute__((noinline))\nvoid write_x_read_y() {\n    int y_val;\n\n    asm volatile(\n        \"movl $1, %0;\" // x = 1\n        \"movl %2, %1;\" // y_val = y\n        : \"=m\"(x), \"=r\"(y_val)\n        : \"m\"(y)\n    );\n\n    printf(\"%d \", y_val);\n}\n\n__attribute__((noinline))\nvoid write_y_read_x() {\n    int x_val;\n\n    asm volatile(\n        \"movl $1, %0;\" // y = 1\n        \"movl %2, %1;\" // x_val = x\n        : \"=m\"(y), \"=r\"(x_val)\n        : \"m\"(x)\n    );\n\n    printf(\"%d \", x_val);\n}\n\nvoid T_1(int id) {\n    while (1) {\n        // Wait until F1 is raised.\n        WAIT_FOR((FLAG &amp; F1));\n\n        write_x_read_y();\n\n        // Put F1 down.\n        FLAG_XOR(F1);\n    }\n}\n\nvoid T_2() {\n    while (1) {\n        // Wait until F2 is raised.\n        WAIT_FOR((FLAG &amp; F2));\n\n        write_y_read_x();\n\n        // Put F2 down.\n        FLAG_XOR(F2);\n    }\n}\n\nvoid T_flag() {\n    while (1) {\n        x = 0;\n        y = 0;\n        __sync_synchronize(); // full barrier\n        usleep(1);            // + delay\n\n        // Now, x = 0, y = 0, and flag = 0.\n        // T_1 and T_2 should be waiting for their flags.\n        assert(FLAG == 0);\n\n        // flag = F1 | F2; Both flags are raised.\n        FLAG_XOR(F1 | F2);\n\n        // T1 and T2 are ready to go...\n        // They will eventually put F1 and F2 down.\n        WAIT_FOR(FLAG == 0);\n\n        printf(\"\\n\");\n        fflush(stdout);\n    }\n}\n\nint main() {\n    // All infinite loops\n    create(T_1);\n    create(T_2);\n    create(T_flag);\n}\n</code></pre></p> <p><code>./mem-model  | head -n 10000 | sort | uniq -c</code>\u8f93\u51fa\uff1a <pre><code>7978 0 0 \n1783 0 1 \n 237 1 0 \n   2 1 1\n</code></pre></p> T_1 T_2 \u2460 x = 1  \u2461 load y \u2462 y = 1  \u2463 load x <p>\u51fa\u73b00 0\u7684\u539f\u56e0\u662f\u771f\u6b63\u7684memory model\u548c\u6211\u4eec\u60f3\u8c61\u7684\u5e76\u4e0d\u4e00\u6837\u3002\u5904\u7406\u5668\u4e5f\u662f\u7f16\u8bd1\u5668:</p> <ul> <li>\u9884\u53d6\u72b6\u6001\u673a\u6267\u884c\u7684\u82e5\u5e72\u6b65\uff0c\u7136\u540e\u50cf\u7f16\u8bd1\u5668\u4e00\u6837\u4f18\u5316</li> <li>Load(x); Store(y)</li> <li>x \u2260 y \u2192 \u4e24\u6761\u6307\u4ee4\u6267\u884c\u7684\u5148\u540e\u987a\u5e8f\u5c31\u65e0\u6240\u8c13</li> <li>Load cache miss \u2192 store \u53ef\u4ee5\u76f4\u63a5\u6267\u884c</li> </ul> </li> </ol>"},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-6-1","title":"Lecture 6 \u5e76\u53d1\u63a7\u5236\uff1a\u4e92\u65a5 (1)","text":"<p>Take-away Messages</p> <p>\u5e76\u53d1\u7f16\u7a0b \u201c\u5f88\u96be\u201d\uff1a\u60f3\u8981\u5b8c\u5168\u7406\u89e3\u5e76\u53d1\u7a0b\u5e8f\u7684\u884c\u4e3a\uff0c\u662f\u975e\u5e38\u56f0\u96be\u7684\u2014\u2014\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a \u201c\u4e07\u80fd\u201d \u7684\u8c03\u5ea6\u5668\u53bb\u5e2e\u52a9\u6211\u4eec\u6c42\u89e3 NP-\u5b8c\u5168\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u4eba\u7c7b\u5e94\u5bf9\u8fd9\u79cd\u590d\u6742\u6027\u7684\u65b9\u6cd5\u5c31\u662f\u9000\u56de\u5230\u4e0d\u5e76\u53d1\u3002\u901a\u8fc7\u4e92\u65a5\u5b9e\u73b0 stop/resume the world\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u5e76\u53d1\u7a0b\u5e8f\u7684\u6267\u884c\u53d8\u5f97\u66f4\u5bb9\u6613\u7406\u89e3\u2014\u2014\u800c\u53ea\u8981\u7a0b\u5e8f\u4e2d \u201c\u80fd\u5e76\u884c\u201d \u7684\u90e8\u5206\u8db3\u591f\u591a\uff0c\u4e32\u884c\u5316\u4e00\u5c0f\u90e8\u5206\u4e5f\u5e76\u4e0d\u4f1a\u5bf9\u6027\u80fd\u5e26\u6765\u81f4\u547d\u7684\u5f71\u54cd\u3002</p> <ol> <li>\u5b9e\u73b0\u4e92\u65a5\uff1aStop the World\u3002\u80fd\u5426\u4f7f\u5f53\u524d\u7a0b\u5e8f\u72b6\u6001\u673a\u72ec\u5360\u8ba1\u7b97\u673a\u7cfb\u7edf\uff1f<ul> <li>\u5355\u5904\u7406\u5668\u7cfb\u7edf\u4e2d \u201c\u5176\u4ed6\u4efb\u4f55\u4e8b\u201d\uff1a\u4ec5\u6709\u4e2d\u65ad\uff0c\u56e0\u6b64\u5173\u4e2d\u65ad\u5373\u53ef\u3002\u4f8b\u5982x86\u4e2d<code>cli</code> \u6e05\u9664 <code>eflags</code> \u4e2d\u7684 <code>IF</code> bit\u5373\u53ef\u5173\u4e2d\u65ad\u3002\u6ce8\u610f\uff1a\u53ea\u6709\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u53ef\u4ee5\u5173\u4e2d\u65ad\uff0c\u7528\u6237\u7a0b\u5e8f\u5173\u4e2d\u65ad\u4f1aSegmentation fault\u3002</li> <li>\u4f46\u662f\u6ce8\u610f\u5904\u7406\u5668\u6709\u4e0d\u53ef\u5c4f\u853d\u4e2d\u65ad NMI (Non-Maskable Interrupts)\uff0c\u53ef\u4ee5\u5229\u7528 NMI \u5b9e\u73b0\u9519\u8bef\u76d1\u63a7<ul> <li>\u8bbe\u7f6e\u786c\u4ef6\u5b9a\u65f6\u89e6\u53d1</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u5b9a\u65f6\u590d\u4f4d\u5b9a\u65f6\u5668</li> <li>\u89e6\u53d1 timeout\uff0c\u6267\u884c NMI \u5904\u7406\u7a0b\u5e8f\uff0c\u4f8b\u5982\u91cd\u542f\u8ba1\u7b97\u673a</li> </ul> </li> <li>\u800c\u4e14\u5355\u5904\u7406\u5668\u7cfb\u7edf\u5173\u4e2d\u65ad\u53ef\u4ee5\uff0c\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e0d\u884c<ul> <li>\u6bcf\u4e2a\u5904\u7406\u5668\u6709\u72ec\u7acb\u7684\u5bc4\u5b58\u5668\u7ec4</li> <li>\u4e2d\u65ad\u662f\u6bcf\u4e2a\u5904\u7406\u5668\u5185\u90e8\u72b6\u6001</li> </ul> </li> </ul> </li> <li>Peterson \u7b97\u6cd5\uff1a\u5395\u6240\u662f\u4e34\u754c\u8d44\u6e90\uff0c\u9700\u8981\u4e92\u65a5\u4f7f\u7528\u3002\uff08\u6ce8\u610fPeterson \u7b97\u6cd5\u4ec5\u4ec5\u80fd\u89e3\u51b3\u4e24\u4e2a\u7ebf\u7a0b\u4e92\u65a5\u7684\u60c5\u51b5\uff09<ul> <li>\u82e5\u5e0c\u671b\u8fdb\u5165\u5395\u6240\uff0c\u6309\u987a\u5e8f\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a<ol> <li>\u4e3e\u8d77\u81ea\u5df1\u7684\u65d7\u5b50 (store)</li> <li>\u628a\u5199\u6709\u5bf9\u65b9\u540d\u5b57\u7684\u5b57\u6761\u8d34\u5728\u5395\u6240\u95e8\u4e0a (store; \u8986\u76d6)\uff08\u770b\u8d77\u6765\u662f\u8c26\u8ba9\uff0c\u5b9e\u9645\u4e0a\u662f\u5229\u5df1\uff09</li> </ol> </li> <li>\u7136\u540e\u8fdb\u5165\u6301\u7eed\u7684\u89c2\u5bdf\u6a21\u5f0f\uff1a<ol> <li>\u89c2\u5bdf\u5bf9\u65b9\u662f\u5426\u4e3e\u65d7 (load)</li> <li>\u89c2\u5bdf\u5395\u6240\u95e8\u4e0a\u7684\u540d\u5b57 (load)<ul> <li>\u5bf9\u65b9\u4e0d\u4e3e\u65d7\u6216\u5395\u6240\u95e8\u4e0a\u7684\u540d\u5b57\u662f\u81ea\u5df1\uff0c\u8fdb\u5165\u5395\u6240\uff0c\u5426\u5219\u7ee7\u7eed\u89c2\u5bdf</li> </ul> </li> </ol> </li> <li>\u51fa\u5395\u6240\u540e\uff0c\u653e\u4e0b\u81ea\u5df1\u7684\u65d7\u5b50<ul> <li>\u4e0d\u7528\u7ba1\u95e8\u4e0a\u7684\u5b57\u6761</li> </ul> </li> </ul> </li> <li> <p>Peterson \u7b97\u6cd5\u8fdb\u5165\u4e34\u754c\u533a\u7684\u60c5\u51b5</p> <ul> <li>\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u4eba\u4e3e\u65d7\uff0c\u4ed6\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fdb\u5165</li> <li>\u5982\u679c\u4e24\u4e2a\u4eba\u540c\u65f6\u4e3e\u65d7\uff0c\u7531\u5395\u6240\u95e8\u4e0a\u7684\u6807\u7b7e\u51b3\u5b9a\u8c01\u8fdb<ul> <li>\u624b\u5feb\u6709(\u88ab\u53e6\u4e00\u4e2a\u4eba\u7684\u6807\u7b7e\u8986\u76d6)\u3001\u624b\u6162\u65e0</li> </ul> </li> </ul> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a\uff08\u4ec5\u4e3a\u6a21\u578b\u7b97\u6cd5\uff0c\u5e76\u975e\u6b63\u786e\u7684\u5b9e\u73b0\uff0c\u56e0\u4e3a\u6a21\u578b\u7684\u5047\u8bbe\uff1aAtomic load &amp; store\uff0c\u4f46\u8fd9\u4e2a\u5047\u8bbe\u5728\u73b0\u4ee3\u591a\u5904\u7406\u5668\u4e0a\u5e76\u4e0d\u6210\u7acb\uff0c\u9664\u975e\u4f7f\u7528\u5185\u5b58\u5c4f\u969c Memory Barrier <code>__sync_synchronize()</code>(= Compiler Barrier + x86: <code>mfence</code>)\uff09 <pre><code>a = 1;    // \u4e3e\u8d77\u81ea\u5df1\u7684\u65d7\u5b50\nturn = B; // \u8d34\u4e0a\u5bf9\u65b9\u7684\u540d\u5b57\ndo {      // \u8fdb\u5165\u6301\u7eed\u89c2\u5bdf\u6a21\u5f0f\n} while (b &amp;&amp; turn == B); // \u5bf9\u65b9\u4e3e\u65d7\u4e14\u95e8\u4e0a\u662f\u5bf9\u65b9\u7684\u7684\u540d\u5b57\n\n// \u4e34\u754c\u533a\n\na = 0;    // \u653e\u4e0b\u81ea\u5df1\u7684\u65d7\u5b50\n\n/* b \u540c\u7406 =================== */\nb = 1;\nturn = A;\ndo {\n} while (a &amp;&amp; turn == A);\n\n// \u4e34\u754c\u533a\n\nb = 0;\n</code></pre></p> </li> <li> <p>Peterson \u7b97\u6cd5\u63a2\u7a76\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u4f1a\u6709cs\u540c\u65f6\u4e3a1/2\u7684\u60c5\u51b5\u3002\u901a\u8fc7mosaic model checker <code>mosaic -c peterson.py | grep \\\"cs\\\" | sort | uniq</code>\u7684\u8f93\u51fa\u53ef\u4ee5\u770b\u5230\u6ca1\u6709\u540c\u65f6\u4e3a1/2\u7684\u60c5\u51b5\u3002</p> <pre><code>\"cs\": \"\"\n\"cs\": \"\u2776\"\n\"cs\": \"\u2777\"\n</code></pre> <pre><code>def T1():\n    while True:\n        heap.x = '\ud83c\udff4'    # T1\u7684\u65d7\u5b50\n        sys_sched()\n        heap.turn = '\u2777'   # \u5395\u6240\u95e8\u4e0a\u7684\u6807\u7b7e\n        sys_sched()\n        while True:\n            t = heap.turn\n            sys_sched()\n            y = heap.y != ''\n            sys_sched()\n            if not y or t == '\u2776':\n                break\n        sys_sched()\n        heap.cs += '\u2776'   # \u8fdb\u5395\u6240\u540e\u5199cs\u4e3a1\n        sys_sched()\n        heap.cs = heap.cs.replace('\u2776', '') # \u51fa\u5395\u6240\u540e\u5220\u9664cs\n        sys_sched()\n        heap.x = ''\n        sys_sched()\n\ndef T2():\n    while True:\n        heap.y = '\ud83c\udfc1'\n        sys_sched()\n        heap.turn = '\u2776'\n        sys_sched()\n        while True:\n            t = heap.turn\n            sys_sched()\n            x = heap.x\n            sys_sched()\n            if not x or t == '\u2777':\n                break\n            sys_sched()\n        sys_sched()\n        heap.cs += '\u2777'\n        sys_sched()\n        heap.cs = heap.cs.replace('\u2777', '')\n        sys_sched()\n        heap.y = ''\n        sys_sched()\n\ndef main():\n    heap.x = ''\n    heap.y = ''\n    heap.turn = ''\n    heap.cs = ''\n    sys_spawn(T1)\n    sys_spawn(T2)\n</code></pre> </li> <li> <p>\u771f\u6b63\u6b63\u786e\u7684perterson\u7b97\u6cd5\u5b9e\u73b0\uff1a</p> <pre><code>#include &lt;thread.h&gt;\n#include &lt;stdatomic.h&gt;\n\n#define A 1\n#define B 2\n\n// The caveat is: no matter how many times we run this test\n// without seeing it fail, we cannot be certain that we have\n// inserted sufficient barriers. Understanding the correctness\n// of this code is far beyond the scope of this course.\n// \n#define BARRIER __sync_synchronize()\n//\n// Peterson's algorithm is wrong without proper barriers:\n//\n// #define BARRIER\n\natomic_int inside;\nlong count;\n\nvoid critical_section() {\n    // We expect this thread executing code exclusively,\n    // if the critical section is correctly implemented.\n\n    assert(\n        // assert(inside == 0);\n        // inside++\n        atomic_fetch_add(&amp;inside, +1) == 0\n    );\n\n    // On some machines, printing a character will hide\n    // the bug!\n    // putchar('.');\n\n    assert(\n        // assert(inside == 1);\n        // inside--\n        atomic_fetch_add(&amp;inside, -1) == 1\n    );\n}\n\nint volatile a = 0, b = 0, turn;\n\nvoid T_A() {\n    while (1) {\n        a = 1;                    BARRIER;\n        turn = B;                 BARRIER; // &lt;- this is critcal for x86\n        while (1) {\n            if (!b) break;        BARRIER;\n            if (turn != B) break; BARRIER;\n        }\n\n        // T_B can't execute critical_section now.\n        critical_section();\n\n        a = 0;                    BARRIER;\n    }\n}\n\nvoid T_B() {\n    while (1) {\n        b = 1;                    BARRIER;\n        turn = A;                 BARRIER;\n        while (1) {\n            if (!a) break;        BARRIER;\n            if (turn != A) break; BARRIER;\n        }\n\n        // T_A can't execute critical_section now.\n        critical_section();\n\n        b = 0;                    BARRIER;\n    }\n}\n\nint main() {\n    create(T_A);\n    create(T_B);\n}\n</code></pre> </li> <li> <p>\u5728\u591a\u5904\u7406\u5668\u4e0a\u5b9e\u73b0\u4e92\u65a5: \u8f6f\u4ef6\u4e0d\u591f\uff0c\u786c\u4ef6\u6765\u51d1, \u786c\u4ef6\u63d0\u4f9b\u539f\u5b50\u6307\u4ee4 - \u524d\u7f00<code>lock</code></p> <ul> <li>\u539f\u5b50\u6307\u4ee4\uff1a\u4e00\u5c0f\u6bb5\u65f6\u95f4\u7684 \u201cStop the World\u201d \u6267\u884c</li> <li>\u4e0d\u53ef\u6253\u65ad\u7684 load + \u8ba1\u7b97 + store<ul> <li>x86: Bus Lock; RISC-V: LR/SC (\u6765\u81ea MIPS) + atomic</li> </ul> </li> <li>\u5728\u591a\u5904\u7406\u5668\u4e0a\u5b9e\u73b0\u6b63\u786e\u7684 1 + 1\uff1a<code>asm volatile(\"lock addq $1, %0\" : \"+m\"(sum));</code> or <code>asm volatile(\"lock incq %0\" : \"+m\"(sum));</code></li> </ul> </li> <li> <p>\u901a\u8fc7\u786c\u4ef6\u539f\u5b50\u6307\u4ee4<code>atomic_xchg</code> or <code>lock cmpxchgl</code>\u5b9e\u73b0\u81ea\u65cb\u9501\uff1a</p> <pre><code>int status = \u2705; // \u6b64\u65f6\u5395\u6240\u95e8\u662f\u2705\uff0c\u6211\u4eec\u60f3\u7528\u274c\u53bb\u6362\u5b83\uff0cgot\u5f97\u5230\u2705\u662f\u60f3\u8981\u7684\u72b6\u6001\uff0c\u5426\u5219\u5c31\u91cd\u65b0\u5c1d\u8bd5\n\nvoid lock() {\nretry:\n    int got = atomic_xchg(&amp;status, \u274c);\n    if (got != \u2705) {\n        goto retry;\n    }\n}\n\nvoid unlock() {\n    atomic_xchg(&amp;status, \u2705);\n}\n</code></pre> <p>sum-locked.c\u5f97\u5230\u6b63\u786e\u7684\u6c42\u548csum: <pre><code>#include &lt;thread.h&gt;\n\n// We create 3 threads in this example.\n#define T        3\n#define N  1000000\n\n#define LOCKED   1\n#define UNLOCKED 0\n\nint status = UNLOCKED;\n\nvoid lock() {\n    int expected;\n    do {\n        // Try compare status with expected.\n        // If the comparison succeeded, perform\n        // an exchange.\n        expected = UNLOCKED;\n        asm volatile (\n            \"lock cmpxchgl %2, %1\"\n            : \"+a\" (expected) // Value for comparison.\n                            // x86 uses eax/rax.\n            : \"m\" (status),   // Memory location.\n            \"r\" (LOCKED)    // Value to be written if\n                            // status == expected\n            : \"memory\", \"cc\"\n        );\n    } while (expected != UNLOCKED);\n}\n\nvoid unlock() {\n    // To be safer:\n    //\n    // asm volatile (\n    //     \"movl %1, %0\"\n    //     : \"=m\" (status)\n    //     : \"r\" (UNLOCKED)\n    //     : \"memory\"\n    // );\n\n    // But actually we can do this:\n    asm volatile(\"\" ::: \"memory\");\n    status = UNLOCKED;\n}\n\n\nlong volatile sum = 0;\n\nvoid T_sum(int tid) {\n    for (int i = 0; i &lt; N; i++) {\n        lock();\n\n        // This critical section is even longer; but\n        // it should be safe--the world is stopped.\n        // We also marked sum as volatile to make\n        // sure it is loaded and stored in each\n        // loop iteration.\n        for (int _ = 0; _ &lt; 10; _++) {\n            sum++;\n        }\n\n        unlock();\n    }\n\n    printf(\"Thread %d: sum = %ld\\n\", tid, sum);\n}\n\nint main() {\n    for (int i = 0; i &lt; T; i++) {\n        create(T_sum);\n    }\n\n    join();\n\n    printf(\"sum  = %ld\\n\", sum);\n    printf(\"%d*n = %ld\\n\", T * 10, T * 10L * N);\n}\n</code></pre></p> <p>\u7136\u800c\uff0c\u5728\u7528\u6237\u6001\u5b9e\u73b0\u81ea\u65cb\u9501\u6709\u4e2a\u95ee\u9898\uff1a\u4e00\u4e2a\u6838\u5360\u7528\u4e86\u8fd9\u4e2alock\u540e\uff0c\u5047\u8bbe\u4e2d\u65ad\u6765\u4e86\u5207\u6362\u5230\u4e86\u5176\u4ed6\u6838\u5fc3\u4e0a\u7684\u7ebf\u7a0b\uff0c\u4e5f\u60f3\u62e5\u6709\u8fd9\u628alock\uff0c\u7531\u4e8e\u4e4b\u524d\u7684lock\u6ca1\u6709\u88ab\u91ca\u653e\uff0c\u5176\u4ed6\u6838\u5fc3\u4e0a\u7684\u7ebf\u7a0b\u5c31\u4f1a\u4e00\u76f4\u81ea\u65cb\u7b49\u5f85\uff0c\u6d6a\u8d39\u8d44\u6e90\u3002\u53e6\u4e00\u79cd\u60c5\u51b5\u662f\uff0c\u5047\u8bbe\u4e2d\u65ad\u5230\u6765\uff0c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u672c\u8eab\u4e5f\u60f3\u8bbf\u95ee\u8fd9\u4e2alock\u4fdd\u62a4\u7684\u5185\u5bb9\uff0c\u7136\u800c\u56e0\u4e3alock\u6ca1\u6709\u88ab\u91ca\u653e\uff0c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u4f1a\u4e00\u76f4\u7b49\u5f85\uff0c\u9677\u5165\u6b7b\u9501\u3002\u5b9e\u9645\u4e0a\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u6001\u7684\u81ea\u65cb\u9501\u5b9e\u73b0\u65f6\u4f1a\u5173\u4e2d\u65ad\u3002</p> </li> <li> <p>\u4e0a\u8ff0\u4ee3\u7801\u91cc<code>unlock()</code>\u91cc\u9700\u8981compiler barrier<code>asm volatile(\"\" ::: \"memory\");</code>\u7684\u539f\u56e0\uff1a</p> <ul> <li>\u4ece\u5faa\u73af 10 \u6b21\u6539\u6210\u5faa\u73af 1 \u6b21\uff0csum \u9519\u4e86\uff01</li> <li>\u9632\u6b62\u7f16\u8bd1\u5668\u505a\u4f18\u5316\uff0c\u5426\u5219\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u628a<code>unlock()</code>\u4ee3\u7801\u590d\u5236\u5230\u5230sum++\u4e4b\u540e\uff0c\u53ef\u80fd\u7684\u4f18\u5316\u662f\uff0c\u5148\u505a\u91ca\u653e\u9501\uff0c\u518d\u505asum++\uff0c\u5c31\u4f1a\u6709\u95ee\u9898\u3002</li> </ul> <p>\u9519\u8bef\u4ee3\u7801\uff1a <pre><code>void unlock() {\n    status = UNLOCKED;\n}\n</code></pre> \u7f16\u8bd1\u540e\uff1a <pre><code>movq    sum(%rip), %rax\nandl    $0, status(%rip)\naddq    $1, %rax\nmovq    %rax, sum(%rip)\n</code></pre></p> <p>\u6b63\u786e\u4ee3\u7801\uff1a <pre><code>void unlock() {\n    asm volatile(\"\" ::: \"memory\");\n    status = UNLOCKED;\n}\n</code></pre> \u7f16\u8bd1\u540e\uff1a <pre><code>movq    sum(%rip), %rax\naddq    $1, %rax\nmovq    %rax, sum(%rip)\nandl    $0, status(%rip)\n</code></pre></p> <p>Compiler Explorer</p> </li> </ol>"},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-7-2","title":"Lecture 7 \u5e76\u53d1\u63a7\u5236\uff1a\u4e92\u65a5 (2)","text":"<p>Take-away Messages</p> <p>\u201c\u4e92\u65a5\u201d \u770b\u8d77\u6765\u7b80\u5355\uff0c\u7528\u81ea\u65cb\u9501\u5c31\u80fd\u5b9e\u73b0\uff0c\u4f46\u5982\u679c\u5728\u5b9e\u9645\u7684\u573a\u666f (\u4f8b\u5982\u53ef\u88ab\u4e2d\u65ad\u7684\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u3001\u4e0d\u5e0c\u671b\u6d6a\u8d39 CPU \u8d44\u6e90\u7684\u5e94\u7528\u7a0b\u5e8f\u7b49)\uff0c\u5b9e\u9645\u7684\u4e92\u65a5\u5b9e\u73b0\u5c31\u4e0d\u518d\u7b80\u5355\u3002\u6211\u4eec\u5728 xv6 \u7684\u81ea\u65cb\u9501\u5b9e\u73b0\u4e2d\uff0c\u53d1\u73b0\u4e86\u8bb8\u591a \u201c\u9632\u5fa1\u6027\u7f16\u7a0b\u201d \u7684\u4f8b\u5b50\uff0c\u5148\u5047\u8bbe\u7a0b\u5e8f\u5458\u53ef\u80fd\u4f1a\u72af\u4e00\u5207\u53ef\u80fd\u7684\u9519\u8bef\u2014\u2014\u7136\u540e\u4e0d\u65ad\u52a0\u4ee5\u68c0\u67e5\u3002\u800c \u201c\u6b63\u786e\u6027\u5b8c\u5168\u7531\u5f00\u53d1\u8005\u8d1f\u8d23\u201d \u7684\u65f6\u4ee3\u5c06\u8981\u8fc7\u53bb\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u672a\u6765\u8d8a\u6765\u8d8a\u591a\u5730\u770b\u5230\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u673a\u5236\uff0c\u5e2e\u52a9\u6211\u4eec\u5199\u51fa\u6b63\u786e\u7684\u4ee3\u7801\u3002</p> <ol> <li> <p>\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u4e2d\u7684\u81ea\u65cb\u9501\u5b9e\u73b0\uff1a\u5229\u7528\u8ba1\u7b97\u673a\u7cfb\u7edf\u72b6\u6001\u673a\u7684\u89c6\u89d2\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u4e2d\u7684\u81ea\u65cb\u9501\u4e0d\u4ec5\u8981\u5b9e\u73b0\u5904\u7406\u5668\u95f4\u7684\u4e92\u65a5\uff0c\u8fd8\u8981\u6b63\u786e\u5904\u7406\u4e2d\u65ad\uff0c\u4ee5\u53ca\u9501\u7684\u5d4c\u5957\u3002\u5f53\u591a\u4e2a\u9700\u6c42\u53e0\u52a0\u65f6\uff0c\u4f5c\u51fa\u4e00\u4e2a\u6b63\u786e\u7684\u5b9e\u73b0\u5c31\u4e0d\u518d\u663e\u7136\u3002</p> <pre><code>#include &lt;am.h&gt;\n#include &lt;spinlock.h&gt;\n\n// This is a ported version of spin-lock\n// from xv6-riscv to AbstractMachine:\n// https://github.com/mit-pdos/xv6-riscv\n\nvoid push_off();\nvoid pop_off();\nbool holding(spinlock_t *lk);\n\nvoid spin_lock(spinlock_t *lk) {\n    // Disable interrupts to avoid deadlock.\n    push_off();\n\n    // This is a deadlock.\n    if (holding(lk)) {\n        panic(\"acquire %s\", lk-&gt;name);\n    }\n\n    // This our main body of spin lock.\n    int got;\n    do {\n        got = atomic_xchg(&amp;lk-&gt;status, LOCKED);\n    } while (got != UNLOCKED);\n\n    lk-&gt;cpu = mycpu;\n}\n\nvoid spin_unlock(spinlock_t *lk) {\n    if (!holding(lk)) {\n        panic(\"release %s\", lk-&gt;name);\n    }\n\n    lk-&gt;cpu = NULL;\n    atomic_xchg(&amp;lk-&gt;status, UNLOCKED);\n\n    pop_off();\n}\n\n// Check whether this cpu is holding the lock.\n// Interrupts must be off.\nbool holding(spinlock_t *lk) {\n    return (\n        lk-&gt;status == LOCKED &amp;&amp;\n        lk-&gt;cpu == &amp;cpus[cpu_current()]\n    );\n}\n\n// push_off/pop_off are like intr_off()/intr_on()\n// except that they are matched:\n// it takes two pop_off()s to undo two push_off()s.\n// Also, if interrupts are initially off, then\n// push_off, pop_off leaves them off.\nvoid push_off(void) {\n    int old = ienabled();\n    struct cpu *c = mycpu;\n\n    iset(false);\n    if (c-&gt;noff == 0) {\n        c-&gt;intena = old;\n    }\n    c-&gt;noff += 1;\n}\n\nvoid pop_off(void) {\n    struct cpu *c = mycpu;\n\n    // Never enable interrupt when holding a lock.\n    if (ienabled()) {\n        panic(\"pop_off - interruptible\");\n    }\n\n    if (c-&gt;noff &lt; 1) {\n        panic(\"pop_off\");\n    }\n\n    c-&gt;noff -= 1;\n    if (c-&gt;noff == 0 &amp;&amp; c-&gt;intena) {\n        iset(true);\n    }\n}\n</code></pre> <pre><code>\u76f4\u89c2\u60f3\u6cd5:\n\u5173\u672cCPU\u7684\u4e2d\u65ad\n    |\n  lock\n    |\n  sum++\n    |\n  unlock\n    |\n\u5f00\u672cCPU\u7684\u4e2d\u65ad (\u274c, \u5982\u679c\u5728\u60f3\u8fdb\u4e34\u754c\u533a\u505asum++\u4e4b\u524d\u672c\u8eab\u4e2d\u65ad\u5c31\u662f\u5173\u7684\u5462\uff1f\u8fd9\u6837\u7ed3\u675f\u5c82\u4e0d\u662f\u8bef\u5f00\u4e86\u4e2d\u65ad\uff0c\u5e76\u6ca1\u6709\u6062\u590d\u5230\u4e4b\u524d\u7684\u72b6\u6001)\n\n\u6b63\u786e\u505a\u6cd5:\n\u5173\u672cCPU\u7684\u4e2d\u65ad\n    |\n  lock\n    |\n  sum++\n    |\n  unlock\n    |\n\u6062\u590d\u672cCPU\u7684\u4e2d\u65ad\u60c5\u51b5 (\u5de7\u5999\u5229\u7528c-&gt;noff\u6765\u8bb0\u5f55\u6b21\u6570, \u5e76\u4e14\u53ea\u6709\u4e00\u5f00\u59cb\u5c31\u662f\u5f00\u4e2d\u65ad\u7684\u65f6\u5019: c-&gt;intena, \u624d\u5f00\u4e2d\u65ad)\n</code></pre> </li> <li> <p>\u81ea\u65cb\u7684\u540e\u679c: \u540c\u4e00\u4efd\u8ba1\u7b97\u4efb\u52a1\uff0c\u65f6\u95f4 (CPU cycles) \u548c\u7a7a\u95f4 (\u5185\u5b58\u5360\u7528) \u4f1a\u968f\u5904\u7406\u5668\u6570\u91cf\u7684\u589e\u957f\u800c\u53d8\u5316\u3002\u7528\u81ea\u65cb\u9501\u5b9e\u73b0 sum++: \u66f4\u591a\u7684\u5904\u7406\u5668, \u66f4\u5dee\u7684\u6027\u80fd\uff08\u56e0\u4e3a\u5176\u4ed6cpu\u90fd\u5728\u7a7a\u8f6c\uff0ccpu\u5229\u7528\u7387\u4e0b\u964d\u4e86\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u81ea\u65cb\u9501\u7684scalability\u5f88\u5dee\uff0c\u5e76\u4e0d\u662f\u7ebf\u6027\u53d8\u5316\u7684\u3002</p> <p></p> <p>\u4e00\u4e2a\u975e\u5e38\u806a\u660e\u7684\u60f3\u6cd5\uff1aRead-copy-update <pre><code>Counter *c_current;\n\nint get() {\n    // Read\n    Counter *c = c_current;\n    return c-&gt;sum;\n}\n\nvoid increment() {\n    SPIN_LOCKED {\n        // Copy\n        Counter *c = alloc_counter();\n        c-&gt;sum = c_current-&gt;sum + 1;\n        smp_wmb(); // Memory barrier\n\n        // Update\n        c_current = c;\n    }\n}\n</code></pre></p> <p>\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5bf9\u8c61\u5177\u6709 \u201cread-mostly\u201d \u7684\u7279\u70b9\uff08\u4e5f\u5c31\u662f\u8bfb\u5199\u4e0d\u5bf9\u79f0\uff0c\u4fee\u6539\u4e0d\u9891\u7e41\uff0c\u4f46\u8bfb\u5374\u5f88\u9891\u7e41\uff09\uff0c\u53ef\u4ee5\u5728\u8bfb\u7684\u65f6\u5019\u4e0d\u4e0a\u9501\uff0c\u53ea\u6709\u5199\u7684\u65f6\u5019\u4e0a\u9501\uff0c\u800c\u4e14\u5199\u7684\u65f6\u5019\u662f\u5728\u81ea\u5df1\u7684\u526f\u672c\u4e0a\u5199\uff0c\u7136\u540e\u518d\u628a\u6307\u9488\u6307\u5411\u81ea\u5df1\u7684\u526f\u672c\u3002\u8fd9\u6837\u505a\u727a\u7272\u4e86\u8bfb\u5199\u4e00\u81f4\u6027\uff0c\u6709\u7684\u7ebf\u7a0b\u4e5f\u8bb8\u4f1a\u8bfb\u5230\u65e7\u7684\u7248\u672c\uff0c\u4f46\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\u65e7\u7248\u672c\u5bf9\u8c61\u4f1a\u5b58\u5728\u4e00\u4e2a \u201cgraceful period\u201d\uff0c\u76f4\u5230\u67d0\u4e2a\u65f6\u523b\uff0c\u6240\u6709 CPU read \u90fd\u4f1a\u8bbf\u95ee\u5230\u65b0\u7248\u672c\u3002\u8fd9\u6837\u5927\u591a\u6570\u8bfb\u7684\u60c5\u51b5\u6ca1\u5fc5\u8981\u4f7f\u7528\u81ea\u65cb\u9501\uff0c\u51cf\u5c11\u5176\u4ed6 CPU \u7a7a\u8f6c\u7684\u65f6\u95f4\u4ece\u800c\u63d0\u9ad8 CPU \u5229\u7528\u7387\u3002</p> <p>\u8bfb\u5199\u4e0d\u5bf9\u79f0\u7684\u4f8b\u5b50\uff1aLinux\u7528\u6237\u548c\u7ec4\u4fe1\u606f</p> <ul> <li>\u65e0\u65f6\u4e0d\u523b\u5728\u68c0\u67e5 (Permission Denied)</li> <li>\u4f46\u51e0\u4e4e\u4ece\u4e0d\u4fee\u6539\u7528\u6237</li> </ul> </li> <li> <p>\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4e92\u65a5: \u5e94\u7528\u7a0b\u5e8f\u5982\u4f55\u8f83\u597d\u5730\u4f7f\u7528\u81ea\u65cb\u9501\uff1f</p> <ul> <li>\u6027\u80fd\u95ee\u9898 (1)\uff1a\u9664\u4e86\u8fdb\u5165\u4e34\u754c\u533a\u7684\u7ebf\u7a0b\uff0c\u5176\u4ed6\u5904\u7406\u5668\u4e0a\u7684\u7ebf\u7a0b\u90fd\u5728\u7a7a\u8f6c<ul> <li>\u4e89\u62a2\u9501\u7684\u5904\u7406\u5668\u8d8a\u591a\uff0c\u5229\u7528\u7387\u8d8a\u4f4e</li> <li>\u5982\u679c\u4e34\u754c\u533a\u8f83\u957f\uff0c\u4e0d\u5982\u628a\u5904\u7406\u5668\u8ba9\u7ed9\u5176\u4ed6\u7ebf\u7a0b</li> </ul> </li> <li>\u6027\u80fd\u95ee\u9898 (2)\uff1a\u5e94\u7528\u7a0b\u5e8f\u4e0d\u80fd\u5173\u4e2d\u65ad<ul> <li>\u6301\u6709\u81ea\u65cb\u9501\u7684\u7ebf\u7a0b\u88ab\u5207\u6362</li> <li>\u5bfc\u81f4 100% \u7684\u8d44\u6e90\u6d6a\u8d39</li> <li>(\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u80fd \u201c\u544a\u8bc9\u201d \u64cd\u4f5c\u7cfb\u7edf\u5c31\u597d\u4e86)</li> </ul> </li> </ul> <p>\u89e3\u51b3\uff1a\u901a\u8fc7<code>syscall</code>\u628a\u9501\u7684\u5b9e\u73b0\u653e\u5230\u64cd\u4f5c\u7cfb\u7edf\u91cc\u5c31\u597d\u5566</p> <ul> <li><code>syscall(SYSCALL_lock, &amp;lk);</code><ul> <li>\u8bd5\u56fe\u83b7\u5f97 <code>lk</code>\uff0c\u4f46\u5982\u679c\u5931\u8d25\uff0c\u5c31\u5207\u6362\u5230\u5176\u4ed6\u7ebf\u7a0b</li> </ul> </li> <li><code>syscall(SYSCALL_unlock, &amp;lk);</code><ul> <li>\u91ca\u653e <code>lk</code>\uff0c\u5982\u679c\u6709\u7b49\u5f85\u9501\u7684\u7ebf\u7a0b\u5c31\u5524\u9192</li> </ul> </li> </ul> <pre><code>pthread_mutex_t lock;\npthread_mutex_init(&amp;lock, NULL);\n\npthread_mutex_lock(&amp;lock);\npthread_mutex_unlock(&amp;lock);\n</code></pre> <pre><code>                   T1\n                    |\n                syscall(acquire, lock)\n                    |\n--------------- Enter OS kernel --------------- \n|                                             |\n| OS spin lock locked                         |\n|                                             |\n|    try aquire lock:                         |\n|        if fail: mark as wait for the lock,  |\n|                 switch to other tasks       |\n|                                             |\n| OS spin lock released                       |\n--------------- Exit OS kernel ----------------\n\n                   T2\n                    |\n                syscall(release, lock)\n                    |\n--------------- Enter OS kernel --------------- \n|                                             |\n| OS spin lock locked                         |\n|                                             |\n|    release lock:                            |\n|        T1 is waiting for the lock:          |\n|           awake T1                          |\n|                                             |\n| OS spin lock released                       |\n--------------- Exit OS kernel ----------------\n</code></pre> </li> <li> <p>\u8fdb\u9636\u7684Futex: Fast Userspace muTexes</p> <ul> <li>Fast Path: \u81ea\u65cb\u4e00\u6b21\u3002\u65e0\u4eba\u4e89\u62a2\u65f6\uff0c\u65e0\u9700\u52a8\u7528<code>syscall</code>\uff0c\u76f4\u63a5\u8fdb\u4e34\u754c\u533a<ul> <li>\u4e00\u6761\u539f\u5b50\u6307\u4ee4\uff0c\u6210\u529f\u76f4\u63a5\u8fdb\u5165\u4e34\u754c\u533a</li> </ul> </li> <li>Slow Path: \u81ea\u65cb\u5931\u8d25\u3002\u6709\u4eba\u4e89\u62a2\u65f6\uff0c\u624d\u9700\u8981\u7528\u5230<code>syscall</code><ul> <li>\u8bf7\u6c42\u7cfb\u7edf\u8c03\u7528 <code>futex_wait</code></li> </ul> </li> </ul> </li> </ol>"},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-8","title":"Lecture 8 \u8c03\u8bd5\u7406\u8bba\u4e0e\u5b9e\u8df5","text":"<ol> <li>\u9700\u6c42 \u2192 \u8bbe\u8ba1 \u2192 \u4ee3\u7801 (Fault/bug) \u2192 \u6267\u884c (Error) \u2192 \u5931\u8d25 (Failure)</li> </ol>"},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-9-1","title":"Lecture 9 \u5e76\u53d1\u63a7\u5236\uff1a\u540c\u6b65 (1)","text":"<p>Take-away Messages</p> <p>\u540c\u6b65\u7684\u672c\u8d28\u662f\u7ebf\u7a0b\u9700\u8981\u7b49\u5f85\u67d0\u4ef6\u5b83\u6240\u9884\u671f\u7684\u4e8b\u4ef6\u53d1\u751f\uff0c\u800c\u4e8b\u4ef6\u7684\u53d1\u751f\u603b\u662f\u53ef\u4ee5\u7528\u6761\u4ef6 (\u4f8b\u5982 depth \u6ee1\u8db3\u67d0\u4e2a\u6761\u4ef6\uff0c\u6216\u662f\u7a0b\u5e8f\u5904\u4e8e\u67d0\u4e2a\u7279\u5b9a\u7684\u72b6\u6001) \u6765\u8868\u8fbe\u3002\u56e0\u6b64\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u8bbe\u8ba1\u8005\u5b9e\u73b0\u4e86\u6761\u4ef6\u53d8\u91cf\uff0c\u5c06\u6761\u4ef6\u68c0\u67e5\u548c\u4e34\u754c\u533a \u201c\u653e\u5728\u4e00\u8d77\u201d\uff0c\u4ee5\u5b9e\u73b0\u7ebf\u7a0b\u95f4\u7684\u540c\u6b65\u3002\u8fd9\u662f\u4e07\u80fd\u7684\u540c\u6b65\u65b9\u6cd5\u3002</p> <ol> <li> <p>Synchronization \u540c\u6b65\uff1a\u63a7\u5236\u5e76\u53d1\uff0c\u4f7f\u5f97 \u201c\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u968f\u65f6\u95f4\u53d8\u5316\u7684\u91cf\u5728\u53d8\u5316\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u4e00\u5b9a\u7684\u76f8\u5bf9\u5173\u7cfb\u201d\u3002\u4f8b\u5b50\uff1a</p> <ul> <li>\u6f14\u594f\u97f3\u4e50\u4e2d\u7684\u540c\u6b65<ul> <li>\u6bcf\u4e2a\u4e50\u624b\u90fd\u662f\u4e00\u4e2a \u201c\u7ebf\u7a0b\u201d</li> <li>\u8282\u62cd i \u5230\u8fbe \u2192 \u6f14\u594f ni</li> </ul> </li> <li>\u4f60\u4e0e\u5ba4\u53cb\u7ea6\u5b9a\u572823:59:59\u5728\u5b66\u6d3b\u95e8\u53e3\u76f8\u89c1</li> <li>\u76f8\u5f53\u4e8e\u4e16\u754c\u7ebf\u7684\u6536\u675f\uff0c\u6b64\u524d\u7ebf\u7a0b\u90fd\u5404\u81ea\u6267\u884c\uff0c\u4f46\u662f\u5728\u67d0\u4e2a\u65f6\u95f4\u8282\u70b9\u65f6\u9700\u8981\u540c\u6b65\uff0c\u7136\u540e\u518d\u5404\u81ea\u6267\u884c\u3002\u5728\u67d0\u4e2a\u77ac\u95f4\u8fbe\u5230 \u201c\u4e92\u76f8\u5df2\u77e5\u201d \u7684\u72b6\u6001\uff0c\u201c\u5148\u5230\u5148\u7b49\u201d\uff0c\u5728\u6761\u4ef6\u8fbe\u6210\u7684\u77ac\u95f4\u518d\u6b21\u6062\u590d\u5e76\u884c</li> </ul> <pre><code>void T_player() {\n    while (!end) {\n        wait_next_beat();\n        play_next_note();\n    }\n}\n\nvoid T_conductor() {\n    while (!end) {\n        wait_next_beat();\n        release(); // release() \u4e4b\u540e\uff0cplayer \u90fd\u4f1a\u6f14\u594f\u4e0b\u4e00\u62cd\n    }\n}\n\n// \u81ea\u65cb\u5b9e\u73b0\nvoid wait_next_beat(int expect) {\n    // This is a spin-wait loop.\nretry:\n    mutex_lock(&amp;lk);\n    // This read is protected by a mutex.\n    int got = n;\n    mutex_unlock(&amp;lk);\n\n    if (got != expect) goto retry;\n}\n</code></pre> </li> <li> <p>\u7ecf\u5178\u540c\u6b65\u95ee\u9898\uff1a\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u95ee\u9898</p> <ul> <li>Producer \u548c Consumer \u5171\u4eab\u4e00\u4e2a\u7f13\u51b2\u533a<ul> <li>Producer (\u751f\u4ea7\u6570\u636e)\uff1a \u5982\u679c\u7f13\u51b2\u533a\u6709\u7a7a\u4f4d\uff0c\u653e\u5165\uff1b\u5426\u5219\u7b49\u5f85</li> <li>Consumer (\u6d88\u8d39\u6570\u636e)\uff1a\u5982\u679c\u7f13\u51b2\u533a\u6709\u6570\u636e\uff0c\u53d6\u8d70\uff1b\u5426\u5219\u7b49\u5f85</li> </ul> </li> </ul> <p>\u4f8b\u5b50\uff1a <pre><code>void produce() { printf(\"(\"); }\nvoid consume() { printf(\")\"); }\n</code></pre></p> <ul> <li>\u751f\u4ea7 = \u6253\u5370\u5de6\u62ec\u53f7 (push into buffer)</li> <li>\u6d88\u8d39 = \u6253\u5370\u53f3\u62ec\u53f7 (pop from buffer)</li> <li>\u5728 <code>printf</code> \u524d\u540e\u589e\u52a0\u4ee3\u7801\uff0c\u4f7f\u5f97\u6253\u5370\u7684\u62ec\u53f7\u5e8f\u5217\u6ee1\u8db3<ul> <li>\u4e00\u5b9a\u662f\u67d0\u4e2a\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u7684\u524d\u7f00</li> <li>\u62ec\u53f7\u5d4c\u5957\u7684\u6df1\u5ea6\u4e0d\u8d85\u8fc7 n<ul> <li>n = 3, <code>((())())(((</code> \u5408\u6cd5</li> <li>n=3, <code>(((()))), (()))</code> \u4e0d\u5408\u6cd5</li> </ul> </li> </ul> </li> </ul> <p>pc-1.c: \u9519\u8bef\u7684\u81ea\u65cb\u5b9e\u73b0 <pre><code>#include &lt;thread.h&gt;\n#include &lt;thread-sync.h&gt;\n\nmutex_t lk = MUTEX_INIT();\n\nint n, depth = 0;\n\nvoid T_produce() {\n    while (1) {\nretry:\n        mutex_lock(&amp;lk);\n        int ready = (depth &lt; n);\n        mutex_unlock(&amp;lk);\n        if (!ready) goto retry;\n\n        assert(depth &lt; n); // \u274c, \u6b64\u65f6lk\u5df2\u7ecf\u88ab\u91ca\u653e\uff0c\u5982\u679c\u88ab\u5207\u6362\u5230\u522b\u7684\u7ebf\u7a0b\uff0c\u522b\n        // \u7684\u7ebf\u7a0b\u53ef\u80fd\u4f1a\u66f4\u6539depth\uff0c\u56e0\u6b64depth &lt; n \u4e0d\u4e00\u5b9a\u6210\u7acb\uff0c\u8fd9\u4e2aassert\u4f1a\u89e6\u53d1\n\n        mutex_lock(&amp;lk);\n        printf(\"(\");\n        depth++;\n        mutex_unlock(&amp;lk);\n    }\n}\n\nvoid T_consume() {\n    while (1) {\nretry:\n        mutex_lock(&amp;lk);\n        int ready = (depth &gt; 0);\n        mutex_unlock(&amp;lk);\n        if (!ready) goto retry;\n\n        assert(depth &gt; 0);\n\n        mutex_lock(&amp;lk);\n        printf(\")\");\n        depth--;\n        mutex_unlock(&amp;lk);\n    }\n}\n</code></pre></p> <p>pc-2.c: \u6b63\u786e\u7684\u81ea\u65cb\u5b9e\u73b0\uff08\u7136\u800c\u81ea\u65cb\u6d6a\u8d39\u4e86CPU\uff09 <pre><code>#include &lt;thread.h&gt;\n#include &lt;thread-sync.h&gt;\n\nmutex_t lk = MUTEX_INIT();\n\nint n, depth = 0;\n\nvoid T_produce() {\n    while (1) {\nretry:\n        mutex_lock(&amp;lk);\n        if (!(depth &lt; n)) {\n            mutex_unlock(&amp;lk); // \u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u7acb\u9a6c\u91ca\u653e\u9501\n            goto retry; // \u6d6a\u8d39CPU\u2757\n        }\n\n        // \u2705\u80fd\u8d70\u5230\u8fd9\u91cc\u8bf4\u660e\u4e00\u5b9a\u6ee1\u8db3\u6761\u4ef6 depth &lt; n\uff0c\n        // \u56e0\u6b64\u53ef\u4ee5\u5b89\u5168\u5730\u4fee\u6539\u5171\u4eab\u72b6\u6001\uff0c\u6b64\u65f6\u9501\u4e5f\u6ca1\u88ab\u91ca\u653e\u6389\n\n        // The check of sync condition (depth &lt; n) is within\n        // the same critical section. As long as we safely\n        // protected the shared state, this condition should\n        // always hold at this point.\n        assert(depth &lt; n);\n\n        printf(\"(\");\n        depth++;\n\n        // And at this point, the condition (depth &gt; 0) is\n        // satisfied. However, a consumer could proceed with\n        // checking depth only if the lock is released.\n        mutex_unlock(&amp;lk);\n    }\n}\n\nvoid T_consume() {\n    while (1) {\nretry:\n        mutex_lock(&amp;lk);\n        if (!(depth &gt; 0)) {\n            mutex_unlock(&amp;lk);\n            goto retry;\n        }\n\n        assert(depth &gt; 0);\n\n        printf(\")\");\n        depth--;\n\n        mutex_unlock(&amp;lk);\n    }\n}\n</code></pre></p> <p>pc-cv.c: \u9519\u8bef\u7684\u6761\u4ef6\u53d8\u91cf\u5b9e\u73b0 <pre><code>#include &lt;thread.h&gt;\n#include &lt;thread-sync.h&gt;\n\nint n, depth = 0;\nmutex_t lk = MUTEX_INIT();\ncond_t cv = COND_INIT();\n\n#define CAN_PRODUCE (depth &lt; n)\n#define CAN_CONSUME (depth &gt; 0)\n\nvoid T_produce() {\n    while (1) {\n        mutex_lock(&amp;lk);\n\n        if (!CAN_PRODUCE) { // \u274c, \u5e94\u8be5\u662fwhile\uff0c\u800c\u4e0d\u662fif\uff0c\u56e0\u4e3a\u88ab\u5524\u9192\n                            // \u540e\u6709\u53ef\u80fd\u53c8\u88ab\u522b\u7684\u7ebf\u7a0b\u62a2\u6389\u4e86\uff0c\u6761\u4ef6\u53c8\u4e0d\u6ee1\u8db3\uff0c\n                            // \u9700\u8981\u91cd\u65b0\u68c0\u67e5\u6761\u4ef6\n\n            // \u672c\u8d28\u539f\u56e0\uff1aproducer\u548cconsumer\u7b49\u5f85\u7684\u4e0d\u662f\u540c\u4e00\u4e2a\u6761\u4ef6\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528\u540c\n            // \u4e00\u4e2a\u6761\u4ef6\u53d8\u91cfcv\u3002\u7528\u540c\u4e00\u4e2a\u6761\u4ef6\u53d8\u91cf\uff0c\u5c31\u76f8\u5f53\u4e8e\u5524\u9192\u7684\u65f6\u5019\u591a\u5524\u9192\u4e86\uff0c\u591a\n            // \u5524\u9192\u7684\u8981\u81ea\u5df1\u68c0\u67e5\u81ea\u5df1\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\n\n            cond_wait(&amp;cv, &amp;lk);\n            // This is subtle. Seemingly \"more efficient\"\n            // implementation is dangerous for newbies.\n        }\n\n        printf(\"(\");\n        depth++;\n\n        cond_signal(&amp;cv);\n        mutex_unlock(&amp;lk);\n    }\n}\n\nvoid T_consume() {\n    while (1) {\n        mutex_lock(&amp;lk);\n\n        if (!CAN_CONSUME) {\n            cond_wait(&amp;cv, &amp;lk);\n        }\n\n        printf(\")\");\n        depth--;\n\n        cond_signal(&amp;cv);\n        mutex_unlock(&amp;lk);\n    }\n}\n</code></pre></p> <p>pc-cv-broadcast.c: \u6b63\u786e\u7684\u6761\u4ef6\u53d8\u91cf\u5b9e\u73b0 <pre><code>#include &lt;thread.h&gt;\n#include &lt;thread-sync.h&gt;\n\nint n, depth = 0;\nmutex_t lk = MUTEX_INIT();\ncond_t cv = COND_INIT();\n\n#define CAN_PRODUCE (depth &lt; n)\n#define CAN_CONSUME (depth &gt; 0)\n\nvoid T_produce() {\n    while (1) {\n        mutex_lock(&amp;lk);\n\n        while (!CAN_PRODUCE) {\n            cond_wait(&amp;cv, &amp;lk); // wait\u65f6: \u91ca\u653e\u9501\uff0c\u5207\u6362\u5230\u522b\u7684\u7ebf\u7a0b\n            // We are here if the thread is being waked up, with\n            // the mutex being acquired. Then we check once again,\n            // and move out of the loop if CAN_PRODUCE holds.\n\n            // \u56de\u6765\u8fd9\u91cc\u65f6: \u83b7\u5f97\u9501\uff0c\u7136\u540e\u4e0b\u4e00\u8f6ewhile\u68c0\u67e5\u6761\u4ef6\n        }\n\n        // We still hold the mutex--and we check again.\n        assert(CAN_PRODUCE);\n\n        printf(\"(\");\n        depth++;\n\n        cond_broadcast(&amp;cv);\n        mutex_unlock(&amp;lk);\n    }\n}\n\nvoid T_consume() {\n    while (1) {\n        mutex_lock(&amp;lk);\n\n        while (!CAN_CONSUME) {\n            cond_wait(&amp;cv, &amp;lk);\n        }\n\n        printf(\")\");\n        depth--;\n\n        cond_broadcast(&amp;cv);\n        mutex_unlock(&amp;lk);\n    }\n}\n</code></pre></p> </li> <li> <p>\u201c\u4e07\u80fd\u201d \u7684\u540c\u6b65\u65b9\u6cd5\uff1a\u6761\u4ef6\u53d8\u91cf\uff08\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\u7b49\u5f85\uff0c\u6761\u4ef6\u6ee1\u8db3\u65f6\u5524\u9192\uff09</p> <pre><code>mutex_t lk = MUTEX_INIT();\ncond_t cv = COND_INIT();\n\n//------------------------------------------------\nmutex_lock(&amp;lk);\nwhile (!condition) {\n    cond_wait(&amp;cv, &amp;lk);\n}\n// Wait for someone for wake-up.\nassert(condition);\n\nmutex_unlock(&amp;lk);\n\n//------------------------------------------------\ncond_signal(&amp;cv);     // Wake up a (random) thread\ncond_broadcast(&amp;cv);  // Wake up all threads\n</code></pre> <p>\u6761\u4ef6\u53d8\u91cf\u7684\u6b63\u786e\u6253\u5f00\u65b9\u5f0f\uff1a</p> <ul> <li>\u4f7f\u7528 while \u5faa\u73af\u548c broadcast<ul> <li>\u603b\u662f\u5728\u5524\u9192\u540e\u518d\u6b21\u68c0\u67e5\u540c\u6b65\u6761\u4ef6</li> <li>\u603b\u662f\u5524\u9192\u6240\u6709\u6f5c\u5728\u53ef\u80fd\u88ab\u5524\u9192\u7684\u4eba</li> </ul> </li> <li>\u5728\u89e3\u51b3\u540c\u6b65\u95ee\u9898\u65f6\uff0c\u5173\u952e\u5728\u4e8e\u7406\u89e3 \u201c\u540c\u6b65\u6210\u529f\u201d \u7684\u6761\u4ef6\u662f\u4ec0\u4e48\u3002</li> </ul> </li> <li> <p>\u540c\u6b65\u673a\u5236\u7684\u5e94\u7528</p> <ul> <li>\u6709\u4e09\u79cd\u7ebf\u7a0b<ul> <li><code>Ta</code>\u82e5\u5e72\uff1a\u6b7b\u5faa\u73af\u6253\u5370 <code>&lt;</code></li> <li><code>Tb</code>\u82e5\u5e72\uff1a\u6b7b\u5faa\u73af\u6253\u5370 <code>&gt;</code></li> <li><code>Tc</code>\u82e5\u5e72\uff1a\u6b7b\u5faa\u73af\u6253\u5370 <code>_</code></li> </ul> </li> <li>\u4efb\u52a1\uff1a<ul> <li>\u5bf9\u7ebf\u7a0b\u540c\u6b65\uff0c\u4f7f\u5f97\u5c4f\u5e55\u6253\u5370\u51fa <code>&lt;&gt;&lt;_</code> \u548c <code>&gt;&lt;&gt;_</code> \u7684\u7ec4\u5408</li> </ul> </li> </ul> <p>\u540c\u6b65\u6210\u529f\u7684\u6761\u4ef6\u662f\u4ec0\u4e48</p> <p>\u4f7f\u7528\u6761\u4ef6\u53d8\u91cf\uff0c\u53ea\u8981\u56de\u7b54\u4e09\u4e2a\u95ee\u9898\uff1a\u6253\u5370 <code>&lt;</code> \u7684\u6761\u4ef6\uff1f\u6253\u5370 <code>&gt;</code> \u7684\u6761\u4ef6\uff1f\u6253\u5370 <code>_</code> \u7684\u6761\u4ef6\uff1f</p> <p>\u5229\u7528\u72b6\u6001\u673a\u89c6\u89d2\u6765\u89e3\u51b3\uff1a </p> <pre><code>#include \"thread.h\"\n#include \"thread-sync.h\"\n\n#define LENGTH(arr) (sizeof(arr) / sizeof(arr[0]))\n\nenum { A = 1, B, C, D, E, F, };\n\nstruct rule {\nint from, ch, to;\n} rules[] = {\n    {A, '&lt;', B},\n    {B, '&gt;', C},\n    {C, '&lt;', D},\n    {A, '&gt;', E},\n    {E, '&lt;', F},\n    {F, '&gt;', D},\n    {D, '_', A},\n};\n\nint current = A, quota = 1;\n\nmutex_t lk = MUTEX_INIT();\ncond_t cv = COND_INIT();\n\nint next(char ch) {\n    for (int i = 0; i &lt; LENGTH(rules); i++) {\n        struct rule *rule = &amp;rules[i];\n        if (rule-&gt;from == current &amp;&amp; rule-&gt;ch == ch) {\n        return rule-&gt;to;\n        }\n    }\n    return 0;\n}\n\nstatic int can_print(char ch) {\n    return next(ch) != 0 &amp;&amp; quota &gt; 0;\n}\n\nvoid fish_before(char ch) {\n    mutex_lock(&amp;lk);\n    while (!can_print(ch)) {\n        cond_wait(&amp;cv, &amp;lk);\n    }\n    quota--;\n    mutex_unlock(&amp;lk);\n}\n\nvoid fish_after(char ch) {\n    mutex_lock(&amp;lk);\n    quota++;\n    current = next(ch);\n    assert(current);\n    cond_broadcast(&amp;cv);\n    mutex_unlock(&amp;lk);\n}\n\nconst char roles[] = \".&lt;&lt;&lt;&lt;&lt;&gt;&gt;&gt;&gt;___\";\n\nvoid fish_thread(int id) {\n    char role = roles[id];\n    while (1) {\n        fish_before(role);\n        putchar(role); // Not lock-protected\n        fish_after(role);\n    }\n}\n\nint main() {\n    setbuf(stdout, NULL);\n    for (int i = 0; i &lt; strlen(roles); i++)\n        create(fish_thread);\n}\n</code></pre> </li> </ol>"},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-10-2","title":"Lecture 10 \u5e76\u53d1\u63a7\u5236\uff1a\u540c\u6b65 (2)","text":"<p>Take-away Messages</p> <p>\u4fe1\u53f7\u91cf\u53ef\u4ee5\u770b\u505a\u662f\u4e92\u65a5\u9501\u7684\u4e00\u4e2a \u201c\u63a8\u5e7f\u201d\uff0c\u53ef\u4ee5\u7406\u89e3\u6210\u6e38\u6cf3\u9986\u7684\u624b\u73af\u3001\u888b\u5b50\u91cc\u7684\u7403\uff0c\u901a\u8fc7\u8ba1\u6570\u7684\u65b9\u5f0f\u5b9e\u73b0\u540c\u6b65\u2014\u2014\u5728\u7b26\u5408\u8fd9\u4e2a\u62bd\u8c61\u65f6\uff0c\u4f7f\u7528\u4fe1\u53f7\u91cf\u80fd\u591f\u5e26\u6765\u4f18\u96c5\u7684\u4ee3\u7801\u3002\u4f46\u4fe1\u53f7\u91cf\u4e0d\u662f\u4e07\u80fd\u7684\u2014\u2014\u7406\u89e3\u7ebf\u7a0b\u540c\u6b65\u7684\u6761\u4ef6\u624d\u662f\u771f\u6b63\u81f3\u5173\u91cd\u8981\u7684\u3002</p> <ol> <li> <p>E. W. Dijkstra \u53d1\u660e\u7684\u53e6\u4e00\u79cd\u5171\u4eab\u5185\u5b58\u7cfb\u7edf\u4e2d\u5e38\u7528\u7684\u540c\u6b65\u65b9\u6cd5\uff1a\u4fe1\u53f7\u91cf\u3002 </p> <p>\u7528\u4e92\u65a5\u9501\u5b9e\u73b0\u540c\u6b65, \u4e00\u4e2a\u5947\u5999\u7684\u60f3\u6cd5:</p> <ul> <li>\u521b\u5efa\u9501\u65f6\uff0c\u7acb\u5373 \u201c\u83b7\u5f97\u201d \u5b83 (\u603b\u662f\u6210\u529f)</li> <li>\u5176\u4ed6\u4eba\u60f3\u8981\u83b7\u5f97\u65f6\u5c31\u4f1a\u7b49\u5f85<ul> <li>\u6b64\u65f6 release \u5c31\u5b9e\u73b0\u4e86\u540c\u6b65</li> </ul> </li> <li>\u4e00\u4e2a\u7ebf\u7a0b\u4e0a\u9501\uff0c\u5728\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u89e3\u9501 \ud83d\ude02 (\u5b9e\u9645\u4ee3\u7801\u8fd9\u4e48\u5199\u662fUndefined behavior)</li> </ul> <p>\u7528\u4e92\u65a5\u9501\u5b9e\u73b0\u8ba1\u7b97\u56fe, Acquire-Release \u5b9e\u73b0\u8ba1\u7b97\u56fe:</p> <ul> <li>\u4e3a\u6bcf\u4e00\u6761\u8fb9 <code>e = (u,v)</code> \u5206\u914d\u4e00\u4e2a\u4e92\u65a5\u9501 \ud83d\udd12</li> <li>\u521d\u59cb\u65f6\uff0c\u5168\u90e8\u5904\u4e8e\u9501\u5b9a\u72b6\u6001</li> <li>\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u9700\u8981\u83b7\u5f97\u6240\u6709\u5165\u8fb9\u7684\u9501\u624d\u80fd\u7ee7\u7eed<ul> <li>\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u7684\u8282\u70b9\u7acb\u5373\u5f00\u59cb\u8ba1\u7b97</li> </ul> </li> <li> <p>\u8ba1\u7b97\u5b8c\u6210\u540e\uff0c\u91ca\u653e\u6240\u6709\u51fa\u8fb9\u5bf9\u5e94\u7684\u9501</p> <p>example\uff1a</p> <p></p> </li> </ul> <pre><code>#include &lt;thread.h&gt;\n#include &lt;thread-sync.h&gt;\n#include &lt;unistd.h&gt;\n\n#define LENGTH(arr) (sizeof(arr) / sizeof(arr[0]))\n\nconst int N = 7;\n\nstruct Edge {\n    int from, to;\n    mutex_t mutex;\n} edges[] = {\n    {1, 2, MUTEX_INIT()},\n    {2, 3, MUTEX_INIT()},\n    {2, 4, MUTEX_INIT()},\n    {2, 5, MUTEX_INIT()},\n    {4, 6, MUTEX_INIT()},\n    {5, 6, MUTEX_INIT()},\n    {4, 7, MUTEX_INIT()},\n};\n\nvoid T_worker(int id) {\n    for (int i = 0; i &lt; LENGTH(edges); i++) {\n        struct Edge *e = &amp;edges[i];\n        if (e-&gt;to == id) {\n            mutex_lock(&amp;e-&gt;mutex);\n        }\n    }\n\n    printf(\"Start %d\\n\", id);\n    sleep(1);\n    printf(\"End %d\\n\", id);\n    sleep(1);\n\n    for (int i = 0; i &lt; LENGTH(edges); i++) {\n        struct Edge *e = &amp;edges[i];\n        if (e-&gt;from == id) {\n            // Well... This is undefined behavior\n            // for POSIX threads. This is just a\n            // hack for demonstration.\n            mutex_unlock(&amp;e-&gt;mutex);\n        }\n    }\n}\n\nint main() {\n    for (int i = 0; i &lt; LENGTH(edges); i++) {\n        struct Edge *e = &amp;edges[i];\n        mutex_lock(&amp;e-&gt;mutex);\n    }\n\n    for (int i = 0; i &lt; N; i++) {\n        create(T_worker);\n    }\n}\n</code></pre> </li> <li> <p>\u672c\u8d28\uff1a\u201cRelease as Synchronization\u201d</p> <p>Release-Acquire \u5b9e\u73b0\u4e86 happens-before</p> <ul> <li>Acquire = \u7b49\u5f85 token\uff0c\u5f80\u888b\u5b50\u91cc\u53d6\u7403 (\u5982\u679c\u6b64\u65f6\u888b\u91cc\u6ca1\u6709\u7403\uff0c\u5219\u9700\u8981\u7b49\u5f85)\uff0cP</li> <li>Release = \u53d1\u51fa token\uff0c\u5f80\u888b\u5b50\u91cc\u653e\u7403 (\u5982\u679c\u6709\u4eba\u5728\u7b49\u5f85\uff0c\u76f4\u63a5\u628a\u7403\u4ea4\u7ed9\u4ed6)\uff0cV</li> <li>\u6ce8\u610f\u6211\u4eec\u53ef\u4ee5\u6709\u591a\u4e2a\u53e3\u888b</li> </ul> <p>\u4fe1\u53f7\u91cf\u7684 API: (\u4fe1\u53f7\u91cf\u5b9e\u9645\u4e0a\u662f\u7279\u6b8a\u7684\u6761\u4ef6\u53d8\u91cf\uff0c\u9690\u542b\u4e86\u4e00\u4e2a\u7279\u522b\u7684\u6761\u4ef6: \u7403\u7684\u6570\u91cf\u5927\u4e8e 0) <pre><code>void P(sem_t *sem) {\n    // P - prolaag\n    //     try + decrease/down/wait/acquire\n    atomic {\n        wait_until(sem-&gt;count &gt; 0) {\n            sem-&gt;count--;\n        }\n    }\n}\n\nvoid V(sem_t *sem) {\n    // V - verhoog\n    //     increase/up/post/signal/release\n    atomic {\n        sem-&gt;count++;\n    }\n}\n</code></pre></p> </li> <li> <p>\u4fe1\u53f7\u91cf\u7684\u4e24\u79cd\u5178\u578b\u5e94\u7528</p> <ol> <li>\u5b9e\u73b0\u4e00\u6b21\u4e34\u65f6\u7684 happens-before: <ul> <li>A \u2192 V(s) \u2192 P(s)  \u2192 B<ul> <li>\u8fd9\u5c31\u662f\u521a\u624d\u7684 \u201c\u4e92\u65a5\u9501\u5b9e\u73b0\u540c\u6b65\u201d</li> </ul> </li> </ul> </li> <li>\u7ba1\u7406\u8ba1\u6570\u578b\u8d44\u6e90<ul> <li>\u6e38\u6cf3\u6c60\u91cc\u7684\u4eba\u4e0d\u80fd\u8d85\u8fc7 n \u4e2a</li> <li>\u505c\u8f66\u573a\u91cc\u7684\u8f66\u4e0d\u80fd\u8d85\u8fc7 n \u4e2a</li> <li>\u4f46\u53ef\u4ee5\u6709\u591a\u4e2a \u201c\u505c\u8f66\u573a\u201d\u3001\u201c\u6e38\u6cf3\u6c60\u201d</li> <li>\u6211\u4eec\u4e5f\u53ef\u4ee5\u521b\u9020\u51fa\u8f66\u4f4d</li> </ul> </li> </ol> </li> <li> <p>\u4f8b\u5b501\uff1a\u4f7f\u7528\u4fe1\u53f7\u91cf\u5b9e\u73b0\u7ebf\u7a0b join()\uff1a\u6211\u4eec\u65e2\u53ef\u4ee5\u7528\u4e00\u4e2a\u4fe1\u53f7\u91cf\u5b9e\u73b0\u4e00\u6b21\u4e34\u65f6\u7684 happens-before\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a\u8ba1\u6570\u578b\u4fe1\u53f7\u91cf\u7b49\u5f85\u6570\u91cf\u6b63\u786e\u7684\u7ebf\u7a0b\u7ed3\u675f\u3002     <pre><code>#include &lt;thread-sync.h&gt;\n\nsem_t done[16];\nint count = 0;\n\nvoid worker_init(int T) {\n    count = T;\n    for (int i = 1; i &lt;= T; i++) {\n        SEM_INIT(&amp;done[i], 0);\n    }\n}\n\nvoid worker_done(int id) {\n    V(&amp;done[id]);\n}\n\nvoid worker_join() {\n    for (int i = 1; i &lt;= count; i++) {\n        P(&amp;done[i]);\n    }\n}\n</code></pre></p> <p>\u4f8b\u5b502\uff1a\u4f18\u96c5\u5730\u5b9e\u73b0\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u3002\u751f\u4ea7\u8005\u628a\u7403\u4ece empty \u53e3\u888b\u53d6\u8d70\uff0c\u6253\u5370\u4e4b\u540e\u628a\u7403\u653e\u5165 fill \u53e3\u888b\uff1b\u6d88\u8d39\u8005\u5219\u6070\u597d\u76f8\u53cd\u3002\u6574\u4e2a\u7cfb\u7edf\u6ee1\u8db3 empty + fill + \u6b63\u5728\u6253\u5370\u7684\u7ebf\u7a0b = \u7f13\u51b2\u533a\u5927\u5c0f\u7684\u5168\u5c40\u7ea6\u675f\u3002 <pre><code>void produce() {\n    P(&amp;empty);\n    printf(\"(\");\n    V(&amp;fill);\n}\n\nvoid consume() {\n    P(&amp;fill);\n    printf(\")\");\n    V(&amp;empty);\n}\n</code></pre> </p> </li> <li> <p>\u4fe1\u53f7\u91cf v.s. \u6761\u4ef6\u53d8\u91cf</p> <ul> <li>\u4fe1\u53f7\u91cf<ul> <li>\u4e92\u65a5\u9501\u7684\u81ea\u7136\u63a8\u5e7f</li> <li>\u5e72\u51c0\u3001\u4f18\u96c5\uff1a\u6ca1\u6709\u6761\u4ef6\u53d8\u91cf\u7684 \u201c\u81ea\u65cb\u201d</li> </ul> </li> <li>\u6761\u4ef6\u53d8\u91cf<ul> <li>\u4e07\u80fd\uff1a\u9002\u7528\u4e8e\u4efb\u4f55\u540c\u6b65\u6761\u4ef6</li> <li>\u4e0d\u592a\u597d\u7528\uff1a\u4ee3\u7801\u603b\u611f\u89c9\u4e0d\u592a\u5e72\u51c0</li> </ul> </li> </ul> <p>\u4f8b\u5b50\uff1a\u54f2\u5b66\u5bb6\u5403\u996d\u95ee\u9898 (E. W. Dijkstra, 1960)</p> <ul> <li>\u54f2\u5b66\u5bb6 (\u7ebf\u7a0b) \u6709\u65f6\u601d\u8003\uff0c\u6709\u65f6\u5403\u996d</li> <li>\u5403\u996d\u9700\u8981\u540c\u65f6\u5f97\u5230\u5de6\u624b\u548c\u53f3\u624b\u7684\u53c9\u5b50</li> </ul> <p></p> <p>\u6761\u4ef6\u53d8\u91cf</p> <ul> <li>\u540c\u6b65\u6761\u4ef6\uff1a<code>avail[lhs] &amp;&amp; avail[rhs]</code></li> <li>\u80cc\u6a21\u677f\u5373\u53ef\uff0c\u4e00\u5b9a\u6b63\u786e\u2705</li> </ul> <p>\u4fe1\u53f7\u91cf</p> <ul> <li><code>P(&amp;sem[lhs]) &amp;&amp; P(&amp;sem[rhs])</code></li> <li>\u770b\u8d77\u6765\u6ca1\u4ec0\u4e48\u95ee\u9898\uff1f\u9762\u5bf9\u590d\u6742\u7684\u540c\u6b65\u6761\u4ef6\uff0c\u5bb9\u6613\u51fa\u9519...</li> </ul> <pre><code>#include &lt;thread.h&gt;\n#include &lt;thread-sync.h&gt;\n\n#define N 5\n\nsem_t avail[N];\n\nvoid Tphilosopher(int id) {\n    int lhs = (id + N - 1) % N; // id - 1\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u6545 + N\n    int rhs = id % N;\n\n    while (1) {\n        P(&amp;avail[lhs]);\n        printf(\"+ %d by T%d\\n\", lhs, id); // \u274c, \u5982\u679c 5 \u4e2a\u54f2\u5b66\u5bb6\u540c\u65f6\u4e3e\u8d77\n                                          // \u5de6\u624b\u7684\u53c9\u5b50 -&gt; \u6b7b\u9501\u4e86\n        P(&amp;avail[rhs]);\n        printf(\"+ %d by T%d\\n\", rhs, id);\n\n        // Eat.\n        // Philosophers are allowed to eat in parallel.\n\n        printf(\"- %d by T%d\\n\", lhs, id);\n        printf(\"- %d by T%d\\n\", rhs, id);\n        V(&amp;avail[lhs]);\n        V(&amp;avail[rhs]);\n    }\n}\n\nint main() {\n    for (int i = 0; i &lt; N; i++) {\n        SEM_INIT(&amp;avail[i], 1);\n    }\n\n    for (int i = 0; i &lt; N; i++) {\n        create(Tphilosopher);\n    }\n}\n</code></pre> <ul> <li>\u5982\u679c 5 \u4e2a\u54f2\u5b66\u5bb6\u540c\u65f6\u4e3e\u8d77\u5de6\u624b\u7684\u53c9\u5b50\u2026\u2026\u6b7b\u9501\u4e86<ul> <li>\u6211\u4eec\u9700\u8981\u7981\u6b62\u8fd9\u4ef6\u4e8b\u53d1\u751f</li> </ul> </li> </ul> <p>\u4fe1\u53f7\u91cfWorkaround 1: \u4ece\u684c\u5b50\u4e0a\u8d76\u8d70\u4e00\u4e2a\u4eba</p> <ul> <li>\u76f4\u89c2\u7406\u89e3\uff1a\u5927\u5bb6\u5148\u4ece\u684c\u4e0a\u9000\u51fa<ul> <li>\u888b\u5b50\u91cc\u6709 4 \u5f20\u5361</li> <li>\u62ff\u5230\u5361\u7684\u53ef\u4ee5\u4e0a\u684c\u5403\u996d (\u62ff\u53c9\u5b50)</li> <li>\u5403\u5b8c\u4ee5\u540e\u628a\u5361\u5f52\u8fd8\u5230\u888b\u5b50</li> </ul> </li> </ul> <pre><code>#include &lt;thread.h&gt;\n#include &lt;thread-sync.h&gt;\n\n#define N 5\n\nsem_t table;\nsem_t avail[N];\n\nvoid Tphilosopher(int id) {\n    int lhs = (id + N - 1) % N;\n    int rhs = id % N;\n\n    while (1) {\n        // Come to table\n        P(&amp;table);\n\n        P(&amp;avail[lhs]);\n        printf(\"+ %d by T%d\\n\", lhs, id);\n        P(&amp;avail[rhs]);\n        printf(\"+ %d by T%d\\n\", rhs, id);\n\n        // Eat.\n        // Philosophers are allowed to eat in parallel.\n\n        printf(\"- %d by T%d\\n\", lhs, id);\n        printf(\"- %d by T%d\\n\", rhs, id);\n        V(&amp;avail[lhs]);\n        V(&amp;avail[rhs]);\n\n        // Leave table\n        V(&amp;table);\n    }\n}\n\nint main() {\n    SEM_INIT(&amp;table, N - 1); // \u2705 \u4fdd\u8bc1\u684c\u5b50\u4e0a\u81f3\u591a\u6709 N - 1 \u4e2a\u4eba\n\n\n    for (int i = 0; i &lt; N; i++) {\n        SEM_INIT(&amp;avail[i], 1); // N\u4e2a\u888b\u5b50\uff0c\u6bcf\u4e2a\u888b\u5b50\u91cc\u81f3\u591a1\u4e2a\u53c9\u5b50\n    }\n\n    for (int i = 0; i &lt; N; i++) {\n        create(Tphilosopher);\n    }\n}\n</code></pre> <p>\u4fe1\u53f7\u91cfWorkaround 2: Lock Ordering</p> <ul> <li>\u7ed9\u53c9\u5b50\u7f16\u53f7\uff0c\u603b\u662f\u5148\u62ff\u7f16\u53f7\u5c0f\u7684</li> </ul> <pre><code>#include &lt;thread.h&gt;\n#include &lt;thread-sync.h&gt;\n\n#define N 5\n\nsem_t avail[N];\n\nvoid Tphilosopher(int id) {\n    int lhs = (id + N - 1) % N;\n    int rhs = id % N;\n\n    while (1) {\n        if (lhs &lt; rhs) // \u2705\u4fdd\u8bc1\u7f16\u53f7\u5c0f\u7684\u5148\u62ff\n        {\n            P(&amp;avail[lhs]);\n            P(&amp;avail[rhs]);\n        }\n        else\n        {\n            P(&amp;avail[rhs]);\n            P(&amp;avail[lhs]);\n        }\n        printf(\"+ %d by T%d\\n\", lhs, id);\n        printf(\"+ %d by T%d\\n\", rhs, id);\n\n        // Eat.\n        // Philosophers are allowed to eat in parallel.\n\n        printf(\"- %d by T%d\\n\", lhs, id);\n        printf(\"- %d by T%d\\n\", rhs, id);\n        V(&amp;avail[lhs]);\n        V(&amp;avail[rhs]);\n    }\n}\n\nint main() {\n    for (int i = 0; i &lt; N; i++) {\n        SEM_INIT(&amp;avail[i], 1);\n    }\n\n    for (int i = 0; i &lt; N; i++) {\n        create(Tphilosopher);\n    }\n}\n</code></pre> </li> <li> <p>\u7528\u6761\u4ef6\u53d8\u91cf\u5b9e\u73b0\u4fe1\u53f7\u91cf: easy     <pre><code>void P(sem_t *sem) {\n    hold(&amp;sem-&gt;mutex) {\n        while (!COND)\n            cond_wait(&amp;sem-&gt;cv, &amp;sem-&gt;mutex);\n        sem-&gt;count--;\n    }\n}\n\nvoid V(sem_t *sem) {\n    hold(&amp;sem-&gt;mutex) {\n        sem-&gt;count++;\n        cond_broadcast(&amp;sem-&gt;cv);\n    }\n}\n</code></pre></p> <p>\u7528\u4fe1\u53f7\u91cf\u5b9e\u73b0\u6761\u4ef6\u53d8\u91cf: hard, \u4e0b\u9762\u8fd9\u4e2a\u662f\u9519\u8bef\u5b9e\u73b0 <pre><code>void wait(struct condvar *cv, mutex_t *mutex) {\n    mutex_lock(&amp;cv-&gt;lock);\n    cv-&gt;nwait++;\n    mutex_unlock(&amp;cv-&gt;lock);\n\n    mutex_unlock(mutex); // \u5fc5\u987b\u5148\u91ca\u653e\u9501\uff0c\u518dsleep\u3002\u5426\u5219\u5e26\u7740\u9501\u53bbsleep\u4e86\u8bdd\uff0c\n                         // \u6ca1\u4eba\u518d\u80fd\u83b7\u5f97mutex\u8fd9\u628a\u9501\uff0c\u518d\u4e5f\u6539\u5199\u4e0d\u4e86\u72b6\u6001\u4e86\u3002\n\n                         // \u7136\u800c\uff0c\u82e5\u662f\u5148\u91ca\u653e\u4e86\u9501\uff0c\u6b64\u65f6\u6709\u53ef\u80fd\u522b\u7684\u7ebf\u7a0b\u6267\u884c\u4e86V\uff0c\n                         // \u6b64\u65f6\u522b\u7684\u7ebf\u7a0b\u6b63\u597d\u5728\u7b49P\uff0c\u7ed3\u679c\u76f4\u63a5\u6210\u529f\u4e86\uff0c\u538b\u6839\u4e0d\u7528\n                         // sleep\uff0c\u63a5\u7740\u5c31\u80fd\u5f80\u4e0b\u6267\u884c\u4e86\u3002\u62a2\u8d70\u4e86\u672c\u7ebf\u7a0bsleep\u540e\n                         // \u60f3\u8981\u83b7\u5f97\u7684\u7403\u3002\u4e5f\u5c31\u662f\u9519\u8bef\u7684\u5524\u9192\u4e86\u522b\u7684\u7ebf\u7a0b\u3002\n                         // \u5e0c\u671b\u7684\u662f\u751f\u4ea7\u8005\u5524\u9192\u6d88\u8d39\u8005\uff0c\u6d88\u8d39\u8005\u5524\u9192\u751f\u4ea7\u8005\u3002\u7136\u800c\n                         // \u73b0\u5728\u8fd9\u6837\u662f\u6709\u53ef\u80fd\u751f\u4ea7\u8005T1\u5524\u9192\u4e86\u751f\u4ea7\u8005T2\uff0c\u6d88\u8d39\u8005\u65e0\n                         // \u6cd5\u88ab\u5524\u9192\uff0c\u751f\u4ea7\u8005\u53c8\u7b49\u7740\u6d88\u8d39\u8005\u62ff\u8d70buffer\u7684\u4e1c\u897f\uff0c\u5bfc\n                         // \u81f4\u7cfb\u7edf\u518d\u4e5f\u65e0\u4efb\u4f55\u8fdb\u5ea6\u3002\n    P(&amp;cv-&gt;sleep);\n    // \u201c\u91ca\u653e\u9501\u5e76\u7761\u7720\u201d \u9700\u8981\u88ab\u5b9e\u73b0\u6210\u4e00\u4e2a\u539f\u5b50\u64cd\u4f5c (\u4f8b\u5982\uff0c\u7528\u81ea\u65cb\u5b9e\u73b0)\uff0c\u4f46\u8fd9\u4e00\u70b9\u5e76\n    // \u4e0d\u5bb9\u6613\u7528\u4fe1\u53f7\u91cf\u5b9e\u73b0\n\n    mutex_lock(mutex); // \u7761\u9192\u540e\u91cd\u65b0\u83b7\u5f97mutex\u8fd9\u628a\u9501\n}\n\nvoid broadcast(struct condvar *cv) {\n    mutex_lock(&amp;cv-&gt;lock);\n\n    for (int i = 0; i &lt; cv-&gt;nwait; i++) {\n        V(&amp;cv-&gt;sleep);\n    }\n    cv-&gt;nwait = 0;\n\n    mutex_unlock(&amp;cv-&gt;lock);\n}\n</code></pre></p> <p>\u5b9e\u73b0\u56f0\u96be\u7684\u672c\u8d28\u539f\u56e0\uff1a</p> <ul> <li>\u5148\u91ca\u653e\u9501\uff0c\u518d\u6267\u884c P<ul> <li>\u91ca\u653e\u9501\u7684\u4e00\u77ac\u95f4\u53ef\u80fd\u4e0e broadcast \u5e76\u53d1</li> </ul> </li> <li>\u5148\u6267\u884c P\uff0c\u518d\u91ca\u653e\u9501<ul> <li>P(&amp;cv-&gt;sleep) \u4f1a \u201c\u6c38\u4e45\u7761\u7720\u201d</li> </ul> </li> </ul> <p>\u9519\u8bef\u5b9e\u73b0\uff1a <pre><code>#include &lt;thread.h&gt;\n#include &lt;thread-sync.h&gt;\n\nsem_t fill, empty;\n\nstruct condvar {\n    int nwait;\n    sem_t sleep;\n    mutex_t lock;\n} cv;\n\nvoid init(struct condvar *cv) {\n    cv-&gt;nwait = 0;\n    mutex_init(&amp;cv-&gt;lock);\n    SEM_INIT(&amp;cv-&gt;sleep, 0);\n}\n\nvoid wait(struct condvar *cv, mutex_t *mutex) {\n    // At this point, we hold \"mutex\".\n    mutex_lock(&amp;cv-&gt;lock);\n    cv-&gt;nwait++;\n    mutex_unlock(&amp;cv-&gt;lock);\n\n    // We have marked this thread as \"waiting\".\n    // Now we release the lock and go to sleep.\n    //\n    // &lt;-- broadcast() may happen here.\n    //     Suppose T1 calls broadcast() and proceeds\n    //     with execution. T1 may call wait() and\n    //     erroneously being signaled.\n    mutex_unlock(mutex);\n\n    // &lt;-- also, here.\n    P(&amp;cv-&gt;sleep);\n\n    // Re-acquire the mutex.\n    mutex_lock(mutex);\n}\n\nvoid broadcast(struct condvar *cv) {\n    mutex_lock(&amp;cv-&gt;lock);\n\n    // Wake up all waiting threads.\n    for (int i = 0; i &lt; cv-&gt;nwait; i++) {\n        V(&amp;cv-&gt;sleep);\n    }\n    cv-&gt;nwait = 0;\n    mutex_unlock(&amp;cv-&gt;lock);\n}\n\nint n = 1, depth = 0;\nmutex_t lk = MUTEX_INIT();\nstruct condvar cv;\n\n#define CAN_PRODUCE (depth &lt; n)\n#define CAN_CONSUME (depth &gt; 0)\n\nvoid T_produce() {\n    while (1) {\n        mutex_lock(&amp;lk);\n\n        while (!CAN_PRODUCE) {\n            wait(&amp;cv, &amp;lk);\n        }\n\n        printf(\"(\");\n        fflush(stdout);\n        depth++;\n\n        mutex_unlock(&amp;lk);\n\n        // Yes. We can broadcast without\n        // holding the mutex.\n        broadcast(&amp;cv);\n        usleep(10);\n    }\n}\n\nvoid T_consume() {\n    init(&amp;cv);\n\n    while (1) {\n        mutex_lock(&amp;lk);\n\n        while (!CAN_CONSUME) {\n            wait(&amp;cv, &amp;lk);\n        }\n\n        printf(\")\");\n        fflush(stdout);\n        depth--;\n\n        mutex_unlock(&amp;lk);\n\n        broadcast(&amp;cv);\n        usleep(10);\n    }\n}\n\nint main() {\n    for (int i = 0; i &lt; 1; i++) {\n        create(T_consume);\n        create(T_produce);\n    }\n}\n</code></pre></p> </li> </ol>"},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-11","title":"Lecture 11 \u771f\u5b9e\u4e16\u754c\u7684\u5e76\u53d1\u7f16\u7a0b","text":"<p>Take-away Messages</p> <p>\u5bf9\u5e76\u53d1\u7f16\u7a0b\u7684\u4e89\u8bae\u4e00\u76f4\u5b58\u5728\uff0c\u4f8b\u5982 \u201cThreads cannot be implemented as a library\u201d\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5728\u5f88\u591a\u5e94\u7528\u9886\u57df\u770b\u5230\u4e86 \u201c\u9886\u57df\u7279\u5b9a\u201d \u7684\u89e3\u51b3\u65b9\u6848\uff1aWeb \u4e2d\u7684\u5f02\u6b65\u7f16\u7a0b\u3001\u9ad8\u6027\u80fd\u8ba1\u7b97\u4e2d\u7684 MPI \u548c OpenMI\u3001\u6570\u636e\u4e2d\u5fc3\u4e2d\u7684 goroutines\u3001\u4eba\u5de5\u667a\u80fd\u65f6\u4ee3\u7684 CUDA\u3002\u66f4\u6709\u8da3\u7684\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff1a\u6539\u53d8\u4e16\u754c\u7684\u6280\u672f\uff0c\u5f80\u5f80\u53ea\u662f\u4e00\u4e2a\u5c0f\u5c0f\u7684\u5947\u601d\u5999\u60f3,\u6700\u7ec8\u575a\u6301\u5230\u5e95\u5f97\u5230\u7684\u2014\u2014\u5b83\u4eec\u5f88\u96be\u88ab \u201c\u89c4\u5212\u201d \u51fa\u6765\uff0c\u800c\u662f\u9700\u8981\u4e00\u4e9b \u201c\u80cc\u9053\u800c\u9a70\u201d \u7684\u4eba\u575a\u6301\u5230\u5e95\u3002\u5728\u5f53\u4eca\u7684\u793e\u4f1a\u73af\u5883\u4e0b\uff0c\u6211\u4eec\u6700\u7f3a\u5c11\u7684\u662f\u6709\u80fd\u529b\u80cc\u9053\u800c\u9a70\u7684\u4eba\u2014\u2014\u6709\u4e86\u4e0b\u4e00\u4ee3\u4eba\u7684\u8fdb\u6b65\uff0c\u624d\u4f1a\u6709\u5305\u5bb9\u4ed6\u4eec\u7684\u571f\u58e4\u3002</p> <ol> <li> <p>\u9ad8\u6027\u80fd\u8ba1\u7b97\u4e2d\u7684\u5e76\u884c\u7f16\u7a0b</p> <ul> <li>\u901a\u5e38\u8ba1\u7b97\u56fe\u5bb9\u6613\u9759\u6001\u5207\u5206 (\u673a\u5668-\u7ebf\u7a0b\u4e24\u7ea7\u4efb\u52a1\u5206\u89e3)<ul> <li>\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u89e3\u51b3\u4e00\u5207<ul> <li>MPI - \u201cmessage passing libraries\u201d, OpenMP - \u201cmulti-platform shared-memory parallel programming (C/C++ and Fortran)\u201d</li> </ul> </li> </ul> </li> </ul> <pre><code>// \u52a0\u4e0a\u8fd9\u4e2a\uff0c\u4e0b\u9762\u7684for\u5faa\u73af\u5c31\u80fd\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u91cc\u5e76\u884c\u8ba1\u7b97\n#pragma omp parallel num_threads(128) \nfor (int i = 0; i &lt; 1024; i++) {\n}\n</code></pre> </li> </ol>"},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-12-bugs","title":"Lecture 12 \u5e76\u53d1 Bugs","text":"<p>Take-away Messages</p> <p>\u4eba\u7c7b\u672c\u8d28\u4e0a\u662f sequential creature\uff0c\u56e0\u6b64\u603b\u662f\u901a\u8fc7 \u201c\u5757\u7684\u987a\u5e8f\u6267\u884c\u201d \u8fd9\u4e00\u7b80\u5316\u6a21\u578b\u53bb\u7406\u89e3\u5e76\u53d1\u7a0b\u5e8f\uff0c\u4e5f\u76f8\u5e94\u6709\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u5e76\u53d1 bugs\uff1a</p> <ul> <li>Atomicity violation\uff0c\u672c\u5e94\u539f\u5b50\u5b8c\u6210\u4e0d\u88ab\u6253\u65ad\u7684\u4ee3\u7801\u88ab\u6253\u65ad</li> <li>Order violation\uff0c\u672c\u5e94\u6309\u67d0\u4e2a\u987a\u5e8f\u5b8c\u6210\u7684\u672a\u80fd\u88ab\u6b63\u786e\u540c\u6b65</li> </ul> <p>\u4e0e\u8fd9\u4e24\u7c7b bugs \u5173\u8054\u7684\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u662f\u6570\u636e\u7ade\u4e89\uff0c\u5373\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u540c\u4e00\u5185\u5b58\uff0c\u4e14\u81f3\u5c11\u6709\u4e00\u4e2a\u662f\u5199\u3002\u6570\u636e\u7ade\u4e89\u975e\u5e38\u5371\u9669\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u7f16\u7a0b\u65f6\u8981\u5c3d\u529b\u907f\u514d\u3002</p> <ol> <li> <p>\u5e38\u89c1\u7684\u5e76\u53d1 bugs\uff1a\u6b7b\u9501\u3001\u6570\u636e\u7ade\u4e89\u3001\u539f\u5b50\u6027\u548c\u987a\u5e8f\u8fdd\u53cd\u3002</p> <ul> <li>\u6b7b\u9501 (Deadlock): A deadlock is a state in which each member of a group is waiting for another member, including itself, to take action. \u6b7b\u9501\u4ea7\u751f\u7684\u5fc5\u8981\u6761\u4ef6\uff1a<ul> <li>Mutual-exclusion - \u4e00\u4e2a\u53e3\u888b\u4e00\u4e2a\u7403\uff0c\u5f97\u5230\u7403\u624d\u80fd\u7ee7\u7eed</li> <li>Wait-for - \u5f97\u5230\u7403\u7684\u4eba\u60f3\u8981\u66f4\u591a\u7684\u7403</li> <li>No-preemption - \u4e0d\u80fd\u62a2\u522b\u4eba\u7684\u6301\u6709\u7684\u7403</li> <li>Circular-chain - \u5f62\u6210\u5faa\u73af\u7b49\u5f85\u7403\u7684\u5173\u7cfb</li> </ul> </li> <li> <p>\u6570\u636e\u7ade\u4e89 (Data race)\uff1a\u4e0d\u540c\u7684\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u540c\u4e00\u5185\u5b58\uff0c\u4e14\u81f3\u5c11\u6709\u4e00\u4e2a\u662f\u5199\u3002</p> <p>Case 1: \u4e0a\u9519\u4e86\u9501 <pre><code>void T_1() { spin_lock(&amp;A); sum++; spin_unlock(&amp;A); }\nvoid T_2() { spin_lock(&amp;B); sum++; spin_unlock(&amp;B); }\n</code></pre></p> <p>Case 2: \u5fd8\u8bb0\u4e0a\u9501 <pre><code>void T_1() { spin_lock(&amp;A); sum++; spin_unlock(&amp;A); }\nvoid T_2() { sum++; }\n</code></pre></p> </li> <li> <p>\u539f\u5b50\u6027\u548c\u987a\u5e8f\u8fdd\u53cd</p> <ul> <li>\u539f\u5b50\u6027\u8fdd\u53cd (Atomicity Violation)<ul> <li>\u201cABA\u201d: \u4ee3\u7801\u88ab\u522b\u4eba \u201c\u5f3a\u52bf\u63d2\u5165\u201d\u3002\u5373\u4fbf\u5206\u522b\u4e0a\u9501 (\u6d88\u9664\u6570\u636e\u7ade\u4e89)\uff0c\u4f9d\u7136\u662f AV </li> </ul> </li> <li>\u987a\u5e8f\u8fdd\u53cd (Order Violation)<ul> <li>\u201cBA\u201d: \u4e8b\u4ef6\u672a\u6309\u9884\u5b9a\u7684\u987a\u5e8f\u53d1\u751f\u3002\u4f8b\u5b50\uff1aconcurrent use-after-free </li> </ul> </li> </ul> </li> </ul> </li> </ol>"},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-13-bugs","title":"Lecture 13 \u5e94\u5bf9 (\u5e76\u53d1) Bugs","text":"<p>Take-away Messages</p> <p>Bugs (\u5305\u62ec\u5e76\u53d1 bugs) \u4e00\u76f4\u4ee5\u6765\u56f0\u6270\u7740\u6240\u6709\u8f6f\u4ef6\u5de5\u7a0b\u7684\u5b9e\u8df5\u8005\u3002\u6211\u4eec\u4e0d\u4ec5\u8981\u5e94\u5bf9 specification crisis (\u5b9a\u4e49\u5230\u5e95\u4ec0\u4e48\u662f\u5bf9\u7684)\uff0c\u751a\u81f3\u5373\u4fbf\u77e5\u9053 specification\uff0c\u4e5f\u96be\u4ee5\u5e94\u5bf9\u73b0\u4ee3\u8f6f\u4ef6\u7684\u590d\u6742\u6027\u3002\u4e3a\u4e86\u90e8\u5206\u5e94\u5bf9\u8fd9\u4e00\u70b9\u4ece\u800c\u5b9e\u73b0 \u201c\u66f4\u6b63\u786e\u201d \u7684\u8f6f\u4ef6\uff0c\u6211\u4eec\u628a\u5bf9\u7a0b\u5e8f\u7684\u9884\u671f\u8868\u8fbe\u5728\u7a0b\u5e8f\u4e2d (race-free, lock ordering, ...)\uff0c\u800c\u4e0d\u662f\u8ba9\u7a0b\u5e8f\u5728\u81ea\u7136\u72b6\u6001\u4e0b\u6084\u6084\u8fdb\u5165\u6709\u95ee\u9898\u7684\u72b6\u6001\uff0c\u5c31\u662f\u6211\u4eec\u76ee\u524d\u89e3\u51b3\u7a0b\u5e8f\u8c03\u8bd5\u95ee\u9898\u7684\u6298\u4e2d\u529e\u6cd5\u3002\u201c\u5c71\u5be8\u201d sanitizer \u7ed9\u6211\u4eec\u5e26\u6765\u7684\u542f\u53d1\u5219\u662f\uff1a\u5982\u679c\u6211\u4eec\u80fd\u6e05\u695a\u5730\u8ffd\u6eaf\u5230\u95ee\u9898\u4ea7\u751f\u7684\u672c\u6e90\uff0c\u6211\u4eec\u5c31\u603b\u662f\u80fd\u627e\u5230\u597d\u7684\u5e94\u5bf9\u65b9\u6cd5\u2014\u2014\u5c71\u5be8\u7684 sanitizers \u5728\u6697\u4e2d\u5e2e\u52a9\u4f60\u5b9e\u73b0 fail-fast \u7684\u7a0b\u5e8f\uff0c\u4ece\u800c\u51cf\u8f7b\u4f60\u8c03\u8bd5\u95ee\u9898\u7684\u8d1f\u62c5\u3002</p> <ol> <li> <p>\u6b7b\u9501\u7684\u907f\u514d: </p> <ul> <li>Lock ordering: \u907f\u514d\u5faa\u73af\u7b49\u5f85<ul> <li>\u4e25\u683c\u6309\u7167\u7f16\u53f7\u987a\u5e8f\u83b7\u5f97\u6240\u6709\u9501</li> </ul> </li> </ul> <p>lockdep: \u4e3a\u6bcf\u4e00\u4e2a\u9501\u90fd\u8ffd\u8e2a\u4e0a\u9501\u7684\u987a\u5e8f\u4f1a\u5e26\u6765\u76f8\u5f53\u7684\u5f00\u9500\u3002\u66f4\u7ecf\u6d4e\u7684\u65b9\u5f0f\u662f\u628a\u6240\u6709\u5728\u540c\u4e00\u884c\u4ee3\u7801\u4e2d\u521d\u59cb\u5316\u7684\u9501\u90fd\u770b\u6210\u662f \u201c\u540c\u4e00\u4e2a\u9501\u201d\uff0c\u8fd9\u6837\u9501\u7684\u6570\u91cf\u5c31\u5927\u5e45\u51cf\u5c11\u4e86\u3002\u5f53\u7136\u8fd9\u4e5f\u4f1a\u635f\u5931\u4e00\u4e9b\u68c0\u6d4b\u7cbe\u5ea6\uff0c\u4f8b\u5982\u54f2\u5b66\u5bb6\u5403\u996d\u95ee\u9898\u4e2d\uff0c\u5982\u679c\u6240\u6709\u7684\u9501\u90fd\u5728\u540c\u4e00\u884c\u4ee3\u7801\u4e2d\u521d\u59cb\u5316\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u533a\u5206\u5b83\u4eec\u7684\u4e0a\u9501\u987a\u5e8f\u4e86\u3002</p> <p>lockdep.cc <pre><code>#include \"lockdep.h\"\n#include &lt;vector&gt;\n#include &lt;set&gt;\n#include &lt;iostream&gt;\n#include &lt;cassert&gt;\n#include &lt;string&gt;\n\nusing std::string, std::cout, std::endl, std::set;\nusing edge = std::pair&lt;string, string&gt;;\n\n// Subtle: this *memory-leak* is intentional.\n// There lacks a mechanism to force destructor join()\n// to be called *before* global objects' destructions.\nstatic auto* vertices = new set&lt;string&gt;();\nstatic auto* edges = new set&lt;edge&gt;();\n\n// It's safe to auto-destruct thread-local objects.\nstatic thread_local set&lt;string&gt; held_locks;\n\nstatic void check_cycles();\nstatic mutex_t GL = MUTEX_INIT();\n\nclass HoldLock {\n    mutex_t *lk;\n\npublic:\n    HoldLock(mutex_t *lock): lk(lock) {\n        mutex_lock(lk);\n    }\n\n    ~HoldLock() {\n        mutex_unlock(lk);\n    }\n};\n\n// This function is to be C-linked; name mangling is disabled.\nextern \"C\"\nvoid lock(lock_t *lk) {\n    // Vertices and edges (set&lt;&gt;s) are shared across threads.\n    // Keep them safe with an RAII-guarded lock.\n    { [[maybe_unused]] HoldLock h(&amp;GL);\n        bool updated = false;\n\n        vertices-&gt;insert(lk-&gt;name);\n        for (auto name : held_locks) {\n            edge e(name, lk-&gt;name);\n            if (!edges-&gt;contains(e)) {\n                edges-&gt;insert(e);\n                updated = true;\n            }\n        }\n\n        if (updated) {\n            check_cycles();\n        }\n    }\n\n    // The held_locks is declared as thread_local.\n    // No need for locks.\n    held_locks.insert(lk-&gt;name);\n\n    mutex_lock(&amp;lk-&gt;mutex);\n}\n\nextern \"C\"\nvoid unlock(lock_t *lk) {\n    mutex_unlock(&amp;lk-&gt;mutex);\n\n    held_locks.erase(lk-&gt;name);\n}\n\nstatic void check_cycles() {\n    // At this point, we must have held GL.\n    // Unfortunately, there is no graceful way to check if\n    // this lock is held by the current thread.\n    assert(pthread_mutex_trylock(&amp;GL) == EBUSY);\n\n    // Transitive closure by Floyd-Warshall's algorithm.\n    for (auto v: *vertices)\n        for (auto u: *vertices)\n            for (auto w: *vertices)\n                if (edges-&gt;contains({u, v}) &amp;&amp; edges-&gt;contains({v, w})) {\n                    edges-&gt;insert({u, w});\n                }\n\n    // Check for cycles\n    cout &lt;&lt; endl &lt;&lt; \"Lockdep check:\" &lt;&lt; endl;\n    for (auto [u, v] : *edges) {\n        cout &lt;&lt; \"    \" &lt;&lt; u &lt;&lt; \" -&gt; \" &lt;&lt; v &lt;&lt; endl;\n        if (u == v) {\n            cout &lt;&lt; \"    \\033[31m!!! Cycle detected for \"\n                &lt;&lt; u &lt;&lt; \"\\033[0m\" &lt;&lt; endl;\n        }\n    }\n}\n</code></pre></p> <p>lockdep.h <pre><code>#include &lt;thread-sync.h&gt;\n\ntypedef struct {\n    mutex_t mutex;\n    const char *name;\n} lock_t;\n\n#define STRINGIFY(s) #s\n#define TOSTRING(s) STRINGIFY(s)\n#define LOCK_INIT() \\\n    ((lock_t) { \\\n        .mutex = MUTEX_INIT(), \\\n        .name = __FILE__ \":\" TOSTRING(__LINE__), \\\n    })\n\n#ifndef __cplusplus\nvoid lock(lock_t *lk);\nvoid unlock(lock_t *lk);\n#else\nextern \"C\" void lock(lock_t *lk);\nextern \"C\" void unlock(lock_t *lk);\n#endif\n</code></pre></p> <p>main.c <pre><code>#include &lt;thread.h&gt;\n#include \"lockdep.h\"\n\nlock_t lk1 = LOCK_INIT();\nlock_t lk2 = LOCK_INIT();\nlock_t lk3 = LOCK_INIT();\n\nstruct some_object {\n    lock_t lock;\n    int data;\n};\n\nvoid object_init(struct some_object *obj) {\n    obj-&gt;lock = LOCK_INIT();\n    obj-&gt;data = 100;\n}\n\nvoid create_object() {\n    struct some_object *obj = malloc(sizeof(struct some_object));\n    assert(obj);\n    object_init(obj);\n\n    lock(&amp;obj-&gt;lock);\n    unlock(&amp;obj-&gt;lock);\n\n    free(obj);\n}\n\nvoid T_1() {\n    lock(&amp;lk1);\n    lock(&amp;lk2);\n    create_object();\n    unlock(&amp;lk1);\n    unlock(&amp;lk2);\n}\n\nvoid T_2() {\n    sleep(3);\n\n    lock(&amp;lk2);\n    lock(&amp;lk3);\n    create_object();\n    unlock(&amp;lk2);\n    unlock(&amp;lk3);\n}\n\nvoid T_3() {\n    sleep(6);\n\n    lock(&amp;lk3);\n    lock(&amp;lk1);\n    create_object();\n    unlock(&amp;lk1);\n    unlock(&amp;lk3);\n}\n\nint main() {\n    create(T_1);\n    create(T_2);\n    create(T_3);\n}\n</code></pre></p> </li> <li> <p>\u9632\u5fa1\u6027\u7f16\u7a0b</p> <ul> <li> <p>Buffer Overrun \u68c0\u67e5\uff1aCanary (\u91d1\u4e1d\u96c0) \u201c\u727a\u7272\u201d \u5185\u5b58\u5355\u5143\uff0c\u9884\u8b66 memory error</p> <p><pre><code>#define MAGIC 0x55555555\n#define BOTTOM (STK_SZ / sizeof(u32) - 1)\nstruct stack { char data[STK_SZ]; };\n\nvoid canary_init(struct stack *s) {\n    u32 *ptr = (u32 *)s;\n    for (int i = 0; i &lt; CANARY_SZ; i++)\n        ptr[BOTTOM - i] = ptr[i] = MAGIC;\n}\n\nvoid canary_check(struct stack *s) {\n    u32 *ptr = (u32 *)s;\n    for (int i = 0; i &lt; CANARY_SZ; i++) {\n        panic_on(ptr[BOTTOM - i] != MAGIC, \"underflow\");\n        panic_on(ptr[i] != MAGIC, \"overflow\");\n    }\n}\n</code></pre> </p> </li> <li> <p>\u53e6\u4e00\u79cd Canary:</p> <pre><code>int foo() {\n    // \u4e00\u6bb5\u8fde\u7eed\u5185\u5b58\uff1b\u4f4d\u4e8e\u5c40\u90e8\u53d8\u91cf\u548c\u8fd4\u56de\u5730\u5740\u4e4b\u524d\n    u32 canary = SOME_VALUE;\n\n    ... // \u5b9e\u9645\u51fd\u6570\n\n    canary ^= SOME_VALUE; // \u5982\u679c\u7a0b\u5e8f\u88ab\u653b\u51fb\u6216\u51fa\u9519\n                        // canary \u5c31\u4e0d\u4f1a\u5f52\u96f6\u4e86\n    assert(canary == 0);\n    return ret;\n}\n</code></pre> </li> <li> <p>\u201c\u70eb\u70eb\u70eb\u3001\u5c6f\u5c6f\u5c6f\u548c\u847a\u847a\u847a\u201d\u7684\u6765\u6e90\uff1a</p> <ul> <li>\u672a\u521d\u59cb\u5316\u6808: <code>0xcccccccc</code></li> <li>\u672a\u521d\u59cb\u5316\u5806: <code>0xcdcdcdcd</code></li> <li>\u5bf9\u8c61\u5934\u5c3e: <code>0xfdfdfdfd</code></li> <li>\u5df2\u56de\u6536\u5185\u5b58: <code>0xdddddddd</code></li> </ul> <pre><code>for i in [0xcc, 0xcd, 0xdd, 0xfd]:\n    print((bytes([i]) * 80).decode('gbk'))\n</code></pre> </li> <li> <p>\u4f4e\u914d\u7248 Lockdep</p> <pre><code>int spin_cnt = 0;\nwhile (xchg(&amp;lk, \u274c) == \u274c) {\n    // \u81ea\u65cb\u6b21\u6570\u8fc7\u591a\uff0c\u8bf4\u660e\u53ef\u80fd\u6709\u6b7b\u9501\n    if (spin_cnt++ &gt; SPIN_LIMIT) {\n        panic(\"Spin limit exceeded @ %s:%d\\n\",\n            __FILE__, __LINE__);\n    }\n}\n</code></pre> </li> <li> <p>\u4f4e\u914d\u7248 AddressSanitizer</p> <pre><code>// allocation\nfor (int i = 0; (i + 1) * sizeof(u32) &lt;= size; i++) {\n    panic_on(((u32 *)ptr)[i] == MAGIC, \"double-allocation\");\n    arr[i] = MAGIC;\n}\n\n// free\nfor (int i = 0; (i + 1) * sizeof(u32) &lt;= alloc_size(ptr); i++) {\n    panic_on(((u32 *)ptr)[i] == 0, \"double-free\");\n    arr[i] = 0;\n}\n</code></pre> </li> <li> <p>\u4f4e\u914d\u7248 ThreadSanitizer</p> <pre><code>// Suppose x is lock-protected\n\n...\nint observe1 = x;\ndelay();\nint observe2 = x;\n// \u5982\u679c\u5b58\u5728data race\uff0c\u90a3\u4e48x\u4f1a\u88ab\u6539\u5199\uff0c\u5219\u89e6\u53d1assert\nassert(observe1 == observe2);\n...\n</code></pre> </li> <li> <p>SemanticSanitizer</p> <ul> <li> <p>\u68c0\u67e5\u6574\u6570\u662f\u5426\u5728\u67d0\u4e2a\u8303\u56f4</p> <pre><code>#define CHECK_INT(x, cond) \\\n    ({ panic_on(!((x) cond), \\\n    \"int check fail: \" \\\n    #x \" \" #cond); \\\n    })\n\n// Example:\nCHECK_INT(waitlist-&gt;count, &gt;= 0);\n</code></pre> </li> <li> <p>\u68c0\u67e5\u6307\u9488\u662f\u5426\u4f4d\u4e8e\u5806\u533a</p> <pre><code>#define CHECK_HEAP(ptr) \\\n    ({ panic_on(!IN_RANGE((ptr), heap)); })\n</code></pre> </li> </ul> </li> </ul> </li> </ol>"},{"location":"OS/%E6%80%BB%E7%BB%93/","title":"\u603b\u7ed3","text":""},{"location":"OS/%E6%80%BB%E7%BB%93/#lecture-30","title":"Lecture 30 \u8bfe\u7a0b\u603b\u7ed3","text":"<ol> <li> <p>fork-based DFS: \u5982\u679c\u6211\u4eec\u4f7f\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u603b\u662f\u9700\u8981\u7ef4\u62a4\u5f53\u524d\u7684 \u201c\u641c\u7d22\u72b6\u6001\u201d\u3002\u901a\u5e38\u8fd9\u662f\u901a\u8fc7\u5c06\u72b6\u6001\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u5b9e\u73b0\u7684 (\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u7528\u7ef4\u62a4\u5168\u5c40\u72b6\u6001\u7684\u65b9\u5f0f\u5b9e\u73b0)\u3002\u501f\u52a9 fork()\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u641c\u7d22\u5206\u652f\u521b\u5efa\u4e00\u4e2a\u5f53\u524d\u72b6\u6001\u7684\u5feb\u7167\uff0c\u5b9e\u73b0\u5e76\u884c\u641c\u7d22\u3002</p> <p>\u5e76\u884c\u641c\u7d22\uff1a\u901a\u8fc7\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u540c\u65f6\u5728\u591a\u4e2a\u8def\u5f84\u4e0a\u8fdb\u884c\u641c\u7d22\uff0c\u8fd9\u5927\u5927\u63d0\u9ad8\u4e86\u641c\u7d22\u6548\u7387\u3002\u6bcf\u4e2a\u5b50\u8fdb\u7a0b\u90fd\u4f1a\u63a2\u7d22\u4e00\u4e2a\u53ef\u80fd\u7684\u8def\u5f84\uff0c\u800c\u7236\u8fdb\u7a0b\u5219\u8d1f\u8d23\u7b49\u5f85\u6240\u6709\u5b50\u8fdb\u7a0b\u5b8c\u6210\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdint.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;sys/wait.h&gt;\n\n#define DEST '+'\n#define EMPTY '.'\n\nstruct move {\n    int move, x, y;\n} moves[] = {\n    {'&gt;', 0, 1},\n    {'v', 1, 0},\n    {'&lt;', 0, -1},\n    {'^', -1, 0},\n};\n\nchar map[][512] = {\n    \"######\",\n    \"#...+#\",\n    \"#..#.#\",\n    \"#..#.#\",\n    \"#....#\",\n    \"######\",\n    \"\",\n};\n\nvoid display(int steps);\nvoid dfs(int x, int y, int steps);\n\nint main() {\n    dfs(1, 1, 0);\n}\n\n\nvoid dfs(int x, int y, int steps) {\n    // Each search level gets 1 second of delay.\n    sleep(1);\n\n    if (map[x][y] == DEST) {\n        display(steps);\n        exit(0);\n    } else {\n        int nfork = 0;\n\n        for (struct move *m = moves; m &lt; moves + 4; m++) {\n            int x1 = x + m-&gt;x, y1 = y + m-&gt;y;\n            int pid = fork();\n\n            assert(pid &gt;= 0);\n\n            if (pid == 0) {\n                // Forked worker process\n\n                map[x][y] = m-&gt;move;\n                if (map[x1][y1] == DEST || map[x1][y1] == EMPTY) {\n                    dfs(x1, y1, steps + 1);\n                    // \u53ea\u6709\u4e0b\u4e00\u4e2a\u641c\u7d22\u7684\u4f4d\u7f6e\u662fDEST\u6216EMPTY\uff0c\u624d\u9012\u5f52\u641c\u7d22\n                    // \u5df2\u641c\u7d22\u8fc7\u7684\u5730\u65b9\u5c31\u4e0d\u518d\u91cd\u590d\u4e86\n                }\n                exit(0);\n            } else {\n                nfork++;\n\n                // If we wait here, the search will be serialized.\n                // waitpid(pid, NULL, 0);\n            }\n        }\n\n        while (nfork--) // \u7b49\u5f85\u6240\u6709\u5b50\u8fdb\u7a0b\u7ed3\u675f\n            wait(NULL);\n    }\n}\n\nvoid display(int steps) {\n    #define append(buf, ...) sprintf(buf + strlen(buf), __VA_ARGS__)\n\n    char buf[4096] = {0};\n\n    append(buf, \"%d steps\\n\", steps);\n    for (int i = 0; map[i][0]; i++) {\n        for (const char *s = map[i]; *s; s++) {\n            const char *draw;\n            switch (*s) {\n            case EMPTY: draw = \"   \"; break;\n            case DEST:  draw = \" \u25cb \"; break;\n            case '&gt;':   draw = \" \u2192 \"; break;\n            case '&lt;':   draw = \" \u2190 \"; break;\n            case '^':   draw = \" \u2191 \"; break;\n            case 'v':   draw = \" \u2193 \"; break;\n            default:    draw = \"\u2587\u2587\u2587\"; break;\n            }\n            append(buf, draw);\n        }\n        append(buf, \"\\n\");\n    }\n    append(buf, \"\\n\");\n\n    write(STDOUT_FILENO, buf, strlen(buf));\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u8d8a\u5f80\u540e\u7684steps\u90fd\u662f\u4e00\u77ac\u95f4\u8f93\u51fa\u7ed3\u679c\u7684\uff0c\u4f8b\u59829 steps\u7684\u6240\u6709\u7ed3\u679c\u90fd\u662f\u540c\u65f6\u8f93\u51fa\u7684\u3002</p> <p></p> </li> </ol>"},{"location":"OS/%E6%8C%81%E4%B9%85%E5%8C%96/","title":"\u6301\u4e45\u5316","text":""},{"location":"OS/%E6%8C%81%E4%B9%85%E5%8C%96/#lecture-25","title":"Lecture 25 \u5b58\u50a8\u8bbe\u5907\u539f\u7406","text":"<p>Take-away Messages</p> <p>\u65e0\u8bba\u662f\u5185\u5b58\u8fd8\u662f\u6301\u4e45\u5b58\u50a8\uff0c\u6700\u7ec8\u80dc\u51fa\u7684\u4ecd\u7136\u662f\u7535\u2014\u2014\u5b83\u7684\u5bc6\u5ea6\u548c\u901f\u5ea6\u662f\u5176\u4ed6\u4ecb\u8d28\u96be\u4ee5\u6bd4\u62df\u7684\u3002\u4f46\u540c\u65f6\u6211\u4eec\u4e5f\u770b\u5230\uff0cNAND Flash \u4f5c\u4e3a\u6301\u4e45\u5b58\u50a8\u65f6\u6709\u7740\u5de8\u5927\u7684\u7f3a\u9677\u2014\u2014\u5199\u5165\u5bff\u547d\u3002\u4f46\u6211\u4eec\u4e5f\u770b\u5230\u4e86\u5de5\u4e1a\u754c\u7adf\u7136\u6562\u4e8e\u8bd5\u5236\u8fd9\u6837\u8de8\u65f6\u4ee3\u7684\u4ea7\u54c1\uff0c\u5728\u5341\u591a\u5e74\u7684\u4e89\u8bae\u4e2d\u7ec8\u7a76\u6210\u4e3a\u4e86\u4eca\u5929\u5b58\u50a8\u7684\u4e3b\u89d2\u3002\u5982\u679c\u66f4\u5feb\u7684 non-volatile memory \u5230\u6765\u53c8\u9000\u573a\uff0c\u6211\u4eec\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u662f\u5426\u4f1a\u53d1\u751f\u7ffb\u5929\u8986\u5730\u7684\u53d8\u5316\uff1f</p> <p>\u6b22\u8fce\u5230\u5927\u5bb6\u9605\u8bfb\u8bfe\u5802\u4e2d\u7684\u4e00\u4e9b blogs\uff0c\u4ee5\u53ca\u81ea\u5df1\u6536\u96c6\u4e00\u4e9b\u6709\u8da3\u7684\u8d44\u6599\uff0c\u4f8b\u5982 How do rewriteable CDs work? \u548c Coding for SSDs\u3002\u6d77\u91cf\u7684\u9605\u8bfb\u5e2e\u52a9\u4f60\u5f62\u6210\u6b63\u786e\u7684 \u201c\u8ba1\u7b97\u673a\u79d1\u5b66\u4e16\u754c\u89c2\u201d\uff0c\u7528\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u65b9\u5f0f\u5904\u7406\u95ee\u9898\u3002</p> <ol> <li> <p>\u78c1\u5b58\u50a8</p> <ul> <li> <p>\u78c1\u5e26\uff1a\u4f5c\u4e3a\u5b58\u50a8\u8bbe\u5907\u7684\u5206\u6790</p> <p>\u6210\u672c\u4e0e\u98ce\u9669</p> \u4ef7\u683c \u5bb9\u91cf \u53ef\u9760\u6027 \u4f4e - \u5ec9\u4ef7\u6750\u6599 \u9ad8 \u5b58\u5728\u673a\u68b0\u90e8\u4ef6\u3001\u5b58\u5728\u4e22\u5931\u98ce\u9669 <p>\u8bfb\u5199\u6027\u80fd</p> \u987a\u5e8f\u8bfb\u5199 \u968f\u673a\u8bfb\u5199 \u52c9\u5f3a (\u9700\u8981\u7b49\u5f85\u5b9a\u4f4d) \u51e0\u4e4e\u5b8c\u5168\u4e0d\u884c <p>\u4eca\u5929\u7684\u5e94\u7528\u573a\u666f\uff1a\u51b7\u6570\u636e\u7684\u5b58\u6863\u548c\u5907\u4efd</p> </li> <li> <p>\u78c1\u76d8\uff1a\u4f5c\u4e3a\u5b58\u50a8\u8bbe\u5907\u7684\u5206\u6790</p> <p>\u6210\u672c\u4e0e\u98ce\u9669</p> \u4ef7\u683c \u5bb9\u91cf \u53ef\u9760\u6027 \u4f4e - \u9ad8\u5bc6\u5ea6\u4f4e\u6210\u672c \u9ad8 - 2.5D\uff0c\u4e0a\u4e07\u78c1\u9053 \u5b58\u5728\u673a\u68b0\u90e8\u4ef6 <p>\u8bfb\u5199\u6027\u80fd</p> \u987a\u5e8f\u8bfb\u5199 \u968f\u673a\u8bfb\u5199 \u8f83\u9ad8 \u52c9\u5f3a (\u9700\u8981\u7b49\u5f85\u5b9a\u4f4d) <p>\u4eca\u5929\u7684\u5e94\u7528\u573a\u666f\uff1a\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u4e3b\u529b\u6570\u636e\u5b58\u50a8\uff0c\u4f8b\u5982\u670d\u52a1\u5668\uff1a4 x 4TB HDD (RAID0)</p> </li> <li> <p>\u8f6f\u76d8\uff1a\u4f5c\u4e3a\u5b58\u50a8\u8bbe\u5907\u7684\u5206\u6790\uff08\u8f6f\u76d8\uff1a\u628a\u8bfb\u5199\u5934\u548c\u76d8\u7247\u5206\u5f00\u2014\u2014\u5b9e\u73b0\u6570\u636e\u79fb\u52a8\uff09</p> \u4ef7\u683c \u5bb9\u91cf \u53ef\u9760\u6027 \u4f4e - \u4f4e\u6210\u672c\u6750\u6599 \u9ad8 - \u88f8\u9732\u4ecb\u8d28\uff0c\u5bc6\u5ea6\u53d7\u9650 \u4f4e <p>\u8bfb\u5199\u6027\u80fd</p> \u987a\u5e8f\u8bfb\u5199 \u968f\u673a\u8bfb\u5199 \u4f4e \u4f4e <p>\u4eca\u5929\u7684\u5e94\u7528\u573a\u666f\uff1a\u5b58\u76d8\u6309\u94ae</p> </li> </ul> </li> <li> <p>\u5751\u5b58\u50a8</p> <ul> <li> <p>Compact Disk (CD, 1980)\uff1a\u5728\u53cd\u5c04\u5e73\u9762 (1) \u4e0a\u6316\u4e0a\u7c97\u7cd9\u7684\u5751 (0)\uff0c\u6fc0\u5149\u626b\u8fc7\u8868\u9762\uff0c\u5c31\u80fd\u8bfb\u51fa\u5751\u7684\u4fe1\u606f\u6765</p> \u4ef7\u683c \u5bb9\u91cf \u53ef\u9760\u6027 \u6781\u4f4e - \u201c\u538b\u76d8\u201d \u590d\u5236 \u9ad8 \u9ad8 - \u591a\u79cd\u4fdd\u62a4\u5c42 <p>\u8bfb\u5199\u6027\u80fd</p> \u987a\u5e8f\u8bfb\u5199 \u968f\u673a\u8bfb\u5199 \u4e00\u822c \u4f4e <p>\u4eca\u5929\u7684\u5e94\u7528\u573a\u666f\uff1a\u4f5c\u4e3a\u6570\u5b57\u6536\u85cf</p> <p>\u6700\u5927\u7684\u56f0\u96be\uff1a\u6316\u5751\u5bb9\u6613\u586b\u5751\u96be</p> <ul> <li>CD/R: \u7528\u6fc0\u5149\u5668\u70e7\u51fa\u4e00\u6b21\u6027\u7684\u5751 + append-only \u6570\u636e\u7ed3\u6784</li> <li>CD/RW: PCM (Phase-change Material)</li> </ul> </li> </ul> </li> <li> <p>\u7535\u5b58\u50a8</p> <ul> <li> <p>Flash Memory </p> \u4ef7\u683c \u5bb9\u91cf \u53ef\u9760\u6027 \u4f4e - \u5927\u89c4\u6a21\u96c6\u6210\u7535\u8def \u6781\u9ad8 \u9ad8 - \u968f\u4fbf\u6454 <p>\u8bfb\u5199\u6027\u80fd</p> \u987a\u5e8f\u8bfb\u5199 \u968f\u673a\u8bfb\u5199 \u6781\u9ad8 \u6781\u9ad8 </li> </ul> </li> </ol>"},{"location":"OS/%E6%8C%81%E4%B9%85%E5%8C%96/#lecture-26","title":"Lecture 26 \u8f93\u5165\u8f93\u51fa\u8bbe\u5907","text":"<p>Take-away Messages</p> <p>\u8f93\u5165/\u8f93\u51fa\u8bbe\u5907\u662f \u201c\u4e0e\u5904\u7406\u5668\u4ea4\u6362\u6570\u636e\u201d \u63a5\u53e3\u2014\u2014\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u8bbe\u5907\u53ef\u4ee5\u5b9e\u73b0\u5f97\u4efb\u610f\u590d\u6742\uff0c\u751a\u81f3\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u3002\u4ece\u6211\u4eec\u4eca\u5929\u7684\u6253\u5370\u673a\u3001SSD\u3001GPU\uff0c\u90fd\u9075\u5faa\u4e86\u8fd9\u4e2a\u6a21\u5f0f\uff0c\u5728 CPU \u7684\u7edf\u4e00\u7ba1\u7406\u548c\u8c03\u5ea6\u4e0b\u5404\u81ea\u5b8c\u6210\u5404\u81ea\u7684\u529f\u80fd\u3002</p> <ol> <li> <p>\u5b9e\u73b0\u8f93\u5165/\u8f93\u51fa\uff1a\u4e00\u6839\u7ebf\u3001\u4e00\u6761\u6307\u4ee4 (\u6811\u8393\u6d3e\u4e0a\u5c31\u6709)</p> <ul> <li> <p>GPIO (General Purpose Input/Output)\uff08\u4e00\u6839\u53ef\u4ee5\u8bfb\u5199\u6570\u636e\u7684\u7ebf\uff09</p> <ul> <li>\u6781\u7b80\u7684\u6a21\u578b\uff1aMemory-mapped I/O \u76f4\u63a5\u8bfb\u53d6/\u5199\u5165\u7535\u5e73\u4fe1\u53f7</li> </ul> <p></p> </li> </ul> </li> <li> <p>I/O \u8bbe\u5907 = \u4e00\u4e2a\u80fd\u4e0e CPU \u4ea4\u6362\u6570\u636e\u7684\u63a5\u53e3/\u63a7\u5236\u5668/\u4e00\u7ec4\u5bc4\u5b58\u5668</p> <ul> <li>\u5c31\u662f \u201c\u51e0\u7ec4\u7ea6\u5b9a\u597d\u529f\u80fd\u7684\u7ebf\u201d (\u5bc4\u5b58\u5668)<ul> <li>\u901a\u8fc7\u63e1\u624b\u4fe1\u53f7\u4ece\u7ebf\u4e0a\u8bfb\u51fa/\u5199\u5165\u6570\u636e</li> </ul> </li> <li> <p>\u7ed9\u5bc4\u5b58\u5668 \u201c\u8d4b\u4e88\u201d \u4e00\u4e2a\u5185\u5b58\u5730\u5740 (Address Decoder)</p> <ul> <li>CPU \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6307\u4ee4 (in/out/MMIO) \u548c\u8bbe\u5907\u4ea4\u6362\u6570\u636e</li> <li>\u662f\u7684\uff0c\u5c31\u8fd9\u4e48\u7b80\u5355</li> </ul> <p></p> </li> <li> <p>CPU \u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u6307\u4ee4\u8bfb\u5199\u8fd9\u4e9b\u5bc4\u5b58\u5668</p> <ul> <li>Port-mapped I/O (PMIO)<ul> <li>I/O \u5730\u5740\u7a7a\u95f4\uff08port\uff09</li> <li>CPU \u76f4\u8fde I/O \u603b\u7ebf\uff0c\u901a\u8fc7 inb/outb \u6307\u4ee4\u8bfb\u5199</li> </ul> </li> <li>Memory-mapped I/O (MMIO)<ul> <li>\u76f4\u89c2\uff1a\u4f7f\u7528\u666e\u901a\u5185\u5b58\u8bfb\u5199\u6307\u4ee4\u5c31\u80fd\u8bbf\u95ee</li> <li>\u5e26\u6765\u4e86\u4e00\u4e9b\u8bbe\u8ba1\u548c\u5b9e\u73b0\u7684\u9ebb\u70e6\uff1a\u7f16\u8bd1\u5668\u4f18\u5316\u3001\u7f13\u5b58\u3001\u4e71\u5e8f\u6267\u884c</li> </ul> </li> </ul> <p> Port-mapped I/O (PMIO) </p> <p> Memory-mapped I/O (MMIO) </p> </li> </ul> <p>a.c vs b.c: MMIO \u4e0b\u7f16\u8bd1\u5668\u4e0d\u77e5\u9053\u8fd9\u4e2a\u5185\u5b58\u662f\u5916\u8bbe\u8fd8\u662f\u666e\u901a\u7684\u5185\u5b58\uff0c\u672c\u6765\u662f\u60f3\u63a7\u5236\u706f\u95ea\u70c1 1024 \u6b21\uff0c\u5374\u88ab\u7f16\u8bd1\u5668\u4f18\u5316\u6210\u4e86\u4e00\u6b21\u6307\u4ee4\uff0c\u7a0b\u5e8f\u5458\u5e94\u8be5\u4f7f\u7528 <code>volatile</code> \u5173\u952e\u5b57\u544a\u8bc9\u7f16\u8bd1\u5668\u4e0d\u8981\u4f18\u5316\uff0c\u5c31\u662f\u8981\u6267\u884c 1024 \u6b21\u3002</p> <pre><code>#define ADDR 0X12345678\n\nvoid foo() {\n    for (int i = 0; i &lt; 1024; i++) {\n        // out(ADDR, 0);\n        (*(char *)ADDR) = 0;             // a.c\n        // (*(volatile char *)ADDR) = 0; // b.c\n    }\n}\n</code></pre> <pre><code>linux$ gcc -c -O2 a.c\nlinux$ objdump -d a.o\n\na.o:     file format elf64-x86-64\n\n\nDisassembly of section .text:\n\n0000000000000000 &lt;foo&gt;:\n0:   f3 0f 1e fa             endbr64 \n4:   c6 04 25 78 56 34 12    movb   $0x0,0x12345678 # \u88ab\u4f18\u5316\u6210\u4e00\u6b21\u5199\u6307\u4ee4\nb:   00 \nc:   c3                      ret    \n\nlinux$ gcc -c -O2 b.c\nlinux$ objdump -d b.o\n\nb.o:     file format elf64-x86-64\n\n\nDisassembly of section .text:\n\n0000000000000000 &lt;foo&gt;:\n0:   f3 0f 1e fa             endbr64 \n4:   b8 00 04 00 00          mov    $0x400,%eax\n9:   0f 1f 80 00 00 00 00    nopl   0x0(%rax)\n10:   c7 04 25 78 56 34 12   movl   $0x0,0x12345678\n17:   00 00 00 00 \n1b:   83 e8 01               sub    $0x1,%eax\n1e:   75 f0                  jne    10 &lt;foo+0x10&gt;\n20:   c3                     ret    \nlinux$ \n</code></pre> <ul> <li> <p>\u4f8b\u5b50 (1): \u4e32\u53e3 (UART)\uff0c\u901a\u7528\u5f02\u6b65\u6536\u53d1\u4f20\u8f93\u5668\uff08Universal Asynchronous Receiver/Transmitter\uff09</p> <p>\u201cCOM1\u201d (Communication 1)</p> <pre><code>#define COM1 0x3f8\n\nstatic int uart_init() {\noutb(COM1 + 2, 0);   // \u63a7\u5236\u5668\u76f8\u5173\u7ec6\u8282\noutb(COM1 + 3, 0x80);\noutb(COM1 + 0, 115200 / 9600);\n...\n}\n\nstatic void uart_tx(AM_UART_TX_T *send) {\noutb(COM1, send-&gt;data);\n}\n\nstatic void uart_rx(AM_UART_RX_T *recv) {\nrecv-&gt;data = (inb(COM1 + 5) &amp; 0x1) ? inb(COM1) : -1;\n}\n</code></pre> </li> <li> <p>\u4f8b\u5b50 (2): \u952e\u76d8\u63a7\u5236\u5668 IBM PC/AT 8042 PS/2 (Keyboard) Controller</p> <ul> <li>Port 0x60 (data), 0x64 (status/command)</li> <li>command = 0xED \u2192 LED \u706f\u63a7</li> <li>command = 0xF3 \u2192 \u8bbe\u7f6e\u91cd\u590d\u901f\u5ea6\u548c\u91cd\u590d\u5ef6\u8fdf</li> </ul> <p></p> </li> <li> <p>\u4f8b\u5b50 (3): \u78c1\u76d8\u63a7\u5236\u5668 ATA (Advanced Technology Attachment)</p> <ul> <li>IDE \u63a5\u53e3\u78c1\u76d8 (40pin data \u5f88 \u201c\u80a5\u201d \u7684\u6570\u636e\u7ebf + 4pin \u7535\u6e90)</li> <li>primary: 0x1f0 - 0x1f7; secondary: 0x170 - 0x177</li> </ul> <pre><code>void readsect(void *dst, int sect) {\n    waitdisk();\n    out_byte(0x1f2, 1);          // sector count (1)\n    out_byte(0x1f3, sect);       // sector\n    out_byte(0x1f4, sect &gt;&gt; 8);  // cylinder (low)\n    out_byte(0x1f5, sect &gt;&gt; 16); // cylinder (high)\n    out_byte(0x1f6, (sect &gt;&gt; 24) | 0xe0); // drive\n    out_byte(0x1f7, 0x20);       // command (write)\n    waitdisk();\n    for (int i = 0; i &lt; SECTSIZE / 4; i ++)\n        ((uint32_t *)dst)[i] = in_long(0x1f0); // data\n}\n</code></pre> </li> <li> <p>\u4f8b\u5b50 (4): \u6253\u5370\u673a - \u6253\u5370\u673a\u5c06\u5b57\u8282\u6d41\u63cf\u8ff0\u7684\u6587\u5b57/\u56fe\u5f62\u6253\u5370\u5230\u7eb8\u5f20\u4e0a</p> <ul> <li>PostScript \u4e00\u79cd\u63cf\u8ff0\u9875\u9762\u5e03\u5c40\u7684 DSL (Page DL)</li> </ul> </li> </ul> </li> <li> <p>\u7ba1\u7406\u66f4\u591a\u7684 I/O \u8bbe\u5907\uff1a</p> <p>\uff081\uff09\u6211\u4eec\u4e0d\u60f3\u9020\u4e00\u53f0 \u201c\u8bbe\u5907\u5b9a\u6b7b\u201d \u7684\u8ba1\u7b97\u673a \u27a1\ufe0f \u603b\u7ebf\uff1a\u4e00\u4e2a\u7279\u6b8a\u7684 I/O \u8bbe\u5907</p> <ul> <li>\u63d0\u4f9b\u8bbe\u5907\u7684 \u201c\u865a\u62df\u5316\u201d\uff1a\u6ce8\u518c\u548c\u8f6c\u53d1<ul> <li>\u628a\u6536\u5230\u7684\u5730\u5740 (\u603b\u7ebf\u5730\u5740) \u548c\u6570\u636e\u8f6c\u53d1\u5230\u76f8\u5e94\u7684\u8bbe\u5907\u4e0a</li> <li>\u4f8b\u5b50: port I/O \u7684\u7aef\u53e3\u5c31\u662f\u603b\u7ebf\u4e0a\u7684\u5730\u5740<ul> <li>IBM PC \u7684 CPU \u5176\u5b9e\u53ea\u770b\u5230\u8fd9\u4e00\u4e2a I/O \u8bbe\u5907</li> </ul> </li> </ul> </li> <li>\u8fd9\u6837 CPU \u53ea\u9700\u8981\u76f4\u8fde\u4e00\u4e2a\u603b\u7ebf\u5c31\u884c\u4e86\uff01<ul> <li>\u4eca\u5929 PCI \u603b\u7ebf\u80a9\u8d1f\u4e86\u8fd9\u4e2a\u4efb\u52a1<ul> <li>\u603b\u7ebf\u53ef\u4ee5\u6865\u63a5\u5176\u4ed6\u603b\u7ebf (\u4f8b\u5982 PCI \u2192 USB)</li> </ul> </li> <li><code>lspci -tv</code> \u548c <code>lsusb -tv</code>: \u67e5\u770b\u7cfb\u7edf\u4e2d\u603b\u7ebf\u4e0a\u7684\u8bbe\u5907<ul> <li>\u6982\u5ff5\u7b80\u5355\uff0c\u5b9e\u9645\u975e\u5e38\u590d\u6742\u2026\u2026</li> <li>\u7535\u6c14\u7279\u6027\u3001burst \u4f20\u8f93\u3001\u4e2d\u65ad\u3001Plug and Play</li> </ul> </li> </ul> </li> </ul> <p>(2) CPU\uff1a\u53ea\u6709\u4e00\u6839\u4e2d\u65ad\u7ebf \u27a1\ufe0f \u6211\u4eec\u9700\u8981\u4e00\u4e2a \u201c\u4ef2\u88c1\u5668\u201d - \u4e2d\u65ad\u63a7\u5236\u5668</p> <ul> <li>\u6536\u96c6\u5404\u4e2a\u8bbe\u5907\u4e2d\u65ad\uff0c\u5e76\u9009\u62e9\u4e00\u4e2a\u53d1\u9001\u7ed9 CPU\uff0c\u5e76\u4e14\u5b8c\u6210\u5bf9\u8bbe\u5907\u7684\u5e94\u7b54</li> <li>\u4f8b\u5b50<ul> <li>Intel 8259 PIC<ul> <li>programmable interrupt controller</li> <li>\u53ef\u4ee5\u8bbe\u7f6e\u4e2d\u65ad\u5c4f\u853d\u3001\u4e2d\u65ad\u89e6\u53d1\u7b49\u2026\u2026</li> </ul> </li> <li>APIC (Advanced PIC)<ul> <li>local APIC: \u4e2d\u65ad\u5411\u91cf\u8868, IPI, \u65f6\u949f, \u2026\u2026</li> <li>I/O APIC: \u5176\u4ed6 I/O \u8bbe\u5907</li> </ul> </li> </ul> </li> </ul> <p>(3) \u89e3\u653e CPU \u7b97\u529b \u27a1\ufe0f Direct Memory Access (DMA)</p> <ul> <li> <p>\u64cd\u4f5c\u7cfb\u7edf\uff1a\u5199\u5165 1 GB \u7684\u6570\u636e\u5230\u78c1\u76d8</p> <ul> <li>\u5373\u4fbf\u78c1\u76d8\u5df2\u7ecf\u51c6\u5907\u597d\uff0c\u4f9d\u7136\u9700\u8981\u975e\u5e38\u6d6a\u8d39\u65f6\u95f4\u7684\u5faa\u73af</li> <li>out \u6307\u4ee4\u5199\u5165\u7684\u662f\u8bbe\u5907\u7f13\u51b2\u533a\uff0c\u9700\u8981\u53bb\u603b\u7ebf\u4e0a\u7ed5\u4e00\u5708<ul> <li>cache disable; store \u5176\u5b9e\u5f88\u6162\u7684</li> </ul> </li> </ul> <pre><code>for (int i = 0; i &lt; 1 GB / 4; i++) {\n    outl(PORT, ((u32 *)buf)[i]);\n}\n</code></pre> </li> <li> <p>\u52a0\u4e00\u4e2a\u901a\u7528\u5904\u7406\u5668\u592a\u6d6a\u8d39\uff0c\u4e0d\u5982\u52a0\u4e00\u4e2a\u7b80\u5355\u7684</p> <ul> <li>DMA: \u53ea\u80fd\u6267\u884c <code>memcpy(ATA0, buf, length);</code> \u7684\u5904\u7406\u5668</li> <li>\u652f\u6301\u7684\u51e0\u79cd\u7c7b\u578b\u7684 memcpy<ul> <li>memory \u2192 memory</li> <li>memory \u2192 device (register)</li> <li>device (register) \u2192 memory<ul> <li>\u5b9e\u9645\u5b9e\u73b0\uff1a\u76f4\u63a5\u628a DMA \u63a7\u5236\u5668\u8fde\u63a5\u5728\u603b\u7ebf\u548c\u5185\u5b58\u4e0a</li> <li>Intel 8237A</li> </ul> </li> </ul> </li> <li>\u4eca\u5929\uff1aPCI \u603b\u7ebf\u652f\u6301 DMA<ul> <li><code>sudo cat /proc/iomem</code></li> </ul> </li> </ul> </li> </ul> </li> <li> <p>\u586b\u8865 CPU \u7684\u7b97\u529b\u7a7a\u767d\uff1aGPU \u548c\u52a0\u901f\u5668</p> <ul> <li>\u8ba1\u7b97\u673a\u7cfb\u7edf\u91cc\u5145\u6ee1\u4e86 \u201cCPU\u201d<ul> <li>CPU: \u5927\u6838 + \u5c0f\u6838 + \u8d85\u5c0f\u6838</li> <li>DMA: \u6267\u884c memcpy() \u7684 CPU</li> <li>\u6253\u5370\u673a\uff1a\u89e3\u6790\u6267\u884c PCL/PostScript \u7684 CPU</li> <li>\u7f51\u5361\uff1a\u5206\u62e3\u4ee5\u592a\u7f51 packet (frame) \u7684 CPU<ul> <li>\u5b83\u4eec\u90fd\u53d7\u5230 CPU \u7684\u7edf\u4e00\u8c03\u914d</li> </ul> </li> </ul> </li> <li>GPU: \u5728\u7cfb\u7edf\u91cc\u52a0\u4e00\u4e2a\u4e13\u95e8\u753b\u56fe\u7684 CPU\uff0c\u4e0d\u518d\u9700\u8981\u90a3\u4e48\u591a\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u5faa\u73af\u53ef\u4ee5\u76f4\u63a5\u7528\u8ba1\u6570\u5668\u5b9e\u73b0</li> </ul> <pre><code>for (int x = 0; x &lt; W; x++)\n    for (int y = 0; y &lt;= H; y++)\n        for (int i = 0; i &lt; n; i++)\n            if (intersects(sprites[i], x, y)) {\n                fb[x][y] = sprites[i].pixel(x, y);\n            }\n</code></pre> </li> </ol> <p>Take-away Messages</p> <p>\u4efb\u4f55\u5b9e\u73b0\u4e86 struct file_operations \u7684\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u8c61\u53ef\u4ee5\u90fd\u662f \u201c\u6587\u4ef6\u201d\uff1a\u53ef\u4ee5\u662f /dev/null \u8fd9\u6837\u7684\u865a\u62df\u8bbe\u5907\uff0c\u53ef\u4ee5\u662f /proc/stat \u4e2d\u7684\u865a\u62df \u201c\u6587\u4ef6\u201d\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2a\u7ba1\u9053\uff0c\u4e5f\u53ef\u4ee5\u662f\u6587\u4ef6\u7cfb\u7edf\u4e2d\u666e\u901a\u7684\u5b57\u8282\u5e8f\u5217\u3002</p> <ol> <li> <p>\u5e94\u7528\u7a0b\u5e8f\uff1a\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\uff08open, read, write, mmap, ...\uff09\u8bbf\u95ee\u6587\u4ef6\uff0c\u6c42\u8bc1\uff1a<code>strace readelf -h /bin/ls</code>\u3002</p> <ul> <li>\u6587\u4ef6\u662f \u201c\u865a\u62df\u78c1\u76d8\u201d\uff0c\u628a\u78c1\u76d8\u7684\u4e00\u90e8\u5206\u6620\u5c04\u5230\u5730\u5740\u7a7a\u95f4\uff0c\u518d\u81ea\u7136\u4e0d\u8fc7\u4e86</li> <li>\u6620\u5c04\u7684\u957f\u5ea6\u8d85\u8fc7\u6587\u4ef6\u5927\u5c0f\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u27a1\ufe0f SIGBUS</li> </ul> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;sys/mman.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    const char *filepath = \"example.txt\";\n    int fd = open(filepath, O_RDWR);\n    if (fd == -1) {\n        perror(\"open\");\n        exit(EXIT_FAILURE);\n    }\n\n    struct stat sb;\n    if (fstat(fd, &amp;sb) == -1) {\n        perror(\"fstat\");\n        close(fd);\n        exit(EXIT_FAILURE);\n    }\n\n    size_t length = sb.st_size + 4096;\n    void *addr = mmap(NULL, length, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);\n    if (addr == MAP_FAILED) {\n        perror(\"mmap\");\n        close(fd);\n        exit(EXIT_FAILURE);\n    }\n\n    // Overwrite this file.\n    char *data = (char *)addr;\n    for (size_t i = sb.st_size; i &lt; length; ++i) {\n        printf(\"Write byte %zu\\n\", i);\n        fflush(stdout);\n        data[i] = 'A';\n    }\n\n    if (munmap(addr, length) == -1) {\n        perror(\"munmap\");\n    }\n    close(fd);\n\n    return 0;\n}\n</code></pre> <pre><code>yes | head -c 4000 &gt; example.txt\ngcc -Wall -g overwrite.c -o overwrite\n./overwrite\nWrite byte 4000\n...\nWrite byte 4095\nWrite byte 4096\nfish: Job 1, './overwrite' terminated by signal SIGBUS (Misaligned address error)\n</code></pre> </li> <li> <p>\u5b9e\u73b0\u6587\u4ef6\uff1a\u6587\u4ef6\u63cf\u8ff0\u7b26\u53ef\u4ee5\u8bbf\u95ee \u201c\u4e00\u5207\u201d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\u27a1\ufe0f \u5982\u4f60\u6240\u6599\uff1a\u4e00\u4e2a switch-case</p> <pre><code>if (f-&gt;type == FD_PIPE)\n{\n    r = piperead(f-&gt;pipe, addr, n);\n} \nelse if (f-&gt;type == FD_DEVICE) \n{\n    if (f-&gt;major &lt; 0 || f-&gt;major &gt;= NDEV || !devsw[f-&gt;major].read)\n        return -1;\n    r = devsw[f-&gt;major].read(1, addr, n);\n} \nelse if (f-&gt;type == FD_INODE)\n{\n    ilock(f-&gt;ip);\n    if ((r = readi(f-&gt;ip, 1, addr, f-&gt;off, n)) &gt; 0)\n        f-&gt;off += r;\n    iunlock(f-&gt;ip);\n} \nelse \n{\n    panic(\"fileread\");\n}\n</code></pre> </li> <li> <p>\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\uff1a\u4e00\u4e2a <code>struct file_operations</code> \u7684\u5b9e\u73b0\uff0c\u628a\u7cfb\u7edf\u8c03\u7528 \u201c\u7ffb\u8bd1\u201d \u6210\u8bbe\u5907\u80fd\u542c\u61c2\u7684\u6570\u636e\uff0c\u5c31\u662f\u4e00\u6bb5\u666e\u901a\u7684\u5185\u6838\u4ee3\u7801</p> <ul> <li>/dev/null \u7684\u5b9e\u73b0</li> <li>/proc/stat \u7684\u5b9e\u73b0</li> </ul> </li> <li> <p>ioctl\uff1a\u201c\u975e\u6570\u636e\u201d \u7684\u8bbe\u5907\u529f\u80fd\u51e0\u4e4e\u5168\u90e8\u4f9d\u8d56 ioctl\uff0c\u201cArguments, returns, and semantics of ioctl() vary according to the device driver in question\u201d</p> </li> </ol>"},{"location":"OS/%E6%8C%81%E4%B9%85%E5%8C%96/#lecture-27","title":"Lecture 27 \u6587\u4ef6\u548c\u8bbe\u5907\u9a71\u52a8","text":""},{"location":"OS/%E6%8C%81%E4%B9%85%E5%8C%96/#lecture-28-fat-unix","title":"Lecture 28 FAT \u548c UNIX \u6587\u4ef6\u7cfb\u7edf","text":"<p>Take-away Messages</p> <p>\u628a\u6587\u4ef6\u7cfb\u7edf\u7406\u89e3\u6210\u4e00\u4e2a \u201c\u6570\u636e\u7ed3\u6784\u201d\uff0c\u5c31\u4e0d\u96be\u5206\u6790\u5176\u4e2d\u7684\u91cd\u70b9\u548c\u5b9e\u73b0\u8981\u70b9\u2014\u2014\u6211\u4eec\u603b\u662f\u628a\u6570\u636e\u6309\u7167\u5c40\u90e8\u6027\u7ec4\u7ec7\u8d77\u6765\uff0c\u65e0\u8bba\u662f FAT \u8fd8\u662f bitmap/inode \u7684\u8bbe\u8ba1\uff0c\u90fd\u5229\u7528\u4e86\u8fd9\u4e00\u70b9\u3002\u53e6\u4e00\u4e2a\u91cd\u8981\u7684\u8bbe\u8ba1\u662f \u201c\u76ee\u5f55\u4e5f\u662f\u6587\u4ef6\u201d\u2014\u2014\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0\u5c06\u76ee\u5f55\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u4f5c\u51fa\u89e3\u8bfb\uff0c\u4ece\u800c\u89e3\u6790\u51fa\u5176\u4e2d\u7684\u76ee\u5f55\u7ed3\u6784\u3002</p> <ol> <li> <p>\u6587\u4ef6\u7cfb\u7edf\uff1a\u6587\u4ef6 = <code>struct file_operations</code></p> <ul> <li>\u6570\u636e\u6587\u4ef6\uff1ahello.c, a.out, ...<ul> <li>\u865a\u62df\u7684\u78c1\u76d8</li> <li><code>vector&lt;char&gt;</code></li> </ul> </li> <li>\u8bbe\u5907\u9a71\u52a8<ul> <li>null, nuke0, ...</li> </ul> </li> <li>\u865a\u62df\u6587\u4ef6<ul> <li>\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4, ...</li> </ul> </li> </ul> </li> <li> <p>\u65b0\u9700\u6c42\uff1a\u600e\u4e48\u7ba1\u7406\u7cfb\u7edf\u4e2d\u4f17\u591a\u7684\u6587\u4ef6\uff1f\u27a1\ufe0f \u4fe1\u606f\u7684\u5c40\u90e8\u6027\uff1a\u5c06\u865a\u62df\u78c1\u76d8 (\u6587\u4ef6) \u7ec4\u7ec7\u6210\u6811\u72b6\u5c42\u6b21\u7ed3\u6784\uff0c\u903b\u8f91\u76f8\u5173\u7684\u6570\u636e\u5b58\u653e\u5728\u76f8\u8fd1\u7684\u76ee\u5f55</p> <ul> <li>UNIX \u7684\u8bbe\u8ba1\uff1a\u76ee\u5f55\u6811\u7684\u62fc\u63a5</li> <li>mount: \u5c06\u4e00\u4e2a\u76ee\u5f55\u89e3\u6790\u4e3a\u53e6\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684\u6839</li> <li><code>mount(source, target, filesystemtype, mountflags, data);</code></li> <li>\u518d\u770b \u201c\u6700\u5c0f Linux\u201d<ul> <li>\u521d\u59cb\u65f6\u53ea\u6709 /dev/console \u548c\u51e0\u4e2a\u6587\u4ef6</li> <li>/proc, /sys, \u751a\u81f3 /tmp \u90fd\u6ca1\u6709<ul> <li>\u7b54\u6848\uff1a\u5b83\u4eec\u90fd\u662f mount \u7cfb\u7edf\u8c03\u7528\u521b\u5efa\u51fa\u6765\u7684</li> </ul> </li> </ul> </li> <li>UNIX \u4e00\u8d2f\u7684\u8bbe\u8ba1\u54f2\u5b66\uff1a\u7075\u6d3b<ul> <li>Linux \u5b89\u88c5\u65f6\u7684 \u201cmount point\u201d</li> <li><code>/</code>, <code>/home</code>, <code>/var</code> \u53ef\u4ee5\u662f\u72ec\u7acb\u7684\u78c1\u76d8\u8bbe\u5907</li> </ul> </li> </ul> </li> <li> <p>Filesystem Hierarchy Standard: FHS enables software and user to predict the location of installed files and directories.</p> <p></p> </li> <li> <p>\u6587\u4ef6\u7cfb\u7edf API: \u76ee\u5f55\u7ba1\u7406</p> <p>mkdir</p> <ul> <li>\u521b\u5efa\u76ee\u5f55</li> </ul> <p>rmdir</p> <ul> <li>\u5220\u9664\u4e00\u4e2a\u7a7a\u76ee\u5f55</li> <li>\u6ca1\u6709 \u201c\u9012\u5f52\u5220\u9664\u201d \u7684\u7cfb\u7edf\u8c03\u7528<ul> <li>rm -rf \u4f1a\u904d\u5386\u76ee\u5f55\uff0c\u9010\u4e2a\u5220\u9664 (\u8bd5\u8bd5 strace)</li> </ul> </li> </ul> <p>getdents</p> <ul> <li>\u8fd4\u56de count \u4e2a\u76ee\u5f55\u9879 (ls, find, tree \u90fd\u4f7f\u7528\u8fd9\u4e2a)<ul> <li>\u66f4\u53cb\u597d\u7684\u65b9\u5f0f\uff1aglobbing</li> </ul> </li> </ul> </li> <li> <p>\u786c (hard) \u94fe\u63a5</p> <p>\u9700\u6c42\uff1a\u7cfb\u7edf\u4e2d\u53ef\u80fd\u6709\u540c\u4e00\u4e2a\u8fd0\u884c\u5e93\u7684\u591a\u4e2a\u7248\u672c</p> <ul> <li>libc-2.27.so, libc-2.26.so, ...</li> <li>\u8fd8\u9700\u8981\u4e00\u4e2a \u201c\u5f53\u524d\u7248\u672c\u7684 libc\u201d<ul> <li>\u7a0b\u5e8f\u9700\u8981\u94fe\u63a5 \u201clibc.so.6\u201d\uff0c\u80fd\u5426\u907f\u514d\u6587\u4ef6\u7684\u4e00\u4efd\u62f7\u8d1d\uff1f</li> </ul> </li> </ul> <p>(\u786c) \u94fe\u63a5\uff1a\u5141\u8bb8\u4e00\u4e2a\u6587\u4ef6\u88ab\u591a\u4e2a\u76ee\u5f55\u5f15\u7528</p> <ul> <li>\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0\u7684\u7279\u6027 (ls -i \u67e5\u770b)<ul> <li>\u4e0d\u80fd\u94fe\u63a5\u76ee\u5f55\u3001\u4e0d\u80fd\u8de8\u6587\u4ef6\u7cfb\u7edf</li> <li>\u5220\u9664\u6587\u4ef6\u7684\u7cfb\u7edf\u8c03\u7528\u79f0\u4e3a \u201cunlink\u201d (refcount--)</li> </ul> </li> </ul> </li> <li> <p>\u8f6f (symbolic) \u94fe\u63a5</p> <p>\u8f6f\u94fe\u63a5\uff1a\u5728\u6587\u4ef6\u91cc\u5b58\u50a8\u4e00\u4e2a \u201c\u8df3\u8f6c\u63d0\u793a\u201d</p> <ul> <li>\u8f6f\u94fe\u63a5\u4e5f\u662f\u4e00\u4e2a\u6587\u4ef6<ul> <li>\u5f53\u5f15\u7528\u8fd9\u4e2a\u6587\u4ef6\u65f6\uff0c\u53bb\u627e\u53e6\u4e00\u4e2a\u6587\u4ef6</li> <li>\u53e6\u4e00\u4e2a\u6587\u4ef6\u7684\u7edd\u5bf9/\u76f8\u5bf9\u8def\u5f84\u4ee5\u6587\u672c\u5f62\u5f0f\u5b58\u50a8\u5728\u6587\u4ef6\u91cc</li> <li>\u53ef\u4ee5\u8de8\u6587\u4ef6\u7cfb\u7edf\u3001\u53ef\u4ee5\u94fe\u63a5\u76ee\u5f55\u3001\u2026\u2026</li> </ul> </li> </ul> <p>\u51e0\u4e4e\u6ca1\u6709\u4efb\u4f55\u9650\u5236</p> <ul> <li>\u7c7b\u4f3c \u201c\u5feb\u6377\u65b9\u5f0f\u201d<ul> <li>\u94fe\u63a5\u6307\u5411\u7684\u4f4d\u7f6e\u4e0d\u5b58\u5728\u4e5f\u6ca1\u5173\u7cfb</li> <li>(\u4e5f\u8bb8\u4e0b\u6b21\u5c31\u5b58\u5728\u4e86)</li> </ul> </li> </ul> </li> <li> <p>\u6587\u4ef6\u7cfb\u7edf\uff1a\u5b9e\u73b0</p> <p>\u5982\u679c\u662f\u300a\u6570\u636e\u7ed3\u6784\u300b\u8bfe\uff1f</p> <ul> <li>\u501f\u52a9 RAM \u81ea\u7531\u5e03\u5c40\u76ee\u5f55\u548c\u6587\u4ef6\uff1a\u6587\u4ef6\u7cfb\u7edf\u5c31\u662f\u4e00\u4e2a Abstract DataType (ADT)</li> </ul> <pre><code>class FSObject {\n};\n\nclass File: FSObject {\n    std::vector&lt;char&gt; content;\n};\n\nclass Directory: FSObject {\n    std::map&lt;std::string,FSObject*&gt; children;\n};\n</code></pre> <p>\u56de\u5230\u300a\u64cd\u4f5c\u7cfb\u7edf\u300b\u8bfe\uff1a\u5bf9\u4e0d\u8d77\uff0c\u6ca1\u6709 Random Access Memory</p> <ul> <li>\u6211\u4eec\u53ea\u6709 block device</li> <li>\u4e24\u4e2a API<ul> <li><code>bread(int bid, struct block *b);</code></li> <li><code>bwrite(int bid, struct block *b);</code></li> </ul> </li> </ul> <p>\u5b9e\u73b0\uff1a</p> <ul> <li>read, write, ftruncate, ...</li> <li>mkdir, rmdir, readdir, link, unlink, ...<ul> <li>\u7528 bread/bwrite \u6a21\u62df RAM \u2192 \u4e25\u91cd\u7684\u8bfb/\u5199\u653e\u5927</li> <li>\u6211\u4eec\u9700\u8981\u66f4\u9002\u5408\u78c1\u76d8\u7684\u6570\u636e\u7ed3\u6784</li> </ul> </li> </ul> </li> <li> <p>FAT (File Allocation Table) \u548c UNIX \u6587\u4ef6\u7cfb\u7edf</p> <p>\u7528\u94fe\u8868\u5b58\u50a8\u6570\u636e\uff1a\u4e24\u79cd\u8bbe\u8ba1</p> <p>(1) \u5728\u6bcf\u4e2a\u6570\u636e\u5757\u540e\u653e\u7f6e\u6307\u9488 \u274c</p> <ul> <li>\u4f18\u70b9\uff1a\u5b9e\u73b0\u7b80\u5355\u3001\u65e0\u987b\u5355\u72ec\u5f00\u8f9f\u5b58\u50a8\u7a7a\u95f4</li> <li>\u7f3a\u70b9\uff1a\u6570\u636e\u7684\u5927\u5c0f\u4e0d\u662f \\(2^k\\) ; \u5355\u7eaf\u7684 lseek \u9700\u8981\u8bfb\u6574\u5757\u6570\u636e</li> </ul> <p>(2) \u5c06\u6307\u9488\u96c6\u4e2d\u5b58\u653e\u5728\u6587\u4ef6\u7cfb\u7edf\u7684\u67d0\u4e2a\u533a\u57df \u2705</p> <ul> <li>\u4f18\u70b9\uff1a\u5c40\u90e8\u6027\u597d\uff1blseek \u66f4\u5feb</li> <li>\u7f3a\u70b9\uff1a\u96c6\u4e2d\u5b58\u653e\u7684\u6570\u636e\u635f\u574f\u5c06\u5bfc\u81f4\u6570\u636e\u4e22\u5931</li> </ul> <p>\u54ea\u79cd\u65b9\u5f0f\u7684\u7f3a\u9677\u662f\u81f4\u547d\u3001\u96be\u4ee5\u89e3\u51b3\u7684\uff1f\u27a1\ufe0f (1)\u96be\u4ee5\u89e3\u51b3\uff0c\u5bf9\u4e8e(2)\u96c6\u4e2d\u5b58\u50a8\u7684\u6307\u9488\u5bb9\u6613\u635f\u574f\uff1f\u5b58 n \u4efd\u5c31\u884c\uff01</p> <p>FAT-12/16/32 (FAT entry\uff0c\u5373 \u201cnext \u6307\u9488\u201d \u7684\u5927\u5c0f)</p> <p></p> </li> <li> <p>\u4e00\u4e2a\u6709\u8da3\u7684\u95ee\u9898\uff1a\u6587\u4ef6\u7cfb\u7edf\u6062\u590d</p> <ul> <li>\u5feb\u901f\u683c\u5f0f\u5316 = FAT \u8868\u4e22\u5931<ul> <li>\u6240\u6709\u7684\u6587\u4ef6\u5185\u5bb9 (\u5305\u62ec\u76ee\u5f55\u6587\u4ef6) \u90fd\u8fd8\u5728</li> <li>\u53ea\u662f\u5728\u6570\u636e\u7ed3\u6784\u773c\u91cc\u770b\u8d77\u6765\u90fd\u662f \u201cfree block\u201d</li> </ul> </li> <li>\u731c\u51fa\u6587\u4ef6\u7cfb\u7edf\u7684\u53c2\u6570 (SecPerClus, BytsPerSec, ...)\uff0c\u6062\u590d next \u5173\u7cfb</li> </ul> </li> <li> <p>FAT: \u6027\u80fd\u4e0e\u53ef\u9760\u6027</p> <p>\u6027\u80fd</p> <ul> <li>\u2705 \u5c0f\u6587\u4ef6\u7b80\u76f4\u592a\u5408\u9002\u4e86</li> <li>\u274c \u4f46\u5927\u6587\u4ef6\u7684\u968f\u673a\u8bbf\u95ee\u5c31\u4e0d\u884c\u4e86<ul> <li>4 GB \u7684\u6587\u4ef6\u8df3\u5230\u672b\u5c3e (4 KB cluster) \u6709 \\(2^{20}\\) \u6b21 next \u64cd\u4f5c</li> <li>\u7f13\u5b58\u80fd\u90e8\u5206\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898</li> </ul> </li> <li>\u5728 FAT \u65f6\u4ee3\uff0c\u78c1\u76d8\u8fde\u7eed\u8bbf\u95ee\u6027\u80fd\u66f4\u4f73<ul> <li>\u4f7f\u7528\u65f6\u95f4\u4e45\u7684\u78c1\u76d8\u4f1a\u4ea7\u751f\u788e\u7247 (fragmentation)</li> <li>malloc \u4e5f\u4f1a\u4ea7\u751f\u788e\u7247\uff0c\u4e0d\u8fc7\u5bf9\u6027\u80fd\u5f71\u54cd\u4e0d\u592a\u5927</li> </ul> </li> </ul> <p>\u53ef\u9760\u6027</p> <ul> <li>\u7ef4\u62a4\u82e5\u5e72\u4e2a FAT \u7684\u526f\u672c\u9632\u6b62\u5143\u6570\u636e\u635f\u574f (\u989d\u5916\u7684\u5f00\u9500)</li> </ul> </li> <li> <p>ext2/UNIX \u6587\u4ef6\u7cfb\u7edf: Second Extended File System</p> <p>\u6309\u5bf9\u8c61\u65b9\u5f0f\u96c6\u4e2d\u5b58\u50a8\u6587\u4ef6/\u76ee\u5f55\u5143\u6570\u636e</p> <ul> <li>\u589e\u5f3a\u5c40\u90e8\u6027 (\u66f4\u6613\u4e8e\u7f13\u5b58)</li> <li>\u652f\u6301\u94fe\u63a5</li> </ul> <p>\u4e3a\u5927\u5c0f\u6587\u4ef6\u533a\u5206 fast/slow path</p> <ul> <li>\u5c0f\u7684\u65f6\u5019\u5e94\u8be5\u7528\u6570\u7ec4<ul> <li>\u8fde\u94fe\u8868\u904d\u5386\u90fd\u7701\u4e86</li> </ul> </li> <li>\u5927\u7684\u65f6\u5019\u5e94\u8be5\u7528\u6811 (B-Tree; Radix-Tree; ...)<ul> <li>\u5feb\u901f\u7684\u968f\u673a\u8bbf\u95ee</li> </ul> </li> </ul> </li> </ol>"},{"location":"OS/%E6%8C%81%E4%B9%85%E5%8C%96/#lecture-29","title":"Lecture 29 \u6301\u4e45\u6570\u636e\u7684\u53ef\u9760\u6027","text":"<p>Take-away Messages</p> <p>\u5b58\u50a8\u7cfb\u7edf\u652f\u6491\u4e86\u5f53\u4eca\u7684\u4e92\u8054\u7f51\u5de5\u4e1a\u2014\u2014\u6bcf\u4e2a SSD \u90fd\u662f \u201c\u5957\u5a03\u201d \u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\uff1b\u5b83\u4eec\u53c8\u7ec4\u6210\u4e86\u5927\u89c4\u6a21\u5b58\u50a8\u7f51\u7edc\uff0c\u6784\u6210\u4e86\u6211\u4eec\u4eca\u5929\u7684\u6570\u5b57\u4e16\u754c\u3002\u5b9e\u73b0\u4f4e\u6210\u672c\u3001\u9ad8\u6027\u80fd\u3001\u9ad8\u53ef\u9760\u7684\u5b58\u50a8\u5e76\u4e0d\u662f\u4e00\u4e2a\u5341\u5206\u7b80\u5355\u7684\u95ee\u9898\uff0c\u8fd9\u4e5f\u662f\u8ba1\u7b97\u673a\u4ea7\u4e1a\u8ba9\u6211\u4eec\u611f\u5230\u6fc0\u52a8\u7684\u539f\u56e0\u3002</p> <ol> <li> <p>\u5b9e\u73b0\u53ef\u9760\u7684\u78c1\u76d8\uff1aRAID\uff0c\u5b58\u50a8\u8bbe\u5907\u7684\u865a\u62df\u5316</p> <ul> <li>Redundant Array of Inexpensive (Independent) Disks (RAID)</li> <li>\u628a\u591a\u4e2a (\u4e0d\u53ef\u9760\u7684) \u78c1\u76d8\u865a\u62df\u6210\u4e00\u5757\u975e\u5e38\u53ef\u9760\u4e14\u6027\u80fd\u6781\u9ad8\u7684\u865a\u62df\u78c1\u76d8</li> <li>RAID (\u865a\u62df\u5316) = \u865a\u62df\u5757\u53f7\u5230 (\u78c1\u76d8, \u5757\u53f7) \u7684 \u201c\u6620\u5c04\u201d</li> <li>\u865a\u62df\u78c1\u76d8\u5757\u53ef\u4ee5\u5b58\u50a8\u5728\u4efb\u4f55\u7269\u7406\u78c1\u76d8\u4e0a<ul> <li>\u7269\u7406\u78c1\u76d8\u8bfb\u5199\u53ef\u4ee5\u5e76\u884c</li> <li>\u5b58\u50a8 &gt; 1 \u4efd\u5373\u53ef\u5b9e\u73b0\u5bb9\u9519</li> </ul> </li> <li>RAID-5: Rotating Parity\uff0c\u4f7f Parity \u5747\u5300\u5206\u5e03\u5728\u5404\u4e2a\u78c1\u76d8</li> </ul> <p></p> </li> <li> <p>\u5b9e\u73b0\u53ef\u9760\u7684\u6587\u4ef6\u7cfb\u7edf\uff1a\u5d29\u6e83\u4e00\u81f4\u6027 (Crash Consistency). </p> <p>Crash Consistency</p> <p>Move the file system from one consistent state (e.g., before the file got appended to) to another atomically (e.g., after the inode, bitmap, and new data block have been written to disk).</p> <ul> <li>File System Checking (FSCK)\uff1a\u6839\u636e\u78c1\u76d8\u4e0a\u5df2\u6709\u7684\u4fe1\u606f\uff0c\u6062\u590d\u51fa \u201c\u6700\u53ef\u80fd\u201d \u7684\u6570\u636e\u7ed3\u6784</li> <li>Jouraling\uff1a\u5148\u7528 append-only \u8bb0\u5f55\u65e5\u5fd7\uff0c\u7b49\u5f85\u843d\u76d8\uff0c\u518d\u66f4\u65b0\u6570\u636e\u7ed3\u6784</li> </ul> </li> </ol>"},{"location":"OS/%E7%BB%AA%E8%AE%BA/","title":"\u7eea\u8bba","text":""},{"location":"OS/%E7%BB%AA%E8%AE%BA/#_2","title":"\u8d44\u6599","text":"<ul> <li>Yanyan's wiki</li> <li>\u8bfe\u7a0b\u7f51\u7ad9</li> <li>\u8bfe\u7a0b\u89c6\u9891</li> <li>\u6559\u6750 OSTEP</li> </ul>"},{"location":"OS/%E7%BB%AA%E8%AE%BA/#_3","title":"\u64cd\u4f5c\u7cfb\u7edf\u662f\u4ec0\u4e48","text":"<ol> <li>\u5728\u5e94\u7528\u7a0b\u5e8f\u773c\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf = \u5bf9\u8c61 + API\u3002\u4ece\u5e94\u7528\u7a0b\u5e8f\u7684\u89c6\u89d2\u770b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u7684\u5bf9\u8c61 (\u8fdb\u7a0b/\u7ebf\u7a0b\u3001\u5730\u5740\u7a7a\u95f4\u3001\u6587\u4ef6\u3001\u8bbe\u5907\u2026\u2026) \u548c\u64cd\u7eb5\u5b83\u4eec\u7684 API (\u7cfb\u7edf\u8c03\u7528)\u3002</li> <li>\u5728\u786c\u4ef6\u773c\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf = C \u7a0b\u5e8f\u3002\u4ece\u786c\u4ef6\u7684\u89c6\u89d2\u770b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u662f\u4e00\u4e2a\u62e5\u6709\u8bbf\u95ee\u5168\u90e8\u786c\u4ef6\u529f\u80fd\u7684\u7a0b\u5e8f\u3002\u786c\u4ef6\u4f1a\u5e2e\u52a9\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210\u6700\u521d\u7684\u521d\u59cb\u5316\u548c\u52a0\u8f7d\uff0c\u4e4b\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u52a0\u8f7d\u5b8c\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u540e\uff0c\u4ece\u6b64\u4f5c\u4e3a \u201c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u201d \u5728\u540e\u53f0\u7ba1\u7406\u6574\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u3002</li> <li>\u5728\u4e0a\u5e1d\u773c\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf = \u4e00\u4e2a\u6570\u5b66\u5bf9\u8c61\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8ba1\u7b97\u673a\u7cfb\u7edf (\u7535\u8def) \u5efa\u6a21\u6210\u6709\u9650\u72b6\u6001\u673a\u6a21\u578b\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u628a\u8fd0\u884c\u5728\u786c\u4ef6\u4e0a\u7684\u4efb\u4f55\u8f6f\u4ef6 (\u5305\u62ec\u64cd\u4f5c\u7cfb\u7edf) \u5efa\u6a21\u6210\u72b6\u6001\u673a\u3002</li> </ol> <p>Operating System concept</p> <p>Operating System: A body of software, in fact, that is responsible for making it easy to run programs (even allowing you to seemingly run many at the same time), allowing programs to share memory, enabling programs to interact with devices, and other fun stuff like that. (OSTEP)</p>"},{"location":"OS/%E7%BB%AA%E8%AE%BA/#lecture-1","title":"Lecture 1 \u64cd\u4f5c\u7cfb\u7edf\u6982\u8ff0","text":"<ol> <li>\u65f6\u949f\u3001\u5bfc\u7ebf\u3001\u903b\u8f91\u95e8(NAND\uff0c\u5373\u4e0e\u975e\u95e8)\u3001\u5bc4\u5b58\u5668\u662f\u6570\u5b57\u7cfb\u7edf\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\uff1a\u6570\u5b57\u7cfb\u7edf\u5728\u65f6\u949f\u9a71\u52a8\u4e0b\u79bb\u6563\u5730\u66f4\u65b0\u4e0b\u4e00\u5468\u671f\u7684\u5bc4\u5b58\u5668\u72b6\u6001\u3002</li> <li>\u6570\u5b57\u7535\u8def\u6a21\u62df\u5668\uff0c\u7f16\u8bd1\uff1a<code>gcc -o logisim -I. logisim.c</code>, \u5176\u4e2d<code>-I.</code>\u6307\u5b9a\u5f53\u524d\u76ee\u5f55\uff08<code>.</code>\uff09\u4e3a\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84\uff0c\u8fd9\u610f\u5473\u7740\u7f16\u8bd1\u5668\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627e\u5934\u6587\u4ef6\u3002\u8fd0\u884c\uff1a<code>./logisim</code>\uff0c\u53ef\u89c6\u5316\u8fd0\u884c: <code>make run</code>\u6216<code>./logisim | python seg-display.py</code>\u3002\u5355\u72ec\u8fd0\u884c<code>python seg-display.py</code>\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u7b49\u7740\u8f93\u5165\uff0c\u6b64\u65f6\u8f93\u5165<code>A=1</code>\u5373\u53ef\u70b9\u4eae\u6570\u7801\u7ba1\u3002</li> <li>RISC-V \u5904\u7406\u5668\u6a21\u62df\u5668\uff0c\u7f16\u8bd1\uff1a<code>gcc -g -o mini-rv32ima main.c</code>\u6216<code>make</code>\uff0c\u8fd0\u884c\uff1a<code>./mini-rv32ima bin/fib.rv32i-bin 10</code>\uff0c\u7ed3\u679c\u5b58\u5728a0\u5bc4\u5b58\u5668\u3002CSR\uff08Control and Status Register\uff0c\u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668\uff09\u662f\u4e00\u7ec4\u7279\u6b8a\u7684\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u63a7\u5236\u548c\u76d1\u63a7\u5904\u7406\u5668\u7684\u8fd0\u884c\u72b6\u6001\u3002\u8fd9\u4e9b\u5bc4\u5b58\u5668\u901a\u5e38\u5305\u542b\u4e86\u5904\u7406\u5668\u7684\u5404\u79cd\u914d\u7f6e\u4fe1\u606f\u3001\u72b6\u6001\u4fe1\u606f\u548c\u63a7\u5236\u4fe1\u606f\uff0c\u4f8b\u5982\u4e2d\u65ad\u63a7\u5236\u3001\u65f6\u949f\u63a7\u5236\u3001\u6027\u80fd\u76d1\u63a7\u3001\u7535\u6e90\u7ba1\u7406\u7b49\u3002</li> </ol>"},{"location":"OS/%E7%BB%AA%E8%AE%BA/#lecture-2","title":"Lecture 2 \u5e94\u7528\u89c6\u89d2\u7684\u64cd\u4f5c\u7cfb\u7edf","text":"<p>Take-away Messages</p> <p>Everything (\u9ad8\u7ea7\u8bed\u8a00\u4ee3\u7801\u3001\u673a\u5668\u4ee3\u7801) \u90fd\u662f\u72b6\u6001\u673a\uff1b\u800c\u7f16\u8bd1\u5668\u5b9e\u73b0\u4e86\u4e24\u79cd\u72b6\u6001\u673a\u4e4b\u95f4\u7684\u7ffb\u8bd1\u3002\u65e0\u8bba\u4f55\u79cd\u72b6\u6001\u673a\uff0c\u5728\u6ca1\u6709\u64cd\u4f5c\u7cfb\u7edf\u65f6\uff0c\u5b83\u4eec\u53ea\u80fd\u505a\u7eaf\u7cb9\u7684\u8ba1\u7b97\uff0c\u751a\u81f3\u90fd\u4e0d\u80fd\u628a\u7ed3\u679c\u4f20\u9012\u5230\u7a0b\u5e8f\u4e4b\u5916\u2014\u2014\u800c\u7a0b\u5e8f\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u6c9f\u901a\u7684\u552f\u4e00\u6865\u6881\u662f\u7cfb\u7edf\u8c03\u7528 (\u4f8b\u5982 x86-64 \u7684 <code>syscall</code> \u6307\u4ee4)\u3002\u5982\u6b64\u91cd\u8981\u7684\u6865\u6881\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u81ea\u7136\u4e5f\u6709\u5de5\u5177\uff1a<code>strace</code> \u53ef\u4ee5\u67e5\u770b\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684\u7cfb\u7edf\u8c03\u7528\u5e8f\u5217\u3002</p> <ol> <li>hello.c: \u67e5\u770b\u6587\u4ef6\u7c7b\u578b<code>file a.out</code> <pre><code>int main() {\n    printf(\"Hello, World\\n\");\n}\n</code></pre> <pre><code>linux$ gcc hello.c \nlinux$ ./a.out \nHello, World\nlinux$ file a.out \na.out: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=8fb1a66864c9ab4a1a8f9b6b2160b2226f1c03d3, for GNU/Linux 3.2.0, not stripped\nlinux$ objdump -d a.out | less\nlinux$ readelf -a a.out | less\nlinux$ gcc hello.c -static # \u9759\u6001\u94fe\u63a5\u610f\u5473\u7740\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5c06\u5305\u542b\u6240\u6709\u9700\u8981\u7684\u5e93\u4ee3\u7801\uff0c\u56e0\u6b64\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u4e2d\u5df2\u5b89\u88c5\u7684\u5171\u4eab\u5e93\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u53ef\u6267\u884c\u6587\u4ef6\u53ef\u4ee5\u5728\u4efb\u4f55\u652f\u6301\u8be5\u67b6\u6784\u7684\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u800c\u4e0d\u9700\u8981\u62c5\u5fc3\u5e93\u7684\u517c\u5bb9\u6027\u95ee\u9898\u3002\u4f46\u662f\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u53ef\u6267\u884c\u6587\u4ef6\u4f1a\u6bd4\u8f83\u5927\uff0c\u56e0\u4e3a\u5b83\u5305\u542b\u4e86\u6240\u6709\u7684\u5e93\u4ee3\u7801\u3002\nlinux$ file a.out \na.out: ELF 64-bit LSB executable, x86-64, version 1 (GNU/Linux), statically linked, BuildID[sha1]=80ecb022dad2875af2eaf8f2b38d7a62d40ae20e, for GNU/Linux 3.2.0, not stripped\nlinux$ objdump -d a.out | less  # \u663e\u7136\u4e0d\u662f\u6700\u5c0f\u7684\u53ef\u6267\u884c\u6587\u4ef6\nlinux$ readelf -a a.out | less\n</code></pre></li> <li> <p>\u8bd5\u8bd5\u7a7a\u51fd\u6570\uff1a <pre><code>int main() {\n}\n</code></pre> <pre><code>linux$ gcc -c hello.c   # \u53ea\u7f16\u8bd1\u4e0d\u94fe\u63a5\uff0c\u751f\u6210hello.o\nlinux$ ld hello.o       # \u94fe\u63a5\uff0c\u751f\u6210a.out\uff0c\u867d\u7136\u6709warning\nld: warning: cannot find entry symbol _start; defaulting to 0000000000401000\nlinux$ ./a.out \nSegmentation fault\nlinux$ gdb a.out        # \u5f00\u59cb\u8c03\u8bd5\n</code></pre></p> <p>Segmentation fault</p> <p>\u8868\u793a\u7a0b\u5e8f\u8bbf\u95ee\u4e86\u4e0d\u5141\u8bb8\u8bbf\u95ee\u7684\u5185\u5b58\u533a\u57df\u3002\u8fd9\u901a\u5e38\u662f\u7531\u4e8e\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u5bfc\u81f4\u7684\uff0c\u4f8b\u5982\u6307\u9488\u9519\u8bef\u3001\u6570\u7ec4\u8d8a\u754c\u3001\u6808\u6ea2\u51fa\u7b49\u3002</p> </li> <li> <p>\u5229\u7528gdb\u8c03\u8bd5\uff0c\u5728\u6267\u884creturn\u4e4b\u524d\uff0cM[rsp]\u91cc\u662f1(rsp: Stack Pointer\uff0c\u5373\u6808\u6307\u9488)\uff0c\u800c\u6267\u884creturn\u662f\u5c06M[rsp]\u8d4b\u503c\u7ed9PC\uff0crsp+8\uff08\u5c06\u8fd4\u56de\u5730\u5740\u4ece\u6808\u9876\u5f39\u51fa\uff0c\u5e76\u7f29\u6808\uff09\uff0cPC\u6307\u5411\u4e861\uff08\u663e\u7136\u662f\u4e0d\u53ef\u8bbf\u95ee\u7684\u5730\u5740\uff09\uff0c\u6240\u4ee5\u4f1a\u51fa\u73b0segmentation fault\u3002 <pre><code>(gdb) si       # \u4f9d\u6b21\u5355\u6b65\u6267\u884c\uff0c\u53d1\u73b0\u5230ret\u6307\u4ee4\u65f6\u518d\u4e0b\u4e00\u6b65\u5c31\u4f1a\u51fa\u73b0segmentation fault\n0x0000000000000001 in ?? ()  # \u8fd9\u91cc\u76841\u6709\u95ee\u9898\n(gdb) p $rsp   # \u6253\u5370\u6808\u6307\u9488\u7684\u503c, \u8f93\u51fa $1 = (void *) 0x7fffffffdcb0\n(gdb) x/x $rsp # \u67e5\u770bM[rsp]\uff0c\u8f93\u51fa 0x7fffffffdcb0: 0x00000001\n</code></pre></p> </li> <li>\u6700\u5c0f\u7684hello world\u7a0b\u5e8f\uff1aminimal.S <pre><code>#include &lt;sys/syscall.h&gt;\n\n// The x86-64 system call Application Binary Interface (ABI):\n//     System call number: RAX\n//     Arguments: RDI, RSI, RDX, RCX, R8, R9\n//     Return value: RAX\n// See also: syscall(2) syscalls(2)\n\n#define syscall3(id, a1, a2, a3) \\\n    movq $SYS_##id, %rax; \\\n    movq $a1, %rdi; \\\n    movq $a2, %rsi; \\\n    movq $a3, %rdx; \\\n    syscall\n\n#define syscall2(id, a1, a2)  syscall3(id, a1, a2, 0)\n#define syscall1(id, a1)  syscall2(id, a1, 0)\n\n.globl _start\n_start:\n    syscall3(write, 1, addr1, addr2 - addr1) # \u6267\u884cwrite\u8fd9\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u5f80\u7f16\u53f7\u4e3a1\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08\u5373\u6807\u51c6\u8f93\u51fa\uff09\u5199\u5165\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3aaddr2-addr1\n    syscall1(exit, 1)\n\naddr1:\n    .ascii \"\\033[01;31mHello, OS World\\033[0m\\n\"\naddr2:\n</code></pre></li> <li> <p>\u8ddf\u8e2a\u7cfb\u7edf\u8c03\u7528\uff1a<code>strace -f gcc -o hello hello.c &amp;| vim -</code> (fish\u53ef\u7528\uff0cbash\u4e0d\u53ef\u7528)\u3002<code>&amp;</code> \u7b26\u53f7\u8868\u793a\u5c06\u547d\u4ee4\u653e\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u800c <code>|</code> \u7b26\u53f7\u8868\u793a\u5c06 strace \u547d\u4ee4\u7684\u8f93\u51fa\u4f5c\u4e3a vim \u7f16\u8f91\u5668\u7684\u8f93\u5165\u3002<code>-</code> \u8868\u793a vim \u5e94\u8be5\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u6570\u636e\uff0c\u800c\u4e0d\u662f\u4ece\u4e00\u4e2a\u6587\u4ef6\u3002vim\u6253\u5f00\u540e\u7528<code>:%!grep -v -e '-1'</code>\u8fc7\u6ee4\u6389-1\u7684\u884c\uff0c\u7528<code>:%!grep -v -e open</code>\u8fc7\u6ee4\u6389\u5e26open\u7684\u884c\u3002</p> </li> <li> <p>Debug hanoi-nr.c\u8981\u914d\u7f6e\u597d\u7684.vscode/launch.json     <pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"C Debugger: Current File\",\n            \"type\": \"cppdbg\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}/hanoi-nr\",\n            \"args\": [],\n            \"cwd\": \"${workspaceFolder}\",\n        }\n    ]\n}\n</code></pre></p> <p>\u9012\u5f52\u7684\u6c49\u8bfa\u5854 hanoi-r.c\uff1a <pre><code>#include &lt;stdio.h&gt;\n\nint hanoi(int n, char from, char to, char via) {\n    if (n == 1) {\n        printf(\"%c -&gt; %c\\n\", from, to);\n        return 1;\n    } else {\n        int c1 = hanoi(n - 1, from, via, to);\n        hanoi(1, from, to, via);\n        int c2 = hanoi(n - 1, via, to, from);\n        return c1 + c2 + 1;\n    }\n}\n</code></pre></p> <p>\u975e\u9012\u5f52\u7684\u6c49\u8bfa\u5854 hanoi-nr.c\uff1a <pre><code>#include &lt;stdio.h&gt;\n#include &lt;assert.h&gt;\n\nstruct Frame {\n    // Each frame has a program counter to keep track its next\n    // to-be-executed statement.\n    int pc;\n\n    // The internal state of the frame. This state includes\n    // both arguments and local variables (if any).\n    //\n    // Arguments:\n    int n;\n    char from, to, via;\n\n    // Local variables:\n    int c1, c2;\n};\n\ntypedef struct Frame Frame;\n\nint hanoi(int n, char from, char to, char via) {\n    Frame stk[64];\n    Frame *top = stk - 1;\n\n    // Function call: push a new frame (PC=0) onto the stack\n    #define call(...) ({ *(++top) = (Frame){.pc = 0, __VA_ARGS__}; })\n\n    // Function return: pop the top-most frame\n    #define ret(val) ({ top--; retval = (val); })\n\n\n    // The last function-return's value. It is not obvious\n    // that we only need one retval.\n    int retval = 0;\n\n    // The initial call to the recursive function\n    call(n, from, to, via);\n\n    while (1) {\n        // Fetch the top-most frame.\n        Frame *f = top;\n        if (top &lt; stk) {\n            // No top-most frame any more; we're done.\n            break;\n        }\n\n        // Jumps may change this default next pc.\n        int next_pc = f-&gt;pc + 1;\n\n        // Single step execution.\n\n        // Extract the parameters from the current frame. (It's\n        // generally a bad idea to reuse variable names in\n        // practice; but we did it here for readability.)\n        int n = f-&gt;n, from = f-&gt;from, to = f-&gt;to, via = f-&gt;via;\n\n        switch (f-&gt;pc) {\n            case 0:\n                if (n == 1) {\n                    printf(\"%c -&gt; %c\\n\", from, to);\n                    ret(1);\n                }\n                break;\n            case 1: call(n - 1, from, via, to); break;\n            case 2: f-&gt;c1 = retval; break;\n            case 3: call(1, from, to, via); break;\n            case 4: call(n - 1, via, to, from); break;\n            case 5: f-&gt;c2 = retval; break;\n            case 6: ret(f-&gt;c1 + f-&gt;c2 + 1); break;\n            default: assert(0);\n        }\n\n        f-&gt;pc = next_pc;\n    }\n\n    return retval;\n}\n</code></pre></p> <p>Call and Return</p> <p>\u51fd\u6570\u8c03\u7528\uff1a\u5728\u7a0b\u5e8f\u4e2d\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u5c06\u5f53\u524d\u6267\u884c\u7684\u6307\u4ee4\u5730\u5740\uff08\u5373\u7a0b\u5e8f\u8ba1\u6570\u5668\uff09\u4fdd\u5b58\u5230\u6808\u4e2d\uff0c\u5e76\u8df3\u8f6c\u5230\u88ab\u8c03\u7528\u51fd\u6570\u7684\u8d77\u59cb\u5730\u5740\u3002\u88ab\u8c03\u7528\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u7a0b\u5e8f\u4f1a\u4ece\u6808\u4e2d\u53d6\u51fa\u4fdd\u5b58\u7684\u6307\u4ee4\u5730\u5740\uff0c\u5e76\u8df3\u8f6c\u5230\u8be5\u5730\u5740\u7ee7\u7eed\u6267\u884c\u3002</p> <p>\u51fd\u6570\u8fd4\u56de\uff1a\u5728\u51fd\u6570\u4e2d\u4f7f\u7528return\u8bed\u53e5\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u5c06\u8fd4\u56de\u503c\u4fdd\u5b58\u5230\u6808\u4e2d\uff0c\u5e76\u8df3\u8f6c\u5230\u8c03\u7528\u51fd\u6570\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u3002\u8c03\u7528\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u7a0b\u5e8f\u4f1a\u4ece\u6808\u4e2d\u53d6\u51fa\u4fdd\u5b58\u7684\u8fd4\u56de\u503c\uff0c\u5e76\u5c06\u5176\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0ccall\u662f\u957f\u51fa\u65b0\u7684frame(\u6ce8\u610f\u6bcf\u4e2aframe\u90fd\u6709\u81ea\u5df1\u7684pc\uff0c\u65b0\u957f\u51fa\u7684frame.pc = 0\uff0c\u65b0frame\u5f00\u59cb\u6267\u884c\u65f6\uff0c\u90fd\u662f\u4ece\u81ea\u5df1fram\u7684pc=0\u5f00\u59cb\u4e00\u6b65\u6b65\u6267\u884c\u81ea\u5df1pc=1/2/3/...)\uff0creturn\u662f\u5f39\u51fa\u5f53\u524d\u7684frame\u5e76\u8bb0\u4e0b\u8fd4\u56de\u503c\u3002</p> </li> <li> <p>\u7f16\u8bd1\u5668\u4e0e\u7f16\u8bd1\u4f18\u5316</p> <p>\u7f16\u8bd1\u4f18\u5316</p> <p>C \u8bed\u8a00\u7f16\u8bd1\u5668\u5728\u8fdb\u884c\u4ee3\u7801\u4f18\u5316\u65f6\uff0c\u9075\u5faa\u7684\u57fa\u672c\u51c6\u5219\u662f\u5728\u4e0d\u6539\u53d8\u7a0b\u5e8f\u7684\u8bed\u4e49 (\u5373\u7a0b\u5e8f\u7684\u884c\u4e3a\u548c\u8f93\u51fa\u7ed3\u679c) \u7684\u524d\u63d0\u4e0b\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u548c/\u6216\u51cf\u5c11\u7a0b\u5e8f\u7684\u8d44\u6e90\u6d88\u8017</p> <p>\u7f16\u8bd1\u4f18\u5316\u4e2d\u6700\u91cd\u8981\u7684 \u201c\u4e09\u677f\u65a7\u201d\uff1a</p> <ul> <li>\u51fd\u6570\u5185\u8054\uff1a\u5c06\u51fd\u6570\u8c03\u7528\u66ff\u6362\u4e3a\u51fd\u6570\u4f53\u672c\u8eab\u7684\u5185\u5bb9</li> <li>\u5e38\u91cf\u4f20\u64ad\uff1a\u5728\u7f16\u8bd1\u65f6\u8ba1\u7b97\u5e38\u91cf\u8868\u8fbe\u5f0f\u7684\u503c\u5e76\u66ff\u6362</li> <li>\u6b7b\u4ee3\u7801\u6d88\u9664\uff1a\u5220\u9664\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u6267\u884c\u5230\u7684\u4ee3\u7801</li> </ul> <p>\u7f16\u8bd1\u6b63\u786e\u6027: \u7cfb\u7edf\u8c03\u7528\u662f\u4f7f\u7a0b\u5e8f\u8ba1\u7b97\u7ed3\u679c\u53ef\u89c1\u7684\u552f\u4e00\u65b9\u6cd5</p> <ul> <li>\u4e0d\u6539\u53d8\u8bed\u4e49 = \u4e0d\u6539\u53d8\u53ef\u89c1\u7ed3\u679c</li> <li>\u72b6\u6001\u673a\u7684\u89c6\u89d2\uff1a\u6ee1\u8db3C/\u6c47\u7f16\u72b6\u6001\u673a\u751f\u6210\u7684\u6240\u6709 syscall \u5e8f\u5217\u5b8c\u5168\u4e00\u81f4\uff0c\u4efb\u4f55\u4f18\u5316\u90fd\u662f\u5141\u8bb8\u7684</li> </ul> <p>C \u4ee3\u7801\u4e2d\u7684\u4e0d\u53ef\u4f18\u5316\u90e8\u5206</p> <ul> <li>External function calls (\u94fe\u63a5\u65f6\u624d\u80fd\u786e\u5b9a\u5230\u5e95\u662f\u4ec0\u4e48\u4ee3\u7801)<ul> <li>\u672a\u77e5\u7684\u4ee3\u7801\u53ef\u80fd\u5305\u542b\u7cfb\u7edf\u8c03\u7528</li> <li>\u56e0\u6b64\u4e0d\u53ef\u5220\u9664\u3001\u79fb\u51fa\u5faa\u73af\u7b49\uff0c\u4e14\u8981\u4fdd\u8bc1\u53c2\u6570\u4f20\u9012\u5b8c\u5168\u4e00\u81f4</li> </ul> </li> <li>\u7f16\u8bd1\u5668\u63d0\u4f9b\u7684 \u201c\u4e0d\u53ef\u4f18\u5316\u201d \u6807\u6ce8<ul> <li>volatile [load | store | inline assembly]</li> </ul> </li> </ul> <p>example\uff1ainline.c <pre><code>int equals(int x, int y) {\n    if (x == y) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nint foo(int n) {\n    return equals(n, n) + equals(n, n - 1);\n}\n</code></pre> <code>gcc -O2 -c inline.c &amp;&amp; objdump -d inline.o</code>: \u53ef\u4ee5\u770b\u5230\u7f16\u8bd1\u5668\u76f4\u63a5\u5c061\u8d4b\u503c\u7ed9eax\u5bc4\u5b58\u5668\u4e86\uff0c\u800c\u4e0d\u662f\u8c03\u7528equals\u51fd\u6570\u3002</p> <pre><code>0000000000000010 &lt;foo&gt;:\n10:   f3 0f 1e fa             endbr64 \n14:   b8 01 00 00 00          mov    $0x1,%eax\n19:   c3                      ret\n</code></pre> </li> </ol>"},{"location":"OS/%E7%BB%AA%E8%AE%BA/#lecture-3","title":"Lecture 3 \u786c\u4ef6\u89c6\u89d2\u7684\u64cd\u4f5c\u7cfb\u7edf","text":"<p>Take-away Messages</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf\u662f\u4e25\u683c\u7684\u6570\u5b66\u5bf9\u8c61\uff1a\u6ca1\u6709\u9b54\u6cd5\uff1b\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u4e00\u5207\u884c\u4e3a\u90fd\u662f\u53ef\u89c2\u6d4b\u3001\u53ef\u7406\u89e3\u7684\u3002</p> <ul> <li>\u5904\u7406\u5668\u662f\u65e0\u60c5\u7684\u6267\u884c\u6307\u4ee4\u7684\u673a\u5668\u3002</li> <li>\u5904\u7406\u5668\u4f1a\u89c4\u5b9a\u597d Reset \u540e\u7684\u884c\u4e3a\u3002</li> <li>Reset \u540e Firmware \u5f00\u59cb\u8fd0\u884c\uff0c\u518d\u52a0\u8f7d\u64cd\u4f5c\u7cfb\u7edf\u3002</li> <li>\u5382\u5546\u9010\u6e10\u5f62\u6210\u4e86\u8fbe\u6210\u5171\u8bc6\u7684 Firmware Specification (IBM PC \u201c\u517c\u5bb9\u673a\u201d\u3001UEFI\u3001\u2026\u2026)\u3002</li> </ul> <ol> <li> <p>IBM PC/PC-DOS 2.0 (1983)\u65f6\u4ee3\uff1aFirmware (BIOS) \u4f1a\u52a0\u8f7d\u78c1\u76d8\u7684\u524d 512 \u5b57\u8282\u5230 0x7c00\uff0c\u5982\u679c\u8fd9 512 \u5b57\u8282\u6700\u540e\u662f <code>0x55, 0xAA</code>\uff0c\u5c31\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u7136\u540e\u4ece 0x7c00 \u5f00\u59cb\u6267\u884c\u64cd\u4f5c\u7cfb\u7edf\u4ee3\u7801\u3002 <pre><code>minimal.img: Makefile\n    ( echo \"eb fe 11 22 33 44\" | xxd -r -p; \\\n      cat /dev/zero | head -c 504; \\\n      echo \"55 aa\" | xxd -r -p \\\n    ) &gt; minimal.img\n</code></pre></p> <p>\u8fd9\u4e2amakefile\u4f1a\u751f\u6210\u4e00\u4e2a512\u5b57\u8282\u7684img\u6587\u4ef6\uff0c\u524d6\u4e2a\u5b57\u8282\u662f<code>eb fe 11 22 33 44</code>\uff0c\u4e2d\u95f4504\u4e2a\u5b57\u8282\u90fd\u662f0\uff0c\u6700\u540e\u4e24\u4e2a\u5b57\u8282\u662f<code>55 aa</code>\u3002\u4f7f\u7528<code>qemu-system-x86_64 -monitor stdio minimal.img</code>\u542f\u52a8\u540e\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u770b\u5230eip\u786e\u5b9e\u662f0x7c00\uff0c\u5f53\u524d\u6307\u4ee4\u4e3a\u6b7b\u5faa\u73af\u3002(eb fe\u5373\u4e3a\u6b7b\u5faa\u73af<code>jmp .</code>)</p> <pre><code>(qemu) p $eip\n0x7c00\n(qemu) x/i $eip\n0x0000000000007c00:  jmp    0x7c00\n</code></pre> <p>\u901a\u8fc7<code>qemu-system-x86_64 -s -S minimal.img &amp;</code>\u548c<code>gdb -x init.gdb</code>\u53ef\u4ee5\u770b\u5230\u662f2\u4e2a\u5b57\u82822\u4e2a\u5b57\u8282\u7684\u5c06\u78c1\u76d8\u5185\u5bb9\u642c\u52300x7c00\u5904\u7684\uff0c\u4f7f\u7528\u7684\u6307\u4ee4\u662f<code>rep insl (%dx),%es:(%edi)\u200b</code> <pre><code># init.gdb\n# Kill process (QEMU) on gdb exits\ndefine hook-quit\n    kill\nend\n\ndefine hook-stop\n    printf \"Program Counter:\\n\"\n    x/i $rip + ($cs * 16)\n    printf \"------- Memory around 0x7c00 -------\\n\"\n    x/16b 0x7c00\nend\n\n# Connect to remote\ntarget remote localhost:1234\nwatch *0x7c00\nbreak *0x7c00\nlayout asm\ncontinue\n</code></pre></p> </li> </ol>"},{"location":"OS/%E7%BB%AA%E8%AE%BA/#lecture-4","title":"Lecture 4 \u6570\u5b66\u89c6\u89d2\u7684\u64cd\u4f5c\u7cfb\u7edf","text":"<p>Take-away Messages</p> <p>\u7a0b\u5e8f\u5c31\u662f\u72b6\u6001\u673a\uff1b\u72b6\u6001\u673a\u53ef\u4ee5\u7528\u7a0b\u5e8f\u8868\u793a\u3002\u56e0\u6b64\uff1a</p> <ul> <li>\u6211\u4eec\u53ef\u4ee5\u7528\u66f4 \u201c\u7b80\u5355\u201d \u7684\u65b9\u5f0f (\u4f8b\u5982 Python) \u63cf\u8ff0\u72b6\u6001\u673a\u3001\u5efa\u6a21\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u5e94\u7528\uff0c\u5e76\u4e14\u5b9e\u73b0\u64cd\u4f5c\u7cfb\u7edf\u7684\u53ef\u6267\u884c\u6a21\u578b\u3002</li> <li>\u4e00\u65e6\u628a\u64cd\u4f5c\u7cfb\u7edf\u3001\u5e94\u7528\u7a0b\u5e8f\u5f53\u505a \u201c\u6570\u5b66\u5bf9\u8c61\u201d \u5904\u7406\uff0c\u90a3\u4e48\u6211\u4eec\u56fe\u8bba\u3001\u6570\u7406\u903b\u8f91\u4e2d\u7684\u5de5\u5177\u5c31\u80fd\u88ab\u5e94\u7528\u4e8e\u5904\u7406\u7a0b\u5e8f\u2014\u2014\u4f8b\u5982\uff0c\u53ef\u4ee5\u7528\u56fe\u904d\u5386 \u201c\u66b4\u529b\u679a\u4e3e\u201d \u7684\u65b9\u6cd5\u8bc1\u660e\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u3002</li> </ul> <ol> <li>Debug os-model.py\u8981\u914d\u7f6e\u597d\u7684.vscode/launch.json <pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Python Debugger: Current File\",\n            \"type\": \"debugpy\",\n            \"request\": \"launch\",\n            \"program\": \"${file}\",\n            \"args\": [\"hello.py\"],\n            \"console\": \"integratedTerminal\"\n        }\n    ]\n}\n</code></pre></li> <li> <p>os-model.py: 30\u884c\u5efa\u6a21\u64cd\u4f5c\u7cfb\u7edf <pre><code>#!/usr/bin/env python3\n\nimport sys\nimport random\nfrom pathlib import Path\n\nclass OS:\n    '''\n    A minimal executable operating system model. Processes\n    are state machines (Python generators) that can be paused\n    or continued with local states being saved.\n    '''\n\n    '''\n    We implement three system calls:\n\n    - read: read a random bit value.\n    - write: write a string to the buffer.\n    - spawn: create a new state machine (process).\n    '''\n    SYSCALLS = ['read', 'write', 'spawn']\n\n    class Process:\n        '''\n        A \"freezed\" state machine. The state (local variables,\n        program counters, etc.) are stored in the generator\n        object.\n        '''\n\n        def __init__(self, func, *args):\n            # func should be a generator function. Calling\n            # func(*args) returns a generator object.\n            self._func = func(*args)\n\n            # This return value is set by the OS's main loop.\n            self.retval = None\n\n        def step(self):\n            '''\n            Resume the process with OS-written return value,\n            until the next system call is issued.\n            '''\n            syscall, args, *_ = self._func.send(self.retval)\n            self.retval = None\n            return syscall, args\n\n    def __init__(self, src):\n        # This is a hack: we directly execute the source\n        # in the current Python runtime--and main is thus\n        # available for calling.\n        exec(src, globals())\n        self.procs = [OS.Process(main)]\n        self.buffer = ''\n\n    def run(self):\n        # Real operating systems waste all CPU cycles\n        # (efficiently, by putting the CPU into sleep) when\n        # there is no running process at the moment. Our model\n        # terminates if there is nothing to run.\n        while self.procs:\n\n            # There is also a pointer to the \"current\" process\n            # in today's operating systems.\n            current = random.choice(self.procs)\n\n            try:\n                # Operating systems handle interrupt and system\n                # calls, and \"assign\" CPU to a process.\n                match current.step():\n                    case 'read', _:\n                        current.retval = random.choice([0, 1])\n                    case 'write', s:\n                        self.buffer += s\n                    case 'spawn', (fn, *args):\n                        self.procs += [OS.Process(fn, *args)]\n                    case _:\n                        assert 0\n\n            except StopIteration:\n                # The generator object terminates.\n                self.procs.remove(current)\n\n        return self.buffer\n\nif __name__ == '__main__':\n    if len(sys.argv) &lt; 2:\n        print(f'Usage: {sys.argv[0]} file')\n        exit(1)\n\n    src = Path(sys.argv[1]).read_text()\n\n    # Hack: patch sys_read(...) -&gt; yield \"sys_read\", (...)\n    for syscall in OS.SYSCALLS:\n        src = src.replace(f'sys_{syscall}',\n                          f'yield \"{syscall}\", ')\n\n    stdout = OS(src).run()\n    print(stdout)\n</code></pre></p> </li> <li> <p>Mosaic Model and Checker:      <pre><code>def main():\n    pid = sys_fork()\n    sys_sched()  # non-deterministic context switch\n    if pid == 0:\n        sys_write('World\\n')\n    else:\n        sys_write('Hello\\n')\n</code></pre> <code>python mosaic.py -c examples/intro/hello.py | grep stdout | sort | uniq</code>\u8f93\u51fa\uff1a(-c checking\u6a21\u5f0f\u4e0b\uff0c\u4f1a\u8f93\u51fa\u6240\u6709\u53ef\u80fd\u7684\u7ed3\u679c)     <pre><code>\"stdout\": \"\",\n\"stdout\": \"Hello\\n\",\n\"stdout\": \"Hello\\nWorld\\n\",\n\"stdout\": \"World\\n\",\n\"stdout\": \"World\\nHello\\n\",\n</code></pre></p> </li> </ol>"},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/","title":"\u865a\u62df\u5316","text":""},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/#lecture-14","title":"Lecture 14 \u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u8fdb\u7a0b","text":"<p>Take-away Messages</p> <p>\u56e0\u4e3a \u201c\u7a0b\u5e8f = \u72b6\u6001\u673a\u201d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fdb\u7a0b (\u8fd0\u884c\u7684\u7a0b\u5e8f) \u7ba1\u7406\u7684 API \u5f88\u81ea\u7136\u5730\u5c31\u662f\u72b6\u6001\u673a\u7684\u7ba1\u7406\u3002\u5728 UNIX/Linux \u4e16\u754c\u4e2d\uff0c\u4ee5\u4e0b\u4e09\u4e2a\u7cfb\u7edf\u8c03\u7528\u521b\u5efa\u4e86\u6574\u4e2a \u201c\u8fdb\u7a0b\u4e16\u754c\u201d\uff0c\u4e0d\u8bba\u662f\u6211\u4eec\u5e38\u7528\u7684 IDE \u548c\u6d4f\u89c8\u5668\uff0c\u8fd8\u662f\u7f16\u8bd1\u65f6\u5728\u540e\u53f0\u8c03\u7528\u7684 gcc\u3002\u5176\u4e2d\uff1a</p> <ul> <li>fork: \u5bf9\u5f53\u524d\u72b6\u6001\u673a\u72b6\u6001\u8fdb\u884c\u5b8c\u6574\u590d\u5236</li> <li>execve: \u5c06\u5f53\u524d\u72b6\u6001\u673a\u72b6\u6001\u91cd\u7f6e\u4e3a\u67d0\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u63cf\u8ff0\u7684\u72b6\u6001\u673a</li> <li>exit: \u9500\u6bc1\u5f53\u524d\u72b6\u6001\u673a</li> </ul> <p>\u5728\u5bf9\u8fd9\u4e2a\u6982\u5ff5\u6709\u4e86\u7edd\u5bf9\u6b63\u786e\u4e14\u7edd\u5bf9\u4e25\u8c28\u7684\u7406\u89e3\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u5c31\u663e\u5f97\u4e0d\u90a3\u4e48\u795e\u79d8\u4e86\u3002</p> <ol> <li> <p>fork: \u521b\u5efa\u72b6\u6001\u673a\u3002\u505a\u4e00\u4efd\u72b6\u6001\u673a\u5b8c\u6574\u7684\u590d\u5236 (\u5185\u5b58\u3001\u5bc4\u5b58\u5668\u73b0\u573a)\u3002     <pre><code>pid_t fork(void);\n</code></pre></p> <p>fork() \u7684\u884c\u4e3a</p> <ul> <li> <p>\u7acb\u5373\u590d\u5236\u72b6\u6001\u673a</p> <ul> <li>\u5305\u62ec\u6240\u6709\u4fe1\u606f\u7684\u5b8c\u6574\u62f7\u8d1d<ul> <li>\u6bcf\u4e00\u4e2a\u5b57\u8282\u7684\u5185\u5b58</li> <li>\u6253\u5f00\u7684\u6587\u4ef6 (\u5171\u4eab)</li> <li>\u2026\u2026</li> <li>\u590d\u5236\u5931\u8d25\u8fd4\u56de -1<ul> <li>errno \u4f1a\u8fd4\u56de\u9519\u8bef\u539f\u56e0 (man fork)</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>\u5982\u4f55\u533a\u5206\u4e24\u4e2a\u72b6\u6001\u673a\uff1f</p> <ul> <li>\u65b0\u521b\u5efa\u8fdb\u7a0b\uff1a\u5f97\u5230\u7684\u8fd4\u56de\u503c\u662f 0</li> <li>\u6267\u884c fork \u7684\u7236\u8fdb\u7a0b\uff1a\u5f97\u5230\u7684\u8fd4\u56de\u503c\u662f\u5b50\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u53f7</li> </ul> </li> </ul> </li> <li> <p>\u9605\u8bfb\u4ee5\u4e0b\u7a0b\u5e8f\uff0c\u5199\u51fa\u8fd0\u884c\u7ed3\u679c     <pre><code>pid_t x = fork();\npid_t y = fork();\nprintf(\"%d %d\\n\", x, y);\n</code></pre></p> <p>\u8f93\u51fa\uff1a <pre><code>19489 19490\n19489 0\n0 19491\n0 0\n</code></pre> </p> <p><pre><code>for (int i = 0; i &lt; 2; i++) {\n    fork();\n    printf(\"Hello\\n\");\n}\n</code></pre> \u8f93\u51fa\uff1a6\u4e2aHello <pre><code>Hello\nHello\nHello\nHello\nHello\nHello\n</code></pre></p> <p>\u7a0b\u5e8f\u7b49\u4ef7\u4e8e\uff1a <pre><code>fork();\nprintf(\"Hello\\n\");\nfork();\nprintf(\"Hello\\n\");\n</code></pre> </p> <p>\u7136\u800c\uff0c<code>./demo-2 | wc -l</code>\u8f93\u51fa\u7684\u662f<code>8</code>\u3002\u539f\u56e0\uff1a\u5728\u7ec8\u7aef\u91cc\u6362\u884c\u6253\u5370\u65f6\u4f7f\u7528\u7684\u662fline buffer\uff0c\u6b64\u65f6\u6253\u53706\u4e2a\uff1b\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\u6216\u4f7f\u7528\u7ba1\u9053\u65f6\u4f7f\u7528\u7684\u662ffull buffer\uff0c\u6b64\u65f6\u4f1a\u6253\u53708\u4e2a\uff0c\u6ca1\u6709\u5237\u65b0buffer\uff0c\u5bfc\u81f4\u6240\u6709\u5e26\u6709\u503c\u7684buffer\u4e5f\u88abfork\u4e86\u3002<code>man setbuf</code>\u53ef\u4ee5\u770b\u5230\u6709\u4e09\u79cd\u6a21\u5f0f<code>_IONBF unbuffered</code>/<code>_IOLBF line buffered</code>/<code>_IOFBF fully buffered</code>\u3002 \u6b64\u65f6\u7a0b\u5e8f\u7b49\u4ef7\u4e8e\uff1a <pre><code>fork();\nbuf += \"Hello\";\nfork();\nbuf += \"Hello\";\nflush(buf);\n</code></pre> </p> </li> <li> <p>execve\uff1a\u91cd\u7f6e\u72b6\u6001\u673a\u3002\u5c06\u5f53\u524d\u8fdb\u7a0b\u91cd\u7f6e\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u63cf\u8ff0\u72b6\u6001\u673a\u7684\u521d\u59cb\u72b6\u6001\u3002</p> <p><pre><code>int execve(const char *filename,\n           char * const argv[], char * const envp[]);\n// \u4e09\u4e2a\u53c2\u6570\uff1a\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8def\u5f84\u3001\u4f20\u9012\u7ed9 main \u51fd\u6570\u7684\u53c2\u6570\u548c\u73af\u5883\u53d8\u91cf\u3002\n</code></pre> execve \u884c\u4e3a</p> <ul> <li>\u6267\u884c\u540d\u4e3a <code>filename</code> \u7684\u7a0b\u5e8f</li> <li>\u5141\u8bb8\u5bf9\u65b0\u72b6\u6001\u673a\u8bbe\u7f6e\u53c2\u6570 <code>argv</code> (v) \u548c\u73af\u5883\u53d8\u91cf <code>envp</code> (e)<ul> <li>\u521a\u597d\u5bf9\u5e94\u4e86 <code>main()</code> \u7684\u53c2\u6570\uff01</li> </ul> </li> <li>execve \u662f\u552f\u4e00\u80fd\u591f \u201c\u6267\u884c\u7a0b\u5e8f\u201d \u7684\u7cfb\u7edf\u8c03\u7528<ul> <li>\u56e0\u6b64\u4e5f\u662f\u4e00\u5207\u8fdb\u7a0b strace \u7684\u7b2c\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528</li> </ul> </li> </ul> </li> <li> <p>UNIX \u4e2d\u5b9e\u73b0 \u201c\u521b\u5efa\u65b0\u72b6\u6001\u673a\u201d \u7684\u65b9\u5f0f\uff1afork + execve \uff08\u76f8\u5f53\u4e8espawn\uff09     <pre><code>int pid = fork();\nif (pid == -1) {\n    // fork\u5931\u8d25\n    perror(\"fork\"); goto fail;\n} else if (pid == 0) {\n    // Child\n    execve(...);\n    // \u5982\u679c execve \u6210\u529f\u6267\u884c\uff0c\u5b83\u5c06\u66ff\u6362\u5f53\u524d\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4\u5e76\u5f00\u59cb\u6267\u884c\u65b0\u7684\u7a0b\u5e8f\uff0c\n    // \u56e0\u6b64 perror(\"execve\") \u4e0d\u4f1a\u88ab\u6267\u884c\u3002perror(\"execve\") \u53ea\u4f1a\u5728 execve\n    // \u8c03\u7528\u5931\u8d25\u65f6\u6267\u884c\n    perror(\"execve\"); goto fail;\n} else {\n    // Parent\n    ...\n}\n</code></pre></p> <p>demo: <pre><code>#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n\nint main() {\n    char *const argv[] = {\n        \"/bin/bash\",\n        \"-c\",\n        \"env\",\n        NULL,\n    };\n\n    char *const envp[] = {\n        \"HELLO=WORLD\",\n        NULL,\n    };\n\n    // Reset the state machine to \"/bin/bash\"\n    execve(argv[0], argv, envp);\n\n    // We are here only on error.\n    printf(\"Hello, World!\\n\");\n}\n</code></pre> \u8f93\u51fa\uff1a <pre><code>PWD=/home/user/jyy_os_2024/lecture/lect14/execve-demo\nHELLO=WORLD\nSHLVL=0\n_=/usr/bin/env\n</code></pre> \u8fd9\u6bd4\u76f4\u63a5\u5728bash\u91cc\u6267\u884c<code>/bin/bash -c env</code>\u5f97\u5230\u7684\u4e00\u5927\u5806\u8f93\u51fa\u66f4\u52a0\u7b80\u5355\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u5728\u4ee3\u7801\u91cc\u7684\u73af\u5883\u53d8\u91cfevnp\u53ea\u4fdd\u7559\u4e86<code>HELLO=WORLD</code>\uff08\u5f53\u7136\u5b9e\u9645\u4e0a\u6267\u884cexecve\u8fd8\u662f\u6709PWD/SHLVL\u7b49\u88ab\u52a0\u4e0a\u7684\u73af\u5883\u53d8\u91cf\uff09\u3002</p> </li> <li> <p>_exit()\uff1a\u9500\u6bc1\u72b6\u6001\u673a\u3002\u7acb\u5373\u6467\u6bc1\u72b6\u6001\u673a\uff0c\u5141\u8bb8\u6709\u4e00\u4e2a\u8fd4\u56de\u503c\u3002\u5b50\u8fdb\u7a0b\u7ec8\u6b62\u4f1a\u901a\u77e5\u7236\u8fdb\u7a0b\u3002     <pre><code>void _exit(int status);\n</code></pre></p> <p>\u7ed3\u675f\u7a0b\u5e8f\u6267\u884c\u7684\u4e09\u79cd\u65b9\u6cd5</p> <ul> <li>exit(0)<ul> <li>provided by libc</li> <li>\u4f1a\u8c03\u7528 atexit</li> </ul> </li> <li>_exit(0)<ul> <li>\u6267\u884c \u201cexit_group\u201d \u7cfb\u7edf\u8c03\u7528\u7ec8\u6b62\u6574\u4e2a\u8fdb\u7a0b (\u6240\u6709\u7ebf\u7a0b)</li> <li>\u4e0d\u4f1a\u8c03\u7528 atexit </li> </ul> </li> <li>syscall(SYS_exit, 0)<ul> <li>\u6267\u884c \u201cexit\u201d \u7cfb\u7edf\u8c03\u7528\u7ec8\u6b62\u5f53\u524d\u7ebf\u7a0b</li> <li>\u4e0d\u4f1a\u8c03\u7528 atexit\uff08libc\u5f53\u7136\u4e0d\u4e86\u89e3\u7cfb\u7edf\u8c03\u7528\uff0c\u4e5f\u5c31\u65e0\u6cd5\u5728\u9000\u51fa\u65f6\u8c03\u7528libc\u7684atexit\u51fd\u6570\uff09</li> </ul> </li> </ul> </li> </ol>"},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/#lecture-15","title":"Lecture 15 \u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4","text":"<p>Take-away Messages</p> <p>\u72b6\u6001\u673a\u7684\u89c6\u89d2\u81ea\u7136\u5730\u5c06\u6211\u4eec\u5f15\u5165 \u201c\u5185\u5b58\u5230\u5e95\u662f\u4ec0\u4e48\u201d \u7684\u95ee\u9898\u2014\u2014\u5b83\u7684\u7b54\u6848\u540c\u6837\u4e5f\u5f88\u81ea\u7136\uff1a\u5e26\u6709\u8bbf\u95ee\u6743\u9650\u63a7\u5236\u7684\u8fde\u7eed\u5185\u5b58\u6bb5\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 mmap\u3001munmap\u3001mprotect \u4e09\u4e2a\u7cfb\u7edf\u8c03\u7528\u8c03\u6574\u72b6\u6001\u673a\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u5305\u62ec\u5206\u914d\u533f\u540d\u7684\u5185\u5b58\u3001\u6620\u5c04\u6587\u4ef6\u5185\u5bb9\u5230\u5185\u5b58\u3001\u4fee\u6539\u8bbf\u95ee\u6743\u9650\u7b49\uff08\u589e/\u5220/\u6539\uff09\u3002\u66f4\u6709\u8da3\u7684\u662f\u64cd\u4f5c\u7cfb\u7edf\u6709 \u201c\u80fd\u591f\u5b9e\u73b0\u4e00\u5207\u5e94\u7528\u7a0b\u5e8f\u201d \u7684\u9700\u6c42\uff0c\u8c03\u8bd5\u5668\u4e5f\u4e0d\u5728\u8bdd\u4e0b\u2014\u2014\u8fd9\u4e5f\u7ed9\u4e86\u6211\u4eec\u5165\u4fb5\u5176\u4ed6\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u7684\u673a\u5236\u3002</p> <ol> <li> <p>\u4ee5\u4e0b\u7a0b\u5e8f\u7684 (\u53ef\u80fd) \u8f93\u51fa\u662f\u4ec0\u4e48\uff1f     <pre><code>int main()\n{\n    int x = *(int *)main;\n    printf(\"%x\\n\", x);    // fa1e0ff3\uff08\u5c0f\u7aef\uff09\n    printf(\"%p\\n\", main); //0x556b3315c149\uff0c\u6bcf\u6b21\u4e0d\u4e00\u6837\n}\n</code></pre></p> <p><pre><code>objdump -d a.out\n0000000000001149 &lt;main&gt;:\n1149:       f3 0f 1e fa             endbr64 \n114d:       55                      push   %rbp\n114e:       48 89 e5                mov    %rsp,%rbp\n1151:       48 83 ec 10             sub    $0x10,%rsp\n...\n</code></pre> 2. \u67e5\u770b\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\uff1a</p> <ul> <li> <p>/proc/[pid]/maps</p> <pre><code>linux$ ps\nPID TTY          TIME CMD\n18222 pts/3    00:00:00 dbus-launch\n22713 pts/3    00:00:01 bash\n29368 pts/3    00:00:00 ps\nlinux$ vi /proc/22713/maps\n55e7a0632000-55e7a0711000 r-xp 0002f000 08:20 1241                       /usr/bin/bash\n55e7a0711000-55e7a074b000 r--p 0010e000 08:20 1241                       /usr/bin/bash\n55e7a074c000-55e7a0750000 r--p 00148000 08:20 1241                       /usr/bin/bash\n55e7a0750000-55e7a0759000 rw-p 0014c000 08:20 1241                       /usr/bin/bash\n...\n7ffdf9eb0000-7ffdf9ed2000 rw-p 00000000 00:00 0                          [stack]\n7ffdf9f79000-7ffdf9f7d000 r--p 00000000 00:00 0                          [vvar]\n7ffdf9f7d000-7ffdf9f7f000 r-xp 00000000 00:00 0                          [vdso]\n</code></pre> <p>\u65e0\u9700\u9677\u5165\u5185\u6838\u7684\u7cfb\u7edf\u8c03\u7528: vvar (data)/vdso (code)\u3002\u4f8b\u5982\u65f6\u95f4\u8fd9\u6837\u7684\u6570\u636e\uff0c\u53ea\u6709\u64cd\u4f5c\u7cfb\u7edf\u6709\uff0c\u800c\u5e94\u7528\u7a0b\u5e8f\u53ea\u662f\u8bfb\u65f6\u95f4\u6233\uff0c\u4e0d\u4f1a\u6539\u5b83\uff0c\u5bf9\u4e8e\u8fd9\u6837\u53ea\u8bfb\u7684\u6570\u636e\uff0c\u65e0\u9700\u8fdb\u5165\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u3002\u56e0\u6b64\uff0c\u64cd\u4f5c\u7cfb\u7edf\u91cc\u53ea\u8bfb\u7684\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u5185\u5b58\u7684\u65b9\u5f0f\u5171\u4eab\u7ed9\u8fdb\u7a0b\u3002</p> </li> <li> <p>pmap [pid]</p> <pre><code>linux$ pmap 22713\n22713:   /bin/bash\n000055e7a0603000    188K r---- bash\n000055e7a0632000    892K r-x-- bash\n000055e7a0711000    232K r---- bash\n000055e7a074c000     16K r---- bash\n000055e7a0750000     36K rw--- bash\n000055e7a0759000     44K rw---   [ anon ]\n000055e7a1dbc000   1832K rw---   [ anon ]\n...\n</code></pre> </li> <li> <p>gdb cmd: <code>info proc mappings</code></p> </li> </ul> </li> <li> <p>\u7ba1\u7406\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\uff1a\u5728\u72b6\u6001\u673a\u72b6\u6001\u4e0a\u589e\u52a0/\u5220\u9664/\u4fee\u6539\u4e00\u6bb5\u53ef\u8bbf\u95ee\u7684\u5185\u5b58</p> <pre><code>// \u6620\u5c04\nvoid *mmap(void *addr, size_t length, int prot, int flags,\n           int fd, off_t offset);\nint munmap(void *addr, size_t length);\n\n// \u4fee\u6539\u6620\u5c04\u6743\u9650\nint mprotect(void *addr, size_t length, int prot);\n</code></pre> <p>\u4f8b\u5b50\uff1a</p> <pre><code>#include &lt;unistd.h&gt;\n#include &lt;stdint.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;sys/mman.h&gt;\n\n#define GiB * (1024LL * 1024 * 1024)\n\nint main() {\n    volatile uint8_t *p = mmap(\n        NULL,\n        8 GiB,\n        PROT_READ | PROT_WRITE,\n        MAP_ANONYMOUS | MAP_PRIVATE,\n        -1, 0\n    );\n\n    printf(\"mmap: %lx\\n\", (uintptr_t)p);\n\n    if ((intptr_t)p == -1) {\n        perror(\"cannot map\");\n        exit(1);\n    }\n\n    *(p + 2 GiB) = 1;\n    *(p + 4 GiB) = 2;\n    *(p + 7 GiB) = 3;\n    printf(\"Read get: %d\\n\", *(p + 4 GiB));\n    printf(\"Read get: %d\\n\", *(p + 6 GiB));\n    printf(\"Read get: %d\\n\", *(p + 7 GiB));\n}\n</code></pre> <p><pre><code>import hexdump\nimport mmap\n\nwith open('/dev/sda', 'rb') as fp:\n    mm = mmap.mmap(fp.fileno(),\n                prot=mmap.PROT_READ, length=128 &lt;&lt; 30)\n    hexdump.hexdump(mm[:512]) # \u5c06\u78c1\u76d8sda\u7684128GiB\u6620\u5c04\u5230\u5185\u5b58\uff0c\u5e76\u67e5\u770b\u524d512\u5b57\u8282\n</code></pre> 4. \u5165\u4fb5\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4</p> <ul> <li>\u8c03\u8bd5\u5668 (gdb)<ul> <li>gdb \u53ef\u4ee5\u4efb\u610f\u89c2\u6d4b\u548c\u4fee\u6539\u7a0b\u5e8f\u7684\u72b6\u6001</li> </ul> </li> <li>Profiler (perf)<ul> <li>M3 \u4e2d\u501f\u52a9\u5b83\u7406\u89e3\u7a0b\u5e8f\u7684\u6027\u80fd\u74f6\u9888</li> </ul> </li> </ul> <p>\u4f8b\u5b50\uff1a\u91d1\u5c71\u6e38\u4fa0</p> <ul> <li> <p>\u5730\u5740\u7a7a\u95f4\u90a3\u4e48\u5927\uff0c\u54ea\u4e2a\u624d\u662f \u201c\u91d1\u94b1\u201d\uff1f</p> <ul> <li>\u5305\u542b\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\uff0c\u6bcf\u6b21\u5730\u5740\u90fd\u4e0d\u4e00\u6837</li> <li>\u601d\u8def\uff1aEverything is a state machine<ul> <li>\u89c2\u5bdf\u72b6\u6001\u673a\u7684 trace\uff0c\u5c31\u77e5\u9053\u54ea\u4e2a\u662f\u91d1\u94b1\u4e86</li> </ul> </li> </ul> </li> <li> <p>\u67e5\u627e + Filter</p> <ul> <li>\u8fdb\u5165\u6e38\u620f\u65f6 exp = 4950</li> <li>\u6253\u4e86\u4e2a\u602a exp = 5100</li> <li>\u7b26\u5408 4950 \u2192 5100 \u53d8\u5316\u7684\u5185\u5b58\u5730\u5740\u662f\u5f88\u5c11\u7684<ul> <li>\u597d\u4e86\uff0c\u51fa\u95e8\u5c31\u662f\u6ee1\u7ea7\u4e86</li> </ul> </li> </ul> </li> </ul> <p>knight.c: <code>sudo ./knight VirtualBoxVM</code> -&gt; <code>s 5000</code> -&gt; spend 800 -&gt; <code>s 4200</code> -&gt; <code>w 1000000</code> <pre><code>#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;regex&gt;\n#include &lt;cstdio&gt;\n#include &lt;unistd.h&gt;\n#include &lt;fcntl.h&gt;\nusing std::string, std::to_string;\n\nstruct Game {\n    string name; // Name of the traced process\n    int pid;     // Pid of the traced process\n    int fd;      // Memory file of the traced process\n\n    std::vector&lt;uintptr_t&gt; remain; // Watched addresses\n\npublic:\n    Game(string proc_name):\n        name(proc_name),\n        pid(stoi(run(\"pidof \" + proc_name))) {\n\n        // See: proc(5)\n        string memfile = \"/proc/\" + to_string(pid) + \"/mem\";\n\n        // We need root permission to open this file;\n        // otherwise it would be too dangerous.\n        fd = open(memfile.c_str(), O_RDWR);\n        if (fd &lt; 0) {\n            perror(memfile.c_str());\n            exit(1);\n        }\n    }\n\n    ~Game() {\n        close(fd);\n    }\n\n    void search_for(uint32_t val) {\n        if (remain.size() == 0) {\n            // No match. Start a new round of search.\n\n            string maps = run(\"pmap -x \" + to_string(pid));\n\n            std::regex r(\n                R\"(^([0-9a-f]+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+rw.*)\"\n            );\n\n            std::istringstream iss(maps);\n            for (string line; std::getline(iss, line); ) {\n                std::smatch match;\n                if (std::regex_search(line, match, r)) {\n                    uintptr_t start = stoll(match[1].str(), nullptr, 16);\n                    uintptr_t size = stoll(match[2], nullptr, 10) * 1024;\n                    printf(\"Scanning %lx--%lx\\n\", start, start + size);\n\n                    // Copy process memory to local\n                    std::unique_ptr&lt;uint32_t[]&gt; mem(new uint32_t [size / 4]);\n                    lseek(fd, start, SEEK_SET);\n                    size = read(fd, mem.get(), size);\n\n                    for (uintptr_t off = 0; off &lt; size; off += 4) {\n                        if (mem[off / 4] == val) {\n                            // Found a match!\n                            remain.push_back(start + off);\n                        }\n                    }\n                }\n            }\n        } else {\n            // Search in the watched values.\n\n            std::erase_if(remain, [this, val](uintptr_t addr) {\n                return load(addr) != val;\n            });\n        }\n        printf(\"There are %ld match(es).\\n\", remain.size());\n    }\n\n    void reset() {\n        remain.clear();\n    }\n\n    void overwrite(uint32_t val) {\n        int nwrite = 0;\n        for (uintptr_t addr : remain) {\n            store(addr, val);\n            nwrite++;\n        }\n        printf(\"%d value(s) written.\\n\", nwrite);\n    }\n\nprivate:\n    uint32_t load(uintptr_t addr) {\n        // Load 32-bit value from another address space\n        uint32_t val;\n        lseek(fd, addr, SEEK_SET);\n        read(fd, &amp;val, sizeof(val));\n        return val;\n    }\n\n    void store(uintptr_t addr, uint32_t val) {\n        // Store 32-bit value to another address space\n        lseek(fd, addr, SEEK_SET);\n        write(fd, &amp;val, sizeof(val));\n    }\n\n    static string run(const string &amp;cmd) {\n        std::array&lt;char,128&gt; buf;\n        string result;\n\n        FILE *pipe = popen(cmd.c_str(), \"r\");\n        if (!pipe) {\n            perror(cmd.c_str());\n            exit(1);\n        }\n\n        while (fgets(buf.data(), buf.size(), pipe) != nullptr) {\n            result += buf.data();\n        }\n\n        pclose(pipe);\n        return result;\n    }\n};\n\n\nint main(int argc, char *argv[]) {\n    Game g(argv[1]);\n    uint32_t val;\n    char buf[64];\n\n    printf(\n        \"Usage:\\n\"\n        \"  - s 100: search for value\\n\"\n        \"  - w 99999: overwrite value (for search matches)\\n\"\n        \"  - r: reset search\\n\\n\"\n    );\n\n    while (!feof(stdin)) {\n        printf(\"(%s %d) \", g.name.c_str(), g.pid);\n        scanf(\"%s\", buf);\n\n        switch (buf[0]) {\n            case 'q': return 0;\n            case 's': scanf(\"%d\", &amp;val); g.search_for(val); break;\n            case 'w': scanf(\"%d\", &amp;val); g.overwrite(val); break;\n            case 'r': g.reset(); break;\n        }\n    }\n}\n</code></pre></p> </li> <li> <p>\u7ed9\u8fdb\u7a0b\u53d1\u9001 GUI (\u952e\u76d8/\u9f20\u6807)\u4e8b\u4ef6</p> <ul> <li>\u505a\u4e2a\u9a71\u52a8 (\u53ef\u7f16\u7a0b\u952e\u76d8/\u9f20\u6807)</li> <li>\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf/\u7a97\u53e3\u7ba1\u7406\u5668\u63d0\u4f9b\u7684 API<ul> <li>xdotool</li> <li>ydotool</li> <li>evdev (\u6309\u952e\u663e\u793a\u811a\u672c\uff1b\u4e3b\u64ad\u5e38\u7528)</li> </ul> </li> </ul> <p>\u4f8b\u5b50\uff1a\u5b9e\u73b0\u6309\u952e\u7cbe\u7075\uff0c\u5b9e\u73b0\u6309\u952e\u7cbe\u7075\u4e0d\u5fc5\u5165\u4fb5\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u3002\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u4e86 I/O \u8bbe\u5907\uff0c\u6211\u4eec\u76f8\u5e94\u6a21\u62df\u51fa\u6309\u952e\u7684\u4e8b\u4ef6\u5373\u53ef\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4e3a\u8fdb\u7a0b\u50cf\u6e38\u620f\u4fee\u6539\u5668\u90a3\u6837\u6ce8\u5165\u6309\u952e\u4e8b\u4ef6\u3002</p> <p><code>sudo ./anjian</code>\uff0cthen open https://js13kgames.com/games/spacebar-clicker/index.html <pre><code>#!/bin/bash\n\n# Needs sudo. Try:\n# https://js13kgames.com/games/spacebar-clicker/index.html\n\necho 'Start in 5 seconds...'\nydotoold &amp;&gt; /dev/null &amp;\nsleep 5\n\nfor _ in $(seq 1 200)\ndo\n    ydotool type ' '\n    sleep 0.01\ndone\n</code></pre></p> </li> <li> <p>\u6539\u53d8\u8fdb\u7a0b\u5bf9\u65f6\u95f4\u7684\u611f\u77e5</p> <p>\u7a0b\u5e8f = \u72b6\u6001\u673a</p> <ul> <li> <p>\u201c\u8ba1\u7b97\u6307\u4ee4\u201d \u662f\u4e0d\u80fd\u611f\u77e5\u65f6\u95f4\u7684</p> <ul> <li>spin count \u8ba1\u65f6\u4f1a\u51fa\u73b0 \u201c\u673a\u5668\u53d8\u5feb\uff0c\u6e38\u620f\u6ca1\u6cd5\u73a9\u201d \u7684\u60c5\u51b5</li> <li>syscall \u662f\u611f\u77e5\u65f6\u95f4\u7684\u552f\u4e00\u65b9\u6cd5</li> </ul> </li> <li> <p>\u201c\u52ab\u6301\u201d \u548c\u65f6\u95f4\u76f8\u5173\u7684 syscall/\u5e93\u51fd\u6570</p> <ul> <li>\u6539\u53d8\u7a0b\u5e8f\u5bf9\u65f6\u95f4\u7684\u8ba4\u77e5</li> <li>\u5c31\u50cf\u624b\u8868\u8c03\u5feb/\u6162\u4e86\u4e00\u6837</li> </ul> </li> </ul> <p>\u4f8b\u5b50\uff1a\u53d8\u901f\u9f7f\u8f6e <code>./gear 10 tetris</code></p> <p>gear\uff1a\u5b9e\u9645\u4e0a\u5c31\u662f\u4e2apython\u811a\u672c\uff0c\u8c03\u7528 gdb \u8c03\u8bd5 tetris \u6e38\u620f\uff0c\u52ab\u6301 gettimeofday \u7cfb\u7edf\u8c03\u7528\uff0c\u5b9e\u73b0\u53d8\u901f\u9f7f\u8f6e\u3002 <pre><code>#!/usr/bin/env python3\n\nimport subprocess\nimport sys\n\ntry:\n    ratio, exe = sys.argv[1:]\nexcept:\n    print(f'Example: {sys.argv[0]} 10 tetris  # 10X speedup')\n    exit(1)\n\nsubprocess.run(\n    [\n        'gdb',\n        '-ex', f'set $gear_ratio = {ratio}',\n        '-x', 'gear-gdb.py',\n        exe,\n    ]\n)\n</code></pre></p> <pre><code>import gdb\nimport datetime\n\nratio = float(gdb.parse_and_eval('$gear_ratio'))\n\n# Get the current time\nstart = datetime.datetime.now()\n\ndef hacked_time():\n    now = datetime.datetime.now()\n\n    # The speed of the clock is adjusted\n    t = start + (now - start) * ratio\n\n    tv_sec = int(t.timestamp())\n    tv_usec = t.microsecond\n    return (tv_sec, tv_usec)\n\nclass SetTimevalBreakpoint(gdb.Breakpoint):\n    def __init__(self):\n        super(SetTimevalBreakpoint, self).__init__(\n            'gettimeofday',\n            gdb.BP_BREAKPOINT,\n            internal=False\n        )\n\n    def stop(self):\n        tv_sec, tv_usec = hacked_time()\n\n        # Replace the function body\n        gdb.execute(\n            'set *(struct timeval *)($rdi) = {{ {}, {} }}'\n                .format(tv_sec, tv_usec)\n        )\n        gdb.execute('set $rax = 0')\n        gdb.execute('return')\n\n        return False  # Continue execution\n\nSetTimevalBreakpoint()\ngdb.execute('run')\n</code></pre> </li> <li> <p>\u8f6f\u4ef6\u52a8\u6001\u66f4\u65b0\uff1a\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 patch \u51fd\u6570\u7684\u5934\u90e8\u4e3a\u4e00\u4e2a\u8df3\u8f6c\u5b9e\u73b0\u5bf9\u4e00\u4e2a\u51fd\u6570\u7684 \u201c\u8fd0\u884c\u65f6\u70ed\u66f4\u65b0\u201d\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;sys/mman.h&gt;\n#include &lt;stdint.h&gt;\n#include &lt;assert.h&gt;\n\n__attribute__((noinline)) void foo() {\n    printf(\"In old function %s\\n\", __func__);\n}\n\n__attribute__((noinline)) void foo_new() {\n    printf(\"In new function %s\\n\", __func__);\n}\n\n// 48 b8 (64-bit imm)   movabs $imm,%rax\n// ff e0                jmpq   *%rax\nconst char PATCH[] = \"\\x48\\xb8--------\\xff\\xe0\";\n\nvoid DSU(void *func, void *func_new) {\n    int flag = PROT_WRITE | PROT_READ | PROT_EXEC, rc, np;\n\n    // Grant write permission to the memory\n    // We must handle boundary cases\n    uintptr_t fn = (uintptr_t)func;\n    uintptr_t base = fn &amp; ~0xfff;\n    if (fn + sizeof(PATCH) &gt; base + 4096) {\n        np = 2;  // Cross page boundary\n    } else {\n        np = 1;\n    }\n    printf(\"np = %d\\n\", np);\n\n    rc = mprotect((void *)base, np * 4096, flag);\n    assert(rc == 0);  // Not expecting a failure\n\n    // Patch the first instruction (this is UB in C spec)\n    memcpy(func, PATCH, sizeof(PATCH));\n    memcpy((char *)func + 2, &amp;func_new, sizeof(func_new));\n\n    // Revoke the write permission\n    rc = mprotect((void *)base, np * 4096, PROT_READ | PROT_EXEC);\n    assert(rc == 0);  // Not expecting a failure\n}\n\nint main() {\n    setbuf(stdout, NULL);\n    foo();\n    DSU(foo, foo_new);  // Dynamic software update\n    foo();\n}\n</code></pre> </li> </ol>"},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/#lecture-16-unix-shell","title":"Lecture 16 \u7cfb\u7edf\u8c03\u7528\u548cUNIX Shell","text":"<p>Take-away Messages</p> <p>\u901a\u8fc7 freestanding \u7684 shell\uff0c\u6211\u4eec\u9610\u91ca\u4e86 \u201c\u53ef\u4ee5\u5728\u7cfb\u7edf\u8c03\u7528\u4e0a\u521b\u5efa\u6574\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u5e94\u7528\u4e16\u754c\u201d \u7684\u771f\u6b63\u542b\u4e49\uff1a\u64cd\u4f5c\u7cfb\u7edf\u7684 API \u548c\u5e94\u7528\u7a0b\u5e8f\u662f\u4e92\u76f8\u6210\u5c31\u3001\u87ba\u65cb\u751f\u957f\u7684\uff1a\u6709\u4e86\u65b0\u7684\u5e94\u7528\u9700\u6c42\uff0c\u5c31\u6709\u4e86\u65b0\u7684\u64cd\u4f5c\u7cfb\u7edf\u529f\u80fd\u3002\u800c UNIX \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u7cbe\u7b80\u3001\u7a33\u5b9a\u7684\u63a5\u53e3 (fork, execve, exit, pipe ,...)\uff0c\u7eb5\u7136\u6709\u6c89\u91cd\u7684\u5386\u53f2\u8d1f\u62c5\uff0c\u5b83\u5728\u4eca\u5929\u4f9d\u7136\u5de5\u4f5c\u5f97\u5f88\u597d\u3002</p> <ol> <li> <p>\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u8c61\uff1a</p> <ul> <li>\u8fdb\u7a0b\u548c\u5730\u5740\u7a7a\u95f4<ul> <li>\u8fdb\u7a0b\u7ba1\u7406\uff1afork, execve, exit</li> <li>\u5185\u5b58\u7ba1\u7406\uff1ammap, munmap, mprotect</li> </ul> </li> <li>\u6587\u4ef6\u548c\u8bbe\u5907<ul> <li>\u6587\u4ef6\uff1a\u6709 \u201c\u540d\u5b57\u201d \u7684\u5bf9\u8c61\uff0c\u4f8b\u5982\u5b57\u8282\u6d41 (\u7ec8\u7aef) \u6216\u5b57\u8282\u5e8f\u5217 (\u666e\u901a\u6587\u4ef6\uff1b\u5305\u62ec /proc/*)</li> <li>\u6587\u4ef6\u63cf\u8ff0\u7b26 (file descriptor\uff0cWindows\u4e2d\u53ebhandle\u53e5\u67c4)\uff1a\u6307\u5411\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u8c61\u7684 \u201c\u6307\u9488\u201d</li> <li>Everything is a file\uff0c\u901a\u8fc7\u6307\u9488\u53ef\u4ee5\u8bbf\u95ee \u201c\u4e00\u5207\u201d</li> <li>\u5bf9\u8c61\u7684\u8bbf\u95ee\u90fd\u9700\u8981\u6307\u9488\uff1aopen, close, read/write (\u89e3\u5f15\u7528), lseek (\u6307\u9488\u5185\u8d4b\u503c/\u8fd0\u7b97), dup (\u6307\u9488\u95f4\u8d4b\u503c)</li> </ul> </li> <li>IPC Endpoints (Inter-Process Communication\uff0c\u8fdb\u7a0b\u95f4\u901a\u4fe1)<ul> <li>\u7ba1\u9053\uff1a\u4e00\u4e2a\u7279\u6b8a\u7684 \u201c\u6587\u4ef6\u201d (\u6d41)<ul> <li>\u7531\u8bfb\u8005/\u5199\u8005\u5171\u4eab</li> <li>\u8bfb\u53e3\uff1a\u652f\u6301 read <code>fd[0]</code></li> <li>\u5199\u53e3\uff1a\u652f\u6301 write <code>fd[1]</code></li> </ul> </li> <li>\u533f\u540d\u7ba1\u9053<ul> <li>\u8fd4\u56de\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26</li> <li>\u8fdb\u7a0b\u540c\u65f6\u62e5\u6709\u8bfb\u53e3\u548c\u5199\u53e3 <pre><code>int pipe(int pipefd[2]);\n</code></pre></li> </ul> </li> </ul> </li> </ul> </li> <li> <p>\u6587\u4ef6\u63cf\u8ff0\u7b26\u662f\u4e00\u4e2a\u7528\u4e8e\u8bbf\u95ee\u6587\u4ef6\u6216\u5176\u4ed6\u8f93\u5165/\u8f93\u51fa\u8d44\u6e90\u7684 \u201c\u6307\u9488\u201d\u3002\u5728 Unix \u548c\u7c7b Unix \u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u7528\u4e8e\u8868\u793a\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u3001\u7ba1\u9053\u3001\u7f51\u7edc\u8fde\u63a5\u6216\u5176\u4ed6\u7c7b\u4f3c\u7684\u8d44\u6e90\u3002\u5f53\u4e00\u4e2a\u7a0b\u5e8f\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u6216\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u6d41\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u63cf\u8ff0\u7b26\u6765\u8bfb\u53d6\u3001\u5199\u5165\u6216\u64cd\u4f5c\u5bf9\u5e94\u7684\u6587\u4ef6\u6216\u8d44\u6e90\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n\nvoid try_open(const char *fname) {\n    int fd = open(fname, O_RDWR);\n    // fd is a \"pointer\" to a kernel object.\n\n    printf(\"open(\\\"%s\\\") = %d\\n\", fname, fd);\n\n    if (fd &lt; 0) {\n        perror(fname);\n        goto release;\n    } else {\n        // ...\n    }\n\nrelease:\n    if (fd &gt;= 0) {\n        close(fd);\n    }\n}\n\nint main() {\n    try_open(\"/something/not/exist\");\n    try_open(\"/dev/sda\"); // hard drive\n}\n</code></pre> </li> <li> <p>UNIX \u7ba1\u9053 (pipe) \u662f\u4e00\u79cd\u5178\u578b\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\uff0c\u5141\u8bb8\u6570\u636e\u5728\u4e0d\u540c\u7684\u8fdb\u7a0b\u4e4b\u95f4\u5355\u5411\u6d41\u52a8\u3002\u7ba1\u9053\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4e00\u79cd\u7279\u6b8a\u7684\u6587\u4ef6\uff0c\u5176\u4e2d\u4e00\u4e2a\u8fdb\u7a0b\u5c06\u6570\u636e\u5199\u5165\u7ba1\u9053\u7684\u4e00\u7aef\uff0c\u800c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u4ece\u53e6\u4e00\u7aef\u8bfb\u53d6\u6570\u636e\u3002</p> <ul> <li>pipe read \u5728\u6ca1\u6709\u6570\u636e\u65f6\u4f1a\u7b49\u5f85</li> <li>pipe write \u5728\u6709\u8bfb\u8005\u6253\u5f00\u65f6\uff0c\u4f1a\u5199\u5165\u64cd\u4f5c\u7cfb\u7edf\u7684\u7f13\u51b2\u533a\u5e76\u8fd4\u56de</li> <li>write \u5982\u679c \u201c\u4e0d\u592a\u591a\u201d\uff0c\u4e00\u5bf9 write-read \u662f\u539f\u5b50\u7684</li> <li>write \u5982\u679c\u8d85\u8fc7 PIPE_BUF\uff0c\u53ef\u80fd\u4f1a\u88ab\u62c6\u6210\u591a\u4efd</li> <li>\u5982\u679c\u8bfb\u8005\u5173\u95ed\uff0c\u4f1a\u6536\u5230 SIGPIPE \u4fe1\u53f7<ul> <li>\u7ecf\u5e38\u770b\u5230\u7684 \u201cBroken Pipe\u201d</li> </ul> </li> <li>\u201c\u770b\u4e0d\u5230\u201d \u7684 SIGPIPE<ul> <li><code>yes | head -n 1</code></li> <li><code>(yes; echo $? &gt; /dev/stderr) | head -n 1</code> (\u8fd4\u56de141\u800c\u975e0\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u8fd8\u662f\u6709SIGPIPE\u53d1\u751f)</li> </ul> </li> <li>\u201c\u770b\u5f97\u5230\u201d \u7684 SIGPIPE<ul> <li><code>python3 -c 'while True: print(1)' | head -n 1</code></li> </ul> </li> </ul> <p></p> <p>named_pipe.c: <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;errno.h&gt;\n\n// We also have UNIX domain sockets for local inter-process\n// communication--they also have a name in the file system\n// like \"/var/run/docker.sock\". This is similar to a named\n// pipe.\n#define PIPE_NAME \"/tmp/my_pipe\"\n\nvoid pipe_read() {\n    int fd = open(PIPE_NAME, O_RDONLY);\n    char buffer[1024];\n\n    if (fd == -1) {\n        perror(\"open\");\n        exit(1);\n    }\n\n    // Read from the pipe\n    int num_read = read(fd, buffer, sizeof(buffer));\n    if (num_read &gt; 0) {\n        printf(\"Received: %s\\n\", buffer);\n    } else {\n        printf(\"No data received.\\n\");\n    }\n    close(fd);\n}\n\nvoid pipe_write(const char *content) {\n    // Open the pipe for writing\n    int fd = open(PIPE_NAME, O_WRONLY);\n\n    if (fd == -1) {\n        perror(\"open\");\n        exit(1);\n    }\n\n    // Write the message to the pipe\n    write(fd, content, strlen(content) + 1);\n    close(fd);\n}\n\nint main(int argc, char *argv[]) {\n    if (argc &lt; 2) {\n        fprintf(stderr, \"Usage: %s read|write [message]\\n\", argv[0]);\n        return 1;\n    }\n\n    // Create the named pipe if it does not exist\n    if (mkfifo(PIPE_NAME, 0666) == -1) {\n        if (errno != EEXIST) {\n            perror(\"mkfifo\");\n            return 1;\n        }\n    } else {\n        printf(\"Created \" PIPE_NAME \"\\n\");\n    }\n\n    if (strcmp(argv[1], \"read\") == 0) {\n        pipe_read();\n    } else if (strcmp(argv[1], \"write\") == 0) {\n        pipe_write(argv[2]);\n    } else {\n        fprintf(stderr, \"Invalid command. Use 'read' or 'write'.\\n\");\n        return 1;\n    }\n\n    return 0;\n}\n</code></pre></p> <p>anonymous-pipe.c\uff1a\u7236\u8fdb\u7a0b\u6301\u6709\u5199\u53e3\uff0c\u5b50\u8fdb\u7a0b\u6301\u6709\u8bfb\u53e3\u3002 <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;string.h&gt;\n#include &lt;sys/wait.h&gt;\n\nvoid do_parent(int fd) {\n    const char *msg = \"Hello, world!\";\n\n    printf(\"[%d] Write: '%s'\\n\", getpid(), msg);\n    write(fd, msg, strlen(msg) + 1);\n\n    close(fd);\n\n    // Wait for the child to finish\n    wait(NULL);\n\n    printf(\"[%d] Done.\\n\", getpid());\n}\n\nvoid do_child(int fd) {\n    static char buf[1024];\n\n    ssize_t num_read = read(fd, buf, sizeof(buf));\n    if (num_read == -1) {\n        perror(\"read\");\n        exit(EXIT_FAILURE);\n    }\n\n    printf(\"[%d] Got: '%s'\\n\", getpid(), buf);\n\n    // Close the read end of the pipe\n    close(fd);\n}\n\nint main() {\n    int pipefd[2];\n\n    // Create a pipe\n    if (pipe(pipefd) == -1) {\n        perror(\"pipe\");\n        exit(EXIT_FAILURE);\n    }\n\n    // Fork the current process\n    pid_t pid = fork();\n    if (pid == -1) {\n        perror(\"fork\");\n        exit(EXIT_FAILURE);\n    }\n\n    if (pid == 0) {\n        // Child\n        close(pipefd[1]); // Close unused write end\n        do_child(pipefd[0]);\n    } else {\n        // Parent\n        close(pipefd[0]); // Close unused read end\n        do_parent(pipefd[1]);\n    }\n\n    return 0;\n}\n</code></pre></p> </li> <li> <p>sh.c debug\uff1a\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\uff0c\u8fdb\u7a0b3\u7684\u6807\u51c6\u8f93\u51fa<code>1</code>\u5411\u7ba1\u9053\u91cc\u5199\u6570\u636e\uff0c\u7136\u540e\u6267\u884c<code>runcmd(pcmd-&gt;left);</code>\u8fdb\u7a0b4\u7684\u6807\u51c6\u8f93\u5165<code>0</code>\u4ece\u7ba1\u9053\u91cc\u8bfb\u6570\u636e\uff0c\u7136\u540e\u6267\u884c<code>runcmd(pcmd-&gt;right);</code></p> <pre><code>Process 3 (11026)\n0 &lt;-&gt; /dev/pts/7\n1 --&gt; [=== 2123156 ===]\n2 &lt;-&gt; /dev/pts/7\n\nProcess 4 (11699)*\n    0 &lt;-- [=== 2123156 ===]\n    1 &lt;-&gt; /dev/pts/7\n    2 &lt;-&gt; /dev/pts/7\n\n112                 runcmd(pcmd-&gt;right);\n</code></pre> </li> <li> <p>\u4ee5\u4e0b\u62a5\u9519\u7684\u539f\u56e0\uff1a<code>&gt;</code>\u548c<code>|</code>\u4e00\u6837\uff0c\u90fd\u662f\u5148\u628a\u4e24\u8fb9\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u51c6\u5907\u597d\uff0c\u4e5f\u5c31\u662f\u8bf4<code>sudo echo hello</code>\u548c\u6253\u5f00<code>/etc/a.txt</code>\u662f\u5206\u5f00\u6267\u884c\u7684\uff0c\u56e0\u6b64\u65e0\u6743\u9650\u6253\u5f00<code>/etc/a.txt</code></p> <pre><code>$ echo hello &gt; /etc/a.txt\nbash: /etc/a.txt: Permission denied\n\n$ sudo echo hello &gt; /etc/a.txt\nbash: /etc/a.txt: Permission denied\n</code></pre> </li> </ol>"},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/#lecture-17-c","title":"Lecture 17 C \u6807\u51c6\u5e93\u548c\u5b9e\u73b0","text":"<p>Take-away Messages</p> <p>\u5728\u7cfb\u7edf\u8c03\u7528\u548c\u8bed\u8a00\u673a\u5236\u7684\u57fa\u7840\u4e0a\uff0clibc \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u5f00\u53d1\u8de8\u5e73\u53f0\u5e94\u7528\u7a0b\u5e8f\u7684 \u201c\u7b2c\u4e00\u7ea7\u62bd\u8c61\u201d\u3002\u5728\u6b64\u57fa\u7840\u4e0a\u6784\u5efa\u8d77\u4e86\u4e07\u5343\u4e16\u754c\uff1aC++ (\u6269\u5145\u4e86 C \u6807\u51c6\u5e93)\u3001Java\u3001\u6d4f\u89c8\u5668\u4e16\u754c\u2026\u2026\u4eca\u5929\uff0cC \u8bed\u8a00\u5728\u5e94\u7528\u5f00\u53d1\u65b9\u9762\u6709\u5f88\u591a\u7f3a\u9677\uff0c\u4f46\u4ecd\u7136\u4e3a \u201c\u7b2c\u4e00\u7ea7\u62bd\u8c61\u201d \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6709\u8da3\u7684\u8303\u672c\u3002</p> <ol> <li> <p>C\u91cc\u7684 <code>_start</code> \u51fd\u6570\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u8d77\u70b9\u3002\u5f53\u4e00\u4e2aC\u7a0b\u5e8f\u88ab\u7f16\u8bd1\u548c\u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u7a0b\u5e8f\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5e76\u8df3\u8f6c\u5230 <code>_start</code> \u51fd\u6570\u5f00\u59cb\u6267\u884c\u3002<code>_start</code> \u51fd\u6570\u901a\u5e38\u662f\u7531\u7f16\u8bd1\u5668\u548c\u94fe\u63a5\u5668\u81ea\u52a8\u751f\u6210\u7684\uff0c\u5b83\u8d1f\u8d23\u521d\u59cb\u5316\u7a0b\u5e8f\u8fd0\u884c\u6240\u9700\u7684\u73af\u5883\uff0c\u7136\u540e\u8c03\u7528 <code>main</code> \u51fd\u6570\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c<code>_start</code>\u51fd\u6570\u662f\u64cd\u4f5c\u7cfb\u7edf\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e4b\u95f4\u7684\u7ea6\u5b9a\uff08\u5728libc\u91cc\u7684Scrt1.o\u4f1a\u5e2e\u5fd9\u5b9a\u4e49\u597d\uff09\u3002\u4ee5\u4e0b\u53ef\u4ee5\u770b\u5230Entry point address\u662f0x4019f5\uff0c\u6b63\u662f<code>_start</code>\u7684\u5730\u5740\u3002</p> <pre><code>linux$ readelf -h sh\nELF Header:\nMagic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 \nClass:                             ELF64\nData:                              2's complement, little endian\nVersion:                           1 (current)\nOS/ABI:                            UNIX - System V\nABI Version:                       0\nType:                              EXEC (Executable file)\nMachine:                           Advanced Micro Devices X86-64\nVersion:                           0x1\nEntry point address:               0x4019f5\nStart of program headers:          64 (bytes into file)\nStart of section headers:          23696 (bytes into file)\nFlags:                             0x0\nSize of this header:               64 (bytes)\nSize of program headers:           56 (bytes)\nNumber of program headers:         8\nSize of section headers:           64 (bytes)\nNumber of section headers:         19\nSection header string table index: 18\n\nlinux$ objdump -d sh | less\n00000000004019f5 &lt;_start&gt;:\n4019f5:       f3 0f 1e fa             endbr64 \n4019f9:       55                      push   %rbp\n4019fa:       48 89 e5                mov    %rsp,%rbp\n4019fd:       b8 00 00 00 00          mov    $0x0,%eax\n401a02:       e8 e9 fe ff ff          call   4018f0 &lt;main&gt;\n401a07:       be 00 00 00 00          mov    $0x0,%esi\n401a0c:       bf 3c 00 00 00          mov    $0x3c,%edi\n401a11:       b8 00 00 00 00          mov    $0x0,%eax\n401a16:       e8 e5 f5 ff ff          call   401000 &lt;syscall&gt;\n401a1b:       90                      nop\n401a1c:       5d                      pop    %rbp\n401a1d:       c3                      ret\n</code></pre> </li> <li> <p>\u7cfb\u7edf\u8c03\u7528\u662f\u5730\u57fa\uff0cC \u8bed\u8a00\u662f\u6846\u67b6\u3002glibc \u7684\u4ee3\u7801\u6709\u975e\u5e38\u6c89\u91cd\u7684\u5386\u53f2\u5305\u88b1\uff0c\u66f4\u9002\u5408\u5b66\u4e60\u7684 libc \u5b9e\u73b0\uff1amusl libc</p> <p>\u4f7f\u7528musl-gcc\u6765\u7f16\u8bd1\uff0c\u800c\u4e0d\u662fgcc\uff0c\u770b\u4e0bmusl-gcc\u7684\u771f\u9762\u76ee\uff1amusl-gcc\u901a\u8fc7.specs\u811a\u672c\u6765\u63a7\u5236\u7f16\u8bd1\u5668\u4e0d\u8981\u94fe\u63a5glibc\u800c\u662f\u94fe\u63a5\u81ea\u5df1\u7684libc\u3002</p> <pre><code>linux$ cat (which musl-gcc)\n#!/bin/sh\nexec \"${REALGCC:-x86_64-linux-gnu-gcc}\" \"$@\" -specs \"/usr/lib/x86_64-linux-musl/musl-gcc.specs\"\n</code></pre> </li> <li> <p>debug dummy.c</p> <pre><code>int main() {\n    return 1;\n}\n</code></pre> <p> \u64cd\u4f5c\u7cfb\u7edf\u5c06\u8fd9\u4e9b\u5185\u5bb9\u653e\u5165\u6808\u4e2d </p> <p>env.c\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\n// A mysteriously defined symbol.\n// Someone must defined it elsewhere.\nextern char **environ;\n\n// Like this even more mysterious one.\n// \"end\" can be of any type.\nextern void ******************************end;\n\nint main(int argc, char *argv[], char *envp[]) {\n    printf(\"environ: %p\\n\", environ);\n    printf(\"envp:    %p\\n\", envp);\n\n    for (char **env = environ; *env; env++) {\n        // key=value\n        printf(\"%s\\n\", *env);\n    }\n\n    end = NULL; // ???\n}\n</code></pre> <p>\u8f93\u51fa:</p> <pre><code>environ: 0x7ffdb556d2d8\nenvp:    0x7ffdb556d2d8\nSHELL=/bin/bash\nCOLORTERM=truecolor\n...\n</code></pre> <p> System V ABI\u91cc\u5b9a\u4e49\u4e86\u89c4\u8303\uff1a</p> <p></p> <p>\u5176\u4ed6\u72b6\u6001 (\u4e3b\u8981\u662f\u5185\u5b58) \u5219\u662f\u7531\u53ef\u6267\u884c\u6587\u4ef6\u6307\u5b9a\uff0c\u8be6\u60c5\u770bLecture 19\u3002</p> </li> <li> <p>libc\u5bf9\u7cfb\u7edf\u8c03\u7528\u4e0e\u73af\u5883\u7684\u62bd\u8c61</p> <p>\u4ec0\u4e48\u662fstdout\uff1f</p> <pre><code>static unsigned char buf[BUFSIZ+UNGET];\nhidden FILE __stdout_FILE = {\n    .buf = buf+UNGET,\n    .buf_size = sizeof buf-UNGET,\n    .fd = 1,\n    .flags = F_PERM | F_NORD,\n    .lbf = '\\n',\n    .write = __stdout_write,\n    .seek = __stdio_seek,\n    .close = __stdio_close,\n    .lock = -1,\n};\nFILE *const stdout = &amp;__stdout_FILE;\n</code></pre> </li> <li> <p>\u6240\u6709 API \u90fd\u53ef\u80fd\u5931\u8d25\uff0cerrno \u662f\u8fdb\u7a0b\u5171\u4eab\u8fd8\u662f\u7ebf\u7a0b\u72ec\u4eab\uff1f\u27a1\ufe0f \u7ebf\u7a0b\u72ec\u4eab\uff0cgdb\u8c03\u8bd5\u53ef\u4ee5\u770b\u5230errno\u662ftls (Thread Local Storage)\u7684\u3002</p> </li> <li> <p>malloc() \u7684\u89c2\u5bdf\uff1a\u6211\u4eec\u9700\u8981\u7ba1\u7406\u7684\u5bf9\u8c61</p> <ul> <li>\u5c0f\u5bf9\u8c61\uff1a\u5b57\u7b26\u4e32\u3001\u4e34\u65f6\u5bf9\u8c61\u7b49\uff1b\u751f\u5b58\u5468\u671f\u53ef\u957f\u53ef\u77ed</li> <li>\u4e2d\u5bf9\u8c61\uff1a\u5bb9\u5668\u3001\u590d\u6742\u7684\u5bf9\u8c61\uff1b\u66f4\u957f\u7684\u751f\u5b58\u5468\u671f</li> <li>\u5927\u5bf9\u8c61\uff1a\u5de8\u5927\u7684\u5bb9\u5668\u3001\u5206\u914d\u5668\uff1b\u5f88\u957f\u7684\u751f\u5b58\u5468\u671f</li> </ul> <p>\u8bbe\u7f6e\u4e24\u5957\u7cfb\u7edf\uff1a</p> <ul> <li>Fast path (System I)<ul> <li>\u6027\u80fd\u6781\u597d\u3001\u5e76\u884c\u5ea6\u6781\u9ad8\u3001\u8986\u76d6\u5927\u90e8\u5206\u60c5\u51b5</li> <li>\u4f46\u6709\u5c0f\u6982\u7387\u4f1a\u5931\u8d25 (fall back to slow path)</li> </ul> </li> <li>Slow path (System II)<ul> <li>\u4e0d\u5728\u4e4e\u90a3\u4e48\u5feb</li> <li>\u4f46\u628a\u56f0\u96be\u7684\u4e8b\u60c5\u505a\u597d</li> </ul> </li> <li>\u8ba1\u7b97\u673a\u7cfb\u7edf\u91cc\u6709\u5f88\u591a\u8fd9\u6837\u7684\u4f8b\u5b50 (\u6bd4\u5982 cache)</li> </ul> <p>malloc: Fast Path \u8bbe\u8ba1 \u27a1\ufe0f \u7acb\u5373\u5728\u7ebf\u7a0b\u672c\u5730\u5206\u914d\u5b8c\u6210\u3002\u6d6a\u8d39\u4e00\u70b9\u7a7a\u95f4\uff0c\u4f46\u4f7f\u6240\u6709 CPU \u90fd\u80fd\u5e76\u884c\u5730\u7533\u8bf7\u5185\u5b58</p> <ul> <li>\u7ebf\u7a0b\u90fd\u4e8b\u5148\u74dc\u5206\u4e00\u4e9b \u201c\u9886\u5730\u201d (thread-local allocation buffer)</li> <li>\u9ed8\u8ba4\u4ece\u81ea\u5df1\u7684\u9886\u5730\u91cc\u5206\u914d<ul> <li>\u9664\u4e86\u5728\u53e6\u4e00\u4e2a CPU \u91ca\u653e\uff0cacquire lock \u51e0\u4e4e\u603b\u662f\u6210\u529f</li> </ul> </li> <li>\u5982\u679c\u81ea\u5df1\u7684\u9886\u5730\u4e0d\u8db3\uff0c\u5c31\u4ece\u5168\u5c40\u7684\u6c60\u5b50\u91cc\u501f\u4e00\u70b9</li> </ul> <p>malloc: Slow Path \u8bbe\u8ba1 \u27a1\ufe0f pgalloc()</p> </li> <li> <p>\u5982\u4f55\u8c03\u8bd5\u8fdb\u5165 musl libc</p> <pre><code>tar -xzf musl-1.2.5.tar.gz  # \u89e3\u538b\u540e\u8fdb\u5165\ncd musl-1.2.5\n./configure --enable-debug  # \u8fd9\u6b65\u662f\u5173\u952e!\nmake &amp;&amp; make install        # \u7f16\u8bd1\u5e76\u5b89\u88c5\u5230 /usr/local/musl\necho 'export PATH=\"/usr/local/musl/bin:$PATH\"' &gt;&gt;  ~/.bashrc\nsource ~/.bashrc            # \u4fee\u6539\u73af\u5883\u53d8\u91cf path \u5e76\u751f\u6548\n</code></pre> </li> </ol>"},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/#lecture-18-linux","title":"Lecture 18 Linux \u64cd\u4f5c\u7cfb\u7edf","text":"<p>Take-away Messages</p> <p>\u6211\u4eec\u4ece CPU Reset \u540e\u7684 \u201c\u786c\u4ef6\u521d\u59cb\u72b6\u6001\u201d \u5230\u64cd\u4f5c\u7cfb\u7edf\u52a0\u8f7d\u5b8c init \u8fdb\u7a0b\u540e\u7684 \u201c\u8f6f\u4ef6\u521d\u59cb\u72b6\u6001\u201d\uff0c\u4ece\u6b64\u4ee5\u540e\uff0c\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u7684\u4e00\u5207\u90fd\u662f\u7531\u5e94\u7528\u7a0b\u5e8f\u4e3b\u5bfc\u7684\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53ea\u662f\u63d0\u4f9b\u7cfb\u7edf\u8c03\u7528\u8fd9\u4e00\u670d\u52a1\u63a5\u53e3\u3002\u6b63\u662f\u7cfb\u7edf\u8c03\u7528 (\u5305\u62ec\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u5bf9\u8c61) \u8fd9\u4e2a\u7a33\u5b9a\u7684\u3001\u5411\u540e\u517c\u5bb9\u7684\u63a5\u53e3\u968f\u7740\u5386\u53f2\u6f14\u5316\u548c\u79ef\u7d2f\uff0c\u5f62\u6210\u4e86\u96be\u4ee5\u903e\u8d8a\u7684\u6280\u672f\u5c4f\u969c\uff0c\u5728\u98a0\u8986\u6027\u7684\u6280\u672f\u9769\u65b0\u5230\u6765\u4e4b\u524d\uff0c\u53e6\u8d77\u7089\u7076\u90fd\u662f\u975e\u5e38\u56f0\u96be\u7684\u3002</p> <ol> <li> <p>\u542f\u52a8 Linux - Initial RAM FS</p> <p>\u786c\u4ef6 (ISA) \u2192 \u64cd\u4f5c\u7cfb\u7edf\u5bf9\u8c61/\u7cfb\u7edf\u8c03\u7528 \u2192 libc \u2192 \u7cfb\u7edf\u5de5\u5177 (coretuils, busybox, ...) \u2192 \u5e94\u7528\u7a0b\u5e8f (xfce, vscode)</p> <pre><code>make initramfs # \u9700\u8981/boot/vmlinuz\uff0cwsl\u91cc\u6ca1\u6709\uff0c\u5c31\u6ca1\u6709\u505a\u4e0b\u53bb\u4e86\nmake\nmake run\n/bin/busybox ls\n</code></pre> <pre><code>exec switch_root /newroot/ /init\n# switch_root \u7a0b\u5e8f\u9996\u5148\u5c06\u5f53\u524d\u7684\u6839\u6587\u4ef6\u7cfb\u7edf\uff08initramfs\uff09\u5378\u8f7d\u3002\n# \u7136\u540e\uff0c\u5b83\u5c06\u65b0\u6839\u6587\u4ef6\u7cfb\u7edf\uff08/newroot/\uff09\u6302\u8f7d\u5230 / \u76ee\u5f55\u3002\n# \u63a5\u4e0b\u6765\uff0c\u5b83\u6267\u884c\u65b0\u6839\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u521d\u59cb\u5316\u7a0b\u5e8f /init\uff0c\u4ee5\u542f\u52a8\u7cfb\u7edf\u7684\u521d\u59cb\u5316\u8fdb\u7a0b\u3002\n# \u6700\u540e\uff0c\u5f53\u524d\u7684 shell \u8fdb\u7a0b\u88ab\u66ff\u6362\u4e3a\u65b0\u7684\u521d\u59cb\u5316\u8fdb\u7a0b\uff0c\u7cfb\u7edf\u7ee7\u7eed\u542f\u52a8\u3002\n# (exec\uff1a\u8fd9\u662f\u4e00\u4e2a shell \u5185\u7f6e\u547d\u4ee4\uff0c\u7528\u4e8e\u6267\u884c\u6307\u5b9a\u7684\u547d\u4ee4\u5e76\u66ff\u6362\u5f53\u524d\u7684 shell \u8fdb\u7a0b\u3002)\n</code></pre> <p>\u6700\u5c0f Linux: \u6211\u4eec\u53ef\u4ee5\u5728 initramfs \u4e2d\u653e\u7f6e\u4efb\u610f\u7684\u6570\u636e\u2014\u2014\u5305\u62ec\u5e94\u7528\u7a0b\u5e8f\u3001\u5185\u6838\u6a21\u5757 (\u9a71\u52a8)\u3001\u6570\u636e\u3001\u811a\u672c\u2026\u2026\u64cd\u4f5c\u7cfb\u7edf\u4e16\u754c\u5df2\u7ecf\u5f00\u59cb\u8fd0\u8f6c\uff1b\u4f46\u76f4\u5230\u6267\u884c switch_root (pivot_root) (\u6ce8\u610f\u8c03\u7528switch_root\u7684pid\u5fc5\u987b\u662f1)\uff0c\u624d\u771f\u6b63\u5f00\u59cb \u4eca\u5929 Linux \u5e94\u7528\u4e16\u754c (systemd) \u7684\u542f\u52a8\u3002</p> <pre><code>linux$ ls /sbin/init # \u73b0\u4ee3\u7684Linux\u542f\u52a8\u7528\u7684\u662f/sbin/init\nlrwxrwxrwx /sbin/init -&gt; /lib/systemd/systemd\n</code></pre> </li> <li> <p>Initramfs: \u5e76\u4e0d\u662f\u6211\u4eec\u5b9e\u9645\u770b\u5230\u7684 Linux</p> <p>\u542f\u52a8\u7684\u521d\u7ea7\u9636\u6bb5</p> <ul> <li>\u52a0\u8f7d\u5269\u4f59\u5fc5\u8981\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4f8b\u5982\u78c1\u76d8/\u7f51\u5361</li> <li>\u6302\u8f7d\u5fc5\u8981\u7684\u6587\u4ef6\u7cfb\u7edf</li> <li>\u5c06\u6839\u6587\u4ef6\u7cfb\u7edf\u548c\u63a7\u5236\u6743\u79fb\u4ea4\u7ed9\u53e6\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u4f8b\u5982 systemd (system and service manager)</li> </ul> <p>\u542f\u52a8\u7684\u7b2c\u4e8c\u7ea7\u9636\u6bb5</p> <ul> <li>\u770b\u4e00\u770b\u7cfb\u7edf\u91cc\u7684 /sbin/init \u662f\u4ec0\u4e48\uff1f</li> <li>\u8ba1\u7b97\u673a\u7cfb\u7edf\u6ca1\u6709\u9b54\u6cd5 (\u4e00\u5207\u90fd\u6709\u5408\u9002\u7684\u89e3\u91ca)<ul> <li>pstree \u57cb\u4e0b\u7684\u4f0f\u7b14\u5f97\u5230\u89e3\u7b54\uff1apstree\u8f93\u51fa\u7684\u6839\u662fsystemd</li> </ul> </li> </ul> <pre><code>linux$ pstree\nsystemd\u2500\u252c\u2500.vasd\u2500\u2500\u2500.vasd\u2500\u2500\u25004*[.vasd]\n        \u251c\u2500ModemManager\u2500\u2500\u25002*[{ModemManager}]\n        \u251c\u2500NetworkManager\u2500\u2500\u25002*[{NetworkManager}]\n        \u251c\u2500accounts-daemon\u2500\u2500\u25002*[{accounts-daemon}]\n        \u251c\u2500acpid\n        \u251c\u2500at-spi-bus-laun\u2500\u252c\u2500dbus-daemon\n        \u2502                 \u2514\u25003*[{at-spi-bus-laun}]\n        \u251c\u2500at-spi2-registr\u2500\u2500\u25002*[{at-spi2-registr}]\n        \u251c\u2500avahi-daemon\u2500\u2500\u2500avahi-daemon\n        \u251c\u2500colord\u2500\u2500\u25002*[{colord}]\n        \u251c\u2500containerd\u2500\u2500\u250011*[{containerd}]\n        \u251c\u2500containerd-shim\u2500\u252c\u2500dumb-init\u2500\u252c\u2500bash\u2500\u2500\u2500Xvfb\n        \u2502                 \u2502           \u251c\u25002*[conhost.exe]\n        \u2502                 \u2502           \u251c\u2500...\n        \u2502                 \u2502           \u2514\u2500wineserver\n        \u2502                 \u2514\u250012*[{containerd-shim}]\n        \u251c\u2500containerd-shim\u2500\u252c\u2500dumb-init\u2500\u252c\u2500bash\u2500\u2500\u2500Xvfb\n        \u2502                 \u2502           \u2514\u2500mount.ntfs\n        \u2502                 \u2514\u250012*[{containerd-shim}]\n        \u251c\u25003*[containerd-shim\u2500\u252c\u2500dumb-init\u2500\u252c\u2500bash\u2500\u2500\u2500Xvfb]\n        \u2502                    \u2502           \u2514\u2500mount.ntfs]\n        \u2502                    \u2514\u250011*[{containerd-shim}]]\n        \u251c\u2500cron\n        \u251c...\n        \u2514\u2500xrdp-sesman\n</code></pre> </li> </ol>"},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/#lecture-19","title":"Lecture 19 \u53ef\u6267\u884c\u6587\u4ef6\u548c\u52a0\u8f7d","text":"<p>Take-away Messages</p> <p>\u53ef\u6267\u884c\u6587\u4ef6\u662f\u4e00\u4e2a\u63cf\u8ff0\u72b6\u6001\u673a\u521d\u59cb\u72b6\u6001\u7684\u6570\u636e\u7ed3\u6784 (\u5b57\u8282\u5e8f\u5217)\uff1b\u52a0\u8f7d\u5668\u5c31\u662f\u628a\u8fd9\u4e2a \u201c\u521d\u59cb\u72b6\u6001\u201d \u642c\u8fd0\u5230\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u7a0b\u5e8f\u3002\u7528\u6570\u636e\u7ed3\u6784\u7684\u773c\u5149\u770b\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5c31\u4e0d\u96be\u53d1\u73b0\u5b83\u4e0d\u597d\u9605\u8bfb\u7684\u539f\u56e0\uff1a\u5b83\u7684\u8bbe\u8ba1\u8005\u5e76\u6ca1\u6709\u6253\u7b97\u8ba9\u4f60\u9605\u8bfb\u5b83\u3002\u8fd9\u6837\u7684\u96be\u9898\u5728\u300a\u64cd\u4f5c\u7cfb\u7edf\u300b\u8bfe\u7a0b\u4e2d\u7ecf\u5e38\u51fa\u73b0\uff1b\u800c\u6211\u4eec\u7684\u5e94\u5bf9\u65b9\u6cd5\u662f\u5148\u7406\u89e3\u4e00\u4e2a\u7c97\u7cd9\u4f46\u91cd\u8981\u7684\u6a21\u578b\uff0c\u7136\u540e\u5728\u6b64\u57fa\u7840\u4e0a\u7406\u89e3\u5de5\u4e1a\u7ea7\u5b9e\u73b0\u9762\u4e34\u7684\u6311\u6218\u548c\u95ee\u9898\u3002</p> <ol> <li> <p>\u4ec0\u4e48\u662f\u53ef\u6267\u884c\u6587\u4ef6\uff1f\u27a1\ufe0f \u8fdb\u7a0b\u521d\u59cb\u72b6\u6001\u7684\u63cf\u8ff0</p> <ul> <li>\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u5bf9\u8c61 (\u6587\u4ef6)</li> <li>\u4e00\u4e2a\u5b57\u8282\u5e8f\u5217 (\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u5f53\u5b57\u7b26\u4e32\u7f16\u8f91)</li> <li>\u4e00\u4e2a\u63cf\u8ff0\u4e86\u72b6\u6001\u673a\u521d\u59cb\u72b6\u6001\u7684\u6570\u636e\u7ed3\u6784</li> </ul> <p>ELF: Executable and Linkable Format\uff0cbinutils \u4e2d\u7684\u5de5\u5177\u53ef\u4ee5\u8ba9\u6211\u4eec\u67e5\u770b\u5176\u4e2d\u7684\u91cd\u8981\u4fe1\u606f</p> </li> <li> <p>UNIX a.out \u27a1\ufe0f \u201cassembler output\u201d</p> <p>\u4ee5\u524d\u7684\u7248\u672c\uff1a\u4e00\u4e2a\u76f8\u5bf9\u5e73\u5766\u7684\u6570\u636e\u7ed3\u6784</p> <pre><code>struct exec {\n    uint32_t  a_midmag;  // Machine ID &amp; Magic\n    uint32_t  a_text;    // Text segment size\n    uint32_t  a_data;    // Data segment size\n    uint32_t  a_bss;     // BSS segment size (\u5b58\u50a8\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf)\n    uint32_t  a_syms;    // Symbol table size\n    uint32_t  a_entry;   // Entry point\n    uint32_t  a_trsize;  // Text reloc table size\n    uint32_t  a_drsize;  // Data reloc table size\n};\n</code></pre> </li> <li> <p>Funny Linkable Executable</p> <p>\u6838\u5fc3\u8bbe\u8ba1\u601d\u8def</p> <ul> <li>\u4e00\u5207\u90fd\u5bf9\u4eba\u7c7b\u76f4\u63a5\u53ef\u8bfb (\u6240\u6709\u4fe1\u606f\u90fd\u5728\u5c40\u90e8)</li> <li>\u56de\u5f52\u94fe\u63a5\u548c\u52a0\u8f7d\u4e2d\u7684\u6838\u5fc3\u6982\u5ff5\uff1a\u4ee3\u7801\u3001\u7b26\u53f7\u3001\u91cd\u5b9a\u4f4d (\u591a\u4e2a\u6587\u4ef6\u94fe\u63a5\u8d77\u6765\u5fc5\u9700\u7b26\u53f7\u3001\u91cd\u5b9a\u4f4d\u3002\u7b26\u53f7\uff1amain\u51fd\u6570\u91cc\u4e00\u4e2aglobal\u7684\u53d8\u91cfx\uff0c\u522b\u4eba\u53ef\u4ee5\u7528\u5b83\uff1b\u91cd\u5b9a\u4f4d\uff1a\u6211\u7528\u4e86\u4e00\u4e2a\u53d8\u91cfx\uff0c\u662f\u522b\u4eba\u5b9a\u4e49\u7684)</li> </ul> <p>\u4ee3\u7801 (\ud83d\udd22)\u3001\u7b26\u53f7 (\ud83d\udce4)\u3001\u91cd\u5b9a\u4f4d (\u2753)\uff1a\u51d1\u9f50\u8fd9\u4e09\u8981\u7d20\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u505a\u53ef\u6267\u884c\u6587\u4ef6\u4e86\uff01</p> <pre><code>\ud83d\udd22: ff ff ff ff ff ff ff\n\ud83d\udd22: ff ff ff ff ff ff ff\n\ud83d\udce4: _start\n\ud83d\udd22: 48 c7 c0 3c 00 00 00\n\ud83d\udd22: 48 c7 c7 2a 00 00 00\n              ^\n              |\n        This byte is return code (42).\n\ud83d\udd22: 0f 05 ff ff ff ff ff\n\ud83d\udd22: ff ff ff ff ff ff ff\n\u2753: i32(unresolved_symbol - 0x4 - \ud83d\udccd)\n</code></pre> <pre><code>linux$ ./minimal.fle ; echo $?\n42    # \u5bf9\u5e94\u4e8eminimal.fle\u91cc\u7684 2a (return code)\n</code></pre> <p>\u5f00\u5934\u7684<code>48 c7</code>\u662fmove\u6307\u4ee4\uff0c\u7ed3\u5c3e\u7684<code>0f 05</code>\u662fsyscall\u6307\u4ee4\u3002</p> </li> <li> <p>foo.c</p> <pre><code>#include \"minilib.h\"\n\n// Global data\nextern int n;\nchar msg[] = \"Hello World!\\n\";\n\nint foo() {\n    return n;\n}\n</code></pre> <pre><code>linux$ make\n./cc -Wall -g -Os foo.c -o foo.o\n./cc -Wall -g -Os libc.c -o libc.o\n./cc -Wall -g -Os main.c -o main.o\n./ld foo.fle libc.fle main.fle -o hello\n</code></pre> <p>foo.fle</p> <p><pre><code>{\n    \"type\": \".obj\",\n    \".text\": [\n        \"\ud83c\udff7\ufe0f: _text\",\n        \"\ud83d\udce4: foo\",\n        \"\ud83d\udd22: f3 0f 1e fa 8b 05\",\n        \"\u2753: i32(n - 0x4 - \ud83d\udccd)\",\n        \"\ud83d\udd22: c3\"\n    ],\n    \".data\": [\n        \"\ud83d\udce4: msg\",\n        \"\ud83d\udd22: 48 65 6c 6c 6f 20 57 6f 72 6c 64 21 0a 00\"\n    ],\n    \".bss\": []\n}\n</code></pre> 5. \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6: .c \u2192 \u9884\u5904\u7406(-E) \u2192 .i \u2192 \u7f16\u8bd1(-S) \u2192 .s \u2192 \u6c47\u7f16(-c) \u2192 .o \u2192 \u94fe\u63a5 \u2192 .out</p> <p>(1) \u9884\u5904\u7406</p> <ul> <li>\u6e90\u4ee3\u7801 (.c) \u2192 \u6e90\u4ee3\u7801 (.i)          \u27a1\ufe0f <code>gcc -E foo.c -o foo.i</code></li> <li>Ctrl-C &amp; Ctrl-V (#include)</li> <li>\u5b57\u7b26\u4e32\u66ff\u6362</li> <li>\u4eca\u5929\uff1a\u6211\u4eec\u6709\u8fc7\u7a0b\u5b8f</li> </ul> <p>(2) \u7f16\u8bd1 (cc)</p> <ul> <li>\u6e90\u4ee3\u7801 (.i) \u2192 \u6c47\u7f16\u4ee3\u7801 (.s)         \u27a1\ufe0f <code>gcc -S foo.i -o foo.s</code></li> <li>\u201c\u9ad8\u7ea7\u72b6\u6001\u673a\u201d \u5230 \u201c\u4f4e\u7ea7\u72b6\u6001\u673a\u201d \u7684\u7ffb\u8bd1</li> <li>\u6700\u7ec8\u751f\u6210\u5e26\u6807\u6ce8\u7684\u6307\u4ee4\u5e8f\u5217</li> </ul> <p>(3) \u6c47\u7f16 (as)</p> <ul> <li>\u6c47\u7f16\u4ee3\u7801 (.s) \u2192 \u76ee\u6807\u6587\u4ef6 (.o)       \u27a1\ufe0f <code>gcc -c foo.s -o foo.o</code></li> <li>\u6587\u4ef6 = sections (.text, .data, .rodata.str.1, ...)<ul> <li>\u5bf9\u4e8e ELF\uff0c\u6bcf\u4e2a section \u6709\u5b83\u7684\u6743\u9650\u3001\u5185\u5b58\u5bf9\u9f50\u7b49\u4fe1\u606f</li> </ul> </li> <li>section \u4e2d\u7684\u4e09\u8981\u7d20<ul> <li>\u4ee3\u7801 (\u5b57\u8282\u5e8f\u5217)</li> <li>\u7b26\u53f7\uff1a\u6807\u8bb0 \u201c\u5f53\u524d\u201d \u7684\u4f4d\u7f6e</li> <li>\u91cd\u5b9a\u4f4d\uff1a\u6682\u65f6\u4e0d\u80fd\u786e\u5b9a\u7684\u6570\u503c (\u94fe\u63a5\u65f6\u786e\u5b9a)</li> </ul> </li> </ul> <p>(4) \u94fe\u63a5 (ld)                         \u27a1\ufe0f <code>gcc foo.o -o foo</code></p> <ul> <li>\u591a\u4e2a\u76ee\u6807\u6587\u4ef6 (.o) \u2192 \u53ef\u6267\u884c\u6587\u4ef6 (a.out)</li> <li>\u5408\u5e76\u6240\u6709\u7684 sections<ul> <li>\u5206\u522b\u5408\u5e76 .text, .data, .bss \u4e2d\u7684\u4ee3\u7801</li> <li>\u628a sections \u201c\u5e73\u94fa\u201d \u6210\u5b57\u8282\u5e8f\u5217</li> <li>\u786e\u5b9a\u6240\u6709\u7b26\u53f7\u7684\u4f4d\u7f6e</li> <li>\u89e3\u6790\u5168\u90e8\u91cd\u5b9a\u4f4d</li> </ul> </li> <li>\u5f97\u5230\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6<ul> <li>(\u7a0b\u5e8f\u521d\u59cb\u5185\u5b58\u72b6\u6001\u7684\u63cf\u8ff0)</li> </ul> </li> </ul> </li> <li> <p>\u7a0b\u5e8f\u7684\u52a0\u8f7d\uff1a\u628a \u201c\u5b57\u8282\u5e8f\u5217\u201d \u642c\u5230\u5185\u5b58</p> <ul> <li>\u6ca1\u9519\uff0c\u5c31\u53ea\u505a\u8fd9\u4e00\u4ef6\u4e8b</li> <li>\u7136\u540e\u8bbe\u7f6e\u6b63\u786e\u7684 PC\uff0c\u5f00\u59cb\u8fd0\u884c</li> </ul> <pre><code>mem = mmap.mmap(\n    fileno=-1, length=len(bs),\n    prot=mmap.PROT_READ | mmap.PROT_WRITE | mmap.PROT_EXEC,\n    flags=mmap.MAP_PRIVATE | mmap.MAP_ANONYMOUS,\n)\nmem.write(bs)\nmem.flush()\ncall_pointer(mem, fle['symbols']['_start'])\n</code></pre> </li> <li> <p><code>#!</code> - Shebang</p> <p>UNIX \u5bf9 # \u6ce8\u91ca\u7684 \u201c\u5999\u7528\u201d\uff1a\u5728 UNIX \u7684\u65e9\u671f\uff0c\u4e3a\u4e86\u80fd\u66f4\u65b9\u4fbf\u5730\u5c06\u811a\u672c\u4f5c\u4e3a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5b9e\u73b0\u4e86 #! \u5f00\u5934\u7684 \u201c\u53ef\u6267\u884c\u6587\u4ef6\u201d\uff0c\u5e76\u6cbf\u7528\u81f3\u4eca\u3002Shebang \u4f1a\u8c03\u7528\u7b2c\u4e00\u884c\u4e2d\u6267\u884c\u7684\u547d\u4ee4\u548c\u53c2\u6570\uff0c\u5e76\u628a\u8fd9\u4e2a\u811a\u672c\u6587\u4ef6\u4f5c\u4e3a\u547d\u4ee4\u884c\u53c2\u6570\u4f20\u5165\u3002</p> <p>file.bin: <pre><code>#!A B C\n// \u64cd\u4f5c\u7cfb\u7edf\u4f1a\u6267\u884c execve(A, [\"A\", \"B C\", \"file.bin\"], envp)\n</code></pre></p> <p>example1:</p> <p>A.c\u5982\u4e0b\uff0c\u7f16\u8bd1\u540e\u5f97\u5230\u53ef\u6267\u884c\u6587\u4ef6A</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main(int argc, char *argv[]) {\n    for (int i = 0; i &lt; argc; i++) {\n        printf(\"argv[%d] = %s\\n\", i, argv[i]);\n    }\n}\n</code></pre> <p>good\u811a\u672c\u5185\u5bb9\u5982\u4e0b\uff1a</p> <pre><code>#!A B C\n\nThis can be any script.\n</code></pre> <p>\u6267\u884c\u7ed3\u679c\uff1a <pre><code>linux$ ./good 1 2\nargv[0] = A\nargv[1] = B C\nargv[2] = ./good\nargv[3] = 1\nargv[4] = 2\n</code></pre></p> <p>example2:</p> <p>b\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a <pre><code>#! /usr/bin/env python3\n\nprint(\"Hello World\");\n</code></pre></p> <p>\u6267\u884c\u7ed3\u679c\uff1a <pre><code>linux$ ./b\nHello World\n</code></pre></p> </li> <li> <p>ELF\u4f8b\u5b50\uff1aa.c</p> <pre><code>int n;\n__thread int x;         // in tbss, t means thread local\n__thread int x1 = 100;  // in tdata, \u5df2\u521d\u59cb\u5316\u7684\u6570\u636e\u5728data\u8282\nstatic __thread int y;\n\nextern __thread int z;\n\nint foo()\n{\n    return z; // \u53ef\u4ee5\u770b\u5230R_X86_64_GOTTPOFF z - 4\n}\n</code></pre> <pre><code>linux$ gcc -c fPIE a.c\ngcc: warning: fPIE: linker input file unused because linking not done\ngcc: error: fPIE: linker input file not found: No such file or directory\nlinux$ ls\ntotal 8.0K\n-rw-r--r-- 1 chaofu chaofu 1.7K Nov  8 19:26 a.o\n-rw-r--r-- 1 chaofu chaofu  122 Nov  8 19:26 a.c\nlinux$ readelf -a a.o\nELF Header:\nMagic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 \nClass:                             ELF64\nData:                              2's complement, little endian\nVersion:                           1 (current)\nOS/ABI:                            UNIX - System V\nABI Version:                       0\nType:                              REL (Relocatable file)\nMachine:                           Advanced Micro Devices X86-64\nVersion:                           0x1\nEntry point address:               0x0\nStart of program headers:          0 (bytes into file)\nStart of section headers:          688 (bytes into file)\nFlags:                             0x0\nSize of this header:               64 (bytes)\nSize of program headers:           0 (bytes)\nNumber of program headers:         0\nSize of section headers:           64 (bytes)\nNumber of section headers:         15\nSection header string table index: 14\n\nSection Headers:\n[Nr] Name              Type             Address           Offset\n    Size              EntSize          Flags  Link  Info  Align\n[ 0]                   NULL             0000000000000000  00000000\n    0000000000000000  0000000000000000           0     0     0\n[ 1] .text             PROGBITS         0000000000000000  00000040\n    0000000000000014  0000000000000000  AX       0     0     1\n[ 2] .rela.text        RELA             0000000000000000  00000200\n    0000000000000018  0000000000000018   I      12     1     8\n[ 3] .data             PROGBITS         0000000000000000  00000054\n    0000000000000000  0000000000000000  WA       0     0     1\n[ 4] .bss              NOBITS           0000000000000000  00000054\n    0000000000000004  0000000000000000  WA       0     0     4\n[ 5] .tbss             NOBITS           0000000000000000  00000054\n    0000000000000008  0000000000000000 WAT       0     0     4\n[ 6] .tdata            PROGBITS         0000000000000000  00000054\n    0000000000000004  0000000000000000 WAT       0     0     4\n[ 7] .comment          PROGBITS         0000000000000000  00000058\n    000000000000002c  0000000000000001  MS       0     0     1\n[ 8] .note.GNU-stack   PROGBITS         0000000000000000  00000084\n    0000000000000000  0000000000000000           0     0     1\n[ 9] .note.gnu.pr[...] NOTE             0000000000000000  00000088\n    0000000000000020  0000000000000000   A       0     0     8\n[10] .eh_frame         PROGBITS         0000000000000000  000000a8\n    0000000000000038  0000000000000000   A       0     0     8\n[11] .rela.eh_frame    RELA             0000000000000000  00000218\n    0000000000000018  0000000000000018   I      12    10     8\n[12] .symtab           SYMTAB           0000000000000000  000000e0\n    00000000000000f0  0000000000000018          13     4     8\n[13] .strtab           STRTAB           0000000000000000  000001d0\n    000000000000002a  0000000000000000           0     0     1\n[14] .shstrtab         STRTAB           0000000000000000  00000230\n    0000000000000079  0000000000000000           0     0     1\nKey to Flags:\nW (write), A (alloc), X (execute), M (merge), S (strings), I (info),\nL (link order), O (extra OS processing required), G (group), T (TLS),\nC (compressed), x (unknown), o (OS specific), E (exclude),\nD (mbind), l (large), p (processor specific)\n\nThere are no section groups in this file.\n\nThere are no program headers in this file.\n\nThere is no dynamic section in this file.\n\nRelocation section '.rela.text' at offset 0x200 contains 1 entry:\nOffset          Info           Type           Sym. Value    Sym. Name + Addend\n00000000000b  000900000016 R_X86_64_GOTTPOFF 0000000000000000 z - 4\n\nRelocation section '.rela.eh_frame' at offset 0x218 contains 1 entry:\nOffset          Info           Type           Sym. Value    Sym. Name + Addend\n000000000020  000200000002 R_X86_64_PC32     0000000000000000 .text + 0\nNo processor specific unwind information to decode\n\nSymbol table '.symtab' contains 10 entries:\nNum:    Value          Size Type    Bind   Vis      Ndx Name\n    0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n    1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS a.c\n    2: 0000000000000000     0 SECTION LOCAL  DEFAULT    1 .text\n    3: 0000000000000004     4 TLS     LOCAL  DEFAULT    5 y\n    4: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    4 n\n    5: 0000000000000000     4 TLS     GLOBAL DEFAULT    5 x\n    6: 0000000000000000     4 TLS     GLOBAL DEFAULT    6 x1\n    7: 0000000000000000    20 FUNC    GLOBAL DEFAULT    1 foo\n    8: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND _GLOBAL_OFFSET_TABLE_\n    9: 0000000000000000     0 TLS     GLOBAL DEFAULT  UND z\n\nNo version information found in this file.\n\nDisplaying notes found in: .note.gnu.property\nOwner                Data size        Description\nGNU                  0x00000010       NT_GNU_PROPERTY_TYPE_0\n    Properties: x86 feature: IBT, SHSTK\n</code></pre> </li> <li> <p>\u52a0\u8f7d ELF \u6587\u4ef6</p> <ul> <li>\u5c06\u591a\u6bb5\u5b57\u8282\u5e8f\u5217\u590d\u5236\u5230\u5730\u5740\u7a7a\u95f4\u4e2d<ul> <li>\u5206\u522b\u8d4b\u4e88\u53ef\u8bfb/\u53ef\u5199/\u53ef\u6267\u884c\u6743\u9650</li> </ul> </li> <li>\u7136\u540e\u8df3\u8f6c\u5230\u6307\u5b9a\u7684 entry (\u9ed8\u8ba4\u4e3a _start) \u6267\u884c</li> <li>ELF \u662f \u201c\u4e8c\u8fdb\u5236\u6570\u636e\u7ed3\u6784\u201d\uff0c<code>readelf -l</code> \u63cf\u8ff0\u4e86\u5982\u4f55\u52a0\u8f7d\u5b83<ul> <li>Offset: segment \u5728\u6587\u4ef6\u4e2d\u7684\u504f\u79fb\u91cf</li> <li>VirtAddr: \u6bb5\u5728\u5185\u5b58\u4e2d\u5e94\u5f53\u88ab\u52a0\u8f7d\u5230\u7684\u8d77\u59cb\u5730\u5740</li> <li>PhysAddr (\u4e00\u822c\u4e0d\u7528)</li> <li>FileSiz: \u6bb5\u5728\u6587\u4ef6\u4e2d\u7684\u5b57\u8282\u6570</li> <li>MemSiz: \u6bb5\u5728\u5185\u5b58\u4e2d\u7684\u5b57\u8282\u6570 (\u53ef\u80fd\u5927\u4e8e\u6587\u4ef6\u5927\u5c0f)</li> <li>Flags: \u6743\u9650\uff0c\u4f8b\u5982 RWE</li> <li>Align: \u865a\u62df\u5730\u5740\u7684\u5bf9\u9f50</li> </ul> </li> </ul> <pre><code>linux$ ./loader minimal \nHello, OS World\nlinux$ ./minimal \nHello, OS World\nlinux$ readelf -l minimal \n\nElf file type is EXEC (Executable file)\nEntry point 0x401000\nThere are 2 program headers, starting at offset 64\n\nProgram Headers:\nType           Offset             VirtAddr           PhysAddr\n                FileSiz            MemSiz              Flags  Align\nLOAD           0x0000000000000000 0x0000000000400000 0x0000000000400000\n                0x00000000000000b0 0x00000000000000b0  R      0x1000\nLOAD           0x0000000000001000 0x0000000000401000 0x0000000000401000\n                0x0000000000000058 0x0000000000000058  R E    0x1000\n\nSection to Segment mapping:\nSegment Sections...\n00     \n01     .text \n</code></pre> <p> \u610f\u601d\u662f\uff0cloader\u5e94\u5f53\u5c06minimal\u8fd9\u4e2a\u6587\u4ef6\u7684offset\u4e3a0\u7684\u5730\u65b9\uff0c\u5927\u5c0f\u4e3a0xb0\u7684\u4e00\u6bb5\u533a\u57df\u642c\u5230\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u865a\u62df\u5185\u5b58\u76840x400000\u4f4d\u7f6e\u5904\uff1b\u5c06offset\u4e3a0x1000\uff0c\u5927\u5c0f\u4e3a0x58\u7684\u4e00\u6bb5\u533a\u57df\u642c\u5230\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u865a\u62df\u5185\u5b58\u76840x401000\u4f4d\u7f6e\u5904\u3002\u7136\u540e\u51c6\u5907\u597dinitial process stack\u91cc\u7684argc/argv/envp\u7b49\uff0c\u518d\u8df3\u8f6c\u5230Entry point 0x401000\uff0c\u5373\u53ef\u5f00\u59cb\u6267\u884cminimal\u3002</p> <p>(\u9759\u6001 ELF \u52a0\u8f7d\u5668: Linux \u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 execve \u7cfb\u7edf\u8c03\u7528\u52a0\u8f7d\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u72b6\u6001\u673a\u7684 \u201c\u91cd\u7f6e\u201d\uff1b\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5df1\u52a8\u624b\u6a21\u62df execve \u7cfb\u7edf\u8c03\u7528\u7684\u884c\u4e3a\uff1a\u5c06 ELF \u6587\u4ef6\u4e2d\u9700\u8981\u52a0\u8f7d\u7684\u90e8\u5206\u6620\u5c04\u5230\u5185\u5b58\uff0c\u5e76\u6839\u636e ABI \u6784\u5efa\u6b63\u786e\u7684\u8fdb\u7a0b\u521d\u59cb\u6808\u548c\u5bc4\u5b58\u5668\uff0c\u6211\u4eec\u5c31\u80fd\u5b9e\u73b0\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684 \u201c\u52a0\u8f7d\u201d\u3002)</p> <p>loader.c:</p> <pre><code>#include &lt;stdint.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;elf.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;sys/mman.h&gt;\n\nvoid my_execve(const char *file, char *argv[], char *envp[]);\nvoid *init_proc_stack(char *argv[], char *envp[]);\n\nint main(int argc, char *argv[], char *envp[]) {\n    if (argc &lt; 2) {\n        fprintf(stderr, \"Usage: %s file [args...]\\n\", argv[0]);\n        exit(1);\n    }\n\n    my_execve(argv[1], argv + 1, envp);\n}\n\nvoid my_execve(const char *file, char *argv[], char *envp[]) {\n    // WARNING: This execve leaks memory and ignores\n    // error checing for brevity.\n\n    int fd = open(file, O_RDONLY);\n    assert(fd &gt; 0);\n\n    // Map ELF header to memory\n    Elf64_Ehdr *h = mmap(NULL, 4096, PROT_READ, MAP_PRIVATE, fd, 0);\n\n    #define ROUND(x, align) (((uintptr_t)x) &amp; ~(align - 1))\n\n    Elf64_Phdr *pht = (Elf64_Phdr *)((char *)h + h-&gt;e_phoff);\n    for (int i = 0; i &lt; h-&gt;e_phnum; i++) {\n        Elf64_Phdr *p = &amp;pht[i];\n\n        if (p-&gt;p_type == PT_LOAD) {\n            // Memory map region\n            uintptr_t align = p-&gt;p_align;\n            uintptr_t map_beg = ROUND(p-&gt;p_vaddr, align);\n\n            // Memory map flags\n            int prot = 0;\n            if (p-&gt;p_flags &amp; PF_R) prot |= PROT_READ;\n            if (p-&gt;p_flags &amp; PF_W) prot |= PROT_WRITE;\n            if (p-&gt;p_flags &amp; PF_X) prot |= PROT_EXEC;\n\n            // Memory map size\n            uintptr_t map_sz = ROUND(p-&gt;p_filesz + align - 1, align);\n            uintptr_t alloc_sz = p-&gt;p_memsz - p-&gt;p_filesz;\n\n            // Map file contents\n            mmap(\n                (void *)map_beg,               // addr, rounded to ALIGN\n                map_sz,                        // length\n                prot,                          // protection\n                MAP_PRIVATE | MAP_FIXED,       // flags, private &amp; strict\n                fd, ROUND(p-&gt;p_offset, align)  // file and offset\n            );\n\n            // Map anonymous memory (bss)\n            if (alloc_sz &gt; 0) {\n                mmap(\n                    (void *)(map_beg + map_sz),// addr\n                    alloc_sz,                  // length,\n                    prot,                      // protection\n                    MAP_ANONYMOUS | MAP_PRIVATE | MAP_FIXED, // flags\n                    -1, 0                      // no file and offset\n                );\n            }\n\n            // (Should check for return values.)\n        }\n    }\n    close(fd);\n\n    void *rsp = init_proc_stack(argv, envp);\n    asm volatile(\n        \"mov $0, %%rdx;\" // required by System-V ABI\n        \"mov %0, %%rsp;\" // loader allocated\n        \"jmp *%1\" : : \"a\"(rsp), \"b\"(h-&gt;e_entry)\n    );\n}\n\nvoid *init_proc_stack(char *argv[], char *envp[]) {\n    _Alignas(16) static char stack[1 &lt;&lt; 20];\n    static char rnd[16];\n\n    void *sp = (void *)(stack + sizeof(stack) - 8192);\n    #define push(sp, T, ...) ({ \\\n        *((T*)sp) = (T)__VA_ARGS__; \\\n        sp = (void *)((uintptr_t)(sp) + sizeof(T)); \\\n    })\n\n    void *rsp = sp;\n\n    // Calculate argc\n    int argc = 0;\n    while (argv[argc])\n        argc++;\n\n    // Create initial process stack\n    push(sp, intptr_t, argc);\n\n    // argv[], NULL-terminate\n    for (int i = 0; i &lt; argc; i++) {\n        push(sp, intptr_t, argv[i]);\n    }\n    push(sp, intptr_t, 0);\n\n    // envp[], NULL-terminate\n    for (; *envp; envp++) {\n        if (!strchr(*envp, '_')) {\n            // remove some verbose ones\n            push(sp, intptr_t, *envp);\n        }\n    }\n    push(sp, intptr_t, 0);\n\n    // auxv[], AT_NULL-terminate\n    push(sp, Elf64_auxv_t,\n        {.a_type = AT_RANDOM, .a_un.a_val = (uintptr_t)rnd}\n    );\n    push(sp, Elf64_auxv_t,\n        {.a_type = AT_NULL}\n    );\n\n    // This stack layout is defined by System-V ABI.\n    return rsp;\n}\n</code></pre> </li> </ol>"},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/#lecture-20","title":"Lecture 20 \u52a8\u6001\u94fe\u63a5\u548c\u52a0\u8f7d","text":"<p>Take-away Messages</p> <p>\u627e\u5230\u6b63\u786e\u7684\u601d\u8def\uff0c\u6211\u4eec\u5c31\u80fd\u5728\u590d\u6742\u7684\u673a\u5236\u4e2d\u627e\u5230\u4e3b\u5e72\uff1a\u5728\u52a8\u6001\u94fe\u63a5\u7684\u4f8b\u5b50\u91cc\uff0c\u6211\u4eec\u8bd5\u7740\u81ea\u5df1\u5b9e\u73b0\u52a8\u6001\u94fe\u63a5\u548c\u52a0\u8f7d\u2014\u2014\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec \u201c\u53d1\u660e\u201d \u4e86 ELF \u4e2d\u7684\u91cd\u8981\u6982\u5ff5\uff0c\u4f8b\u5982 Global Offset Table, Procedure Linkage Table \u7b49\u3002</p> <ol> <li> <p>\u201c\u62c6\u89e3\u5e94\u7528\u7a0b\u5e8f\u201d \u7684\u9700\u6c42:</p> <p>\u5b9e\u73b0\u8fd0\u884c\u5e93\u548c\u5e94\u7528\u4ee3\u7801\u5206\u79bb</p> <ul> <li>\u5e94\u7528\u4e4b\u95f4\u7684\u5e93\u5171\u4eab<ul> <li>\u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u9700\u8981 glibc</li> <li>\u4f46\u7cfb\u7edf\u91cc\u53ea\u9700\u8981\u4e00\u4e2a\u526f\u672c\u5c31\u53ef\u4ee5\u4e86<ul> <li>\u662f\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 ldd \u547d\u4ee4\u67e5\u770b\uff08print shared object dependencies\uff09</li> </ul> </li> </ul> </li> <li>\u5927\u578b\u9879\u76ee\u7684\u5206\u89e3<ul> <li>\u6539\u4e00\u884c\u4ee3\u7801\u4e0d\u7528\u91cd\u65b0\u94fe\u63a5 2GB \u7684\u6587\u4ef6</li> <li>libjvm.so, libart.so, libcpu.so, ...<ul> <li>NEMU: \u8fd9\u5c31\u597d\u50cf \u201c\u628a CPU \u63d2\u4e0a\u4e3b\u677f\u201d\uff0c\u5206\u79bblibcpu.so \u548cuncore\u7684\u5b9e\u73b0\uff0c\u9700\u8981\u7684\u65f6\u5019\u518d\u94fe\u63a5\u8d77\u6765</li> </ul> </li> </ul> </li> <li>\u5982\u679c Linux \u5e94\u7528\u4e16\u754c\u662f\u9759\u6001\u94fe\u63a5\u7684\u2026\u2026<ul> <li>libc \u7d27\u6025\u53d1\u5e03\u5b89\u5168\u8865\u4e01 \u2192 \u91cd\u65b0\u94fe\u63a5\u6240\u6709\u5e94\u7528 \ud83d\ude02</li> </ul> </li> </ul> <p>a.c:</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    printf(\"Hello!\\n\");\n}\n</code></pre> <pre><code>linux$ gcc a.c\nlinux$ ls\ntotal 20K\n-rwxr-xr-x 1 chaofu chaofu 16K Nov  9 10:24 a.out # \u52a8\u6001\u94fe\u63a5\u7684a.out\u5927\u5c0f\u4e3a16KB\n-rw-r--r-- 1 chaofu chaofu  58 Nov  9 10:24 a.c\nlinux$ file a.out\na.out: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=521bcd29744268056ffbe7b2672bb94545d04d22, for GNU/Linux 3.2.0, not stripped\nlinux$ ldd a.out\n        linux-vdso.so.1 (0x00007ffeb4864000)\n        libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007fda081b9000)\n        /lib64/ld-linux-x86-64.so.2 (0x00007fda083f5000)\n</code></pre> <p>\u5982\u4f55\u5b9e\u73b0\u5206\u79bb\uff1f</p> <p>\u65b9\u6848 1: libc.o \u274c</p> <ul> <li>\u5728\u52a0\u8f7d\u65f6\u5b8c\u6210\u91cd\u5b9a\u4f4d<ul> <li>\u52a0\u8f7d = \u9759\u6001\u94fe\u63a5</li> <li>\u7701\u4e86\u78c1\u76d8\u7a7a\u95f4\uff0c\u4f46\u6ca1\u7701\u5185\u5b58</li> <li>\u81f4\u547d\u7f3a\u70b9\uff1a\u65f6\u95f4 (\u94fe\u63a5\u9700\u8981\u89e3\u6790\u5f88\u591a\u4e0d\u4f1a\u7528\u5230\u7684\u7b26\u53f7)</li> </ul> </li> <li>\u65b9\u6848 2: libc.so (shared object) \u2705<ul> <li>\u7f16\u8bd1\u5668\u751f\u6210\u4f4d\u7f6e\u65e0\u5173\u4ee3\u7801 (\u7a0b\u5e8f\u53ef\u4ee5\u5728\u52a0\u8f7d\u8fd0\u884c\u65f6\u52a8\u6001\u5730\u627e\u5230\u5e76\u8c03\u7528\u6240\u9700\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u5c31\u77e5\u9053\u8fd9\u4e9b\u51fd\u6570\u7684\u786e\u5207\u5730\u5740\u3002)<ul> <li>\u52a0\u8f7d = mmap</li> <li>\u4f46\u51fd\u6570\u8c03\u7528\u65f6\u9700\u8981\u989d\u5916\u4e00\u6b21\u67e5\u8868</li> </ul> </li> <li>\u597d\u5904\uff1a\u591a\u4e2a\u8fdb\u7a0b\u6620\u5c04\u540c\u4e00\u4e2a libc.so\uff0c\u5185\u5b58\u4e2d\u53ea\u9700\u8981\u4e00\u4e2a\u526f\u672c</li> </ul> </li> </ul> <p>\u5171\u4eab\u5e93\u6d4b\u8bd5\uff1a\u542f\u52a8 100 \u4e2a\u4ee3\u7801\u4e3a 100M \u7684\u51fd\u6570\uff0c\u901a\u8fc7\u89c2\u5bdf\u7cfb\u7edf\u4e2d\u7684\u5185\u5b58\u5360\u7528\u6765\u6d4b\u8bd5\u591a\u4e2a\u72ec\u7acb\u542f\u52a8\u7684\u8fdb\u7a0b\u662f\u5426\u53ea\u4fdd\u7559\u4e00\u4efd\u5171\u4eab\u5e93\u7684\u4ee3\u7801\u526f\u672c\u3002</p> <p>bloat.c</p> <pre><code>void bloat() {\n    // 100M of nops\n    asm volatile(\n        \".fill 104857600, 1, 0x90\"\n    );\n}\n</code></pre> <p>main.c</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n\n// Dynamically linked.\nvoid bloat();\n\nint main() {\n    bloat();\n    printf(\"bloat() called; sleeping...\\n\");\n    while (1) {\n        sleep(1);\n    }\n}\n</code></pre> <pre><code>linux$ make\ngcc -shared -o libbloat.so bloat.c\ncc    -c -o main.o main.c\ngcc -o bloat main.o -L. -lbloat\nlinux$ LD_LIBRARY_PATH=. ./bloat\nbloat() called; sleeping...\nlinux$ ./run\nlinux$ ps -ax\nPID TTY      STAT   TIME COMMAND\n    1 hvc0     Sl+    0:00 /init\n    5 hvc0     Sl+    0:00 plan9\n    8 ?        Ss     0:00 /init\n    9 ?        S      0:00 /init\n...\n30797 pts/6    S      0:00 ./bloat\n30798 pts/6    S      0:00 ./bloat\n30799 pts/6    S      0:00 ./bloat\n30800 pts/6    S      0:00 ./bloat\n...\nlinux$ pmap 30797 | grep libbloat.so\n00007f4af8c33000      4K r---- libbloat.so\n00007f4af8c34000 102404K r-x-- libbloat.so\n00007f4aff035000      4K r---- libbloat.so\n00007f4aff036000      4K r---- libbloat.so\n00007f4aff037000      4K rw--- libbloat.so\nlinux$ pmap 30798 | grep libbloat.so\n00007f83552c4000      4K r---- libbloat.so\n00007f83552c5000 102404K r-x-- libbloat.so\n00007f835b6c6000      4K r---- libbloat.so\n00007f835b6c7000      4K r---- libbloat.so\n00007f835b6c8000      4K rw--- libbloat.so\n</code></pre> <p>\u8fdb\u7a0b 30797 \u770b\u5230\u6709\u8fde\u7eed 100MB \u7684 libbloat.so \u5728\u5730\u5740 00007f4af8c34000 \u5904\uff0c\u5b9e\u9645\u4e0a\u8fd9\u662f\u64cd\u4f5c\u7cfb\u7edf\u5851\u9020\u7684\u5047\u8c61\uff0c\u5728\u771f\u5b9e\u7684\u5185\u5b58\u6761\u91cc\u5b83\u53ef\u80fd\u662f\u8fd9\u6837\u5206\u5e03\u7684\uff1a(\u4e0d\u540c\u90e8\u5206\u5206\u5e03\u5728\u4e0d\u540c\u7684\u5185\u5b58\u9875\u4e0a)</p> <p></p> <p>\u5728 x86 \u67b6\u6784\u4e2d\uff0cCPU \u91cc\u6709\u4e00\u4e2a\u7279\u6b8a\u5bc4\u5b58\u5668 CR3\uff0c\u7528\u4e8e\u5b58\u50a8\u5f53\u524d\u8fd0\u884c\u8fdb\u7a0b\u7684\u9875\u76ee\u5f55\u57fa\u5730\u5740\uff08Page Directory Base Address\uff09\u3002\u9875\u76ee\u5f55\u662f\u5185\u5b58\u7ba1\u7406\u4e2d\u7684\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u5c06\u865a\u62df\u5730\u5740\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\u3002\u5f53 CPU \u8981\u8bbf\u95ee libbloat.so \u7684\u65f6\u5019\uff0c\u901a\u8fc7 CR3 \u5bc4\u5b58\u5668\u6b63\u786e\u627e\u5230\u7269\u7406\u5185\u5b58\u6761\u4e0a\u7684 libbloat.so\uff0c\u5851\u9020\u51fa libbloat.so \u662f\u8fde\u7eed\u7684 100MB \u7684\u5047\u8c61\u3002</p> </li> <li> <p>\u5b9e\u73b0\u52a8\u6001\u52a0\u8f7d\uff1aA Layer of Indirection</p> <p>\u7f16\u8bd1\u65f6\uff0c\u52a8\u6001\u94fe\u63a5\u5e93\u8c03\u7528 = \u67e5\u8868</p> <pre><code>call  *TABLE[printf@symtab]\n</code></pre> <p>\u94fe\u63a5\u65f6\uff0c\u6536\u96c6\u6240\u6709\u7b26\u53f7\uff0c\u201c\u751f\u6210\u201d \u7b26\u53f7\u4fe1\u606f\u548c\u76f8\u5173\u4ee3\u7801\uff1a</p> <pre><code>#define foo@symtab     1\n#define printf@symtab  2\n...\n\nvoid *TABLE[N_SYMBOLS];\n\nvoid load(struct loader *ld) {\n    TABLE[foo@symtab] = ld-&gt;resolve(\"foo\");\n    TABLE[foo@printf] = ld-&gt;resolve(\"printf\");\n    ...\n}\n</code></pre> <p>\u4f8b\u5b50\uff1a</p> <p>main.S:</p> <pre><code>#include \"dl.h\"\n\nDL_HEAD\n\nLOAD(\"libc.dl\")\nLOAD(\"libhello.dl\")\nIMPORT(hello)\nIMPORT(exit)\nEXPORT(_start)\n\nDL_CODE\n\nmain:\n    call DSYM(hello)\n    call DSYM(hello)\n    call DSYM(hello)\n    call DSYM(hello)\n    movq $0, %rax\n    ret\n\n_start:\n    call main\n    jmp DSYM(exit)\n\nDL_END\n</code></pre> <p>libhello.S:</p> <pre><code>#include \"dl.h\"\n\nDL_HEAD\n\nLOAD(\"libc.dl\")\nIMPORT(putchar)\nEXPORT(hello)\n\nDL_CODE\n\nhello:\n    lea str(%rip), %rdi\n    mov count(%rip), %eax\n    push %rbx\n    mov %rdi, %rbx\n    inc %eax\n    mov %eax, count(%rip)\n    add $0x30, %eax\n    movb %al, 0x6(%rdi)\nloop:\n    movsbl (%rbx),%edi\n    test %dil,%dil\n    je out\n    call DSYM(putchar)\n    inc  %rbx\n    jmp loop\nout:\n    pop %rbx\n    ret\n\nstr:\n    .asciz \"Hello X\\n\"\n\ncount:\n    .int 0\n\nDL_END\n</code></pre> <p>libc.S:</p> <pre><code>#include \"dl.h\"\n#include &lt;sys/syscall.h&gt;\n\nDL_HEAD\n\nEXPORT(putchar)\nEXPORT(exit)\n\nDL_CODE\n\nputchar:\n    mov %dil, buf(%rip)\n    mov $SYS_write, %rax\n    mov $1, %rdi\n    lea buf(%rip), %rsi\n    mov $1, %rdx\n    syscall\n    ret\nbuf:\n    .byte 0\n\nexit:\n    movq $SYS_exit, %rax\n    syscall\n\nDL_END\n</code></pre> <pre><code>linux$ make\ngcc  dlbox.c -o dlbox\n./dlbox gcc libhello.S\n./dlbox gcc libc.S\n./dlbox gcc main.S\n./dlbox objdump libhello.dl &gt; libhello.txt\n./dlbox objdump libc.dl &gt; libc.txt\n./dlbox objdump main.dl &gt; main.txt\nrm -f *.o\nlinux$ ./dlbox interp main.dl\nHello 1\nHello 2\nHello 3\nHello 4\n</code></pre> <p>dl.h</p> <pre><code>#define REC_SZ 32\n#define DL_MAGIC \"\\x01\\x14\\x05\\x14\"\n\n#ifdef __ASSEMBLER__\n    #define DL_HEAD     __hdr: \\\n                        /* magic */    .ascii DL_MAGIC; \\\n                        /* file_sz */  .4byte (__end - __hdr); \\\n                        /* code_off */ .4byte (__code - __hdr)\n    #define DL_CODE     .fill REC_SZ - 1, 1, 0; \\\n                        .align REC_SZ, 0; \\\n                        __code:\n    #define DL_END      __end:\n\n    #define RECORD(sym, off, name) \\\n    .align REC_SZ, 0; \\\n    sym .8byte (off); .ascii name\n\n    #define IMPORT(sym) RECORD(sym:,           0, \"?\" #sym \"\\0\")\n    #define EXPORT(sym) RECORD(    , sym - __hdr, \"#\" #sym \"\\0\")\n    #define LOAD(lib)   RECORD(    ,           0, \"+\" lib  \"\\0\")\n    #define DSYM(sym)   *sym(%rip)\n#else\n    #include &lt;stdint.h&gt;\n\n    struct dl_hdr {\n        char magic[4];\n        uint32_t file_sz, code_off;\n    };\n\n    struct symbol {\n        int64_t offset;\n        char type, name[REC_SZ - sizeof(int64_t) - 1];\n    };\n#endif\n</code></pre> <pre><code>linux$ gcc -E main.S  # \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 -E \u9009\u9879\u6765\u67e5\u770b\u9884\u5904\u7406\u540e\u7684\u7ed3\u679c\n# 0 \"main.S\"\n# 0 \"&lt;built-in&gt;\"\n# 0 \"&lt;command-line&gt;\"\n# 1 \"/usr/include/stdc-predef.h\" 1 3 4\n# 0 \"&lt;command-line&gt;\" 2\n# 1 \"main.S\"\n# 1 \"dl.h\" 1\n# 2 \"main.S\" 2\n\n__hdr: .ascii \"\\x01\\x14\\x05\\x14\"; .4byte (__end - __hdr); .4byte (__code - __hdr)\n\n.align 32, 0; .8byte (0); .ascii \"+\" \"libc.dl\" \"\\0\"\n.align 32, 0; .8byte (0); .ascii \"+\" \"libhello.dl\" \"\\0\"\n.align 32, 0; hello: .8byte (0); .ascii \"?\" \"hello\" \"\\0\"\n.align 32, 0; exit: .8byte (0); .ascii \"?\" \"exit\" \"\\0\"\n.align 32, 0; .8byte (_start - __hdr); .ascii \"#\" \"_start\" \"\\0\"\n\n.fill 32 - 1, 1, 0; .align 32, 0; __code:\n\nmain:\n    call *hello(%rip)\n    call *hello(%rip)\n    call *hello(%rip)\n    call *hello(%rip)\n    movq $0, %rax\n    ret\n\n_start:\n    call main\n    jmp *exit(%rip)\n\n__end:\n</code></pre> <p></p> <p>\u6211\u4eec \u201c\u53d1\u660e\u201d \u4e86 GOT (Global Offset Table)\uff01</p> <ul> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u9700\u8981\u52a8\u6001\u89e3\u6790\u7684\u7b26\u53f7\uff0cGOT \u4e2d\u90fd\u6709\u4e00\u4e2a\u4f4d\u7f6e</li> <li>ELF: Relocation section \u201c.rela.dyn\u201d</li> </ul> <pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    exit(0);\n}\n</code></pre> <pre><code>linux$ file a.out\na.out: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=4f42832abaead61246b7dd248749f056c3e2c373, for GNU/Linux 3.2.0, not stripped\nlinux$ readelf -a a.out\nRelocation section '.rela.plt' at offset 0x610 contains 1 entry:\nOffset          Info           Type           Sym. Value      Sym. Name + Addend\n000000003fd0  000400000007 R_X86_64_JUMP_SLO 0000000000000000 exit@GLIBC_2.2.5 + 0\nlinux$ pmap 15539\n15539:   /home/chaofu/jyy_os_2024/lecture/lect20/my/a.out\n0000555555554000      4K r---- a.out\n0000555555555000      4K r-x-- a.out\n...\ntotal             2644K\nlinux$ python\nPython 3.10.6 (main, Nov 14 2022, 16:10:14) [GCC 11.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; hex(0x000000003fd0 + 0x0000555555554000)\n'0x555555557fd0'\n&gt;&gt;&gt; \n</code></pre> <p>\u8fd9\u610f\u5473\u7740 0x3fd0 + ELF header\u5730\u5740\u5c31\u662f\u8fd9\u4e2a GOT \u8868\u9879\u7684\u5730\u5740\uff0c\u8fd9\u4e2a\u8868\u9879\u91cc\u5b58\u653e\u7684\u662f exit \u771f\u6b63\u7684\u5730\u5740\u3002\u5728 gdb \u8c03\u8bd5\u7684\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u770b\u5230 a.out \u5728\u8fd0\u884c\u65f6\u7684\u5730\u5740\u7a7a\u95f4\u4ece 0x0000555555554000 \u5f00\u59cb\uff0c\u6211\u4eec\u8ba1\u7b97\u5f97\u77e5 0x555555557fd0 \u662f exit \u7684\u5730\u5740\uff0c\u53ef\u4ee5\u5728\u8fd9\u4e2a\u5730\u5740\u4e0a\u6253<code>rwatch *0x555555557fd0</code>\u770b\u5230\uff0c\u786e\u5b9e\u6709\u4eba\u8bfb\u4e86\u8fd9\u4e2a\u5730\u65b9\u7684\u4ee3\u7801\uff0c\u4e14\u8fd9\u4e2a\u5730\u65b9\u7684\u786e\u662f exit \u7684\u4ee3\u7801\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    printf(\"printf: %p\\n\", main);\n    printf(\"main: %p\\n\", printf);\n}\n</code></pre> <pre><code>linux$ readelf -a a.out\nRelocation section '.rela.dyn' at offset 0x550 contains 9 entries:\nOffset          Info           Type           Sym. Value    Sym. Name + Addend\n000000003fe0  000500000006 R_X86_64_GLOB_DAT 0000000000000000 printf@GLIBC_2.2.5 + 0\n</code></pre> </li> <li> <p>\u52a8\u6001\u94fe\u63a5\u7684\u4e3b\u8981\u529f\u80fd\uff1a\u5b9e\u73b0\u4ee3\u7801\u7684\u52a8\u6001\u94fe\u63a5\u548c\u52a0\u8f7d</p> <ul> <li>main (.o) \u8c03\u7528 printf (.so)</li> <li>main (.o) \u8c03\u7528 foo (.o)</li> </ul> <p>\u96be\u9898\uff1a\u600e\u4e48\u51b3\u5b9a\u5230\u5e95\u8981\u4e0d\u8981\u67e5\u8868\uff1f\u8c03\u7528\u81ea\u5df1\u5199\u7684 foo \u548c\u8c03\u7528\u5e93\u51fd\u6570\u91cc\u7684 printf \u4e00\u6837\u90fd\u8981\u67e5\u8868\u5417\uff1f</p> <p>\u8fd9\u662f\u4e2a\u5386\u53f2\u9057\u7559\u95ee\u9898\uff1a\u5148\u7f16\u8bd1\u3001\u540e\u94fe\u63a5</p> <p>\u7f16\u8bd1\u5668\u7684\u9009\u62e9 1: \u5168\u90e8\u67e5\u8868\u8df3\u8f6c (\u8c03\u7528\u4e2a foo \u90fd\u591a\u67e5\u4e00\u6b21\u8868\uff0c\u6027\u80fd\u4e0d\u80fd\u5fcd\u274c)</p> <pre><code>ff 25 00 00 00 00   call *FOO_OFFSET(%rip)\n</code></pre> <p>\u7f16\u8bd1\u5668\u7684\u9009\u62e9 2: \u5168\u90e8\u76f4\u63a5\u8df3\u8f6c (\u8df3\u4e0d\u8fc7\u53bb\u274c)</p> <pre><code>e8 00 00 00 00      call &lt;reloc&gt;\n</code></pre> <ul> <li>%rip: 00005559892b7000</li> <li>libc.so.6: 00007fdcdf800000<ul> <li>\u76f8\u5dee\u4e86 2a8356549000</li> <li>4-byte \u7acb\u5373\u6570\u653e\u4e0d\u4e0b\uff0c\u65e0\u8bba\u5982\u4f55\u4e5f\u8df3\u4e0d\u8fc7\u53bb</li> </ul> </li> </ul> <p>\u7f16\u8bd1\u5668\u7684\u9009\u62e9 3: PLT (Procedure Linkage Table) \u2705</p> <ul> <li>\u4e3a\u4e86\u6027\u80fd\uff0c\u201c\u5168\u90e8\u76f4\u63a5\u8df3\u8f6c\u201d \u662f\u552f\u4e00\u9009\u62e9</li> <li>\u5982\u679c\u8fd9\u4e2a\u7b26\u53f7\u5728\u94fe\u63a5\u65f6\u53d1\u73b0\u662f printf (\u6765\u81ea\u52a8\u6001\u52a0\u8f7d)\uff0c\u5c31\u5728 a.out \u91cc \u201c\u5408\u6210\u201d \u4e00\u6bb5\u5c0f\u4ee3\u7801\uff1a<ul> <li>i.e. \u5e93\u51fd\u6570\u7684\u624d\u9700\u8981 plt\uff0c\u9700\u8981\u67e5\u8868 GOT\u3002\uff08\u5148\u8df3\u4e00\u5c0f\u6b65\u5230 plt\uff0c\u518d\u901a\u8fc7 plt \u67e5\u5230\u7684 GOT \u8868\u9879\u8df3\u4e00\u5927\u6b65\uff09\u81ea\u5df1\u5199\u7684 foo.c \u4e0d\u9700\u8981\uff0c\u76f4\u63a5\u8df3\u8f6c</li> </ul> </li> </ul> <pre><code>printf@plt:\n    jmp *PRINTF_OFFSET(%rip)\n</code></pre> </li> <li> <p>\u4e0a\u9762\u53ea\u662f\u89e3\u51b3\u4e86\u4ee3\u7801\u7684\u52a8\u6001\u52a0\u8f7d\u52a0\u8f7d\u548c\u94fe\u63a5\uff0c\u5982\u4f55\u5b9e\u73b0\u6570\u636e\u7684\u52a8\u6001\u52a0\u8f7d\u548c\u94fe\u63a5\uff1f</p> <ul> <li>main (.o) \u8bbf\u95ee stderr (libc.so)</li> <li>libjvm (.so) \u8bbf\u95ee stderr (libc.so)</li> <li>libjvm (.so) \u8bbf\u95ee heap (libjvm.so)<ul> <li>\u7f16\u8bd1\u65f6\u540c\u6837\u4e0d\u77e5\u9053\u6570\u636e\u5728\u54ea\u91cc</li> </ul> </li> </ul> <p>\u5bf9\u4e8e\u6570\u636e\uff0c\u6211\u4eec\u4e0d\u80fd \u201c\u95f4\u63a5\u8df3\u8f6c\u201d\uff01</p> <ul> <li>x = 1, \u540c\u4e00\u4e2a .so (\u6216 executable)</li> </ul> <pre><code>mov $1, offset_of_x(%rip) # \u76f4\u63a5\u77e5\u9053\u5730\u5740\n</code></pre> <ul> <li>x = 1, \u53e6\u4e00\u4e2a .so</li> </ul> <pre><code>mov GOT[x], %rdi          # \u9700\u8981\u67e5 GOT \u8868\u624d\u77e5\u9053\u5730\u5740\nmov $1, (%rdi)\n</code></pre> <p><code>__attribute__((visibility(\"hidden\")))</code> \u610f\u601d\u662f\u660e\u786e\u77e5\u9053\u8fd9\u4e2a\u53d8\u91cf\u5c5e\u4e8e\u672c so\uff0c\u4e0d\u662f\u5916\u90e8\u5e93\u91cc\u7684\u3002</p> <p>main.c</p> <pre><code>#include &lt;stdio.h&gt;\n\nvoid A();\nvoid B();\n\nextern int x;\n\nint main() {\n    A();\n\n    printf(\"main: &amp;stderr = %p\\n\", &amp;stderr);\n    printf(\"main: &amp;x      = %p\\n\", &amp;x);\n\n    B();\n}\n</code></pre> <p>liba-1.c</p> <pre><code>int x = 1;\n</code></pre> <p>liba-2.c</p> <pre><code>#include &lt;stdio.h&gt;\n\nextern int x;\n\nvoid A() {\n    printf(\"liba: x = %d\\n\", x++);\n}\n</code></pre> <p>libb-1.c</p> <pre><code>#include &lt;stdio.h&gt;\n\n// This x is from liba.\nextern int x;\n\n// This y is from libb.\nextern int __attribute__((visibility(\"hidden\"))) y;\n\nvoid *get_x_addr() {\n    return &amp;x;\n}\n\nvoid *get_y_addr() {\n    return &amp;y;\n}\n\nvoid set_x() {\n    x = 1;\n}\n\nvoid set_y() {\n    y = 1;\n}\n\nvoid *get_stderr() {\n    return &amp;stderr;\n}\n\nvoid B() {\n    printf(\"B   : &amp;stderr = %p\\n\", &amp;stderr);\n    printf(\"B   : &amp;x      = %p\\n\", &amp;x);\n}\n</code></pre> <p>libb-2.c</p> <pre><code>int y = 0;\n</code></pre> <pre><code>linux$ make\ngcc -Wall -fPIC -Os -c main.c -o main.o\ngcc -Wall -fPIC -Os -c liba-1.c -o liba-1.o\ngcc -Wall -fPIC -Os -c liba-2.c -o liba-2.o\ngcc -shared -o liba.so liba-1.o liba-2.o\ngcc -Wall -fPIC -Os -c libb-1.c -o libb-1.o\ngcc -Wall -fPIC -Os -c libb-2.c -o libb-2.o\ngcc -shared -o libb.so libb-1.o libb-2.o -L. -la\ngcc -o main main.o -L. -la -lb\nlinux$ LD_LIBRARY_PATH=. ./main \nliba: x = 1\nmain: &amp;stderr = 0x7f5b3bad6860\nmain: &amp;x      = 0x7f5b3bafa028\nB   : &amp;stderr = 0x7f5b3bad6860\nB   : &amp;x      = 0x7f5b3bafa028\n</code></pre> <pre><code>linux$ objdump -d libb.so\n0000000000001119 &lt;get_x_addr&gt;:\n    1119:       f3 0f 1e fa             endbr64 \n    111d:       48 8b 05 b4 2e 00 00    mov    0x2eb4(%rip),%rax        # 3fd8 &lt;x@Base&gt;\n    1124:       c3                      ret    \n\n0000000000001125 &lt;get_y_addr&gt;:\n    1125:       f3 0f 1e fa             endbr64 \n    1129:       48 8d 05 fc 2e 00 00    lea    0x2efc(%rip),%rax        # 402c &lt;y&gt;\n    1130:       c3                      ret    \nlinux$ readelf -a libb.so # \u770b\u770b x \u5728\u54ea\u91cc\uff0c\u662f\u5728 GOT \u8868\u9879\nRelocation section '.rela.dyn' at offset 0x588 contains 9 entries:\nOffset          Info           Type           Sym. Value    Sym. Name + Addend\n...\n000000003fd8  000200000006 R_X86_64_GLOB_DAT 0000000000000000 x + 0\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u7531\u4e8e x \u662f\u53e6\u5916\u4e00\u4e2a\u5e93 liba.so \u91cc\u7684\uff0c\u6240\u4ee5\u9700\u8981 mov \u6307\u4ee4\u53e6\u5916\u67e5\u8868\uff0c\u800c y \u662f\u672c\u5e93 libb.so \u91cc\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528 lea \u6307\u4ee4\u53bb load \u5730\u5740\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u4e00\u4e2a\u52a8\u6001\u94fe\u63a5\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0cexecve\u540e\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u5728\u54ea\u91cc\uff1f</p> <p>\u5728\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u5f53\u4e00\u4e2a\u52a8\u6001\u94fe\u63a5\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u901a\u8fc7execve\u7cfb\u7edf\u8c03\u7528\u88ab\u52a0\u8f7d\u548c\u6267\u884c\u65f6\uff0c\u7b2c\u4e00\u6761\u6307\u4ee4\u7684\u6267\u884c\u4f4d\u7f6e\u901a\u5e38\u4e0d\u662f\u76f4\u63a5\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\u4e2d\uff0c\u800c\u662f\u5728\u52a8\u6001\u94fe\u63a5\u5668\uff08\u4e5f\u79f0\u4e3a\u52a8\u6001\u52a0\u8f7d\u5668\uff09\u4e2d\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u8981\u7684\u8fc7\u7a0b\u63cf\u8ff0\uff1a</p> <ol> <li> <p>\u52a0\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u4f1a\u52a0\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u5934\u90e8\u4fe1\u606f\uff08\u4f8b\u5982ELF\u5934\u90e8\uff09\u4ee5\u786e\u5b9a\u6587\u4ef6\u7c7b\u578b\u548c\u6240\u9700\u7684\u52a8\u6001\u94fe\u63a5\u5668\u3002</p> </li> <li> <p>\u52a0\u8f7d\u52a8\u6001\u94fe\u63a5\u5668\uff1a\u6839\u636e\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u5934\u90e8\u4fe1\u606f\uff0c\u5185\u6838\u4f1a\u52a0\u8f7d\u6307\u5b9a\u7684\u52a8\u6001\u94fe\u63a5\u5668 (\u4f8b\u5982\uff0c\u5728Linux\u7cfb\u7edf\u4e0a\uff0c\u901a\u5e38\u662f/lib/ld-linux.so\u6216\u7c7b\u4f3c\u8def\u5f84\u7684\u6587\u4ef6)\u3002</p> </li> <li> <p>\u8df3\u8f6c\u5230\u52a8\u6001\u94fe\u63a5\u5668\uff1a\u5185\u6838\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u52a8\u6001\u94fe\u63a5\u5668\u3002\u6b64\u65f6\uff0c\u52a8\u6001\u94fe\u63a5\u5668\u6210\u4e3a\u7b2c\u4e00\u4e2a\u6267\u884c\u7684\u4ee3\u7801\u3002</p> </li> <li> <p>\u52a8\u6001\u94fe\u63a5\u548c\u52a0\u8f7d\uff1a\u52a8\u6001\u94fe\u63a5\u5668\u8d1f\u8d23\u89e3\u6790\u548c\u52a0\u8f7d\u6240\u6709\u9700\u8981\u7684\u5171\u4eab\u5e93\uff0c\u8fdb\u884c\u7b26\u53f7\u89e3\u6790\u548c\u91cd\u5b9a\u4f4d\u7b49\u5de5\u4f5c\u3002</p> </li> <li> <p>\u8df3\u8f6c\u5230\u7a0b\u5e8f\u5165\u53e3\u70b9\uff1a\u4e00\u65e6\u6240\u6709\u7684\u52a8\u6001\u94fe\u63a5\u548c\u52a0\u8f7d\u5de5\u4f5c\u5b8c\u6210\uff0c\u52a8\u6001\u94fe\u63a5\u5668\u4f1a\u8df3\u8f6c\u5230\u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\uff08\u901a\u5e38\u662f_start\u51fd\u6570\uff09\uff0c\u4ece\u800c\u5f00\u59cb\u6267\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\u3002</p> </li> </ol> <p>\u56e0\u6b64\uff0cexecve\u540e\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u901a\u5e38\u662f\u5728\u52a8\u6001\u94fe\u63a5\u5668\u4e2d\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\u4e2d\u3002\u52a8\u6001\u94fe\u63a5\u5668\u5b8c\u6210\u5176\u5de5\u4f5c\u540e\uff0c\u624d\u4f1a\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u3002</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u786e\u4fdd\u4e86\u6240\u6709\u52a8\u6001\u5e93\u548c\u4f9d\u8d56\u9879\u5728\u5e94\u7528\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u4e4b\u524d\u90fd\u5df2\u7ecf\u6b63\u786e\u52a0\u8f7d\u548c\u94fe\u63a5\u3002</p> </li> <li> <p>\u5982\u4f55\u7f16\u8bd1\u51fa\u4e00\u4e2a\u4e0d\u4f7f\u7528\u9ed8\u8ba4ld.so\u4f5c\u4e3ainterpreter\u7684ELF\u52a8\u6001\u94fe\u63a5\u53ef\u6267\u884c\u6587\u4ef6?</p> <p>\u8981\u7f16\u8bd1\u4e00\u4e2a\u4e0d\u4f7f\u7528\u9ed8\u8ba4ld.so\u4f5c\u4e3a\u89e3\u91ca\u5668(interpreter)\u7684 ELF\u52a8\u6001\u94fe\u63a5\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528<code>gcc</code>\u6216<code>ld</code>\u5e76\u6307\u5b9a\u81ea\u5b9a\u4e49\u7684\u89e3\u91ca\u5668\u8def\u5f84\u3002\u4ee5\u4e0b\u662f\u5177\u4f53\u6b65\u9aa4\uff1a</p> <ol> <li>\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684C\u7a0b\u5e8f (\u4f8b\u5982hello.c)</li> </ol> <pre><code>#include &lt;stdio.h&gt; \n\nint main()\n{\n    printf(\"Hello, World!\\n\"); \n    return 0;\n}\n</code></pre> <ol> <li>\u7f16\u8bd1\u5e76\u94fe\u63a5\u7a0b\u5e8f\uff0c\u6307\u5b9a\u81ea\u5b9a\u4e49\u7684\u89e3\u91ca\u5668\u8def\u5f84\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528<code>-Wl,--dynamic-linker</code>\u9009\u9879\u6765\u6307\u5b9a\u89e3\u91ca\u5668\u8def\u5f84\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u60f3\u4f7f\u7528/path/to/custom/ld.so\u4f5c\u4e3a\u89e3\u91ca\u5668\uff1a</li> </ol> <pre><code>gcc -o hello hello.c -Wl,--dynamic-linker /path/to/custom/ld.so\n</code></pre> <ol> <li>\u9a8c\u8bc1ELF\u6587\u4ef6\u7684\u89e3\u91ca\u5668\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528<code>readelf</code>\u5de5\u5177\u6765\u68c0\u67e5\u751f\u6210\u7684LF\u6587\u4ef6\u7684\u89e3\u91ca\u5668\u8def\u5f84\uff1a</li> </ol> <pre><code>readelf -a hello | grep \"program interpreter\" \n</code></pre> <p>\u8f93\u51fa\u5e94\u8be5\u7c7b\u4f3c\u4e8e\uff1a</p> <pre><code>[Requesting program interpreter: /path/to/custom/ld.so] \n</code></pre> </li> <li> <p>LD_PRELOAD: \u5728\u52a0\u8f7d\u4e4b\u524d preload</p> <ul> <li>\u5982\u679c\u80fd\u94fe\u63a5\u6211\u4eec \u201c\u4fee\u6539\u201d \u8fc7\u7684 libc \u5c31\u597d\u4e86 \u2192 \u751a\u81f3\u6211\u4eec\u90fd\u4e0d\u9700\u8981\u4fee\u6539 libc</li> <li>\u52a8\u6001\u52a0\u8f7d\u7684\u5168\u5c40\u7b26\u53f7\uff1a\u5148\u5230\u5148\u5f97\uff0c\u6240\u4ee5\u7528 LD_PRELOAD \u5148\u5360\u636e\u4f60\u60f3\u8981\u5360\u636e\u7684\u4e1c\u897f\u5373\u53ef</li> </ul> </li> </ol>"},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/#lecture-21","title":"Lecture 21 \u7cfb\u7edf\u8c03\u7528\u3001\u4e2d\u65ad\u548c\u4e0a\u4e0b\u6587\u5207\u6362","text":"<p>Take-away Messages</p> <p>\u7cfb\u7edf\u8c03\u7528\u6307\u4ee4\u662f\u4e00\u79cd\u7279\u6b8a\u7684 \u201c\u957f\u8df3\u8f6c\u201d\u2014\u2014\u800c\u8df3\u8f6c\u7684\u76ee\u6807\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u914d\u7f6e\u597d\u3001\u5e94\u7528\u7a0b\u5e8f\u4e0d\u80fd\u51b3\u5b9a\u7684\u3002\u7c7b\u4f3c\u5730\uff0c\u5904\u7406\u5668\u4e2d\u65ad\u4e5f\u4f1a\u88ab\u52a8\u8c03\u7528\u957f\u8df3\u8f6c\u5230\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u3002\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u4ee3\u7801\u4f1a \u201c\u5c01\u5b58\u201d \u8fdb\u7a0b\u7684\u72b6\u6001\u673a\uff1a</p> <ol> <li>\u5bf9\u4e8e\u5185\u5b58\u4e2d\u7684\u9875\u9762\uff0c\u4fdd\u6301\u539f\u5c01\u4e0d\u52a8\uff1b</li> <li>\u4f7f\u7528\u7cbe\u5fc3\u6784\u9020\u7684\u4ee3\u7801\uff0c\u5c0f\u5fc3\u5730\u5c06\u6240\u6709\u5bc4\u5b58\u5668\u4fdd\u5b58\u5230\u5185\u5b58\u4e2d\u3002</li> </ol> <p>\u6b64\u65f6\uff0c\u8ba1\u7b97\u673a\u7cfb\u7edf\u5c31\u5904\u4e8e\u6240\u6709\u7a0b\u5e8f\u90fd\u88ab\u5c01\u5b58\u3001\u64cd\u4f5c\u7cfb\u7edf\u4ee3\u7801\u6b63\u5728\u6267\u884c\u7684\u72b6\u6001\u3002\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u9009\u62e9\u6027\u5730\u8c03\u5ea6\u4e0b\u4e00\u4e2a\u5bc4\u5b58\u5668\u73b0\u573a\u5230 CPU \u4e0a\uff0c\u5b9e\u73b0\u4e0a\u4e0b\u6587\u5207\u6362\u3002</p> <ol> <li> <p>\u7cfb\u7edf\u8c03\u7528\uff1a\u5411\u64cd\u4f5c\u7cfb\u7edf\u7684 \u201c\u51fd\u6570\u8c03\u7528\u201d</p> <p>syscall: \u201c\u8df3\u8f6c\u5e76\u83b7\u5f97\u65e0\u9650\u7684\u6743\u529b\u201d</p> <pre><code>call  printf@plt        // PLT; dynamic linked\ncall  pmm_alloc         // locally linked\n\n// syscall\u7684\u884c\u4e3a\u5982\u4e0b\uff1a\nsyscall = \u201cjal\u201d:        // jump and link, syscall\u7684\u9006\u64cd\u4f5c\u662fsysret\n    mov %rip, %rcx      // \u628a\u4e0b\u4e00\u6761\u8981\u6267\u884c\u7684\u6307\u4ee4\u7ed9rcx\n    mov %rflags, %r11   // \u628arflags\u7ed9r11\uff0c\u4fdd\u5b58\u597d\u73b0\u573a\n    set CS = kernel, SS = kernel, CPL = 0 // \u8fdb\u5165\u9ad8\u6743\u9650\u7684\u5185\u6838\n    jmp IA32_LSTAR      // \u8df3\u8f6c\u5230 Long System Target Address Register\n</code></pre> <ul> <li>\u6b64\u65f6 RIP = IA32_LSTAR, CPL = 0</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u914d\u7f6e IA32_LSTAR<ul> <li>setjmp() \u2192 \u5728\u53e6\u4e00\u4e2a\u6808\u4e2d\u6267\u884c \u2192 longjmp() \u2192 sysret</li> <li>\u6267\u884c\u65f6\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee I/O \u8bbe\u5907\u548c\u5185\u6838\u6570\u636e\u7ed3\u6784</li> <li>\u64cd\u4f5c\u7cfb\u7edf = C \u7a0b\u5e8f</li> </ul> </li> <li>\u8fdb\u7a0b\u7684\u5185\u5b58\u88ab \u201c\u62c6\u6563\u201d\uff0c\u5e76\u4e14\u88ab Page Table \u91cd\u7ec4\u4e86<ul> <li>\u4ece M[LSTAR] \u7684\u865a\u62df\u5730\u5740\u5904\u53d6\u6307\u4ee4</li> <li>Complete kernel virtual memory map</li> </ul> </li> </ul> <p>\u6211\u4eec\u600e\u4e48\u5728\u4e00\u4e2a syscall \u6307\u4ee4\u4e0a\u6253\u65ad\u70b9\uff1f\u27a1\ufe0f \u501f\u52a9 minimal.S \u9759\u6001\u94fe\u63a5\u7684\u7cfb\u7edf\u8c03\u7528\u548c QEMU \u7684\u65ad\u70b9\u673a\u5236\uff0c\u6211\u4eec\u5c31\u80fd \u201c\u6293\u4f4f\u201d \u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u5e76\u4e14\u67e5\u770b\u524d\u540e\u5bc4\u5b58\u5668\u6570\u503c\u7684\u53d8\u5316\u3002init.py \u4e2d\u7684\u4ee3\u7801\u5bf9\u5927\u5bb6\u7406\u89e3\u7cfb\u7edf\u8f6f\u4ef6 (\u5c24\u5176\u662f\u548c\u5bc4\u5b58\u5668\u4fdd\u5b58/\u6062\u590d\u76f8\u5173\u7684\u6c47\u7f16\u4ee3\u7801) \u7684\u6307\u4ee4\u7ea7\u884c\u4e3a\uff0c\u662f\u975e\u5e38\u6709\u7528\u7684</p> <pre><code>0xffffffff8dc00040 in ?? ()\nrcx 0x0 -&gt; 0x40101e\nr11 0x0 -&gt; 0x202 \nrip 0x40101c -&gt; 0xffffffff8dc00040 \neflags [ IOPL=0 IF ] -&gt; [ IOPL=0 ]\ncs 0x33 -&gt; 0x10\nss 0x2b -&gt; 0x18 \n(gdb)\n</code></pre> <p>init.py</p> <pre><code>import gdb\nimport re\n\nR = {}\n\ndef stop_handler(event):\n    if isinstance(event, gdb.StopEvent):\n        regs = [\n            line for line in \n                gdb.execute('info registers',\n                            to_string=True).\n                            strip().split('\\n')\n                    if not line.startswith('xmm')\n        ]\n        for line in regs:\n            parts = line.split()\n            key = parts[0]\n\n            if m := re.search(r'(\\[.*?\\])', line):\n                val = m.group(1)\n            else:\n                val = parts[1]\n\n            if key in R and R[key] != val:\n                print(key, R[key], '-&gt;', val)\n            R[key] = val\n\ngdb.events.stop.connect(stop_handler)\n\ngdb.execute('target remote localhost:1234')\ngdb.execute('hb *0x401000')\ngdb.execute('continue')\n</code></pre> </li> <li> <p>\u4e2d\u65ad = \u4e00\u6839\u7ebf\u3002\u201c\u544a\u8bc9\u5904\u7406\u5668\uff1a\u505c\u505c\uff0c\u6709\u4e8b\u6765\u4e86\u201d\uff0c\u5269\u4e0b\u5168\u662f\u5904\u7406\u5668\u7684\u4e8b\u3002\u53e6\u4e00\u79cd\u7406\u89e3\u4e2d\u65ad\u7684\u65b9\u5f0f\uff1a\u88ab\u5f3a\u5236 \u201c\u63d2\u5165\u201d \u7684 syscall</p> <p></p> <p>\u5904\u7406\u5668\u7684\u4e2d\u65ad\u884c\u4e3a\uff0c\u5982\u679c\u5904\u7406\u5668\u4e2d\u65ad\u6253\u5f00\uff1a</p> <ul> <li>x86 Family (CISC \u7684\u5386\u53f2\u9057\u8ff9\uff1b\u5904\u7406\u5668\u5b9e\u73b0\u7684\u5669\u68a6)<ul> <li>\u8be2\u95ee\u4e2d\u65ad\u63a7\u5236\u5668\u83b7\u5f97\u4e2d\u65ad\u53f7 <code>n</code></li> <li>\u4fdd\u5b58 <code>CS</code>, <code>EIP</code>, <code>EFLAGS</code>, <code>SS</code>, <code>ESP</code> \u5230\u5806\u6808</li> <li>\u8df3\u8f6c\u5230 <code>IDT[n]</code> \u4e2d\u7684 \u201cGate\u201d<ul> <li>\u4e00\u4e2a\u63cf\u8ff0\u5e26\u6743\u9650\u5207\u6362\u957f\u8df3\u8f6c\u7684\u6570\u636e\u7ed3\u6784</li> </ul> </li> </ul> </li> <li>RISC-V (M-Mode, Direct Exception Mode)<ul> <li>\u68c0\u67e5 <code>mie</code> \u662f\u5426\u5c4f\u853d\u6b64\u6b21\u4e2d\u65ad</li> <li>\u8df3\u8f6c <code>PC = (mtvec &amp; ~0xf)</code></li> <li>\u66f4\u65b0 <code>mcause.Interrupt = 1</code></li> </ul> </li> </ul> <p>\u4ee5 RISC-V \u4e3a\u4f8b\uff0c\u4e2d\u65ad\u5176\u5b9e\u662f\u4e00\u79cd\u88ab\u5f3a\u5236 \u201c\u63d2\u5165\u201d \u7684 syscall: (\u201c\u65e0\u8bba\u4f60\u73b0\u5728\u5728\u505a\u4ec0\u4e48\uff0c\u90fd\u53bb\u6267\u884c\u4e00\u4e0b\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7684\u4ee3\u7801\u5427\u201d)</p> <p> \u4e2d\u65ad \u7cfb\u7edf\u8c03\u7528 (ecall) <ul> <li>\u4fdd\u5b58 <code>mepc = PC</code></li> <li>\u8df3\u8f6c <code>PC = (mtvec &amp; ~0xf)</code></li> <li>\u66f4\u65b0 <code>mcause.Interrupt = 1</code></li> </ul> <ul> <li>\u4fdd\u5b58 <code>mepc = PC</code></li> <li>\u8df3\u8f6c <code>PC = (mtvec &amp; ~0xf)</code></li> <li>\u66f4\u65b0 <code>mcause.Ecall = 1</code></li> </ul> </p> <p>\u4e2d\u65ad\u6765\u4e86\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4ee3\u7801\u5e94\u8be5\u505a\u4ec0\u4e48\uff1f</p> <ul> <li>mov (kernel_rsp), %rsp<ul> <li>\u8fd9\u5c06\u662f\u81f4\u547d\u7684</li> <li>\u8fdb\u7a0b (\u72b6\u6001\u673a) \u7684\u72b6\u6001\u5c31\u6c38\u8fdc\u4e22\u5931\u4e86</li> </ul> </li> <li>\u9996\u5148\uff1a\u5c01\u5b58\u72b6\u6001\u673a (\u5bc4\u5b58\u5668) \u5230\u5185\u5b58\u4e0a<ul> <li>\u5185\u5b58\u7531\u6570\u636e\u7ed3\u6784\u63a7\u5236</li> </ul> </li> <li>\u7136\u540e\uff1a\u6267\u884c\u64cd\u4f5c\u7cfb\u7edf\u4ee3\u7801<ul> <li>C \u4ee3\u7801\u53ef\u4ee5\u4efb\u610f\u4f7f\u7528\u5bc4\u5b58\u5668</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u4ee3\u7801\u9009\u62e9\u4e00\u4e2a\u8fd4\u56de\u7684\u72b6\u6001\u673a</li> <li>\u6062\u590d\u5bc4\u5b58\u5668\u72b6\u6001\uff0c\u6267\u884c sysret (iret)</li> </ul> </li> </ul> <p>thread-os.c</p> <pre><code>#include &lt;am.h&gt;\n#include &lt;klib.h&gt;\n#include &lt;klib-macros.h&gt;\n\ntypedef union thread {\n    struct {\n        const char    *name;\n        void          (*entry)(void *);\n        Context       context;\n        union thread  *next;\n        char          end[0];\n    };\n    uint8_t stack[8192];\n} Thread;\n\nvoid T1(void *);\nvoid T2(void *);\nvoid T3(void *);\n\nThread threads[] = {\n    // Context for the bootstrap code:\n    { .name = \"_\", .entry = NULL, .next = &amp;threads[1] },\n\n    // Thread contests:\n    { .name = \"1\", .entry = T1, .next = &amp;threads[2] },\n    { .name = \"2\", .entry = T2, .next = &amp;threads[3] },\n    { .name = \"3\", .entry = T3, .next = &amp;threads[1] },\n};\nThread *current = &amp;threads[0];\n\nContext *on_interrupt(Event ev, Context *ctx) {\n    // Save context.\n    current-&gt;context = *ctx;\n\n    // Thread schedule.\n    current = current-&gt;next;\n\n    // Restore current thread's context.\n    return &amp;current-&gt;context;\n}\n\nint main() {\n    cte_init(on_interrupt);\n\n    for (int i = 1; i &lt; LENGTH(threads); i++) {\n        Thread *t = &amp;threads[i];\n        t-&gt;context = *kcontext(\n            // a Thread object:\n            // +--------------------------------------------+\n            // | name, ... end[0] | Kernel stack ...        |\n            // +------------------+-------------------------+\n            // ^                  ^                         ^     \n            // t                  &amp;t-&gt;end                   t + 1\n            (Area) { .start = &amp;t-&gt;end, .end = t + 1, },\n            t-&gt;entry, NULL\n        );\n    }\n\n    yield();    // \u6267\u884c yield() \u540e\u518d\u4e5f\u4e0d\u56de\u6765\u4e86\n    assert(0);  // Never returns. \u6c38\u8fdc\u4e0d\u53ef\u80fd\u8d70\u5230\u8fd9\u4e00\u884c\n    // \u64cd\u4f5c\u7cfb\u7edf\uff1a\u52a0\u8f7d\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u7136\u540e\u53d8\u6210\u540e\u53f0\u7684\u4e00\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\n}\n\n\nvoid delay() {\n    for (int volatile i = 0;\n        i &lt; 10000000; i++);\n}\n\nvoid T1(void *arg) { while (1) { putch('A'); delay(); } }\nvoid T2(void *arg) { while (1) { putch('B'); delay(); } }\nvoid T3(void *arg) { while (1) { putch('C'); delay(); } }\n</code></pre> <pre><code>linux$ make\n# Building kernel-image [x86_64-qemu]\n+ CC thread-os.c\n# Building am-archive [x86_64-qemu]\n# Building klib-archive [x86_64-qemu]\n+ LD -&gt; build/kernel-x86_64-qemu.elf\n# Creating image [x86_64-qemu]\n+ CREATE -&gt; build/kernel-x86_64-qemu\nlinux$ make run\n# Building kernel-run [x86_64-qemu]\n# Building am-archive [x86_64-qemu]\n# Building klib-archive [x86_64-qemu]\n+ LD -&gt; build/kernel-x86_64-qemu.elf\n# Creating image [x86_64-qemu]\n+ CREATE -&gt; build/kernel-x86_64-qemu\nABCACBABCABCABCABCBACABCABCBACBACABCBCABCABACBCABCABCABCABCABCABCABCABACBCABCABCABCABACBCABCABACBACBCABACABCBACABCABCAB\nlinux$ make debug # \u7136\u540e\u53e6\u5916\u5f00\u4e00\u4e2a\u7a97\u53e3 gdb -x init.gdb, \u518dlayout asm/si\u5355\u6b65\u6267\u884c\n</code></pre> </li> </ol>"},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/#lecture-22","title":"Lecture 22 \u8fdb\u7a0b\u7684\u5b9e\u73b0","text":"<p>Take-away Messages</p> <p>Everything is a state machine; \u800c\u64cd\u4f5c\u7cfb\u7edf\u5728\u4e2d\u65ad/\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u201c\u5c01\u5b58\u201d \u4e86\u6240\u6709\u8fdb\u7a0b\u7684\u72b6\u6001\u673a\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u5b83\u4eec\u91cd\u65b0\u52a0\u8f7d\u5230 CPU \u4e0a\u6267\u884c\u3002\u987a\u7740\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u4e0d\u96be\u770b\u5230 UNIX \u64cd\u4f5c\u7cfb\u7edf\u548c\u7cfb\u7edf\u8c03\u7528\u7684 \u201c\u76f4\u63a5\u201d \u5b9e\u73b0\u3002\u800c\u8fdb\u7a0b\u4e0d\u8fc7\u662f \u201c\u7ebf\u7a0b\u201d \u52a0\u4e0a\u4e86\u4e00\u4e2a\u5730\u5740\u7ffb\u8bd1\u51fd\u6570 (\u53ea\u8981\u52a0\u4e0a\u865a\u62df\u5185\u5b58 (VR \u773c\u955c))\u3002</p> <ol> <li> <p>\u8fdb\u7a0b = \u6234\u4e0a VR \u773c\u955c\u7684\u7ebf\u7a0b\u3002\u4e00\u4e2a\u51fd\u6570 f\uff0c\u4f7f\u6240\u6709\u5bf9\u5185\u5b58\u5730\u5740 x \u7684\u8bbf\u95ee\u90fd\u8f6c\u6362\u4e3a f(x)\u3002</p> <p></p> </li> <li> <p>Demand Paging</p> <p>\u8fdb\u7a0b\u80fd\u505a\u7684</p> <ul> <li>\u6267\u884c\u4e00\u6761 load/store \u8bbf\u95ee\u4e00\u4e2a\u5730\u5740</li> </ul> <p>\u64cd\u4f5c\u7cfb\u7edf\u770b\u5230\u7684</p> <ul> <li>\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u7684\u533a\u95f4\u5217\u8868 (pmap)<ul> <li>\u6709\u4e9b\u90e8\u5206\u5206\u914d\u4e86\uff0c\u6709\u4e9b\u90e8\u5206\u6ca1\u5206\u914d</li> <li>\u54ea\u4e9b\u9875\u9762\u8981\u4fdd\u7559\u5728\u5185\u5b58\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8bf4\u4e86\u7b97</li> </ul> </li> <li>\u5982\u679c\u53d1\u751f Page Fault<ul> <li>\u5408\u6cd5\uff0c\u672a\u5206\u914d\uff1a\u6539\u53d8 f (\u6570\u636e\u7ed3\u6784)\uff0c\u6620\u5c04\u4e00\u9875</li> <li>\u975e\u6cd5\uff1aSIGSEGV</li> </ul> </li> </ul> </li> <li> <p>Copy-on-write fork()\uff1a\u51fd\u6570 f \u7684\u5999\u7528</p> <ul> <li>fork() \u540e\u76f4\u63a5\u628a\u7236\u5b50\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u6807\u8bb0\u6210\u53ea\u8bfb<ul> <li>\u5728\u6700\u9876\u5c42\u9875\u8868\u6807\u8bb0\u5373\u53ef</li> </ul> </li> <li>\u4efb\u4f55\u5408\u6cd5\u7684 store Page Fault \u65f6\u5c31\u4f1a\u5206\u6210\u4e24\u79cd\u60c5\u51b5<ul> <li>\u672a\u5206\u914d\uff1a\u76f4\u63a5\u5206\u914d</li> <li>\u5df2\u5206\u914d (read-only)\uff1a\u590d\u5236\u4e00\u4efd<ul> <li>share_count--</li> <li>share_count == 1 \u6700\u540e\u4e00\u4efd\u53ea\u8bfb\u526f\u672c\u4e5f\u53d8\u6210\u53ef\u5199</li> </ul> </li> </ul> </li> </ul> <p>fork() \u5728\u8fdb\u884c\u72b6\u6001\u673a\u590d\u5236\u65f6\uff0c\u867d\u7136\u7406\u8bba\u4e0a\u9700\u8981\u505a\u51fa\u5b8c\u6574\u7684\u72b6\u6001\u590d\u5236\uff0c\u4f46\u672c\u7740 \u201c\u590d\u5236\u7684\u6570\u636e\u53ef\u80fd\u7acb\u5373\u88ab\u6d6a\u8d39\u6389\u201d \u7684\u89c2\u5bdf\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5e0c\u671b\u53ea\u5728 \u201c\u4e0d\u5f97\u4e0d\u590d\u5236\u201d \u65f6\u624d\u590d\u5236\u3002</p> <p>\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u7ef4\u62a4\u9875\u9762\u7684\u5171\u4eab\u60c5\u51b5\uff0c\u5e76\u5728 fork \u540e\u5c06\u7236\u5b50\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u90fd\u6807\u8bb0\u4e3a read-only\uff0c\u800c\u5f53\u53cc\u65b9\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u8fdb\u7a0b\u5199\u5165\u53d1\u751f page fault \u65f6\uff0c\u624d\u590d\u5236\u4e00\u9875\u3002\u5bf9\u4e8e\u8fde\u7eed\u7684 fork()\uff0c\u5219\u4f1a\u4ea7\u751f\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u9875\u9762\u7684\u60c5\u51b5\u3002</p> </li> <li> <p>xv6: a simple, Unix-like teaching operating system</p> </li> </ol>"},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/#lecture-23","title":"Lecture 23 \u5904\u7406\u5668\u8c03\u5ea6","text":"<p>Take-away Messages</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf\u8bbe\u8ba1\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u4e3b\u9898\u5c31\u662f\u673a\u5236\u548c\u7b56\u7565\u7684\u5206\u79bb\u2014\u2014\u5b83\u5e2e\u52a9\u6211\u4eec\u5206\u79bb\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u7684\u590d\u6742\u6027\uff0c\u4f7f\u6211\u4eec\u80fd\u5728\u4e00\u4e2a\u5e72\u51c0\u7684\u6982\u5ff5\u4f53\u7cfb\u4e0a\u5904\u7406\u590d\u6742\u7684\u7cfb\u7edf\u3002\u6211\u4eec\u770b\u5230\u8bb8\u591a\u8fd9\u6837\u7684\u4f8b\u5b50\uff1a\u5206\u9875\u673a\u5236\u548c demand-paging \u7b56\u7565\uff1b\u4e0a\u4e0b\u6587\u5207\u6362\u673a\u5236\u548c\u8c03\u5ea6\u7b56\u7565\uff1b\u5b89\u5168\u673a\u5236\u548c\u8bbf\u95ee\u63a7\u5236\u7b56\u7565\u7b49\u7b49\u3002\u901a\u8fc7\u5c06\u673a\u5236\u548c\u7b56\u7565\u5206\u79bb\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u6539\u53d8\u5e95\u5c42\u673a\u5236\u7684\u60c5\u51b5\u4e0b\u8c03\u6574\u7b56\u7565\uff0c\u4ece\u800c\u66f4\u7075\u6d3b\u5730\u9002\u5e94\u4e0d\u540c\u7684\u9700\u6c42\u548c\u73af\u5883\u3002\u8fd9\u79cd\u5206\u79bb\u8fd8\u4f7f\u5f97\u7cfb\u7edf\u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\u66f4\u52a0\u6a21\u5757\u5316\u548c\u53ef\u7ef4\u62a4\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u548c\u4f18\u5316\u3002</p> <ol> <li> <p>\u5904\u7406\u5668\u8c03\u5ea6</p> <p>UNIX Niceness\uff1a-20 ... 19 \u7684\u6574\u6570\uff0c\u8d8a nice \u8d8a\u8ba9\u522b\u4eba\u5f97\u5230 CPU</p> <ul> <li>-20: \u6781\u574f; most favorable to the process</li> <li>19: \u6781\u597d; least favorable to the process</li> </ul> <pre><code>linux$ # \u5c06\u8fdb\u7a0b\u7ed1\u5b9a\u5230 cpu 3\u4e0a\u6267\u884c\uff0c\u8bbe\u7f6enice\u503c\u4e3a19\u548c9\uff0c\u770b\u5230CPU\u5229\u7528\u7387\u670910\u500d\u4e4b\u5dee\ntaskset -c 3 nice -n 19 yes &gt; /dev/null &amp;\ntaskset -c 3 nice -n  9 yes &gt; /dev/null &amp;\nlinux$ top\nPID  USER     PR  NI   VIRT   RES    SHR S  %CPU  %MEM     TIME+ COMMAND\n1539 linux    29   9   3208   1004   908 R  90.4   0.0   0:16.90 yes\n1538 linux    39  19   3208   1032   940 R   9.6   0.0   0:01.84 yes\n</code></pre> </li> <li> <p>\u7b56\u7565\uff1a\u52a8\u6001\u4f18\u5148\u7ea7 (MLFQ)\u3002\u7cfb\u7edf\u81ea\u52a8\u8bbe\u5b9a\u4f18\u5148\u7ea7\uff1a</p> <ul> <li>\u7528\u5b8c\u65f6\u95f4\u7247 \u2192 \u574f\u4eba (\u8bf7\u8ba9\u5b83\u53d8\u5f97 \u201c\u66f4\u597d\u201d\uff0c\u4f18\u5148\u7ea7\u53d8\u4f4e \u2193)</li> <li>\u8ba9\u51fa CPU (I/O) \u2192 \u597d\u4eba (\u53ef\u4ee5\u53d8\u5f97\u66f4\u574f\uff0c\u4f18\u5148\u7ea7\u53d8\u9ad8 \u2191)</li> </ul> <p></p> <p>\u7b56\u7565\uff1aComplete Fair Scheduling (CFS)\u3002\u201c\u8ba9\u7cfb\u7edf\u91cc\u7684\u6240\u6709\u8fdb\u7a0b\u5c3d\u53ef\u80fd\u516c\u5e73\u5730\u5171\u4eab\u5904\u7406\u5668\u201d\uff1a</p> <ul> <li>\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u8bb0\u5f55\u7cbe\u786e\u7684\u8fd0\u884c\u65f6\u95f4</li> <li>\u4e2d\u65ad/\u5f02\u5e38\u53d1\u751f\u540e\uff0c\u5207\u6362\u5230\u8fd0\u884c\u65f6\u95f4\u6700\u5c11\u7684\u8fdb\u7a0b\u6267\u884c</li> </ul> </li> <li> <p><code>lstopo</code>: \u7528\u4e8e\u663e\u793a\u7cfb\u7edf\u786c\u4ef6\u62d3\u6251\u7ed3\u6784\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u4e86\u89e3\u7cfb\u7edf\u4e2d\u5404\u4e2a\u786c\u4ef6\u7ec4\u4ef6\u4e4b\u95f4\u7684\u8fde\u63a5\u5173\u7cfb\u548c\u5c42\u6b21\u7ed3\u6784\u3002</p> <p></p> </li> <li> <p>\u771f\u5b9e\u7684\u5904\u7406\u5668\u8c03\u5ea6</p> <ul> <li>\u4f18\u5148\u7ea7\u53cd\u8f6c\uff1a\u53ea\u6709\u4e00\u4e2a\u5904\u7406\u5668\u65f6\uff0cjyy \u5728\u6301\u6709\u4e92\u65a5\u9501\u7684\u65f6\u5019\u88ab\u4e2d\u4f18\u5148\u7ea7\u8fdb\u7a0b changxu \u8d76\u4e0b\u4e86\u5904\u7406\u5668\uff08\u6ca1\u505a\u5b8c\u5de5\u4f5c\uff0c\u9501\u8fd8\u6ca1\u91ca\u653e\uff09\uff0c\u7136\u800c\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684xxm \u6765\u4e86\u540e\u56e0\u4e3a\u6ca1\u6709\u83b7\u5f97\u9501\uff0c\u53ea\u80fd\u6700\u540e\u88ab\u6392\u5230\u3002</li> </ul> <pre><code>void jyy@nju.edu.cn() {\n    nice(10);\n    mutex_lock(&amp;restroom_lock);\n}\n\nvoid changxu@nju.edu.cn() {\n    nice(0);\n    while (1) ;\n}\n\nvoid xxm@nju.edu.cn() {\n    nice(-10);\n    mutex_lock(&amp;restroom_lock);\n}\n</code></pre> <ul> <li> <p>\u4eca\u5929\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\uff1aSMP (Symmetric Multi-processing)</p> <ul> <li>\u65e2\u4e0d\u80fd\u7b80\u5355\u5730 \u201c\u5206\u914d\u7ebf\u7a0b\u5230\u5904\u7406\u5668\u201d<ul> <li>\u7ebf\u7a0b\u9000\u51fa\uff0c\u77ac\u95f4\u5904\u7406\u5668\u5f00\u59cb\u56f4\u89c2</li> </ul> </li> <li>\u4e5f\u4e0d\u80fd\u7b80\u5355\u5730 \u201c\u8c01\u7a7a\u4e22\u7ed9\u8c01\u201d<ul> <li>\u5728\u5904\u7406\u5668\u4e4b\u95f4\u8fc1\u79fb\u4f1a\u5bfc\u81f4 cache/TLB \u5168\u90fd\u767d\u7ed9</li> <li>mmap/munmap/mprotect \u4f1a\u89e6\u53d1 TLB Shootdown</li> </ul> </li> </ul> </li> <li> <p>\u800c\u4e14\u8fd8\u6709\u5f88\u591a\u4e0d\u540c\u7684\u5b9e\u9645\u60c5\u51b5</p> <ul> <li>NUMA (Non-uniform memory access): \u5171\u4eab\u5185\u5b58\u5bc6\u96c6\u578b\u7a0b\u5e8f\u5728\u8fdc/\u8fd1 CPU \u4e0a\u6027\u80fd\u5dee\u8fbe\u5230\u6570\u500d</li> <li>\u591a\u7528\u6237: \u5355\u7ebf\u7a0b\u7684 A \u548c 10,000 \u7ebf\u7a0b\u7684 B \u5728 CFS \u4e0a\u5171\u4eab CPU...\uff1f</li> <li>\u5f02\u6784\u5904\u7406\u5668: Intel Core Ultra 7: 6P (\u00d7 2T) + 8E + 2LPE\uff0c\u5927\u5c0f\u6838...</li> <li>\u66f4\u5c11\u7684\u5904\u7406\u5668\uff0c\u53cd\u800c\u66f4\u5feb...</li> </ul> <pre><code>linux$ time ./sum \nsum = 200000000\n2*n = 200000000\n\n________________________________________________________\nExecuted in 2.37 secs    fish           external\nusr time    4.70 secs  224.00 micros    4.70 secs\nsys time    0.01 secs  168.00 micros    0.01 secs\n\nlinux$ time taskset -c 0 ./sum\nsum = 200000000\n2*n = 200000000\n\n________________________________________________________\nExecuted in 1.12 secs    fish           external\nusr time    1.12 secs  421.00 micros    1.12 secs\nsys time    0.00 secs  252.00 micros    0.00 secs\n\nlinux$ time taskset -c 0,1,2,3 ./sum\nsum = 200000000\n2*n = 200000000\n\n________________________________________________________\nExecuted in 2.13 secs    fish           external\nusr time    4.24 secs  323.00 micros    4.24 secs\nsys time    0.01 secs  194.00 micros    0.01 secs\n\nlinux$ \n</code></pre> </li> </ul> </li> </ol>"},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/#lecture-24","title":"Lecture 24 \u72b6\u6001\u673a\u6a21\u578b\u7684\u5e94\u7528","text":"<p>Take-away Messages</p> <p>\u5728\u8fd9\u95e8\u8bfe\u4e2d\uff0c\u6211\u4eec\u4ece \u201c\u6570\u5b66\u201d \u7684\u89c6\u89d2\u53bb\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u7684\u4e00\u5207\u2014\u2014\u5f53\u6211\u4eec\u628a\u7a0b\u5e8f\u3001\u7a0b\u5e8f\u7684\u6267\u884c\u3001\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u6267\u884c\u3001\u7cfb\u7edf\u8c03\u7528\u2026\u2026\u8fd9\u4e9b\u770b\u8d77\u6765\u5305\u7f57\u4e07\u8c61\u7684\u590d\u6742\u6982\u5ff5\u90fd\u6295\u5c04\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u6a21\u578b\u4e0a\uff0c\u7528 \u201c\u5e72\u51c0\u201d \u7684\u601d\u7eea\u53bb\u5bfb\u627e\u95ee\u9898\u7684\u672c\u8d28\u3002\u65e0\u8bba\u662f\u4f60\u5e0c\u671b\u5b9e\u73b0\u4e00\u4e2a\u673a\u5236 (\u4f8b\u5982\u4eca\u5929\u7684\u4fe1\u53f7)\uff0c\u8fd8\u662f\u5e0c\u671b\u8bca\u65ad\u4e00\u4e2a\u590d\u6742\u7684\u95ee\u9898\uff0c\u72b6\u6001\u673a\u7684\u89c6\u89d2\u90fd\u5e2e\u52a9\u4f60\u6392\u9664\u5e72\u6270\u3001\u627e\u5230\u5173\u952e\u3002</p> <ol> <li> <p>Profiler: \u5b9e\u73b0 - \u9694\u4e00\u6bb5\u65f6\u95f4 \u201c\u6682\u505c\u201d \u7a0b\u5e8f\u3001\u89c2\u5bdf\u72b6\u6001\u673a\u7684\u6267\u884c</p> <ul> <li>\u4e2d\u65ad\u5c31\u53ef\u4ee5\u505a\u5230 (\u4f8b\u5982\u4e2d\u65ad\u5904\u7406\u7684\u65f6\u5019 printf current pc...)</li> <li>\u7ed9 s \u2192 s\u2032 \u7684\u6307\u4ee4 \u201c\u8bb0\u8d26\u201d<ul> <li>\u5bf9\u5e94\u7684\u8bed\u53e5</li> <li>\u51fd\u6570\u8c03\u7528\u6808</li> </ul> </li> <li>\u5f97\u5230\u7edf\u8ba1\u610f\u4e49\u7684\u6027\u80fd\u6458\u8981</li> </ul> </li> <li> <p>\u4e3a\u4ec0\u4e48 Ctrl-C \u53ef\u4ee5\u7ec8\u6b62\u7a0b\u5e8f? \u27a1\ufe0f Ctrl-C \u662f\u4e00\u4e2a\u4fe1\u53f7\uff0c\u79f0\u4e3a SIGINT\uff08Interrupt Signal\uff09\u3002\u5f53\u7528\u6237\u5728\u7ec8\u7aef\u4e2d\u6309\u4e0b Ctrl-C \u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5411\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u524d\u53f0\u8fdb\u7a0b\u53d1\u9001 SIGINT \u4fe1\u53f7\uff0c\u8fd9\u4e2a\u4fe1\u53f7\u7684\u76ee\u7684\u662f\u8bf7\u6c42\u8fdb\u7a0b\u7ec8\u6b62\u6267\u884c\u3002</p> <p>kill \u7cfb\u7edf\u8c03\u7528: \u53d1\u9001\u4fe1\u53f7 (\u4e0d\u662f \u201c\u6740\u6b7b\u201d)</p> <ul> <li>UNIX: \u6211\u4eec\u5c31\u8fd9\u4e48\u968f\u624b\u4e00\u547d\u540d \ud83d\ude02</li> <li>\u547d\u4ee4\u884c\uff1a<code>kill -SIGNAME pid</code><ul> <li>\u53ef\u4ee5 <code>SIGINT</code>, <code>SIGQUIT</code>, ...<ul> <li><code>SIGKILL</code> (9) \u662f\u4e0d\u53ef\u5ffd\u7565\u7684\u4fe1\u53f7</li> <li>\u5f3a\u884c\u7ec8\u6b62\uff0c\u56e0\u6b64\u4e0d\u63a8\u8350</li> </ul> </li> </ul> </li> </ul> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;signal.h&gt;\n#include &lt;unistd.h&gt;\n\nvoid handler(int signum) {\n    switch (signum) {\n        case SIGINT:\n            printf(\"Received SIGINT!\\n\");\n            break;   // ctrl+c \u65e0\u6cd5\u9000\u51fa\n        case SIGQUIT:\n            printf(\"Received SIGQUIT!\\n\");\n            exit(0); // \u56e0\u6b64\u53ea\u6709 ctrl+\\ \u624d\u80fd\u9000\u51fa\n            break;\n    }\n}\n\nvoid cleanup() {\n    printf(\"atexit() cleanup\\n\");\n}\n\nint main() {\n    signal(SIGINT,  handler);\n    signal(SIGQUIT, handler);\n    atexit(cleanup);\n\n    while (1) {\n        char buf[4096];\n        int nread = read(STDIN_FILENO, buf, sizeof(buf));\n        buf[nread - 1] = '\\0';\n        printf(\"[%d] Got: %s\\n\", getpid(), buf);\n        if (nread &lt; 0) {\n            perror(\"read\");\n            exit(1);\n        }\n        sleep(1);\n    }\n}\n</code></pre> <pre><code>linux$ ./signal \n^CReceived SIGINT!\n^\\Received SIGQUIT!\natexit() cleanup\n</code></pre> </li> </ol>"},{"location":"Tool/tool/","title":"Tool","text":""},{"location":"Tool/tool/#gcc","title":"gcc","text":"<ul> <li><code>-c</code>: \u53ea\u7f16\u8bd1\u4e0d\u94fe\u63a5\u3002 \u5b83\u544a\u8bc9\u7f16\u8bd1\u5668\u7f16\u8bd1\u6e90\u4ee3\u7801\u6587\u4ef6\uff0c\u4f46\u4e0d\u8fdb\u884c\u94fe\u63a5\u64cd\u4f5c\u3002\u5f53\u4f7f\u7528\u8fd9\u4e2a\u9009\u9879\u65f6\uff0cGCC \u4f1a\u5c06\u6bcf\u4e2a\u6307\u5b9a\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u7f16\u8bd1\u6210\u4e00\u4e2a\u5bf9\u5e94\u7684\u76ee\u6807\u6587\u4ef6\uff08\u901a\u5e38\u662f .o \u6587\u4ef6\uff09\uff0c\u800c\u4e0d\u662f\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002\u76ee\u6807\u6587\u4ef6\u5305\u542b\u4e86\u7f16\u8bd1\u540e\u7684\u673a\u5668\u4ee3\u7801\uff0c\u8fd9\u4e9b\u4ee3\u7801\u53ef\u4ee5\u7a0d\u540e\u88ab\u94fe\u63a5\u5668\uff08\u901a\u5e38\u662f ld\uff09\u7528\u6765\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u6216\u5e93\u6587\u4ef6\u3002</li> <li><code>-I.</code>: \u6307\u5b9a\u5f53\u524d\u76ee\u5f55\uff08<code>.</code>\uff09\u4e3a\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84\uff0c\u8fd9\u610f\u5473\u7740\u7f16\u8bd1\u5668\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627e\u5934\u6587\u4ef6\u3002</li> <li><code>-L</code>: \u589e\u52a0 link search path\uff0c\u4f8b\u5982 <code>-L.</code>\u8868\u793a\u589e\u52a0\u5f53\u524d\u76ee\u5f55\uff08<code>.</code>\uff09\u4e3a\u94fe\u63a5\u641c\u7d22\u8def\u5f84</li> <li><code>-l</code>: \u4ee3\u8868\u94fe\u63a5\u67d0\u4e2a\u5e93\uff0c\u94fe\u63a5\u65f6\u4f1a\u81ea\u52a8\u52a0\u4e0a lib \u7684\u524d\u7f00\u3002\u4f8b\u5982 <code>-lco-64</code> \u8868\u793a\u4f1a\u4f9d\u6b21\u5728\u5e93\u51fd\u6570\u7684\u641c\u7d22\u8def\u5f84\u4e2d\u67e5\u627e libco-64.so \u548c libco-64.a\uff0c\u76f4\u5230\u627e\u5230\u4e3a\u6b62\u3002</li> <li><code>-g</code>\uff1a\u751f\u6210\u8c03\u8bd5\u4fe1\u606f\u3002\u8fd9\u544a\u8bc9\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u751f\u6210\u8c03\u8bd5\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u4ee5\u88ab\u8c03\u8bd5\u5668\uff08\u5982 GDB\uff09\u4f7f\u7528\uff0c\u4ee5\u4fbf\u5728\u8c03\u8bd5\u7a0b\u5e8f\u65f6\u63d0\u4f9b\u66f4\u591a\u7684\u5e2e\u52a9\u3002\u53ea\u6709\u8fd9\u6837gdb\u624d\u80fd\u8c03\u8bd5\u65f6\u770b\u5230\u4ee3\u7801\u3002</li> <li><code>--verbose</code>: \u67e5\u770b\u6240\u6709\u7f16\u8bd1\u9009\u9879\u3002\u8fd9\u4f1a\u4f7f\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u8f93\u51fa\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6b65\u9aa4\u3002</li> <li><code>-Wl,--verbose</code>: \u67e5\u770b\u6240\u6709\u94fe\u63a5\u9009\u9879\u3002</li> <li><code>-S</code>: \u8868\u793a\u7f16\u8bd1\u5230\u6c47\u7f16\u4ee3\u7801\u9636\u6bb5\uff0c\u5373\u751f\u6210 <code>.s</code> \u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002<code>.S</code>\u6587\u4ef6\uff1a\u5728\u7f16\u8bd1\u4e4b\u524d\uff0c\u4f1a\u7ecf\u8fc7C\u9884\u5904\u7406\u5668\uff08cpp\uff09\u7684\u5904\u7406\u3002\u8fd9\u610f\u5473\u7740<code>.S</code>\u6587\u4ef6\u53ef\u4ee5\u5305\u542bC\u9884\u5904\u7406\u6307\u4ee4\uff0c\u5982\u5b8f\u5b9a\u4e49\u3001\u6761\u4ef6\u7f16\u8bd1\u6307\u4ee4<code>#ifdef</code>\u3001<code>#ifndef</code>\u3001<code>#endif</code>\u7b49\uff0c\u4ee5\u53ca<code>#include</code>\u6307\u4ee4\u6765\u5305\u542b\u5176\u4ed6\u6587\u4ef6\u3002\u9884\u5904\u7406\u5668\u4f1a\u6839\u636e\u8fd9\u4e9b\u6307\u4ee4\u5bf9\u6587\u4ef6\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u5c06\u5904\u7406\u540e\u7684\u6587\u4ef6\u4ea4\u7ed9\u7f16\u8bd1\u5668\u8fdb\u884c\u7f16\u8bd1\u3002<code>.s</code>\u6587\u4ef6\uff1a\u4e0d\u4f1a\u7ecf\u8fc7C\u9884\u5904\u7406\u5668\u7684\u5904\u7406\uff0c\u76f4\u63a5\u88ab\u7f16\u8bd1\u5668\u7f16\u8bd1\u3002\u56e0\u6b64\uff0c<code>.s</code>\u6587\u4ef6\u4e2d\u4e0d\u80fd\u5305\u542bC\u9884\u5904\u7406\u6307\u4ee4\uff0c\u53ea\u80fd\u5305\u542b\u6c47\u7f16\u4ee3\u7801\u3002</li> <li><code>-Wall</code>: \u542f\u7528\u6240\u6709\u7684\u8b66\u544a\u4fe1\u606f\u3002</li> <li><code>-Os</code>: \u4f18\u5316\u4ee3\u7801\u5927\u5c0f\u3002\u5728\u4e0d\u663e\u8457\u5f71\u54cd\u7a0b\u5e8f\u6027\u80fd\u7684\u524d\u63d0\u4e0b\uff0c\u5c3d\u53ef\u80fd\u5730\u51cf\u5c11\u4ee3\u7801\u7684\u5927\u5c0f\u3002</li> <li><code>-s</code>: \u53bb\u9664\u7b26\u53f7\u8868\u548c\u8c03\u8bd5\u4fe1\u606f\uff0c\u8fd9\u4e5f\u6709\u52a9\u4e8e\u51cf\u5c0f\u6700\u7ec8\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5927\u5c0f</li> <li><code>-DSTANDALONE</code>: <code>-D</code> \u9009\u9879\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a <code>STANDALONE</code>\u7684\u5b8f\uff0c\u8fd9\u4e2a\u5b8f\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u88ab\u7528\u6765\u63a7\u5236\u4e0d\u540c\u7684\u7f16\u8bd1\u8def\u5f84\u6216\u884c\u4e3a\u3002</li> <li><code>-fsanitize=address</code>: \u7528\u4e8e\u542f\u7528 AddressSanitizer\uff08ASan\uff09\u3002AddressSanitizer \u662f\u4e00\u4e2a\u5185\u5b58\u9519\u8bef\u68c0\u6d4b\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u53d1\u73b0\u548c\u5b9a\u4f4d\u5185\u5b58\u8bbf\u95ee\u9519\u8bef\uff0c\u5982\u7f13\u51b2\u533a\u6ea2\u51fa\u3001\u8d8a\u754c\u8bbf\u95ee\u3001\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u5185\u5b58\u7b49\u3002</li> <li><code>-fsanitize=thread</code>: \u7528\u4e8e\u542f\u7528 ThreadSanitizer\uff08TSan\uff09\u3002ThreadSanitizer \u662f\u4e00\u4e2a\u7ebf\u7a0b\u9519\u8bef\u68c0\u6d4b\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u53d1\u73b0\u548c\u5b9a\u4f4d\u7ebf\u7a0b\u76f8\u5173\u7684\u9519\u8bef\uff0c\u5982\u6570\u636e\u7ade\u4e89\u3001\u7ade\u6001\u6761\u4ef6\u7b49\u3002\uff08\u5e76\u975e\u4e07\u80fd\uff0c\u6709\u7684\u65f6\u5019\u53ef\u80fd\u6293\u4e0d\u5230data race\uff09</li> <li><code>-fsanitize=undefined</code>: \u7528\u4e8e\u542f\u7528 UndefinedBehaviorSanitizer\uff08UBSan\uff09\u3002UBSan \u662f\u4e00\u4e2a\u672a\u5b9a\u4e49\u884c\u4e3a\u68c0\u6d4b\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u53d1\u73b0\u548c\u5b9a\u4f4d\u672a\u5b9a\u4e49\u884c\u4e3a\uff0c\u5982\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\u3001\u9664\u4ee5\u96f6\u7b49\u3002</li> <li><code>-fPIE</code>: \u751f\u6210\u4f4d\u7f6e\u65e0\u5173\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u5168\u79f0\u662f \"Position Independent Executable\"\uff0c\u5373\u4f4d\u7f6e\u65e0\u5173\u53ef\u6267\u884c\u6587\u4ef6\u3002\u8fd9\u610f\u5473\u7740\u4ee3\u7801\u4e2d\u7684\u6240\u6709\u5730\u5740\u5f15\u7528\u90fd\u662f\u76f8\u5bf9\u4e8e\u7a0b\u5e8f\u7684\u52a0\u8f7d\u5730\u5740\u7684\u504f\u79fb\u91cf\uff0c\u800c\u4e0d\u662f\u7edd\u5bf9\u5730\u5740\u3002\u8fd9\u6837\uff0c\u65e0\u8bba\u7a0b\u5e8f\u52a0\u8f7d\u5230\u5185\u5b58\u7684\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u5b83\u90fd\u53ef\u4ee5\u6b63\u786e\u6267\u884c\u3002</li> <li><code>-fPIC</code>: \u751f\u6210\u4f4d\u7f6e\u65e0\u5173\u7684\u4ee3\u7801\u3002\u5168\u79f0\u662f \"Position Independent Code\"\uff0c\u8fd9\u79cd\u4ee3\u7801\u53ef\u4ee5\u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u7684\u4efb\u4f55\u4f4d\u7f6e\u5e76\u6b63\u786e\u6267\u884c\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u751f\u6210\u5171\u4eab\u5e93\uff08<code>.so</code> \u6587\u4ef6\uff09\uff0c\u56e0\u4e3a\u5171\u4eab\u5e93\u9700\u8981\u5728\u4e0d\u540c\u7684\u8fdb\u7a0b\u4e2d\u88ab\u52a0\u8f7d\u5230\u4e0d\u540c\u7684\u5185\u5b58\u5730\u5740\u3002</li> <li><code>-fno-pic</code>: \u4e0d\u751f\u6210\u4f4d\u7f6e\u65e0\u5173\u7684\u4ee3\u7801\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u4ee3\u7801\u88ab\u52a0\u8f7d\u5230\u4e0d\u540c\u7684\u5185\u5b58\u5730\u5740\uff0c\u5b83\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u9009\u9879\u901a\u5e38\u53ea\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u4f8b\u5982\u5f53\u4f60\u9700\u8981\u4f18\u5316\u4ee3\u7801\u7684\u6027\u80fd\u6216\u8005\u5f53\u4f60\u77e5\u9053\u4ee3\u7801\u5c06\u603b\u662f\u88ab\u52a0\u8f7d\u5230\u76f8\u540c\u7684\u5185\u5b58\u5730\u5740\u65f6\u3002</li> <li><code>-ffreestanding -nostdlib</code>: \u7f16\u8bd1\u7684\u76ee\u6807\u4ee3\u7801\u662f\u72ec\u7acb\u7684\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u64cd\u4f5c\u7cfb\u7edf\u7684\u7279\u5b9a\u529f\u80fd\u6216\u5e93\u3002\u4e0d\u4f7f\u7528\u6807\u51c6\u5e93\u3002</li> <li><code>-shared</code>: \u751f\u6210\u5171\u4eab\u5e93\u3002\u8fd9\u544a\u8bc9\u7f16\u8bd1\u5668\u751f\u6210\u4e00\u4e2a\u5171\u4eab\u5e93\uff08\u901a\u5e38\u662f <code>.so</code> \u6587\u4ef6shared object\uff09\uff0c\u800c\u4e0d\u662f\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002</li> <li><code>-U_FORTIFY_SOURCE</code>: \u7528\u4e8e\u53d6\u6d88 <code>_FORTIFY_SOURCE</code> \u5b8f\u7684\u5b9a\u4e49\uff0c\u8fd9\u610f\u5473\u7740\u7f16\u8bd1\u5668\u4e0d\u4f1a\u5bf9\u53ef\u80fd\u5b58\u5728\u7f13\u51b2\u533a\u6ea2\u51fa\u98ce\u9669\u7684\u51fd\u6570\u8c03\u7528\u8fdb\u884c\u989d\u5916\u7684\u68c0\u67e5\u548c\u4fdd\u62a4\u3002\u662f\u7528\u6765\u9632\u6b62 __longjmp_chk \u4ee3\u7801\u68c0\u67e5\u5230\u5806\u6808\u5207\u6362\u4ee5\u540e\u62a5\u9519 (\u5f53\u6210\u662f stack smashing)\u3002</li> <li><code>-x c</code>: \u6307\u5b9a\u4e86\u8f93\u5165\u6587\u4ef6\u7684\u8bed\u8a00\u7c7b\u578b\u4e3aC\u8bed\u8a00\u3002</li> <li><code>-w</code>: \u5173\u95ed\u6240\u6709\u8b66\u544a\u4fe1\u606f\u3002</li> <li><code>-m32</code>: \u751f\u621032\u4f4d\u4ee3\u7801\u3002</li> </ul>"},{"location":"Tool/tool/#objdump","title":"objdump","text":"<ul> <li><code>-d</code>: \u53cd\u6c47\u7f16\u4ee3\u7801\u6bb5\u3002\u53cd\u6c47\u7f16\u6307\u5b9a\u7684\u76ee\u6807\u6587\u4ef6\u6216\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u6bb5\uff0c\u4e0d\u5305\u62ec\u5176\u4ed6\u6bb5\uff08\u5982\u6570\u636e\u6bb5\u3001BSS \u6bb5\u7b49\uff09\u3002</li> <li><code>-D</code>: \u53cd\u6c47\u7f16\u6240\u6709\u6bb5\u3002\u5305\u62ec\u4ee3\u7801\u6bb5\u548c\u6570\u636e\u6bb5\u3002</li> <li><code>-h</code>: \u663e\u793a ELF \u6587\u4ef6\u7684\u5934\u4fe1\u606f\u3002</li> </ul>"},{"location":"Tool/tool/#readelf","title":"readelf","text":"<ul> <li>ELF (Executable and Linkable Format)\u662f\u4e00\u79cd\u7528\u4e8e\u53ef\u6267\u884c\u6587\u4ef6\u3001\u76ee\u6807\u6587\u4ef6\u548c\u5171\u4eab\u5e93\u7684\u6807\u51c6\u6587\u4ef6\u683c\u5f0f\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7c7b Unix \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u3002</li> <li><code>-a</code>: all\uff0c\u663e\u793aELF\u6587\u4ef6\u7684\u6240\u6709\u8282\uff08section\uff09\u548c\u6bb5\uff08segment\uff09\u7684\u4fe1\u606f\uff0c\u4ee5\u53ca\u7b26\u53f7\u8868\u3001\u5b57\u7b26\u4e32\u8868\u3001\u91cd\u5b9a\u4f4d\u4fe1\u606f\u7b49\u3002</li> <li><code>-l</code>: \u663e\u793a ELF \u6587\u4ef6\u7684\u7a0b\u5e8f\u5934\uff08Program Header\uff09\u4fe1\u606f\u3002\u7a0b\u5e8f\u5934\u5305\u542b\u4e86\u5173\u4e8e ELF \u6587\u4ef6\u5982\u4f55\u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u6bb5\uff08Segment\uff09\u7684\u5927\u5c0f\u3001\u7c7b\u578b\u3001\u504f\u79fb\u91cf\u7b49\u3002</li> <li><code>-S</code>: \u663e\u793a ELF \u6587\u4ef6\u4e2d\u7684\u6240\u6709 Section Header \u4fe1\u606f\u3002</li> </ul>"},{"location":"Tool/tool/#gdb","title":"gdb","text":"<ul> <li>a small tutorial for GDB</li> <li><code>starti</code>: \u5f00\u59cb\u6267\u884c\u7a0b\u5e8f\uff0c\u5e76\u5728\u6267\u884c\u7b2c\u4e00\u6761\u6307\u4ee4\u4e4b\u524d\u505c\u6b62\u3002\u8fd9\u4e2a\u547d\u4ee4\u901a\u5e38\u7528\u4e8e\u5728\u7a0b\u5e8f\u5f00\u59cb\u65f6\u8bbe\u7f6e\u65ad\u70b9\uff0c\u4ee5\u4fbf\u68c0\u67e5\u7a0b\u5e8f\u7684\u521d\u59cb\u72b6\u6001\u3002</li> <li><code>layout asm</code>: \u5207\u6362\u5230\u6c47\u7f16\u4ee3\u7801\u5e03\u5c40\u6a21\u5f0f</li> <li><code>layout src</code>: \u5207\u6362\u5230\u6e90\u4ee3\u7801\u5e03\u5c40\u6a21\u5f0f</li> <li><code>si</code>: \u5355\u6b65\u6267\u884c\u4e00\u6761\u6c47\u7f16\u6307\u4ee4\u3002</li> <li><code>enter\u952e</code>\uff1a\u91cd\u590d\u4e0a\u4e00\u4e2a\u547d\u4ee4\u3002</li> <li><code>p $rsp</code>: \u6253\u5370\u5bc4\u5b58\u5668 <code>rsp</code> \u7684\u5f53\u524d\u503c\uff0c\u4e5f\u5c31\u662f\u663e\u793a\u6808\u6307\u9488\u7684\u503c\uff08\u4e00\u4e2a\u5730\u5740\uff0c\u8868\u793a\u6808\u9876\u7684\u5185\u5b58\u5730\u5740\uff09\u3002\u4f8b\u5b50\u8f93\u51fa<code>$1 = (void *) 0x7fffffffdcb0</code></li> <li><code>x/x $rsp</code>: \u4ee5\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u68c0\u67e5\u5185\u5b58\u5730\u5740 <code>$rsp</code> \u5904\u7684\u503c\u3002x \u547d\u4ee4\u662fGDB\u4e2d\u7684\u4e00\u4e2a\u68c0\u67e5\u5185\u5b58\u7684\u547d\u4ee4\uff0c/x \u8868\u793a\u4ee5\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u663e\u793a\uff0c$rsp \u662f\u5bc4\u5b58\u5668 <code>rsp</code> \u7684\u5f53\u524d\u503c\uff0c\u5b83\u6307\u5411\u6808\u9876\u3002\u4f8b\u5b50\u8f93\u51fa<code>0x7fffffffdcb0: 0x00000001</code>\uff0c\u8fd9\u4e2a<code>M[rsp]</code>\u662f1\u663e\u7136\u975e\u6cd5\uff0c\u8fdb\u800c\u5bfc\u81f4segmentation fault\u3002</li> <li><code>x/i $eip</code>: <code>/i</code>\u8fd9\u662f x \u547d\u4ee4\u7684\u4e00\u4e2a\u53c2\u6570\uff0c\u8868\u793a\u4ee5\u6307\u4ee4\u7684\u5f62\u5f0f\u663e\u793a\u5185\u5b58\u5185\u5bb9\u3002\u8f93\u51fa<code>0x0000000000007c00:  jmp    0x7c00</code></li> <li><code>x/16b 0x7c00</code>: \u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u4ece\u5185\u5b58\u5730\u5740 0x7c00 \u5f00\u59cb\uff0c\u663e\u793a 16 \u4e2a\u5b57\u8282\u7684\u5185\u5bb9\u3002</li> <li><code>tui disable</code>: \u7981\u7528 TUI\uff08Text User Interface\uff0c\u6587\u672c\u7528\u6237\u754c\u9762\uff09\u6a21\u5f0f\uff0c\u4f7f GDB \u6062\u590d\u5230\u9ed8\u8ba4\u7684\u547d\u4ee4\u884c\u754c\u9762\u3002</li> <li><code>info registers</code>: \u663e\u793a\u5f53\u524d\u6240\u6709\u5bc4\u5b58\u5668\u7684\u503c\u3002</li> <li><code>info registers eflag</code>: \u663e\u793a\u5f53\u524d eflag \u5bc4\u5b58\u5668\u7684\u503c\u3002</li> <li><code>start</code>: \u5f00\u59cb\u8c03\u8bd5\u3002</li> <li><code>s</code>: \u5355\u6b65\u6267\u884c\u3002</li> <li><code>r</code>: \u91cd\u65b0\u6267\u884c\u7a0b\u5e8f\uff0c\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u6216\u9047\u5230\u65ad\u70b9\u3002</li> <li><code>-x</code>: \u6307\u5b9a\u4e00\u4e2a\u5305\u542bGDB\u547d\u4ee4\u7684\u811a\u672c\u6587\u4ef6\uff0c\u4ee5\u4fbf\u5728\u542f\u52a8GDB\u65f6\u81ea\u52a8\u6267\u884c\u8fd9\u4e9b\u547d\u4ee4\u3002\u4f8b\u5982<code>gdb -x init.gdb</code> or <code>gdb -x debug.py</code></li> <li><code>c</code>: \u7ee7\u7eed\u6267\u884c\u7a0b\u5e8f\uff0c\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u6216\u9047\u5230\u65ad\u70b9\u3002</li> <li><code>n</code>: \u4e0b\u4e00\u6b65\u3002</li> <li><code>rs</code>: \u53cd\u5411\u6267\u884c\u3002\u9700\u8981.gdb\u6587\u4ef6\u91cc\u5199\u4e86<code>target record-full</code>\u624d\u80fd\u652f\u6301\u53cd\u5411\u6267\u884c\u3002</li> <li><code>info proc mappings</code>: \u663e\u793a\u5f53\u524d\u8fdb\u7a0b\u7684\u5185\u5b58\u6620\u5c04\u3002</li> <li><code>info inferiors</code>: \u663e\u793a\u5f53\u524d\u8fdb\u7a0b\u7684\u5b50\u8fdb\u7a0b\u4fe1\u606f\uff08pid\u7b49\uff09\u3002</li> <li><code>!pmap pid</code>: \u4ee5pmap\u547d\u4ee4\u663e\u793a\u8fdb\u7a0b\u7684\u5185\u5b58\u6620\u5c04\u3002</li> <li><code>p/s argv</code>: \u6253\u5370 argv \u53d8\u91cf\u7684\u503c\u3002<code>/s</code> \u662f print string \u7684\u7f29\u5199\uff0c\u7528\u4e8e\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u6253\u5370\u53d8\u91cf\u7684\u503c\u3002</li> <li><code>finish</code>: \u5728\u5f53\u524d\u51fd\u6570\u4e2d\u6267\u884c\u5230\u51fd\u6570\u7ed3\u675f\u3002</li> <li><code>wa environ</code>: \u8bbe\u7f6ewatch point\uff0c\u5f53environ\u53d8\u91cf\u7684\u503c\u6539\u53d8\u65f6\uff0c\u89e6\u53d1\u65ad\u70b9\u3002\u8bbe\u7f6e<code>wa environ</code>\u597d\u540e\u518d\u6267\u884c<code>c</code>\u5373\u53ef\u3002</li> <li><code>rwatch *0xfde0</code>: \u5728\u5185\u5b58\u5730\u5740 0xfde0 \u5904\u8bbe\u7f6e\u4e00\u4e2a read watch point\uff0c\u770b\u4e0b\u8c01\u8bfb\u4e86\u5b83\u3002</li> <li><code>-x init.gdb</code>: \u6267\u884c init.gdb \u6587\u4ef6\u4e2d\u7684\u547d\u4ee4\u3002</li> <li><code>inferior 2</code>: \u5207\u6362\u5230\u5b50\u8fdb\u7a0b 2\u3002</li> <li><code>start minimal</code>: \u4ee5minimal\u8fd9\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u4f5c\u4e3a\u53c2\u6570\u8fd0\u884c\u7a0b\u5e8f\u3002\uff08\u4f8b\u5982\u5728debug loader\u7a0b\u5e8f\u65f6\uff0c\u60f3\u770bloader\u662f\u5982\u4f55\u5c06minimal\u52a0\u8f7d\u5230\u5185\u5b58\u7684\uff0c\u53ef\u4ee5\u5728gdb loader\u540e\u8f93\u5165\u8fd9\u4e2a\uff09</li> </ul>"},{"location":"Tool/tool/#initgdb","title":"init.gdb\u793a\u4f8b","text":"<pre><code>set follow-fork-mode child # \u8bbe\u7f6eGDB\u5728\u9047\u5230fork\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u8ddf\u8e2a\u5b50\u8fdb\u7a0b\u3002\nset detach-on-fork off     # \u8bbe\u7f6eGDB\u5728fork\u540e\u4e0d\u5206\u79bb (detach) \u5b50\u8fdb\u7a0b\uff0c\u5373\u4fdd\u6301\u5bf9\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u7684\u8ddf\u8e2a\u3002\nset follow-exec-mode same  # \u8bbe\u7f6eGDB\u5728\u9047\u5230exec\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u7ee7\u7eed\u8ddf\u8e2a\u5f53\u524d\u8fdb\u7a0b\u3002\nset confirm off            # \u5173\u95edGDB\u7684\u786e\u8ba4\u63d0\u793a\u3002\nset pagination off         # \u5173\u95edGDB\u7684\u5206\u9875\u8f93\u51fa\u3002\ntui disable                # \u7981\u7528GDB\u7684\u6587\u672c\u7528\u6237\u754c\u9762 (TUI)\u3002\n\nskip function strlen       # \u8df3\u8fc7\u5bf9strlen\u51fd\u6570\u7684\u5355\u6b65\u6267\u884c\u3002\nskip function strcpy\nskip function strchr\nskip function print\nskip function zalloc\nskip function peek\nskip function gettoken\n\nsource visualize.py        # \u52a0\u8f7d\u4e00\u4e2a\u540d\u4e3avisualize.py\u7684\u811a\u672c\uff0c\u7528\u4e8e\u53ef\u89c6\u5316\u8c03\u8bd5\u6570\u636e\u3002\n\nbreak runcmd               # \u5728runcmd\u51fd\u6570\u5904\u8bbe\u7f6e\u65ad\u70b9\u3002\n\nrun                        # \u8fd0\u884c\u7a0b\u5e8f\u3002\nn                          # \u5355\u6b65\u6267\u884c\u4e0b\u4e00\u6761\u6307\u4ee4\u3002\ndefine hook-stop           # \u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3ahook-stop\u7684GDB\u94a9\u5b50 (hook)\uff0c\u5728\u6bcf\u6b21\u505c\u6b62\u65f6\u6267\u884c\u3002\n    pdump                  # \u5728hook-stop\u94a9\u5b50\u4e2d\u6267\u884c\u7684\u547d\u4ee4\uff0c\u7528\u4e8e\u6253\u5370\u67d0\u4e9b\u8c03\u8bd5\u4fe1\u606f\u3002\nend\n</code></pre>"},{"location":"Tool/tool/#visualizepy","title":"visualize.py","text":"<pre><code>import gdb\nimport subprocess\nimport re\n\nclass ProcDump(gdb.Command):\n    def __init__(self):\n        super(ProcDump, self).__init__(\n            \"pdump\", gdb.COMMAND_DATA, gdb.COMPLETE_SYMBOL\n        )\n\n    def invoke(self, *_):\n        print()\n\n        for proc in gdb.inferiors():\n            pid = proc.pid\n            if int(pid) == 0:\n                continue\n\n            print(f'Process {proc.num} ({pid})', end='')\n            if proc is gdb.selected_inferior():\n                print('*')\n            else:\n                print()\n\n            for fd_desc in subprocess.check_output(\n                ['ls', '-l', f'/proc/{pid}/fd'], encoding='utf-8'\n            ).splitlines()[1:]:\n                perm, *_, fd, _, fname = fd_desc.split()\n\n                if int(fd) &lt; 10:\n                    if 'rw' in perm: rw = '&lt;-&gt;'\n                    elif 'r' in perm: rw = '&lt;--'\n                    elif 'w' in perm: rw = '--&gt;'\n                    if 'pipe:' in fname:\n                        pipe_id = re.search(f'[0-9]+', fname).group()\n                        print(f'    {fd} {rw} [=== {pipe_id} ===]')\n                    else:\n                        print(f'    {fd} {rw} {fname}')\n\n            print()\n\nProcDump()\n</code></pre>"},{"location":"Tool/tool/#strace","title":"strace","text":"<ul> <li>strace: system call trace</li> <li><code>-f</code>: \u8ddf\u8e2a\u6240\u6709\u5b50\u8fdb\u7a0b\uff0c\u5373\u5982\u679c\u7a0b\u5e8f\u521b\u5efa\u4e86\u5b50\u8fdb\u7a0b\uff0cstrace \u4e5f\u4f1a\u8ddf\u8e2a\u8fd9\u4e9b\u5b50\u8fdb\u7a0b\u7684\u7cfb\u7edf\u8c03\u7528\u3002</li> <li><code>-T</code>: \u663e\u793a\u6bcf\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u6267\u884c\u65f6\u95f4\u3002</li> </ul>"},{"location":"Tool/tool/#grep","title":"grep","text":"<ul> <li><code>grep -nr \"\\bmain\\b\" nemu/src</code>: \u641c\u7d22 nemu/src \u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u4e2d\u5305\u542b \"main\" \u5b57\u7b26\u4e32\u7684\u884c\uff0c\u5e76\u663e\u793a\u884c\u53f7\u548c\u6587\u4ef6\u540d\u3002<code>-r</code> \u8868\u793a\u9012\u5f52\u641c\u7d22\u5b50\u76ee\u5f55\u3002<code>-n</code> \u8868\u793a\u663e\u793a\u884c\u53f7\u3002<code>\\b</code> \u8868\u793a\u5355\u8bcd\u8fb9\u754c\uff0c\u786e\u4fdd \"main\" \u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u5355\u8bcd\u3002</li> <li><code>grep -v</code>: <code>-v</code>\u8868\u793a\u53cd\u5411\u5339\u914d\uff0c\u5373\u8f93\u51fa\u4e0d\u5305\u542b\u5339\u914d\u6a21\u5f0f\u7684\u884c\u3002</li> <li><code>grep -e</code>: <code>-e</code>\u6307\u5b9a\u8981\u641c\u7d22\u7684pattern\u3002</li> <li><code>grep -E</code>: \u5f00\u542f\u6b63\u5219\u8868\u8fbe\u5f0f\u3002</li> </ul>"},{"location":"Tool/tool/#vim","title":"vim","text":"<ul> <li><code>vimtutor</code>: \u542f\u52a8 Vim \u81ea\u5e26\u7684\u4ea4\u4e92\u5f0f\u6559\u7a0b\u3002</li> <li><code>%</code>: \u5728 Vim \u4e2d\uff0c<code>%</code>\u7b26\u53f7\u8868\u793a\u5f53\u524d\u6587\u4ef6\u540d\u3002\u6240\u4ee5\uff0c<code>%!grep -v -e open</code> \u5b9e\u9645\u4e0a\u662f\u5728\u5bf9\u5f53\u524d\u6587\u4ef6\u6267\u884c grep \u547d\u4ee4\u3002</li> <li><code>!</code>: \u7528\u4e8e\u5728 Vim \u4e2d\u6267\u884c\u5916\u90e8\u547d\u4ee4\u3002\u5b83\u544a\u8bc9 Vim \u63a5\u4e0b\u6765\u7684\u90e8\u5206\u662f\u4e00\u4e2a\u5916\u90e8\u547d\u4ee4\uff0c\u800c\u4e0d\u662f Vim \u5185\u90e8\u547d\u4ee4\u3002</li> <li><code>%!grep -v -e open</code>: \u5728\u5f53\u524d\u6587\u4ef6\u4e2d\u641c\u7d22\u4e0d\u5305\u542b \"open\" \u5b57\u7b26\u4e32\u7684\u884c\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</li> <li> <p><code>i1&lt;ESC&gt;q1yyp&lt;C-a&gt;q98@1</code>: \u4e00\u6b21\u6027\u751f\u6210 1 ~ 100 \u4e4b\u95f4\u7684\u6570\u5b57\uff1a</p> <pre><code>1\n2\n3\n.....\n98\n99\n100\n</code></pre> <ul> <li><code>i1&lt;ESC&gt;</code>: \u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\uff0c\u8f93\u5165\u6570\u5b571\uff0c\u7136\u540e\u6309Esc\u952e\u9000\u51fa\u63d2\u5165\u6a21\u5f0f\u3002</li> <li><code>q1yyp</code>: \u5f55\u5236\u4e00\u4e2a\u540d\u4e3a1\u7684\u5b8f\uff0c\u5185\u5bb9\u662f\u590d\u5236\u5f53\u524d\u884c\u5e76\u7c98\u8d34\u4e00\u6b21\u3002</li> <li><code>&lt;C-a&gt;</code>: \u6267\u884cCtrl+a\uff0cCtrl+a\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6309\u952e\u7ec4\u5408\uff0c\u7528\u4e8e\u6267\u884c\u6570\u5b57\u9012\u589e\u64cd\u4f5c\u3002</li> <li><code>q</code>: \u9000\u51fa\u5b8f\u5f55\u5236\u6a21\u5f0f\u3002</li> <li><code>98@1</code>: \u8c03\u7528\u540d\u4e3a1\u7684\u5b8f98\u6b21\u3002</li> </ul> </li> </ul>"},{"location":"Tool/tool/#make","title":"make","text":"<ul> <li><code>-nB</code>: \u5b83\u7684\u4f5c\u7528\u662f\u6267\u884c Makefile \u4e2d\u7684\u89c4\u5219\uff0c\u4f46\u4e0d\u5b9e\u9645\u6267\u884c\u4efb\u4f55\u547d\u4ee4\uff0c\u800c\u662f\u6253\u5370\u51fa\u5982\u679c\u6267\u884c\u8fd9\u4e9b\u547d\u4ee4\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002<code>-n</code> \u9009\u9879\u8868\u793a\u201c\u5e72\u8fd0\u884c\u201d\uff0c\u5373\u53ea\u663e\u793a\u547d\u4ee4\u800c\u4e0d\u6267\u884c\u5b83\u4eec\uff0c\u800c <code>-B</code> \u9009\u9879\u5219\u8868\u793a\u201c\u5f3a\u5236\u91cd\u65b0\u751f\u6210\u6240\u6709\u76ee\u6807\u201d\uff0c\u5373\u4f7f\u5b83\u4eec\u5df2\u7ecf\u662f\u6700\u65b0\u7684\u3002</li> <li><code>.PHONY: run clean</code>: \u8fd9\u662f Makefile \u4e2d\u7684\u89c4\u5219\uff0c\u7528\u4e8e\u5b9a\u4e49\u4f2a\u76ee\u6807 <code>run</code> \u548c <code>clean</code>\u3002\u4f2a\u76ee\u6807\u4e0d\u662f\u5b9e\u9645\u7684\u6587\u4ef6\uff0c\u800c\u662f\u4e00\u4e2a\u6807\u7b7e\uff0c\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u52a8\u4f5c\u3002\u5728 Makefile \u4e2d\uff0c\u4f2a\u76ee\u6807\u901a\u5e38\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e9b\u4e0d\u4f9d\u8d56\u4e8e\u6587\u4ef6\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u7f16\u8bd1\u3001\u8fd0\u884c\u548c\u6e05\u7406\u3002</li> <li><code>$@</code>: \u662f\u4e00\u4e2a\u81ea\u52a8\u53d8\u91cf\uff0c\u8868\u793a\u76ee\u6807\u6587\u4ef6\u7684\u540d\u79f0\u3002</li> <li><code>$&lt;</code>: \u8fd9\u4e2a\u81ea\u52a8\u53d8\u91cf\u8868\u793a\u7b2c\u4e00\u4e2a\u4f9d\u8d56\u6587\u4ef6\u7684\u540d\u79f0\u3002</li> <li><code>$^</code>: \u8fd9\u4e2a\u81ea\u52a8\u53d8\u91cf\u8868\u793a\u6240\u6709\u4f9d\u8d56\u6587\u4ef6\u7684\u540d\u79f0\uff0c\u4ee5\u7a7a\u683c\u5206\u9694\u3002</li> <li><code>NAME := hello</code>: \u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf NAME\uff0c\u5176\u503c\u4e3a hello</li> <li> <p>example 1: \u8bb0\u5f55\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5e76\u5c06\u8fd9\u4e9b\u4fe1\u606f\u4fdd\u5b58\u5230\u4e00\u4e2a\u540d\u4e3a compile.log \u7684\u6587\u4ef6\u4e2d\u3002</p> <ul> <li><code>grep</code> \u547d\u4ee4\u7528\u4e8e\u8fc7\u6ee4\u8f93\u51fa\uff0c\u53ea\u4fdd\u7559\u4e0d\u5305\u542b\u4ee5 <code>#</code>\u3001<code>echo</code>\u3001<code>mkdir</code> \u6216 <code>make</code> \u5f00\u5934\u7684\u884c\u3002</li> <li><code>sed</code> \u547d\u4ee4\u7528\u4e8e\u6587\u672c\u66ff\u6362\u3002\u8fd9\u91cc\u7684\u66ff\u6362\u89c4\u5219\u662f\u5c06\u73af\u5883\u53d8\u91cf <code>AM_HOME</code> \u66ff\u6362\u4e3a\u7a7a\u5b57\u7b26\u4e32 <code>\\AM</code>\u3002<code>g</code> \u8868\u793a\u5168\u5c40\u66ff\u6362\uff0c\u5373\u66ff\u6362\u6240\u6709\u5339\u914d\u7684\u5b57\u7b26\u4e32\u3002\u63a5\u7740\u7ee7\u7eed\u5c06\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 <code>$(PWD)</code> \u66ff\u6362\u4e3a <code>.</code></li> </ul> <pre><code>make -nB \\\n      | grep -ve '^\\(\\#\\|echo\\|mkdir\\|make\\)' \\\n      | sed \"s#$(AM_HOME)#\\AM#g\" \\\n      | sed \"s#$(PWD)#.#g\" \\\n      &gt; compile.log\n</code></pre> </li> <li> <p>example 2: \u4f7f\u7528 grep \u8fc7\u6ee4\u6389\u4ee5 <code>#</code>\u3001<code>echo</code> \u6216 <code>mkdir</code> \u5f00\u5934\u7684\u884c\u3002</p> <pre><code>make -nB | grep -ve '^\\(\\#\\|echo\\|mkdir\\)' | vim -\n:set nowrap  # vim \u4e0d\u6362\u884c\u663e\u793a\n:g/fixdep/d  # vim \u5220\u9664\u6240\u6709\u542bfixdep\u7684\u884c\n:g/mv/d      # vim \u5220\u9664\u6240\u6709\u542bmv\u7684\u884c\n:execute \"normal \\&lt;c-v&gt;\" # wsl\u91ccCTRL+v\u662f\u7c98\u8d34\u800c\u4e0d\u662f\u8fdb\u5165visual block mode\uff0c\u53ea\u80fd\u5148\u7528\u8fd9\u4e2aworkaround\u4e86\n:'&lt;,'&gt;s/ /\\r/g # \u5c06\u6240\u6709\u7a7a\u683c\u66ff\u6362\u4e3a\u56de\u8f66\u7b26\u3002\u5176\u4e2d'&lt;,'&gt;\u662f\u7528visual mode\u9009\u4e2d\u4e00\u884c\u5c31\u81ea\u52a8\u51fa\u6765\u4e86\n</code></pre> </li> <li> <p>\u60f3\u8981\u770b\u5230 make \u8fc7\u7a0b\u4e2d\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u9700\u8981\u5728 makeFile \u91cc\u7684 CFLAGS \u91cc\u52a0\u4e0a<code>-Wl,--verbose</code></p> </li> <li><code>make gdb</code>: \u542f\u52a8 GDB \u8c03\u8bd5\u5668\uff0c\u5e76\u5c06\u7a0b\u5e8f\u52a0\u8f7d\u5230 GDB \u4e2d\u3002</li> </ul>"},{"location":"Tool/tool/#qemu-system-x86_64","title":"qemu-system-x86_64","text":"<ul> <li><code>qemu-system-x86_64 -monitor stdio minimal.img</code>: \u542f\u52a8 QEMU \u6a21\u62df\u5668\u5e76\u52a0\u8f7d\u4e00\u4e2a\u540d\u4e3a minimal.img \u7684\u78c1\u76d8\u955c\u50cf\u6587\u4ef6\u3002\u8fd9\u4e2a\u6307\u4ee4\u7684\u4f5c\u7528\u662f\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u7684 x86_64 \u67b6\u6784\u7684\u8ba1\u7b97\u673a\u73af\u5883\uff0c\u5e76\u4e14\u901a\u8fc7\u6807\u51c6\u8f93\u5165\u8f93\u51fa\uff08stdio\uff09\u6765\u4e0e QEMU \u76d1\u89c6\u5668\u8fdb\u884c\u4ea4\u4e92(<code>-monitor stdio</code>)\u3002</li> <li><code>-s</code>: \u8868\u793a\u542f\u7528GDB\u8c03\u8bd5\u670d\u52a1\u5668\uff0c\u5141\u8bb8\u8fdc\u7a0bGDB\u8c03\u8bd5\u5668\u8fde\u63a5\u5230QEMU\u5b9e\u4f8b\u3002</li> <li><code>-S</code>: \u8868\u793a\u5728\u542f\u52a8\u65f6\u51bb\u7ed3CPU\uff0c\u7b49\u5f85\u8fdc\u7a0bGDB\u8c03\u8bd5\u5668\u8fde\u63a5\u540e\u518d\u7ee7\u7eed\u6267\u884c\u3002</li> </ul>"},{"location":"Tool/tool/#vscode","title":"vscode","text":"<ul> <li>ctl-p\uff0c\u7136\u540e\u8f93\u5165#offsetof\uff0c\u9009\u62e9\u4e2d\u95f4\u6709\u4e24\u6760\u7684\u6846\u6846\uff0c\u5373\u53ef\u627e\u5230offsetof\u51fd\u6570\u7684\u5b9a\u4e49\u3002</li> <li>\u914d\u7f6e vscode<ul> <li>\u914d\u7f6e\u89e3\u6790\u9009\u9879: c_cpp_properties.json<ul> <li>\u89e3\u9501\u6b63\u786e\u7684\u4ee3\u7801\u89e3\u6790</li> </ul> </li> <li>\u914d\u7f6e\u6784\u5efa\u9009\u9879: tasks.json<ul> <li>\u89e3\u9501make (\u53ef\u8ddf\u547d\u4ee4\u884c\u53c2\u6570)</li> </ul> </li> <li>\u914d\u7f6e\u8fd0\u884c\u9009\u9879: launch.json<ul> <li>\u89e3\u9501\u5355\u6b65\u8c03\u8bd5</li> </ul> </li> </ul> </li> </ul>"},{"location":"Tool/tool/#vim_1","title":"vim \u914d\u7f6e","text":"<ol> <li>vim \u6559\u7a0b: vim-galore</li> <li> <p>\u914d\u7f6evim\u5982\u4e0b\uff1a</p> <pre><code>linux$ cp /etc/vim/vimrc ~/.vimrc\nlinux$ vim ~/.vimrc\n</code></pre> <p>\u5728 vimrc \u672b\u5c3e\u4e2d\u52a0\u5165\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <pre><code>syntax on\nset background=dark\nfiletype plugin indent on\nset showmatch          \" Show matching brackets.\nset ignorecase         \" Do case insensitive matching\nset smartcase          \" Do smart case matching\nset incsearch          \" Incremental search\nset hidden             \" Hide buffers when they are abandoned\nsetlocal noswapfile \" \u4e0d\u8981\u751f\u6210swap\u6587\u4ef6\nset bufhidden=hide \" \u5f53buffer\u88ab\u4e22\u5f03\u7684\u65f6\u5019\u9690\u85cf\u5b83\n\"colorscheme evening \" \u8bbe\u5b9a\u914d\u8272\u65b9\u6848\nset number \" \u663e\u793a\u884c\u53f7\nset cursorline \" \u7a81\u51fa\u663e\u793a\u5f53\u524d\u884c\nset ruler \" \u6253\u5f00\u72b6\u6001\u680f\u6807\u5c3a\nset shiftwidth=2 \" \u8bbe\u5b9a &lt;&lt; \u548c &gt;&gt; \u547d\u4ee4\u79fb\u52a8\u65f6\u7684\u5bbd\u5ea6\u4e3a 2\nset softtabstop=2 \" \u4f7f\u5f97\u6309\u9000\u683c\u952e\u65f6\u53ef\u4ee5\u4e00\u6b21\u5220\u6389 2 \u4e2a\u7a7a\u683c\nset tabstop=2 \" \u8bbe\u5b9a tab \u957f\u5ea6\u4e3a 2\nset nobackup \" \u8986\u76d6\u6587\u4ef6\u65f6\u4e0d\u5907\u4efd\nset autochdir \" \u81ea\u52a8\u5207\u6362\u5f53\u524d\u76ee\u5f55\u4e3a\u5f53\u524d\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\nset backupcopy=yes \" \u8bbe\u7f6e\u5907\u4efd\u65f6\u7684\u884c\u4e3a\u4e3a\u8986\u76d6\nset hlsearch \" \u641c\u7d22\u65f6\u9ad8\u4eae\u663e\u793a\u88ab\u627e\u5230\u7684\u6587\u672c\nset noerrorbells \" \u5173\u95ed\u9519\u8bef\u4fe1\u606f\u54cd\u94c3\nset novisualbell \" \u5173\u95ed\u4f7f\u7528\u53ef\u89c6\u54cd\u94c3\u4ee3\u66ff\u547c\u53eb\nset t_vb= \" \u7f6e\u7a7a\u9519\u8bef\u94c3\u58f0\u7684\u7ec8\u7aef\u4ee3\u7801\nset matchtime=2 \" \u77ed\u6682\u8df3\u8f6c\u5230\u5339\u914d\u62ec\u53f7\u7684\u65f6\u95f4\nset magic \" \u8bbe\u7f6e\u9b54\u672f\nset smartindent \" \u5f00\u542f\u65b0\u884c\u65f6\u4f7f\u7528\u667a\u80fd\u81ea\u52a8\u7f29\u8fdb\nset backspace=indent,eol,start \" \u4e0d\u8bbe\u5b9a\u5728\u63d2\u5165\u72b6\u6001\u65e0\u6cd5\u7528\u9000\u683c\u952e\u548c Delete \u952e\u5220\u9664\u56de\u8f66\u7b26\nset cmdheight=1 \" \u8bbe\u5b9a\u547d\u4ee4\u884c\u7684\u884c\u6570\u4e3a 1\nset laststatus=2 \" \u663e\u793a\u72b6\u6001\u680f (\u9ed8\u8ba4\u503c\u4e3a 1, \u65e0\u6cd5\u663e\u793a\u72b6\u6001\u680f)\nset statusline=\\ %&lt;%F[%1*%M%*%n%R%H]%=\\ %y\\ %0(%{&amp;fileformat}\\ %{&amp;encoding}\\ Ln\\ %l,\\ Col\\ %c/%L%) \" \u8bbe\u7f6e\u5728\u72b6\u6001\u884c\u663e\u793a\u7684\u4fe1\u606f\nset foldenable \" \u5f00\u59cb\u6298\u53e0\nset foldmethod=syntax \" \u8bbe\u7f6e\u8bed\u6cd5\u6298\u53e0\nset foldcolumn=0 \" \u8bbe\u7f6e\u6298\u53e0\u533a\u57df\u7684\u5bbd\u5ea6\nsetlocal foldlevel=1 \" \u8bbe\u7f6e\u6298\u53e0\u5c42\u6570\u4e3a 1\nnnoremap &lt;space&gt; @=((foldclosed(line('.')) &lt; 0) ? 'zc' : 'zo')&lt;CR&gt; \" \u7528\u7a7a\u683c\u952e\u6765\u5f00\u5173\u6298\u53e0\n</code></pre> </li> </ol>"},{"location":"Tool/tool/#some-example","title":"some example","text":"<ol> <li> <p>hello.c <pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    printf(\"Hello World\\n\");\n}\n</code></pre> <pre><code>linux$ gcc a.c                    # this generate a.out\nlinux$ ./a.out \nHello World\nlinux$ hexdump a.out | less\nlinux$ gcc -c a.c                 # this generate a.o\nlinux$ objdump -d a.o             # disassemble\n\na.o:     file format elf64-x86-64\n\n\nDisassembly of section .text:\n\n0000000000000000 &lt;main&gt;:\n   0:   f3 0f 1e fa             endbr64 \n   4:   55                      push   %rbp\n   5:   48 89 e5                mov    %rsp,%rbp\n   8:   48 8d 05 00 00 00 00    lea    0x0(%rip),%rax        # f &lt;main+0xf&gt;\n   f:   48 89 c7                mov    %rax,%rdi\n  12:   e8 00 00 00 00          call   17 &lt;main+0x17&gt;\n  17:   b8 00 00 00 00          mov    $0x0,%eax\n  1c:   5d                      pop    %rbp\n  1d:   c3                      ret    \n</code></pre></p> </li> <li> <pre><code>gcc -g -S minimal.S &gt; minimal.s  # \u4f7f\u7528 GCC \u7f16\u8bd1\u5668\u5c06\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6 minimal.S \u7f16\u8bd1\u6210\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6 minimal.s\uff0c\u5e76\u4e14\u751f\u6210\u8c03\u8bd5\u4fe1\u606f\u3002\nas minimal.s -o minimal.o        # \u4f7f\u7528 as \u6c47\u7f16\u5668\u5c06\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6 minimal.s \u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6 minimal.o\nld -o minimal minimal.o          # \u4f7f\u7528 ld \u94fe\u63a5\u5668\u5c06\u76ee\u6807\u6587\u4ef6 minimal.o \u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6 minimal\n</code></pre> </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Cpp/Cpp_primer/","title":"C++ primer 5th edition","text":""},{"location":"%E8%AF%AD%E8%A8%80/Cpp/Cpp_primer/#ch1","title":"Ch1 \u5f00\u59cb","text":"<ol> <li> <p><code>iostream</code> - \u6807\u51c6\u8f93\u5165\u8f93\u51fa\u6d41\u3002</p> \u57fa\u7840\u7c7b\u578b \u5bf9\u8c61 istream cin - \u6807\u51c6\u8f93\u5165 ostream cout - \u6807\u51c6\u8f93\u51fa\uff0ccerr - \u6807\u51c6\u9519\u8bef\uff0cclog cout &lt;&lt; \"hello\" &lt;&lt; endl; cin &gt;&gt; v1 &gt;&gt; v2; &lt;&lt;\u662f\u8f93\u51fa\u8fd0\u7b97\u7b26\uff0c\u5176\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\uff1aostream\u5bf9\u8c61\uff0c\u53f3\u4fa7\u8fd0\u7b97\u5bf9\u8c61\uff1a\u8981\u6253\u5370\u7684\u5185\u5bb9\uff0c\u8fd4\u56de\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u3002\u53f3\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u7684\u503c\u5199\u5230\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u8868\u793a\u7684\u8f93\u51fa\u6d41 &gt;&gt;\u662f\u8f93\u5165\u8fd0\u7b97\u7b26\uff0c\u5176\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\uff1aistream\u5bf9\u8c61\uff0c\u53f3\u4fa7\uff1a\u8981\u8f93\u5165\u7684\u5185\u5bb9\uff0c\u8fd4\u56de\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u3002\u4ece\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u6240\u6307\u5b9a\u7684\u8f93\u5165\u6d41\u8bfb\u53d6\u6570\u636e\uff0c\u5b58\u5165\u53f3\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u4e2d <p><pre><code>while (std::cin &gt;&gt; value)\n</code></pre> \u6b64\u8868\u8fbe\u5f0f\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u6570\uff0c\u4fdd\u5b58\u5728value\u4e2d\u3002\u8f93\u5165\u8fd0\u7b97\u7b26\uff08\u53c2\u89c11.2\u8282\uff0c\u7b2c7\u9875\uff09\u8fd4\u56de\u5176\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\uff0c\u5728\u672c\u4f8b\u4e2d\u662fstd::cin\u3002\u56e0\u6b64\uff0c\u6b64\u5faa\u73af\u6761\u4ef6\u5b9e\u9645\u4e0a\u68c0\u6d4b\u7684\u662fstd::cin\u3002</p> <p>\u5f53\u6211\u4eec\u4f7f\u7528\u4e00\u4e2aistream\u5bf9\u8c61\u4f5c\u4e3a\u6761\u4ef6\u65f6\uff0c\u5176\u6548\u679c\u662f\u68c0\u6d4b\u6d41\u7684\u72b6\u6001\u3002\u5982\u679c\u6d41\u662f\u6709\u6548\u7684\uff0c\u5373\u6d41\u672a\u9047\u5230\u9519\u8bef\uff0c\u90a3\u4e48\u68c0\u6d4b\u6210\u529f\u3002\u5f53\u9047\u5230\u6587\u4ef6\u7ed3\u675f\u7b26\uff08end-of-file\uff09\uff0c\u6216\u9047\u5230\u4e00\u4e2a\u65e0\u6548\u8f93\u5165\u65f6\uff08\u4f8b\u5982\u8bfb\u5165\u7684\u503c\u4e0d\u662f\u4e00\u4e2a\u6574\u6570\uff09\uff0cistream\u5bf9\u8c61\u7684\u72b6\u6001\u4f1a\u53d8\u4e3a\u65e0\u6548\u3002\u5904\u4e8e\u65e0\u6548\u72b6\u6001\u7684istream\u5bf9\u8c61\u4f1a\u4f7f\u6761\u4ef6\u53d8\u4e3a\u5047\u3002</p> </li> <li> <p>\u6ce8\u91ca\u754c\u5b9a\u7b26\u4e0d\u80fd\u5d4c\u5957\uff1a<code>/*.../*..*/...*/</code> \u662f\u9519\u8bef\u7684</p> </li> <li>\u5934\u6587\u4ef6\uff1a\u4f7f\u7c7b\u6216\u5176\u4ed6\u540d\u5b57\u7684\u5b9a\u4e49\u53ef\u88ab\u591a\u4e2a\u7a0b\u5e8f\u4f7f\u7528\u7684\u4e00\u79cd\u673a\u5236</li> <li>C++\uff1a\u9759\u6001\u6570\u636e\u7c7b\u578b\u8bed\u8a00\uff0c\u5b83\u7684\u7c7b\u578b\u68c0\u67e5\u53d1\u751f\u5728\u7f16\u8bd1\u65f6\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u5fc5\u987b\u77e5\u9053\u7a0b\u5e8f\u4e2d\u6bcf\u4e00\u4e2a\u53d8\u91cf\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b</li> <li> <p>C++\u6807\u51c6\u89c4\u5b9a\u7684\u7b97\u672f\u7c7b\u578b\u5c3a\u5bf8\u7684\u6700\u5c0f\u503c\uff1aint\u6700\u5c0f\u536016\u4f4d\uff0c\u4f46\u6211\u4eec\u7528\u7684\u4e00\u822c\u662f\u536032\u4f4d\u7684int</p> \u7c7b\u578b \u542b\u4e49 \u6700\u5c0f\u5c3a\u5bf8 bool \u5e03\u5c14\u7c7b\u578b \u672a\u5b9a\u4e49 char \u5b57\u7b26 8 \u4f4d wchar_t \u5bbd\u5b57\u7b26 16 \u4f4d char16_t Unicode \u5b57\u7b26 16 \u4f4d char32_t Unicode \u5b57\u7b26 32 \u4f4d short \u77ed\u6574\u578b 16 \u4f4d int \u6574\u578b 16 \u4f4d long \u957f\u6574\u578b 32 \u4f4d long long \u957f\u6574\u578b 64 \u4f4d float \u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 6 \u4f4d\u6709\u6548\u6570\u5b57 double \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570 6 \u4f4d\u6709\u6548\u6570\u5b57 long double \u6269\u5c55\u7cbe\u5ea6\u6d6e\u70b9\u6570 10\u4f4d\u6709\u6548\u6570\u5b57 </li> <li> <p>\u5b57\u8282\uff1a\u53ef\u5bfb\u5740\u7684\u6700\u5c0f\u5185\u5b58\u5757\u300232\u4f4d\u673a\u5668\u4e0a\u4e00\u4e2a\u5b57\u4e3a4\u4e2a\u5b57\u8282\uff1a</p> \u5730\u5740 \u6bcf\u4e2a\u5b57\u8282\u5177\u4f53\u5185\u5bb9 736424 00111011 736425 00011011 736426 01110001 736427 01100100 <p>\u5b57\u957f</p> <p>\u5b57\u957f\uff08\u4e5f\u79f0\u4e3a\u673a\u5668\u5b57\u957f\u6216\u5904\u7406\u5668\u5b57\u957f\uff09\u662f\u6307\u8ba1\u7b97\u673a\u5904\u7406\u5668\u4e00\u6b21\u6027\u80fd\u591f\u5904\u7406\u7684\u6570\u636e\u4f4d\u6570\u3002\u73b0\u4ee3 32 \u4f4d\u5904\u7406\u5668\u610f\u5473\u7740\u5b83\u4eec\u53ef\u4ee5\u5904\u7406 32 \u4f4d\u7684\u6570\u636e\uff0c\u5373 4 \u4e2a\u5b57\u8282\u3002</p> </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Cpp/Cpp_primer/#ch2","title":"Ch2 \u53d8\u91cf\u548c\u57fa\u7840\u7c7b\u578b","text":""},{"location":"%E8%AF%AD%E8%A8%80/Cpp/Essential_Cpp/","title":"Essential C++","text":""},{"location":"%E8%AF%AD%E8%A8%80/Cpp/Essential_Cpp/#ch1","title":"Ch1 \u5f00\u59cb","text":"<ol> <li>\u4e60\u60ef\u4e0a\uff0c\u7a0b\u5e8f\u6267\u884c\u65e0\u8bef\u65f6\u6211\u4eec\u4ee4main()\u8fd4\u56de0\uff0c\u82e5\u8fd4\u56de\u4e00\u4e2a\u975e\u96f6\u503c\uff0c\u8868\u793a\u7a0b\u5e8f\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u9519\u8bef</li> <li> <p>\u4e24\u79cd\u521d\u59cb\u5316\u65b9\u6cd5\uff1a</p> Initialize Note <code>int num_tries = 0;</code> <code>int num_tries(0);</code> \u6784\u9020\u51fd\u6570\u8bed\u6cd5\uff0c\u6b64\u6cd5\u5b58\u5728\u7684\u539f\u56e0\u662f\u5982\u679c\u5bf9\u8c61\u9700\u8981\u591a\u4e2a\u521d\u503c\uff0c \u8fd9\u4e2a\u65b9\u6cd5\u5c31\u6709\u7528\u4e86\uff0c\u4f8b\u5982\u590d\u6570\u9700\u8981\u5b9e\u90e8\u548c\u865a\u90e8 </li> <li> <p>\u8f6c\u4e49\u5b57\u7b26\uff1a</p> \u8f6c\u4e49\u5b57\u7b26 \u542b\u4e49 \\n \u6362\u884c \\t \u5236\u8868\u7b26 \\0 null \\' ' \\'' '' <code>\\\\</code> \\ </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonCookBook/","title":"Python Cook Book","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonCookBook/#_1","title":"\u8d44\u6599","text":"<ul> <li>\u5728\u7ebf\u6559\u6750\uff1apython3-cookbook.</li> </ul>"},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonCookBook/#_2","title":"\u89e3\u538b\u53ef\u8fed\u4ee3\u5bf9\u8c61\u8d4b\u503c\u7ed9\u591a\u4e2a\u53d8\u91cf","text":"<ul> <li>\u661f\u53f7\u8868\u8fbe\u5f0f\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6bd4\u5982\uff0c\u4f60\u5728\u5b66\u4e60\u4e00\u95e8\u8bfe\u7a0b\uff0c\u5728\u5b66\u671f\u672b\u7684\u65f6\u5019\uff0c \u4f60\u60f3\u7edf\u8ba1\u4e0b\u5bb6\u5ead\u4f5c\u4e1a\u7684\u5e73\u5747\u6210\u7ee9\uff0c\u4f46\u662f\u6392\u9664\u6389\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5206\u6570\uff1a</li> </ul> <pre><code>def drop_first_last(grades):\n    first, *middle, last = grades\n    return avg(middle)\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonCookBook/#_3","title":"\u5355\u4e0b\u5212\u7ebf\u548c\u53cc\u4e0b\u5212\u7ebf","text":"<ul> <li>Python\u7a0b\u5e8f\u5458\u4e0d\u53bb\u4f9d\u8d56\u8bed\u8a00\u7279\u6027\u53bb\u5c01\u88c5\u6570\u636e\uff0c\u800c\u662f\u901a\u8fc7\u9075\u5faa\u4e00\u5b9a\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u547d\u540d\u89c4\u7ea6\u6765\u8fbe\u5230\u8fd9\u4e2a\u6548\u679c\u3002 </li> <li>\u7b2c\u4e00\u4e2a\u7ea6\u5b9a\u662f\u4efb\u4f55\u4ee5\u5355\u4e0b\u5212\u7ebf_\u5f00\u5934\u7684\u540d\u5b57\u90fd\u5e94\u8be5\u662f\u5185\u90e8\u5b9e\u73b0\u3002</li> <li>\u4f7f\u7528\u53cc\u4e0b\u5212\u7ebf\u5f00\u59cb\u4f1a\u5bfc\u81f4\u8bbf\u95ee\u540d\u79f0\u53d8\u6210\u5176\u4ed6\u5f62\u5f0f\u3002</li> <li>\u5927\u591a\u6570\u800c\u8a00\uff0c\u4f60\u5e94\u8be5\u8ba9\u4f60\u7684\u975e\u516c\u5171\u540d\u79f0\u4ee5\u5355\u4e0b\u5212\u7ebf\u5f00\u5934\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u6e05\u695a\u4f60\u7684\u4ee3\u7801\u4f1a\u6d89\u53ca\u5230\u5b50\u7c7b\uff0c \u5e76\u4e14\u6709\u4e9b\u5185\u90e8\u5c5e\u6027\u5e94\u8be5\u5728\u5b50\u7c7b\u4e2d\u9690\u85cf\u8d77\u6765\uff0c\u90a3\u4e48\u624d\u8003\u8651\u4f7f\u7528\u53cc\u4e0b\u5212\u7ebf\u65b9\u6848\u3002</li> <li>Reference</li> </ul>"},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonCookBook/#_4","title":"\u88c5\u9970\u5668","text":"<ul> <li> <p>\u4e00\u4e2a\u88c5\u9970\u5668\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u3002 <pre><code>import time\nfrom functools import wraps\n\ndef timethis(func): # timethis\u662f\u4e2a\u88c5\u9970\u5668\n    '''\n    Decorator that reports the execution time.\n    '''\n    @wraps(func) # \u4f5c\u7528\u662f\u5c06\u88ab\u88c5\u9970\u51fd\u6570\u7684\u5143\u6570\u636e\uff08\u5982\u51fd\u6570\u540d\u3001\u6587\u6863\u5b57\u7b26\u4e32\u7b49\uff09\u590d\u5236\u5230\n    # \u88c5\u9970\u5668\u5185\u90e8\u7684\u51fd\u6570 wrapper \u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5728\u4f7f\u7528\u88c5\u9970\u5668\u540e\u4e22\u5931\u539f\u51fd\u6570\u7684\u5143\u6570\u636e\u3002\n    def wrapper(*args, **kwargs):\n        start = time.time()\n        result = func(*args, **kwargs)\n        end = time.time()\n        print(func.__name__, end-start)\n        return result\n    return wrapper\n</code></pre> \u8fd9\u4e24\u8005\u7b49\u4ef7\uff1a <pre><code>@timethis\ndef countdown(n):\n    while n &gt; 0:\n        n -= 1\n</code></pre> <pre><code>def countdown(n):\n    while n &gt; 0:\n        n -= 1\ncountdown = timethis(countdown)\n</code></pre> \u7528\u6cd5\uff1a <pre><code>&gt;&gt;&gt; countdown(100000)\ncountdown 0.008917808532714844\n</code></pre></p> </li> <li> <p><code>@property</code> \u662fPython\u4e2d\u7684\u4e00\u79cd\u88c5\u9970\u5668\u8bed\u6cd5\uff0c\u7528\u4e8e\u5b9a\u4e49\u5c5e\u6027\u8bbf\u95ee\u5668\u3002\u5b83\u5141\u8bb8\u4f60\u5c06\u7c7b\u7684\u65b9\u6cd5\u8f6c\u6362\u4e3a\u5c5e\u6027\uff0c\u4ece\u800c\u53ef\u4ee5\u901a\u8fc7\u70b9\u53f7\uff08.\uff09\u64cd\u4f5c\u7b26\u6765\u8bbf\u95ee\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u800c\u4e0d\u9700\u8981\u8c03\u7528\u5b83\u4eec\u3002</p> </li> </ul> <pre><code>class Person:\n    def __init__(self, first_name):\n        self._first_name = first_name\n\n    # Getter function\n    @property\n    def first_name(self):\n        return self._first_name # example: a.first_name, note: no () needed\n\n    # Setter function\n    @first_name.setter\n    def first_name(self, value):\n        if not isinstance(value, str):\n            raise TypeError('Expected a string')\n        self._first_name = value\n\n    # Deleter function (optional)\n    @first_name.deleter\n    def first_name(self):\n        raise AttributeError(\"Can't delete attribute\")\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonMisc/","title":"Python Misc","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonMisc/#mircosoft-python-tutorial","title":"Mircosoft Python Tutorial","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonMisc/#_1","title":"\u8d44\u6599","text":"<ul> <li>\u89c6\u9891\uff1a\u2705\u521d\u7ea7\uff0c\ud83d\udccc\u8fdb\u9636\uff0c\ud83d\udccc\u9ad8\u9636</li> <li>\u4ee3\u7801\uff1aGit repo</li> </ul>"},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonMisc/#installing-packages","title":"Installing packages","text":"<ol> <li> <p><code>pip install colorama</code> or <code>pip install -r requirements.txt</code></p> </li> <li> <p>Virtual environment</p> <ul> <li>By default, packages are installed globally<ul> <li>Version manangement becomes a challenge</li> </ul> </li> <li>Virtual environments can be used to contain and manage package collections<ul> <li>Really just a folder behind the scenes with all your packages</li> </ul> </li> </ul> </li> <li> <p>Creating a virtual environment:</p> <ul> <li><code>pip install virtualenv</code> # install virtual environment</li> <li>Windows system<ul> <li><code>python -m venv &lt;folder_name&gt;</code></li> </ul> </li> <li>Linux system<ul> <li><code>virtualenv &lt;folder_name&gt;</code></li> </ul> </li> </ul> </li> <li> <p>Using virtual environment:</p> <ul> <li>Windows system<ul> <li>cmd.exe: <code>&lt;folder_name&gt;\\Scripts\\activate.bat</code></li> <li>Powershell: <code>&lt;folder_name&gt;\\Scripts\\activate.ps1</code></li> <li>bash shell: <code>. ./&lt;folder_name&gt;/Scripts/activate</code></li> </ul> </li> <li>Linux system<ul> <li><code>&lt;folder_name&gt;/bin/activate</code></li> </ul> </li> </ul> </li> <li> <p>Decorators:</p> <ul> <li>Adjectives</li> <li>Add additional functionality to code</li> </ul> </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonMisc/#python-100-days","title":"Python 100 Days","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonMisc/#_2","title":"\u8d44\u6599","text":"<ul> <li>\u4ee3\u7801\uff1ajackfrued python 100 days</li> <li>\u89c6\u9891\uff1ajackfrued</li> </ul>"},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonMisc/#_3","title":"\u5b89\u88c5","text":"<ol> <li>Windows\u4e0b\u5e38\u7528\u547d\u4ee4<ul> <li><code>python --version</code></li> <li><code>pip --version</code></li> <li><code>python -m pip install -U --user pip</code> # \u66f4\u65b0 pip</li> <li><code>pip config set global.index-usr https://pypi.doubanio.com/simple</code> # \u6362\u56fd\u5185\u6e90</li> <li><code>pip install jupyter</code> # \u5b89\u88c5 jupyter</li> <li><code>pip install -U jupyter</code> # \u5347\u7ea7 jupyter</li> <li><code>jupyter notebook</code> # \u542f\u52a8 jupyter</li> <li><code>pip install pyzmq==20.0.0</code> # \u5b89\u88c5\u6307\u5b9a\u7248\u672c\u7684 pyzmq</li> </ul> </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonforDataAnalysis3E/","title":"Python for Data Analysis","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonforDataAnalysis3E/#_1","title":"\u8d44\u6599","text":"<ul> <li>\u5728\u7ebf\u6559\u6750\uff1aPython for Data Analysis (3E).</li> </ul>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/66.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A6%82%E8%BF%B0/","title":"66.\u6570\u636e\u5206\u6790\u6982\u8ff0","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/66.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A6%82%E8%BF%B0/#_1","title":"\u6570\u636e\u5206\u6790\u6982\u8ff0","text":"<p>\u5f53\u4eca\u4e16\u754c\u5bf9\u4fe1\u606f\u6280\u672f\u7684\u4f9d\u8d56\u7a0b\u5ea6\u5728\u4e0d\u65ad\u52a0\u6df1\uff0c\u6bcf\u5929\u90fd\u4f1a\u6709\u5927\u91cf\u7684\u6570\u636e\u4ea7\u751f\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u611f\u5230\u6570\u636e\u8d8a\u6765\u8d8a\u591a\uff0c\u4f46\u662f\u8981\u4ece\u4e2d\u53d1\u73b0\u6709\u4ef7\u503c\u7684\u4fe1\u606f\u5374\u8d8a\u6765\u8d8a\u96be\u3002\u8fd9\u91cc\u6240\u8bf4\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9\u6570\u636e\u96c6\u5904\u7406\u4e4b\u540e\u7684\u7ed3\u679c\uff0c\u662f\u4ece\u6570\u636e\u96c6\u4e2d\u63d0\u70bc\u51fa\u7684\u53ef\u7528\u4e8e\u5176\u4ed6\u573a\u5408\u7684\u7ed3\u8bba\u6027\u7684\u4e1c\u897f\uff0c\u800c\u4ece\u539f\u59cb\u6570\u636e\u4e2d\u62bd\u53d6\u51fa\u6709\u4ef7\u503c\u7684\u4fe1\u606f\u7684\u8fd9\u4e2a\u8fc7\u7a0b\u6211\u4eec\u5c31\u79f0\u4e4b\u4e3a\u6570\u636e\u5206\u6790\uff0c\u5b83\u662f\u6570\u636e\u79d1\u5b66\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\u3002</p> <p></p> <p>\u5b9a\u4e49\uff1a\u6570\u636e\u5206\u6790\u662f\u6709\u9488\u5bf9\u6027\u7684\u6536\u96c6\u3001\u52a0\u5de5\u3001\u6574\u7406\u6570\u636e\u5e76\u91c7\u7528\u7edf\u8ba1\u3001\u6316\u6398\u7b49\u6280\u672f\u5bf9\u6570\u636e\u8fdb\u884c\u63a2\u7d22\u3001\u5206\u6790\u3001\u5448\u73b0\u548c\u89e3\u91ca\u7684\u79d1\u5b66\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/66.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A6%82%E8%BF%B0/#_2","title":"\u6570\u636e\u5206\u6790\u5e08\u7684\u804c\u8d23\u548c\u6280\u80fd\u6808","text":"<p>HR\u5728\u53d1\u5e03\u62db\u8058\u9700\u6c42\u65f6\uff0c\u901a\u5e38\u5c06\u6570\u636e\u5de5\u7a0b\u3001\u6570\u636e\u5206\u6790\u3001\u6570\u636e\u6316\u6398\u7b49\u5c97\u4f4d\u90fd\u7edf\u79f0\u4e3a\u6570\u636e\u5206\u6790\u5c97\u4f4d\uff0c\u4f46\u662f\u6839\u636e\u5de5\u4f5c\u6027\u8d28\u7684\u4e0d\u540c\uff0c\u53c8\u53ef\u4ee5\u5206\u4e3a\u504f\u5de5\u7a0b\u7684\u6570\u636e\u6cbb\u7406\u65b9\u5411\u3001\u504f\u4e1a\u52a1\u7684\u6570\u636e\u5206\u6790\u65b9\u5411\u3001\u504f\u7b97\u6cd5\u7684\u6570\u636e\u6316\u6398\u65b9\u5411\u3001\u504f\u5f00\u53d1\u7684\u6570\u636e\u5f00\u53d1\u65b9\u5411\u3001\u504f\u4ea7\u54c1\u7684\u6570\u636e\u4ea7\u54c1\u7ecf\u7406\u3002\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u7684\u6570\u636e\u5206\u6790\u5e08\u4e3b\u8981\u662f\u6307\u4e1a\u52a1\u6570\u636e\u5206\u6790\u5e08\uff0c\u5f88\u591a\u6570\u636e\u5206\u6790\u5e08\u7684\u804c\u4e1a\u751f\u6daf\u90fd\u662f\u4ece\u8fd9\u4e2a\u5c97\u4f4d\u5f00\u59cb\u7684\uff0c\u800c\u4e14\u8fd9\u4e2a\u5c97\u4f4d\u4e5f\u662f\u62db\u8058\u6570\u91cf\u6700\u591a\u7684\u5c97\u4f4d\u3002\u4e1a\u52a1\u6570\u636e\u5206\u6790\u5e08\u5728\u516c\u53f8\u901a\u5e38\u4e0d\u5c5e\u4e8e\u7814\u53d1\u90e8\u95e8\u800c\u5c5e\u4e8e\u8fd0\u8425\u90e8\u95e8\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5c97\u4f4d\u4e5f\u79f0\u4e3a\u6570\u636e\u8fd0\u8425\u6216\u5546\u4e1a\u5206\u6790\uff0c\u8fd9\u7c7b\u4eba\u5458\u901a\u5e38\u4e5f\u88ab\u79f0\u4e3a\u201cBI\u5de5\u7a0b\u5e08\u201d\u3002\u901a\u5e38\u62db\u8058\u4fe1\u606f\u5bf9\u8fd9\u4e2a\u5c97\u4f4d\u7684\u63cf\u8ff0\uff08JD\uff09\u662f\uff1a</p> <ol> <li>\u8d1f\u8d23\u76f8\u5173\u62a5\u8868\u7684\u8f93\u51fa\u3002</li> <li>\u5efa\u7acb\u548c\u4f18\u5316\u6307\u6807\u4f53\u7cfb\u3002</li> <li>\u76d1\u63a7\u6570\u636e\u6ce2\u52a8\u548c\u5f02\u5e38\uff0c\u627e\u51fa\u95ee\u9898\u3002</li> <li>\u4f18\u5316\u548c\u9a71\u52a8\u4e1a\u52a1\uff0c\u63a8\u52a8\u6570\u5b57\u5316\u8fd0\u8425\u3002</li> <li>\u627e\u51fa\u6f5c\u5728\u7684\u5e02\u573a\u548c\u4ea7\u54c1\u7684\u4e0a\u5347\u7a7a\u95f4\u3002</li> </ol> <p>\u6839\u636e\u4e0a\u9762\u7684\u63cf\u8ff0\uff0c\u4f5c\u4e3a\u4e1a\u52a1\u6570\u636e\u5206\u6790\u5e08\uff0c\u6211\u4eec\u7684\u5de5\u4f5c\u4e0d\u662f\u7ed9\u9886\u5bfc\u4e00\u4e2a\u7b80\u5355\u6d45\u663e\u7684\u7ed3\u8bba\uff0c\u800c\u662f\u7ed3\u5408\u516c\u53f8\u7684\u4e1a\u52a1\uff0c\u5b8c\u6210\u76d1\u63a7\u6570\u636e\u3001\u63ea\u51fa\u5f02\u5e38\u3001\u627e\u5230\u539f\u56e0\u3001\u63a2\u7d22\u8d8b\u52bf\u7b49\u5de5\u4f5c\u3002\u4f5c\u4e3a\u6570\u636e\u5206\u6790\u5e08\uff0c\u4e0d\u7ba1\u662f\u7528 Python \u8bed\u8a00\u3001Excel\u3001SPSS\u6216\u5176\u4ed6\u7684\u5546\u4e1a\u667a\u80fd\u5de5\u5177\uff0c\u5de5\u5177\u53ea\u662f\u8fbe\u6210\u76ee\u6807\u7684\u624b\u6bb5\uff0c\u6570\u636e\u601d\u7ef4\u662f\u6838\u5fc3\u6280\u80fd\uff0c\u4ece\u5b9e\u9645\u4e1a\u52a1\u95ee\u9898\u51fa\u53d1\u5230\u6700\u7ec8\u53d1\u73b0\u6570\u636e\u4e2d\u7684\u5546\u4e1a\u4ef7\u503c\u662f\u7ec8\u6781\u76ee\u6807\u3002\u6570\u636e\u5206\u6790\u5e08\u5728\u5f88\u591a\u516c\u53f8\u53ea\u662f\u4e00\u4e2a\u57fa\u7840\u5c97\u4f4d\uff0c\u7cbe\u4e8e\u4e1a\u52a1\u7684\u6570\u636e\u5206\u6790\u5e08\u53ef\u4ee5\u5411\u6570\u636e\u5206\u6790\u7ecf\u7406\u6216\u6570\u636e\u8fd0\u8425\u603b\u76d1\u7b49\u7ba1\u7406\u5c97\u4f4d\u53d1\u5c55\uff1b\u5bf9\u4e8e\u719f\u6089\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u6570\u636e\u5206\u6790\u5e08\u6765\u8bf4\uff0c\u53ef\u4ee5\u5411\u6570\u636e\u6316\u6398\u5de5\u7a0b\u5e08\u6216\u7b97\u6cd5\u4e13\u5bb6\u65b9\u5411\u53d1\u5c55\uff0c\u800c\u8fd9\u4e9b\u5c97\u4f4d\u9664\u4e86\u9700\u8981\u76f8\u5e94\u7684\u6570\u5b66\u548c\u7edf\u8ba1\u5b66\u77e5\u8bc6\uff0c\u5728\u7f16\u7a0b\u80fd\u529b\u65b9\u9762\u4e5f\u6bd4\u6570\u636e\u5206\u6790\u5e08\u6709\u66f4\u9ad8\u7684\u8981\u6c42\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u6709\u5927\u6570\u636e\u5b58\u50a8\u548c\u5904\u7406\u7684\u76f8\u5173\u7ecf\u9a8c\u3002\u6570\u636e\u6cbb\u7406\u5c97\u4f4d\u4e3b\u8981\u662f\u5e2e\u52a9\u516c\u53f8\u5efa\u8bbe\u6570\u636e\u4ed3\u5e93\u6216\u6570\u636e\u6e56\uff0c\u5b9e\u73b0\u6570\u636e\u4ece\u4e1a\u52a1\u7cfb\u7edf\u3001\u57cb\u70b9\u7cfb\u7edf\u3001\u65e5\u5fd7\u7cfb\u7edf\u5230\u5206\u6790\u5e93\u7684\u8f6c\u79fb\uff0c\u4e3a\u540e\u7eed\u7684\u6570\u636e\u5206\u6790\u548c\u6316\u6398\u63d0\u4f9b\u57fa\u7840\u8bbe\u65bd\u3002\u6570\u636e\u6cbb\u7406\u5c97\u4f4d\u5bf9 SQL \u548c HiveSQL \u6709\u7740\u8f83\u9ad8\u7684\u8981\u6c42\uff0c\u9700\u8981\u719f\u7ec3\u7684\u4f7f\u7528 ETL \u5de5\u5177\uff0c\u6b64\u5916\u8fd8\u9700\u8981\u5bf9 Hadoop \u751f\u6001\u5708\u6709\u4e00\u4e2a\u8f83\u597d\u7684\u8ba4\u77e5\u3002\u4f5c\u4e3a\u6570\u636e\u4ea7\u54c1\u7ecf\u7406\uff0c\u9664\u4e86\u4f20\u7edf\u4ea7\u54c1\u7ecf\u7406\u7684\u6280\u80fd\u6808\u4e4b\u5916\uff0c\u4e5f\u9700\u8981\u8f83\u5f3a\u7684\u6280\u672f\u80fd\u529b\uff0c\u4f8b\u5982\u8981\u4e86\u89e3\u5e38\u7528\u7684\u63a8\u8350\u7b97\u6cd5\u3001\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u80fd\u591f\u4e3a\u7b97\u6cd5\u7684\u6539\u8fdb\u63d0\u4f9b\u4f9d\u636e\uff0c\u80fd\u591f\u5236\u5b9a\u76f8\u5173\u57cb\u70b9\u7684\u89c4\u8303\u548c\u53e3\u5f84\uff0c\u867d\u7136\u4e0d\u9700\u8981\u7cbe\u901a\u5404\u79cd\u7b97\u6cd5\uff0c\u4f46\u662f\u8981\u7ad9\u5728\u4ea7\u54c1\u7684\u89d2\u5ea6\u53bb\u8003\u8651\u6570\u636e\u6a21\u578b\u3001\u6307\u6807\u3001\u7b97\u6cd5\u7b49\u7684\u843d\u5730\u3002</p> <p>\u4ee5\u4e0b\u662f\u6211\u603b\u7ed3\u7684\u6570\u636e\u5206\u6790\u5e08\u7684\u6280\u80fd\u6808\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002</p> <ol> <li>\u8ba1\u7b97\u673a\u79d1\u5b66\uff08\u6570\u636e\u5206\u6790\u5de5\u5177\u3001\u7f16\u7a0b\u8bed\u8a00\u3001\u6570\u636e\u5e93\uff09</li> <li>\u6570\u5b66\u548c\u7edf\u8ba1\u5b66\uff08\u6570\u636e\u601d\u7ef4\u3001\u7edf\u8ba1\u601d\u7ef4\uff09</li> <li>\u4eba\u5de5\u667a\u80fd\uff08\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u6570\u636e\u6316\u6398\u7b97\u6cd5\uff09</li> <li>\u4e1a\u52a1\u7406\u89e3\u80fd\u529b\uff08\u6c9f\u901a\u3001\u8868\u8fbe\u3001\u7ecf\u9a8c\uff09</li> <li>\u603b\u7ed3\u548c\u8868\u8ff0\u80fd\u529b\uff08\u5546\u4e1aPPT\u3001\u6587\u5b57\u603b\u7ed3\uff09</li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/66.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A6%82%E8%BF%B0/#_3","title":"\u6570\u636e\u5206\u6790\u7684\u6d41\u7a0b","text":"<p>\u6211\u4eec\u63d0\u5230\u6570\u5206\u6790\u8fd9\u4e2a\u8bcd\u5f88\u591a\u65f6\u5019\u53ef\u80fd\u6307\u7684\u90fd\u662f\u72ed\u4e49\u7684\u6570\u636e\u5206\u6790\uff0c\u8fd9\u7c7b\u6570\u636e\u5206\u6790\u4e3b\u8981\u76ee\u6807\u5c31\u662f\u751f\u6210\u53ef\u89c6\u5316\u62a5\u8868\u5e76\u901a\u8fc7\u8fd9\u4e9b\u62a5\u8868\u6765\u6d1e\u5bdf\u4e1a\u52a1\u4e2d\u7684\u95ee\u9898\uff0c\u8fd9\u7c7b\u5de5\u4f5c\u4e00\u822c\u90fd\u662f\u5177\u6709\u6ede\u540e\u6027\u7684\u3002\u5e7f\u4e49\u7684\u6570\u636e\u5206\u6790\u8fd8\u5305\u542b\u4e86\u6570\u636e\u6316\u6398\u7684\u90e8\u5206\uff0c\u4e0d\u4ec5\u8981\u901a\u8fc7\u6570\u636e\u5b9e\u73b0\u5bf9\u4e1a\u52a1\u7684\u76d1\u63a7\u548c\u5206\u6790\uff0c\u8fd8\u8981\u5229\u7528\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u627e\u51fa\u9690\u85cf\u5728\u6570\u636e\u80cc\u540e\u7684\u77e5\u8bc6\uff0c\u5e76\u5229\u7528\u8fd9\u4e9b\u77e5\u8bc6\u4e3a\u5c06\u6765\u7684\u51b3\u7b56\u63d0\u4f9b\u652f\u6491\uff0c\u5177\u5907\u4e00\u5b9a\u7684\u524d\u77bb\u6027\u3002</p> <p>\u57fa\u672c\u7684\u6570\u636e\u5206\u6790\u5de5\u4f5c\u4e00\u822c\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u7684\u5185\u5bb9\uff0c\u5f53\u7136\u56e0\u4e3a\u884c\u4e1a\u548c\u5de5\u4f5c\u5185\u5bb9\u7684\u4e0d\u540c\u4f1a\u7565\u6709\u5dee\u5f02\u3002</p> <ol> <li>\u786e\u5b9a\u76ee\u6807\uff08\u8f93\u5165\uff09\uff1a\u7406\u89e3\u4e1a\u52a1\uff0c\u786e\u5b9a\u6307\u6807\u53e3\u5f84</li> <li>\u83b7\u53d6\u6570\u636e\uff1a\u6570\u636e\u4ed3\u5e93\uff08SQL\u63d0\u6570\uff09\u3001\u7535\u5b50\u8868\u683c\u3001\u4e09\u65b9\u63a5\u53e3\u3001\u7f51\u7edc\u722c\u866b\u3001\u5f00\u653e\u6570\u636e\u96c6\u7b49</li> <li>\u6e05\u6d17\u6570\u636e\uff1a\u5305\u62ec\u5bf9\u7f3a\u5931\u503c\u3001\u91cd\u590d\u503c\u3001\u5f02\u5e38\u503c\u7684\u5904\u7406\u4ee5\u53ca\u76f8\u5173\u7684\u9884\u5904\u7406\uff08\u683c\u5f0f\u5316\u3001\u79bb\u6563\u5316\u3001\u4e8c\u503c\u5316\u7b49\uff09</li> <li>\u6570\u636e\u900f\u89c6\uff1a\u6392\u5e8f\u3001\u7edf\u8ba1\u3001\u5206\u7ec4\u805a\u5408\u3001\u4ea4\u53c9\u8868\u3001\u900f\u89c6\u8868\u7b49</li> <li>\u6570\u636e\u5448\u73b0\uff08\u8f93\u51fa\uff09\uff1a\u6570\u636e\u53ef\u89c6\u5316\uff0c\u53d1\u5e03\u5de5\u4f5c\u6210\u679c\uff08\u6570\u636e\u5206\u6790\u62a5\u544a\uff09</li> <li>\u5206\u6790\u6d1e\u5bdf\uff08\u540e\u7eed\uff09\uff1a\u89e3\u91ca\u6570\u636e\u7684\u53d8\u5316\uff0c\u63d0\u51fa\u5bf9\u5e94\u7684\u65b9\u6848</li> </ol> <p>\u6df1\u5165\u7684\u6570\u636e\u6316\u6398\u5de5\u4f5c\u901a\u5e38\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u7684\u5185\u5bb9\uff0c\u5f53\u7136\u56e0\u4e3a\u884c\u4e1a\u548c\u5de5\u4f5c\u5185\u5bb9\u7684\u4e0d\u540c\u4f1a\u7565\u6709\u5dee\u5f02\u3002</p> <ol> <li>\u786e\u5b9a\u76ee\u6807\uff08\u8f93\u5165\uff09\uff1a\u7406\u89e3\u4e1a\u52a1\uff0c\u660e\u786e\u6316\u6398\u76ee\u6807</li> <li>\u6570\u636e\u51c6\u5907\uff1a\u6570\u636e\u91c7\u96c6\u3001\u6570\u636e\u63cf\u8ff0\u3001\u6570\u636e\u63a2\u7d22\u3001\u8d28\u91cf\u5224\u5b9a\u7b49</li> <li>\u6570\u636e\u52a0\u5de5\uff1a\u63d0\u53d6\u6570\u636e\u3001\u6e05\u6d17\u6570\u636e\u3001\u6570\u636e\u53d8\u6362\u3001\u7279\u6b8a\u7f16\u7801\u3001\u964d\u7ef4\u3001\u7279\u5f81\u9009\u62e9\u7b49</li> <li>\u6570\u636e\u5efa\u6a21\uff1a\u6a21\u578b\u6bd4\u8f83\u3001\u6a21\u578b\u9009\u62e9\u3001\u7b97\u6cd5\u5e94\u7528</li> <li>\u6a21\u578b\u8bc4\u4f30\uff1a\u4ea4\u53c9\u68c0\u9a8c\u3001\u53c2\u6570\u8c03\u4f18\u3001\u7ed3\u679c\u8bc4\u4ef7</li> <li>\u6a21\u578b\u90e8\u7f72\uff08\u8f93\u51fa\uff09\uff1a\u6a21\u578b\u843d\u5730\u3001\u4e1a\u52a1\u6539\u8fdb\u3001\u8fd0\u8425\u76d1\u63a7\u3001\u62a5\u544a\u64b0\u5199</li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/66.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A6%82%E8%BF%B0/#_4","title":"\u6570\u636e\u5206\u6790\u76f8\u5173\u5e93","text":"<p>\u4f7f\u7528 Python \u4ece\u4e8b\u6570\u636e\u79d1\u5b66\u76f8\u5173\u7684\u5de5\u4f5c\u662f\u4e00\u4e2a\u975e\u5e38\u68d2\u7684\u9009\u62e9\uff0c\u56e0\u4e3a Python \u6574\u4e2a\u751f\u6001\u5708\u4e2d\uff0c\u6709\u5927\u91cf\u7684\u6210\u719f\u7684\u7528\u4e8e\u6570\u636e\u79d1\u5b66\u7684\u8f6f\u4ef6\u5305\uff08\u5de5\u5177\u5e93\uff09\u3002\u800c\u4e14\u4e0d\u540c\u4e8e\u5176\u4ed6\u7684\u7528\u4e8e\u6570\u636e\u79d1\u5b66\u7684\u7f16\u7a0b\u8bed\u8a00\uff08\u5982\uff1aJulia\u3001R\uff09\uff0cPython \u9664\u4e86\u53ef\u4ee5\u7528\u4e8e\u6570\u636e\u79d1\u5b66\uff0c\u8fd8\u80fd\u505a\u5f88\u591a\u5176\u4ed6\u7684\u4e8b\u60c5\uff0c\u53ef\u4ee5\u8bf4 Python \u8bed\u8a00\u51e0\u4e4e\u662f\u65e0\u6240\u4e0d\u80fd\u7684\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/66.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A6%82%E8%BF%B0/#_5","title":"\u4e09\u5927\u795e\u5668","text":"<ol> <li>NumPy\uff1a\u652f\u6301\u5e38\u89c1\u7684\u6570\u7ec4\u548c\u77e9\u9635\u64cd\u4f5c\uff0c\u901a\u8fc7<code>ndarray</code>\u7c7b\u5b9e\u73b0\u4e86\u5bf9\u591a\u7ef4\u6570\u7ec4\u7684\u5c01\u88c5\uff0c\u63d0\u4f9b\u4e86\u64cd\u4f5c\u8fd9\u4e9b\u6570\u7ec4\u7684\u65b9\u6cd5\u548c\u51fd\u6570\u96c6\u3002\u7531\u4e8e NumPy \u5185\u7f6e\u4e86\u5e76\u884c\u8fd0\u7b97\u529f\u80fd\uff0c\u5f53\u4f7f\u7528\u591a\u6838 CPU \u65f6\uff0cNumpy\u4f1a\u81ea\u52a8\u505a\u5e76\u884c\u8ba1\u7b97\u3002</li> <li>Pandas\uff1apandas \u7684\u6838\u5fc3\u662f\u5176\u7279\u6709\u7684\u6570\u636e\u7ed3\u6784<code>DataFrame</code>\u548c<code>Series</code>\uff0c\u8fd9\u4f7f\u5f97 pandas \u53ef\u4ee5\u5904\u7406\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u6570\u636e\u7684\u8868\u683c\u548c\u65f6\u95f4\u5e8f\u5217\uff0c\u8fd9\u4e00\u70b9\u662fNumPy\u7684<code>ndarray</code>\u505a\u4e0d\u5230\u7684\u3002\u4f7f\u7528 pandas\uff0c\u53ef\u4ee5\u8f7b\u677e\u987a\u5229\u7684\u52a0\u8f7d\u5404\u79cd\u5f62\u5f0f\u7684\u6570\u636e\uff0c\u7136\u540e\u5bf9\u6570\u636e\u8fdb\u884c\u5207\u7247\u3001\u5207\u5757\u3001\u5904\u7406\u7f3a\u5931\u503c\u3001\u805a\u5408\u3001\u91cd\u5851\u548c\u53ef\u89c6\u5316\u7b49\u64cd\u4f5c\u3002</li> <li>Matplotlib\uff1amatplotlib \u662f\u4e00\u4e2a\u5305\u542b\u5404\u79cd\u7ed8\u56fe\u6a21\u5757\u7684\u5e93\uff0c\u80fd\u591f\u6839\u636e\u6211\u4eec\u63d0\u4f9b\u7684\u6570\u636e\u521b\u5efa\u9ad8\u8d28\u91cf\u7684\u56fe\u8868\u3002\u6b64\u5916\uff0cmatplotlib \u8fd8\u63d0\u4f9b\u4e86 pylab \u6a21\u5757\uff0c\u8fd9\u4e2a\u6a21\u5757\u5305\u542b\u4e86\u5f88\u591a\u50cf MATLAB \u4e00\u6837\u7684\u7ed8\u56fe\u7ec4\u4ef6\u3002</li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/66.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A6%82%E8%BF%B0/#_6","title":"\u5176\u4ed6\u76f8\u5173\u5e93","text":"<ol> <li>SciPy\uff1a\u5b8c\u5584\u4e86 NumPy \u7684\u529f\u80fd\uff0c\u5c01\u88c5\u4e86\u5927\u91cf\u79d1\u5b66\u8ba1\u7b97\u7684\u7b97\u6cd5\uff0c\u5305\u62ec\u7ebf\u6027\u4ee3\u6570\u3001\u7edf\u8ba1\u68c0\u9a8c\u3001\u7a00\u758f\u77e9\u9635\u3001\u4fe1\u53f7\u548c\u56fe\u50cf\u5904\u7406\u3001\u6700\u4f18\u5316\u95ee\u9898\u3001\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362\u7b49\u3002</li> <li>Seaborn\uff1aseaborn \u662f\u57fa\u4e8e matplotlib \u7684\u56fe\u5f62\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u76f4\u63a5\u4f7f\u7528 matplotlib \u867d\u7136\u53ef\u4ee5\u5b9a\u5236\u51fa\u6f02\u4eae\u7684\u7edf\u8ba1\u56fe\u8868\uff0c\u4f46\u662f\u603b\u4f53\u6765\u8bf4\u8fd8\u4e0d\u591f\u7b80\u5355\u65b9\u4fbf\uff0cseaborn \u76f8\u5f53\u4e8e\u662f\u5bf9 matplotlib \u505a\u4e86\u5c01\u88c5\uff0c\u8ba9\u7528\u6237\u80fd\u591f\u4ee5\u66f4\u7b80\u6d01\u6709\u6548\u7684\u65b9\u5f0f\u505a\u51fa\u5404\u79cd\u6709\u5438\u5f15\u529b\u7684\u7edf\u8ba1\u56fe\u8868\u3002</li> <li>Scikit-learn\uff1ascikit-learn \u6700\u521d\u662f SciPy \u7684\u4e00\u90e8\u5206\uff0c\u63d0\u4f9b\u4e86\u5927\u91cf\u673a\u5668\u5b66\u4e60\u53ef\u80fd\u7528\u5230\u7684\u5de5\u5177\uff0c\u5305\u62ec\u6570\u636e\u9884\u5904\u7406\u3001\u76d1\u7763\u5b66\u4e60\uff08\u5206\u7c7b\u3001\u56de\u5f52\uff09\u3001\u65e0\u76d1\u7763\u5b66\u4e60\uff08\u805a\u7c7b\uff09\u3001\u6a21\u5f0f\u9009\u62e9\u3001\u4ea4\u53c9\u68c0\u9a8c\u7b49\u3002</li> <li>Statsmodels\uff1a\u5305\u542b\u4e86\u7ecf\u5178\u7edf\u8ba1\u5b66\u548c\u7ecf\u6d4e\u8ba1\u91cf\u5b66\u7b97\u6cd5\u7684\u5e93\u3002</li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/67.%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/","title":"67.\u73af\u5883\u51c6\u5907","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/67.%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/#_1","title":"\u73af\u5883\u51c6\u5907","text":"<p>\u5982\u679c\u5e0c\u671b\u5feb\u901f\u5f00\u59cb\u4f7f\u7528 Python \u5904\u7406\u6570\u636e\u79d1\u5b66\u76f8\u5173\u7684\u5de5\u4f5c\uff0c\u5efa\u8bae\u5927\u5bb6\u76f4\u63a5\u5b89\u88c5 Anaconda\uff0c\u7136\u540e\u4f7f\u7528 Anaconda \u4e2d\u96c6\u6210\u7684 Notebook \u6216 JupyterLab \u5de5\u5177\u6765\u7f16\u5199\u4ee3\u7801\u3002\u56e0\u4e3a\u5bf9\u4e8e\u65b0\u624b\u6765\u8bf4\uff0c\u5148\u5b89\u88c5\u5b98\u65b9\u7684 Python \u89e3\u91ca\u5668\uff0c\u518d\u9010\u4e2a\u5b89\u88c5\u5de5\u4f5c\u4e2d\u4f1a\u4f7f\u7528\u5230\u7684\u4e09\u65b9\u5e93\u6587\u4ef6\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u5c24\u5176\u662f\u5728 Windows \u73af\u5883\u4e0b\uff0c\u7ecf\u5e38\u4f1a\u56e0\u4e3a\u6784\u5efa\u5de5\u5177\u6216 DLL \u6587\u4ef6\u7684\u7f3a\u5931\u5bfc\u81f4\u5b89\u88c5\u5931\u8d25\uff0c\u800c\u4e00\u822c\u65b0\u624b\u4e5f\u5f88\u96be\u6839\u636e\u9519\u8bef\u63d0\u793a\u4fe1\u606f\u91c7\u53d6\u6b63\u786e\u7684\u89e3\u51b3\u63aa\u65bd\uff0c\u5bb9\u6613\u4ea7\u751f\u4e25\u91cd\u7684\u632b\u8d25\u611f\u3002\u5982\u679c\u8ba1\u7b97\u673a\u4e0a\u5df2\u7ecf\u6709 Python \u89e3\u91ca\u5668\u73af\u5883\u4e86\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 Python \u7684\u5305\u7ba1\u7406\u5de5\u5177 pip \u5b89\u88c5 Jupyter\uff0c\u518d\u6839\u636e\u5b9e\u9645\u5de5\u4f5c\u7684\u9700\u8981\u5b89\u88c5\u4e09\u65b9\u5e93\uff0c\u8fd9\u79cd\u65b9\u5f0f\u9002\u5408\u6709\u4e00\u5b9a\u7ecf\u9a8c\u7684\u7528\u6237\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/67.%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/#anaconda","title":"\u5b89\u88c5\u548c\u4f7f\u7528 Anaconda","text":"<p>\u5bf9\u4e8e\u4e2a\u4eba\u7528\u6237\u6765\u8bf4\uff0c\u53ef\u4ee5\u4ece Anaconda \u7684\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d\u5b83\u7684\u201c\u4e2a\u4eba\u7248\uff08Individual Edition\uff09\u201d\u5b89\u88c5\u7a0b\u5e8f\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f60\u7684\u8ba1\u7b97\u673a\u4e0a\u4e0d\u4ec5\u62e5\u6709\u4e86 Python \u73af\u5883\u548c Spyder\uff08\u7c7b\u4f3c\u4e8e PyCharm \u7684\u96c6\u6210\u5f00\u53d1\u5de5\u5177\uff09\uff0c\u8fd8\u62e5\u6709\u4e86\u4e0e\u6570\u636e\u79d1\u5b66\u5de5\u4f5c\u76f8\u5173\u7684\u8fd1200\u4e2a\u5de5\u5177\u5305\uff0c\u5305\u62ec\u6211\u4eec\u4e0a\u9762\u63d0\u5230 Python \u6570\u636e\u5206\u6790\u4e09\u5927\u795e\u5668\u3002\u9664\u6b64\u4e4b\u5916\uff0cAnaconda \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a conda \u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u901a\u8fc7\u8fd9\u4e2a\u5de5\u5177\u4e0d\u4ec5\u53ef\u4ee5\u7ba1\u7406 Python \u7684\u5de5\u5177\u5305\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8e\u521b\u5efa\u8fd0\u884c Python \u7a0b\u5e8f\u7684\u865a\u62df\u73af\u5883\u3002</p> <p></p> <p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u53ef\u4ee5\u901a\u8fc7 Anaconda \u5b98\u7f51\u63d0\u4f9b\u7684\u4e0b\u8f7d\u94fe\u63a5\u9009\u62e9\u9002\u5408\u81ea\u5df1\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b89\u88c5\u7a0b\u5e8f\uff0c\u5efa\u8bae\u5927\u5bb6\u9009\u62e9\u56fe\u5f62\u5316\u7684\u5b89\u88c5\u7a0b\u5e8f\uff0c\u4e0b\u8f7d\u5b8c\u6210\u540e\u53cc\u51fb\u5b89\u88c5\u7a0b\u5e8f\u5f00\u59cb\u5b89\u88c5\u3002\u5b89\u88c5\u8fc7\u7a0b\u57fa\u672c\u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\u5373\u53ef\uff0c\u5b8c\u6210\u5b89\u88c5\u540e\uff0cmacOS \u7528\u6237\u53ef\u4ee5\u5728\u201c\u5e94\u7528\u7a0b\u5e8f\u201d\u6216\u201c\u542f\u52a8\u53f0\u201d\u4e2d\u627e\u5230\u540d\u4e3a\u201cAnaconda-Navigator\u201d\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd0\u884c\u8be5\u7a0b\u5e8f\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u754c\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u91cc\u9009\u62e9\u9700\u8981\u6267\u884c\u7684\u64cd\u4f5c\u3002</p> <p></p> <p>\u5bf9\u4e8e Windows \u7528\u6237\uff0c\u5efa\u8bae\u6309\u7167\u5b89\u88c5\u5411\u5bfc\u7684\u63d0\u793a\u548c\u63a8\u8350\u7684\u9009\u9879\u6765\u5b89\u88c5 Anaconda\uff08\u9664\u4e86\u5b89\u88c5\u8def\u5f84\uff0c\u57fa\u672c\u4e5f\u6ca1\u6709\u4ec0\u4e48\u9700\u8981\u9009\u62e9\u7684\uff09\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4ee5\u5728\u201c\u5f00\u59cb\u83dc\u5355\u201d\u4e2d\u627e\u5230\u201cAnaconda3\u201d\u3002</p> <p>\u63d0\u793a\uff1a\u53ef\u4ee5\u9009\u62e9 Miniconda \u4f5c\u4e3a Anaconda \u7684\u66ff\u4ee3\u54c1\uff0cMiniconda \u53ea\u4f1a\u5b89\u88c5 Python \u89e3\u91ca\u5668\u73af\u5883\u548c\u4e00\u4e9b\u5fc5\u8981\u7684\u5de5\u5177\uff0c\u5176\u4ed6\u7684\u4e09\u65b9\u5e93\u7531\u7528\u6237\u81ea\u884c\u9009\u62e9\u5b89\u88c5\u3002\u5176\u5b9e\u6211\u4e2a\u4eba\u5e76\u4e0d\u559c\u6b22 Anaconda\uff0c\u56e0\u4e3a\u5b83\u662f\u7ed9\u5c0f\u767d\u7528\u6237\u4f7f\u7528\u7684\uff0c\u6211\u4eec\u6709\u4e86 Python \u73af\u5883\u4ee5\u540e\u5b8c\u5168\u53ef\u4ee5\u6309\u7167\u81ea\u5df1\u7684\u610f\u613f\u6765\u5b89\u88c5\u9700\u8981\u7684\u4e09\u65b9\u5e93\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/67.%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/#conda","title":"conda\u547d\u4ee4","text":"<p>\u5bf9\u4e8e\u975e\u65b0\u624b\u7528\u6237\uff0c\u5982\u679c\u5e0c\u671b\u4f7f\u7528 conda \u5de5\u5177\u6765\u7ba1\u7406\u4f9d\u8d56\u9879\u6216\u8005\u521b\u5efa\u9879\u76ee\u7684\u865a\u62df\u73af\u5883\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u6216\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u4e2d\u4f7f\u7528 conda \u547d\u4ee4\u3002Windows \u7528\u6237\u53ef\u4ee5\u5728\u201c\u5f00\u59cb\u83dc\u5355\u201d\u4e2d\u627e\u5230\u201cAnaconda3\u201d\uff0c\u7136\u540e\u70b9\u51fb\u201cAnaconda Prompt\u201d\u6216\u201cAnaconda PowerShell\u201d\u6765\u542f\u52a8\u652f\u6301 conda \u7684\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u3002\u65b0\u624b\u7528\u6237\u5982\u679c\u60f3\u521b\u5efa\u65b0\u7684\u865a\u62df\u73af\u5883\u6216\u7ba1\u7406\u4e09\u65b9\u5e93\uff08\u4f9d\u8d56\u9879\uff09\uff0c\u5efa\u8bae\u76f4\u63a5\u4f7f\u7528\u201cAnaconda-Navigator\u201d\u4e2d\u7684\u201cEnvironments\u201d\uff0c\u901a\u8fc7\u53ef\u89c6\u5316\u7684\u65b9\u5f0f\u5bf9\u865a\u62df\u73af\u5883\u548c\u4f9d\u8d56\u9879\u8fdb\u884c\u7ba1\u7406\u3002</p> <ol> <li> <p>\u7248\u672c\u548c\u5e2e\u52a9\u4fe1\u606f\u3002</p> <ul> <li>\u67e5\u770b\u7248\u672c\uff1a<code>conda -V</code>\u6216<code>conda --version</code></li> <li>\u83b7\u53d6\u5e2e\u52a9\uff1a<code>conda -h</code>\u6216<code>conda --help</code></li> <li>\u76f8\u5173\u4fe1\u606f\uff1a<code>conda list</code></li> </ul> </li> <li> <p>\u865a\u62df\u73af\u5883\u76f8\u5173\u3002</p> <ul> <li>\u663e\u793a\u6240\u6709\u865a\u62df\u73af\u5883\uff1a<code>conda env list</code></li> <li>\u521b\u5efa\u865a\u62df\u73af\u5883\uff1a<code>conda create --name venv</code></li> <li>\u6307\u5b9a Python \u7248\u672c\u521b\u5efa\u865a\u62df\u73af\u5883\uff1a<code>conda create --name venv python=3.7</code></li> <li>\u6307\u5b9a Python \u7248\u672c\u521b\u5efa\u865a\u62df\u73af\u5883\u5e76\u5b89\u88c5\u6307\u5b9a\u4f9d\u8d56\u9879\uff1a<code>conda create --name venv python=3.7 numpy pandas</code></li> <li>\u901a\u8fc7\u514b\u9686\u73b0\u6709\u865a\u62df\u73af\u5883\u7684\u65b9\u5f0f\u521b\u5efa\u865a\u62df\u73af\u5883\uff1a<code>conda create --name venv2 --clone venv</code></li> <li>\u5206\u4eab\u865a\u62df\u73af\u5883\u5e76\u91cd\u5b9a\u5411\u5230\u6307\u5b9a\u7684\u6587\u4ef6\u4e2d\uff1a<code>conda env export &gt; environment.yml</code></li> <li>\u901a\u8fc7\u5206\u4eab\u7684\u865a\u62df\u73af\u5883\u6587\u4ef6\u521b\u5efa\u865a\u62df\u73af\u5883\uff1a<code>conda env create -f environment.yml</code></li> <li>\u6fc0\u6d3b\u865a\u62df\u73af\u5883\uff1a<code>conda activate venv</code></li> <li>\u9000\u51fa\u865a\u62df\u73af\u5883\uff1a<code>conda deactivate</code></li> <li>\u5220\u9664\u865a\u62df\u73af\u5883\uff1a<code>conda remove --name venv --all</code></li> </ul> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u7684\u547d\u4ee4\u4e2d\uff0c<code>venv</code>\u548c<code>venv2</code>\u662f\u865a\u62df\u73af\u5883\u6587\u4ef6\u5939\u7684\u540d\u5b57\uff0c\u53ef\u4ee5\u5c06\u5176\u66ff\u6362\u4e3a\u81ea\u5df1\u559c\u6b22\u7684\u540d\u5b57\uff0c\u4f46\u662f\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528\u82f1\u6587\u4e14\u4e0d\u8981\u6709\u7279\u6b8a\u5b57\u7b26\u3002</p> </li> <li> <p>\u5305\uff08\u4e09\u65b9\u5e93\u6216\u5de5\u5177\uff09\u7ba1\u7406\u3002</p> <ul> <li>\u67e5\u770b\u5df2\u7ecf\u5b89\u88c5\u7684\u5305\uff1a<code>conda list</code></li> <li>\u641c\u7d22\u6307\u5b9a\u7684\u5305\uff1a<code>conda search matplotlib</code></li> <li>\u5b89\u88c5\u6307\u5b9a\u7684\u5305\uff1a<code>conda install matplotlib</code></li> <li>\u66f4\u65b0\u6307\u5b9a\u7684\u5305\uff1a<code>conda update matplotlib</code></li> <li>\u79fb\u9664\u6307\u5b9a\u7684\u5305\uff1a<code>conda remove matplotlib</code></li> </ul> <p>\u8bf4\u660e\uff1a\u5728\u641c\u7d22\u3001\u5b89\u88c5\u548c\u66f4\u65b0\u8f6f\u4ef6\u5305\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u8fde\u63a5\u5230\u5b98\u65b9\u7f51\u7ad9\u8fdb\u884c\u64cd\u4f5c\uff0c\u5982\u679c\u89c9\u5f97\u901f\u5ea6\u4e0d\u7ed9\u529b\uff0c\u53ef\u4ee5\u5c06\u9ed8\u8ba4\u7684\u5b98\u65b9\u7f51\u7ad9\u66ff\u6362\u4e3a\u56fd\u5185\u7684\u955c\u50cf\u7f51\u7ad9\uff0c\u63a8\u8350\u4f7f\u7528\u6e05\u534e\u5927\u5b66\u7684\u5f00\u6e90\u955c\u50cf\u7f51\u7ad9\u3002\u5c06\u9ed8\u8ba4\u6e90\u66f4\u6362\u4e3a\u56fd\u5185\u955c\u50cf\u7684\u547d\u4ee4\u662f\uff1a<code>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</code>\u548c<code>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</code>\u3002\u5982\u679c\u9700\u8981\u6362\u56de\u9ed8\u8ba4\u6e90\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4<code>conda config --remove-key channels</code>\u3002</p> </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/67.%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/#jupyterlab","title":"\u5b89\u88c5\u548c\u4f7f\u7528JupyterLab","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/67.%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/#_2","title":"\u5b89\u88c5\u548c\u542f\u52a8","text":"<p>\u5982\u679c\u5df2\u7ecf\u5b89\u88c5\u4e86 Anaconda\uff0c\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u6240\u8bf4\u7684\u65b9\u5f0f\u5728\u201cAnaconda-Navigator\u201d\u4e2d\u76f4\u63a5\u542f\u52a8 Notebook \u6216 JupyterLab\u3002\u6309\u7167\u5b98\u65b9\u7684\u8bf4\u6cd5\uff0cJupyterLab \u662f\u4e0b\u4e00\u4ee3\u7684 Notebook\uff0c\u63d0\u4f9b\u4e86\u66f4\u53cb\u597d\u7684\u754c\u9762\u548c\u66f4\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u6211\u4eec\u4e5f\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 JupyterLab\u3002Windows \u7528\u6237\u4e5f\u53ef\u4ee5\u5728\u5f00\u59cb\u83dc\u5355\u4e2d\u6253\u5f00\u201cAnaconda Prompt\u201d\u6216\u201cAnaconda PowerShell\u201d\uff0c\u7531\u4e8e\u5df2\u7ecf\u6fc0\u6d3b\u4e86 Anaconda \u9ed8\u8ba4\u7684\u865a\u62df\u73af\u5883\uff0c\u53ea\u9700\u8981\u8f93\u5165<code>jupyter lab</code>\u547d\u4ee4\u6765\u542f\u52a8JupyterLab\u3002macOS \u7cfb\u7edf\u5728\u5b89\u88c5 Anaconda\u4ee5\u540e\uff0c\u6bcf\u6b21\u6253\u5f00\u7ec8\u7aef\u65f6\u4f1a\u81ea\u52a8\u6fc0\u6d3b Anaconda \u9ed8\u8ba4\u7684\u865a\u62df\u73af\u5883\uff0c\u4e5f\u662f\u901a\u8fc7\u8f93\u5165<code>jupyter lab</code>\u547d\u4ee4\u5c31\u53ef\u4ee5\u542f\u52a8JupyterLab\u3002</p> <p>\u5bf9\u4e8e\u5b89\u88c5\u4e86 Python \u73af\u5883\u4f46\u662f\u6ca1\u6709\u5b89\u88c5 Anaconda \u7684\u7528\u6237\uff0c\u53ef\u4ee5\u7528 Python \u7684\u5305\u7ba1\u7406\u5de5\u5177<code>pip</code>\u6765\u5b89\u88c5 JupyterLab\uff0c\u5b89\u88c5\u6210\u529f\u540e\u5728\u7ec8\u7aef\u6216\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u4e2d\u6267\u884c<code>jupyter lab</code>\u547d\u4ee4\u6765\u542f\u52a8 JupyterLab\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u5b89\u88c5 JupyterLab\uff1a</p> <pre><code>pip install jupyterlab\n</code></pre> <p>\u5b89\u88c5 Python \u6570\u636e\u5206\u6790\u4e09\u5927\u795e\u5668\uff1a</p> <pre><code>pip install numpy pandas matplotlib\n</code></pre> <p>\u542f\u52a8 JupyterLab\uff1a</p> <pre><code>jupyter lab\n</code></pre> <p>JupyterLab \u662f\u57fa\u4e8e\u7f51\u9875\u7684\u7528\u4e8e\u4ea4\u4e92\u8ba1\u7b97\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u7528\u4e8e\u4ee3\u7801\u5f00\u53d1\u3001\u6587\u6863\u64b0\u5199\u3001\u4ee3\u7801\u8fd0\u884c\u548c\u7ed3\u679c\u5c55\u793a\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u4f60\u53ef\u4ee5\u5728\u7f51\u9875\u4e2d\u76f4\u63a5\u7f16\u5199\u4ee3\u7801\u548c\u8fd0\u884c\u4ee3\u7801\uff0c\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u4e5f\u4f1a\u76f4\u63a5\u5728\u4ee3\u7801\u5757\u4e0b\u65b9\u8fdb\u884c\u5c55\u793a\u3002\u5982\u5728\u7f16\u5199\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u7f16\u5199\u8bf4\u660e\u6587\u6863\uff0c\u53ef\u5728\u540c\u4e00\u4e2a\u9875\u9762\u4e2d\u4f7f\u7528 Markdown \u683c\u5f0f\u8fdb\u884c\u7f16\u5199\uff0c\u800c\u4e14\u53ef\u4ee5\u76f4\u63a5\u770b\u5230\u6e32\u67d3\u540e\u7684\u6548\u679c\u3002\u6b64\u5916\uff0cNotebook \u7684\u8bbe\u8ba1\u521d\u8877\u662f\u63d0\u4f9b\u4e00\u4e2a\u80fd\u591f\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u7684\u5de5\u4f5c\u73af\u5883\uff0c\u76ee\u524d\u5b83\u80fd\u591f\u652f\u6301\u8d85\u8fc740\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u62ec Python\u3001R\u3001Julia\u3001Scala \u7b49\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u4e66\u5199 Python \u4ee3\u7801\u7684 Notebook\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7f16\u5199\u4ee3\u7801\u3001\u64b0\u5199\u6587\u6863\u548c\u8fd0\u884c\u7a0b\u5e8f\u5566\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/67.%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/#_3","title":"\u4f7f\u7528\u6280\u5de7","text":"<p>\u5982\u679c\u4f7f\u7528 Python \u505a\u5de5\u7a0b\u5316\u7684\u9879\u76ee\u5f00\u53d1\uff0cPyCharm \u80af\u5b9a\u662f\u6700\u597d\u7684\u9009\u62e9\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u96c6\u6210\u5f00\u53d1\u73af\u5883\u5e94\u8be5\u5177\u6709\u7684\u6240\u6709\u529f\u80fd\uff0c\u5c24\u5176\u662f\u667a\u80fd\u63d0\u793a\u3001\u4ee3\u7801\u8865\u5168\u3001\u81ea\u52a8\u7ea0\u9519\u8fd9\u7c7b\u529f\u80fd\u4f1a\u8ba9\u5f00\u53d1\u4eba\u5458\u611f\u5230\u975e\u5e38\u8212\u670d\u3002\u5982\u679c\u4f7f\u7528 Python \u505a\u6570\u636e\u79d1\u5b66\u76f8\u5173\u7684\u5de5\u4f5c\uff0cJupyterLab \u5e76\u4e0d\u6bd4 PyCharm \u900a\u8272\uff0c\u5728\u6570\u636e\u548c\u56fe\u8868\u5c55\u793a\u65b9\u9762 JupyterLab \u66f4\u52a0\u4f18\u79c0\u3002\u4e3a\u6b64\uff0cJetBrains \u516c\u53f8\u8fd8\u4e13\u95e8\u5f00\u53d1\u4e86\u4e00\u4e2a\u5bf9\u6807 JupyterLab \u7684\u65b0\u5de5\u5177 DataSpell\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u3002\u4e0b\u9762\u6211\u4eec\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e9b JupyterLab \u7684\u4f7f\u7528\u6280\u5de7\uff0c\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5927\u5bb6\u63d0\u5347\u5de5\u4f5c\u6548\u7387\u3002</p> <ol> <li> <p>\u81ea\u52a8\u8865\u5168\u3002\u5728\u4f7f\u7528 JupyterLab \u7f16\u5199\u4ee3\u7801\u65f6\uff0c\u6309<code>Tab</code>\u952e\u4f1a\u83b7\u5f97\u4ee3\u7801\u63d0\u793a\u548c\u8865\u5168\u529f\u80fd\u3002</p> </li> <li> <p>\u83b7\u5f97\u5e2e\u52a9\u3002\u5982\u679c\u5e0c\u671b\u4e86\u89e3\u4e00\u4e2a\u5bf9\u8c61\uff08\u5982\u53d8\u91cf\u3001\u7c7b\u3001\u51fd\u6570\u7b49\uff09\u7684\u76f8\u5173\u4fe1\u606f\u6216\u4f7f\u7528\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u5bf9\u8c61\u540e\u9762\u4f7f\u7528<code>?</code>\u5e76\u8fd0\u884c\u4ee3\u7801\uff0c \u7a97\u53e3\u4e0b\u65b9\u4f1a\u663e\u793a\u51fa\u5bf9\u5e94\u7684\u4fe1\u606f\uff0c\u5e2e\u52a9\u6211\u4eec\u4e86\u89e3\u8be5\u5bf9\u8c61\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p></p> </li> <li> <p>\u641c\u7d22\u547d\u540d\u3002\u5982\u679c\u53ea\u8bb0\u5f97\u4e00\u4e2a\u7c7b\u6216\u4e00\u4e2a\u51fd\u6570\u540d\u5b57\u7684\u4e00\u90e8\u5206\uff0c\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26<code>*</code>\u5e76\u914d\u5408<code>?</code>\u8fdb\u884c\u641c\u7d22\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p></p> </li> <li> <p>\u8c03\u7528\u547d\u4ee4\u3002\u53ef\u4ee5\u5728 JupyterLab \u4e2d\u4f7f\u7528<code>!</code>\u540e\u9762\u8ddf\u7cfb\u7edf\u547d\u4ee4\u7684\u65b9\u5f0f\u6765\u6267\u884c\u7cfb\u7edf\u547d\u4ee4\u3002</p> </li> <li> <p>\u9b54\u6cd5\u6307\u4ee4\u3002JupyterLab \u4e2d\u6709\u5f88\u591a\u975e\u5e38\u6709\u8da3\u4e14\u6709\u7528\u7684\u9b54\u6cd5\u6307\u4ee4\uff0c\u4f8b\u5982\u53ef\u4ee5\u4f7f\u7528<code>%timeit</code>\u6d4b\u8bd5\u8bed\u53e5\u7684\u6267\u884c\u65f6\u95f4\uff0c\u53ef\u4ee5\u4f7f\u7528<code>%pwd</code>\u67e5\u770b\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7b49\u3002\u5982\u679c\u60f3\u67e5\u770b\u6240\u6709\u7684\u9b54\u6cd5\u6307\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528<code>%lsmagic</code>\uff0c\u5982\u679c\u4e86\u89e3\u9b54\u6cd5\u6307\u4ee4\u7684\u7528\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528<code>%magic</code>\u6765\u67e5\u770b\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u5e38\u7528\u7684\u9b54\u6cd5\u6307\u4ee4\u6709\uff1a</p> \u9b54\u6cd5\u6307\u4ee4 \u529f\u80fd\u8bf4\u660e <code>%pwd</code> \u67e5\u770b\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 <code>%ls</code> \u5217\u51fa\u5f53\u524d\u6216\u6307\u5b9a\u6587\u4ef6\u5939\u4e0b\u7684\u5185\u5bb9 <code>%cat</code> \u67e5\u770b\u6307\u5b9a\u6587\u4ef6\u7684\u5185\u5bb9 <code>%hist</code> \u67e5\u770b\u8f93\u5165\u5386\u53f2 <code>%matplotlib inline</code> \u8bbe\u7f6e\u5728\u9875\u9762\u4e2d\u5d4c\u5165matplotlib\u8f93\u51fa\u7684\u7edf\u8ba1\u56fe\u8868 <code>%config Inlinebackend.figure_format='svg'</code> \u8bbe\u7f6e\u7edf\u8ba1\u56fe\u8868\u4f7f\u7528SVG\u683c\u5f0f\uff08\u77e2\u91cf\u56fe\uff09 <code>%run</code> \u8fd0\u884c\u6307\u5b9a\u7684\u7a0b\u5e8f <code>%load</code> \u52a0\u8f7d\u6307\u5b9a\u7684\u6587\u4ef6\u5230\u5355\u5143\u683c\u4e2d <code>%quickref</code> \u663e\u793aIPython\u7684\u5feb\u901f\u53c2\u8003 <code>%timeit</code> \u591a\u6b21\u8fd0\u884c\u4ee3\u7801\u5e76\u7edf\u8ba1\u4ee3\u7801\u6267\u884c\u65f6\u95f4 <code>%prun</code> \u7528<code>cProfile.run</code>\u8fd0\u884c\u4ee3\u7801\u5e76\u663e\u793a\u5206\u6790\u5668\u7684\u8f93\u51fa <code>%who</code> / <code>%whos</code> \u663e\u793a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u53d8\u91cf <code>%xdel</code> \u5220\u9664\u4e00\u4e2a\u5bf9\u8c61\u5e76\u6e05\u7406\u6240\u6709\u5bf9\u5b83\u7684\u5f15\u7528 </li> <li> <p>\u5feb\u6377\u952e\u3002JupyterLab \u4e2d\u7684\u5f88\u591a\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7\u5feb\u6377\u952e\u6765\u5b9e\u73b0\uff0c\u4f7f\u7528\u5feb\u6377\u952e\u53ef\u4ee5\u63d0\u5347\u5de5\u4f5c\u6548\u7387\u3002JupyterLab \u7684\u5feb\u6377\u952e\u53ef\u4ee5\u5206\u4e3a\u547d\u4ee4\u6a21\u5f0f\u4e0b\u7684\u5feb\u6377\u952e\u548c\u7f16\u8f91\u6a21\u5f0f\u4e0b\u7684\u5feb\u6377\u952e\uff0c\u6240\u8c13\u7f16\u8f91\u6a21\u5f0f\u5c31\u662f\u5904\u4e8e\u8f93\u5165\u4ee3\u7801\u6216\u64b0\u5199\u6587\u6863\u72b6\u6001\u7684\u6a21\u5f0f\uff0c\u5728\u7f16\u8f91\u6a21\u5f0f\u4e0b\u6309<code>Esc</code>\u53ef\u4ee5\u56de\u5230\u547d\u4ee4\u6a21\u5f0f\uff0c\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u6309<code>Enter</code>\u53ef\u4ee5\u8fdb\u5165\u7f16\u8f91\u6a21\u5f0f\u3002</p> <p>\u547d\u4ee4\u6a21\u5f0f\u4e0b\u7684\u5feb\u6377\u952e\uff1a</p> \u5feb\u6377\u952e \u529f\u80fd\u8bf4\u660e <code>Alt</code> + <code>Enter</code> \u8fd0\u884c\u5f53\u524d\u5355\u5143\u683c\u5e76\u5728\u4e0b\u9762\u63d2\u5165\u65b0\u7684\u5355\u5143\u683c <code>Shift</code> + <code>Enter</code> \u8fd0\u884c\u5f53\u524d\u5355\u5143\u683c\u5e76\u9009\u4e2d\u4e0b\u65b9\u7684\u5355\u5143\u683c <code>Ctrl</code> + <code>Enter</code> \u8fd0\u884c\u5f53\u524d\u5355\u5143\u683c <code>j</code> / <code>k</code>\u3001<code>Shift</code> + <code>j</code> / <code>Shift</code> + <code>k</code> \u9009\u4e2d\u4e0b\u65b9/\u4e0a\u65b9\u5355\u5143\u683c\u3001\u8fde\u7eed\u9009\u4e2d\u4e0b\u65b9/\u4e0a\u65b9\u5355\u5143\u683c <code>a</code> / <code>b</code> \u5728\u4e0b\u65b9/\u4e0a\u65b9\u63d2\u5165\u65b0\u7684\u5355\u5143\u683c <code>c</code> / <code>x</code> \u590d\u5236\u5355\u5143\u683c / \u526a\u5207\u5355\u5143\u683c <code>v</code> / <code>Shift</code> + <code>v</code> \u5728\u4e0b\u65b9/\u4e0a\u65b9\u7c98\u8d34\u5355\u5143\u683c <code>dd</code> / <code>z</code> \u5220\u9664\u5355\u5143\u683c / \u6062\u590d\u5220\u9664\u7684\u5355\u5143\u683c <code>Shift</code> + <code>l</code> \u663e\u793a\u6216\u9690\u85cf\u5f53\u524d/\u6240\u6709\u5355\u5143\u683c\u884c\u53f7 <code>Space</code> / <code>Shift</code> + <code>Space</code> \u5411\u4e0b/\u5411\u4e0a\u6eda\u52a8\u9875\u9762 <p>\u7f16\u8f91\u6a21\u5f0f\u4e0b\u7684\u5feb\u6377\u952e\uff1a</p> \u5feb\u6377\u952e \u529f\u80fd\u8bf4\u660e <code>Shift</code> + <code>Tab</code> \u83b7\u5f97\u63d0\u793a\u4fe1\u606f <code>Ctrl</code> + <code>]</code>/ <code>Ctrl</code> + <code>[</code> \u589e\u52a0/\u51cf\u5c11\u7f29\u8fdb <code>Alt</code> + <code>Enter</code> \u8fd0\u884c\u5f53\u524d\u5355\u5143\u683c\u5e76\u5728\u4e0b\u9762\u63d2\u5165\u65b0\u7684\u5355\u5143\u683c <code>Shift</code> + <code>Enter</code> \u8fd0\u884c\u5f53\u524d\u5355\u5143\u683c\u5e76\u9009\u4e2d\u4e0b\u65b9\u7684\u5355\u5143\u683c <code>Ctrl</code> + <code>Enter</code> \u8fd0\u884c\u5f53\u524d\u5355\u5143\u683c <code>Ctrl</code> + <code>Left</code> / <code>Right</code> \u5149\u6807\u79fb\u5230\u884c\u9996/\u884c\u5c3e <code>Ctrl</code> + <code>Up</code> / <code>Down</code> \u5149\u6807\u79fb\u52a8\u4ee3\u7801\u5f00\u5934/\u7ed3\u5c3e\u5904 <code>Up</code> / <code>Down</code> \u5149\u6807\u4e0a\u79fb/\u4e0b\u79fb\u4e00\u884c\u6216\u79fb\u5230\u4e0a/\u4e0b\u4e00\u4e2a\u5355\u5143\u683c <p>\u8bf4\u660e\uff1a\u5bf9\u4e8e macOS \u7cfb\u7edf\u53ef\u4ee5\u5c06<code>Alt</code>\u952e\u66ff\u6362\u6210<code>Option</code>\u952e\uff0c\u5c06<code>Ctrl</code>\u952e\u66ff\u6362\u6210<code>Command</code>\u952e\u3002</p> </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/68.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-1/","title":"68.NumPy\u7684\u5e94\u7528 1","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/68.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-1/#numpy-1","title":"NumPy\u7684\u5e94\u7528-1","text":"<p>Numpy \u662f\u4e00\u4e2a\u5f00\u6e90\u7684 Python \u79d1\u5b66\u8ba1\u7b97\u5e93\uff0c\u7528\u4e8e\u5feb\u901f\u5904\u7406\u4efb\u610f\u7ef4\u5ea6\u7684\u6570\u7ec4\u3002Numpy \u652f\u6301\u5e38\u89c1\u7684\u6570\u7ec4\u548c\u77e9\u9635\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u540c\u6837\u7684\u6570\u503c\u8ba1\u7b97\u4efb\u52a1\uff0c\u4f7f\u7528 NumPy \u4e0d\u4ec5\u4ee3\u7801\u8981\u7b80\u6d01\u7684\u591a\uff0c\u800c\u4e14 NumPy \u5728\u6027\u80fd\u4e0a\u4e5f\u8fdc\u8fdc\u4f18\u4e8e\u539f\u751f Python\uff0c\u81f3\u5c11\u662f\u4e00\u5230\u4e24\u4e2a\u6570\u91cf\u7ea7\u7684\u5dee\u8ddd\uff0c\u800c\u4e14\u6570\u636e\u91cf\u8d8a\u5927\uff0cNumPy \u7684\u4f18\u52bf\u5c31\u8d8a\u660e\u663e\u3002</p> <p>NumPy \u6700\u4e3a\u6838\u5fc3\u7684\u6570\u636e\u7c7b\u578b\u662f<code>ndarray</code>\uff0c\u4f7f\u7528<code>ndarray</code>\u53ef\u4ee5\u5904\u7406\u4e00\u7ef4\u3001\u4e8c\u7ef4\u548c\u591a\u7ef4\u6570\u7ec4\uff0c\u8be5\u5bf9\u8c61\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u5feb\u901f\u800c\u7075\u6d3b\u7684\u5927\u6570\u636e\u5bb9\u5668\u3002NumPy \u5e95\u5c42\u4ee3\u7801\u4f7f\u7528 C \u8bed\u8a00\u7f16\u5199\uff0c\u89e3\u51b3\u4e86 GIL \u7684\u9650\u5236\uff0c<code>ndarray</code>\u5728\u5b58\u53d6\u6570\u636e\u7684\u65f6\u5019\uff0c\u6570\u636e\u4e0e\u6570\u636e\u7684\u5730\u5740\u90fd\u662f\u8fde\u7eed\u7684\uff0c\u8fd9\u786e\u4fdd\u4e86\u53ef\u4ee5\u8fdb\u884c\u9ad8\u6548\u7387\u7684\u6279\u91cf\u64cd\u4f5c\uff0c\u6027\u80fd\u4e0a\u8fdc\u8fdc\u4f18\u4e8e Python \u4e2d\u7684<code>list</code>\uff1b\u53e6\u4e00\u65b9\u9762<code>ndarray</code>\u5bf9\u8c61\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u65b9\u6cd5\u6765\u5904\u7406\u6570\u636e\uff0c\u5c24\u5176\u83b7\u53d6\u6570\u636e\u7edf\u8ba1\u7279\u5f81\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4e5f\u662f Python \u539f\u751f\u7684<code>list</code>\u6ca1\u6709\u7684\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/68.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-1/#_1","title":"\u51c6\u5907\u5de5\u4f5c","text":"<ol> <li> <p>\u542f\u52a8 JupyterLab</p> <pre><code>jupyter lab\n</code></pre> <p>\u63d0\u793a\uff1a\u5728\u542f\u52a8 JupyterLab \u4e4b\u524d\uff0c\u5efa\u8bae\u5148\u5b89\u88c5\u597d\u6570\u636e\u5206\u6790\u76f8\u5173\u4f9d\u8d56\u9879\uff0c\u5305\u62ec\u4e4b\u524d\u63d0\u5230\u7684\u4e09\u5927\u795e\u5668\u4ee5\u53ca\u76f8\u5173\u4f9d\u8d56\u9879\u3002\u5982\u679c\u4f7f\u7528 Anaconda\uff0c\u5219\u65e0\u9700\u5355\u72ec\u5b89\u88c5\uff0c\u53ef\u4ee5\u901a\u8fc7 Anaconda \u7684 Navigator \u6765\u542f\u52a8\u3002</p> </li> <li> <p>\u5bfc\u5165</p> <pre><code>import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n</code></pre> <p>\u8bf4\u660e\uff1a\u5982\u679c\u5df2\u7ecf\u542f\u52a8\u4e86 JupyterLab \u4f46\u5c1a\u672a\u5b89\u88c5\u76f8\u5173\u4f9d\u8d56\u5e93\uff0c\u4f8b\u5982\u5c1a\u672a\u5b89\u88c5<code>numpy</code>\uff0c\u53ef\u4ee5\u5728\u5355\u5143\u683c\u4e2d\u8f93\u5165<code>%pip install numpy</code>\u5e76\u8fd0\u884c\u8be5\u5355\u5143\u683c\u6765\u5b89\u88c5 NumPy\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u5355\u5143\u683c\u4e2d\u8f93\u5165<code>%pip install numpy pandas matplotlib</code>\u628a Python \u6570\u636e\u5206\u6790\u4e09\u4e2a\u6838\u5fc3\u7684\u4e09\u65b9\u5e93\u90fd\u5b89\u88c5\u4e0a\u3002\u6ce8\u610f\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u4e0d\u4ec5\u5bfc\u5165\u4e86 NumPy\uff0c\u8fd8\u5c06 pandas \u548c matplotlib \u5e93\u4e00\u5e76\u5bfc\u5165\u4e86\u3002</p> </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/68.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-1/#_2","title":"\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61","text":"<p>\u521b\u5efa<code>ndarray</code>\u5bf9\u8c61\u6709\u5f88\u591a\u79cd\u65b9\u6cd5\uff0c\u4e0b\u9762\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u7528\u7684\u65b9\u6cd5\u3002</p> <p>\u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528<code>array</code>\u51fd\u6570\uff0c\u901a\u8fc7<code>list</code>\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array1 = np.array([1, 2, 3, 4, 5])\narray1\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([1, 2, 3, 4, 5])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array2 = np.array([[1, 2, 3], [4, 5, 6]])\narray2\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1, 2, 3],\n       [4, 5, 6]])\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528<code>arange</code>\u51fd\u6570\uff0c\u6307\u5b9a\u53d6\u503c\u8303\u56f4\u548c\u8de8\u5ea6\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array3 = np.arange(0, 20, 2)\narray3\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18])\n</code></pre> <p>\u65b9\u6cd5\u4e09\uff1a\u4f7f\u7528<code>linspace</code>\u51fd\u6570\uff0c\u7528\u6307\u5b9a\u8303\u56f4\u548c\u5143\u7d20\u4e2a\u6570\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61\uff0c\u751f\u6210\u7b49\u5dee\u6570\u5217</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array4 = np.linspace(-1, 1, 11)\narray4\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([-1. , -0.8, -0.6, -0.4, -0.2,  0. ,  0.2,  0.4,  0.6,  0.8,  1. ])\n</code></pre> <p>\u65b9\u6cd5\u56db\uff1a\u4f7f\u7528<code>logspace</code>\u51fd\u6570\uff0c\u751f\u6210\u7b49\u6bd4\u6570\u5217</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array5 = np.logspace(1, 10, num=10, base=2)\narray5\n</code></pre> <p>\u6ce8\u610f\uff1a\u7b49\u6bd4\u6570\u5217\u7684\u8d77\u59cb\u503c\u662f\\(2^1\\)\uff0c\u7b49\u6bd4\u6570\u5217\u7684\u7ec8\u6b62\u503c\u662f\\(2^{10}\\)\uff0c<code>num</code>\u662f\u5143\u7d20\u7684\u4e2a\u6570\uff0c<code>base</code>\u5c31\u662f\u5e95\u6570\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([   2.,    4.,    8.,   16.,   32.,   64.,  128.,  256.,  512., 1024.])\n</code></pre> <p>\u65b9\u6cd5\u4e94\uff1a\u901a\u8fc7<code>fromstring</code>\u51fd\u6570\u4ece\u5b57\u7b26\u4e32\u63d0\u53d6\u6570\u636e\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array6 = np.fromstring('1, 2, 3, 4, 5', sep=',', dtype='i8')\narray6\u00a0\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([1, 2, 3, 4, 5])\n</code></pre> <p>\u65b9\u6cd5\u516d\uff1a\u901a\u8fc7<code>fromiter</code>\u51fd\u6570\u4ece\u751f\u6210\u5668\uff08\u8fed\u4ee3\u5668\uff09\u4e2d\u83b7\u53d6\u6570\u636e\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>def fib(how_many):\n    a, b = 0, 1\n    for _ in range(how_many):\n        a, b = b, a + b\n        yield a\n\n\ngen = fib(20)\narray7 = np.fromiter(gen, dtype='i8')\narray7\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([   1,    1,    2,    3,    5,    8,   13,   21,   34,   55,   89,\n        144,  233,  377,  610,  987, 1597, 2584, 4181, 6765])\n</code></pre> <p>\u65b9\u6cd5\u4e03\uff1a\u4f7f\u7528<code>numpy.random</code>\u6a21\u5757\u7684\u51fd\u6570\u751f\u6210\u968f\u673a\u6570\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61</p> <p>\u4ea7\u751f10\u4e2a\\([0, 1)\\)\u8303\u56f4\u7684\u968f\u673a\u5c0f\u6570\uff0c\u4ee3\u7801\uff1a</p> <pre><code>array8 = np.random.rand(10)\narray8\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([0.45556132, 0.67871326, 0.4552213 , 0.96671509, 0.44086463,\n       0.72650875, 0.79877188, 0.12153022, 0.24762739, 0.6669852 ])\n</code></pre> <p>\u4ea7\u751f10\u4e2a\\([1, 100)\\)\u8303\u56f4\u7684\u968f\u673a\u6574\u6570\uff0c\u4ee3\u7801\uff1a</p> <pre><code>array9 = np.random.randint(1, 100, 10)\narray9\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([29, 97, 87, 47, 39, 19, 71, 32, 79, 34])\n</code></pre> <p>\u4ea7\u751f20\u4e2a\\(\\small{\\mu=50}\\)\uff0c\\(\\small{\\sigma=10}\\)\u7684\u6b63\u6001\u5206\u5e03\u968f\u673a\u6570\uff0c\u4ee3\u7801\uff1a</p> <pre><code>array10 = np.random.normal(50, 10, 20)\narray10\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([55.04155586, 46.43510797, 20.28371158, 62.67884053, 61.23185964,\n       38.22682148, 53.17126151, 43.54741592, 36.11268017, 40.94086676,\n       63.27911699, 46.92688903, 37.1593374 , 67.06525656, 67.47269463,\n       23.37925889, 31.45312239, 48.34532466, 55.09180924, 47.95702787])\n</code></pre> <p>\u4ea7\u751f\\([0, 1)\\)\u8303\u56f4\u7684\u968f\u673a\u5c0f\u6570\u6784\u6210\u76843\u884c4\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u4ee3\u7801\uff1a</p> <pre><code>array11 = np.random.rand(3, 4)\narray11\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[0.54017809, 0.46797771, 0.78291445, 0.79501326],\n       [0.93973783, 0.21434806, 0.03592874, 0.88838892],\n       [0.84130479, 0.3566601 , 0.99935473, 0.26353598]])\n</code></pre> <p>\u4ea7\u751f\\([1, 100)\\)\u8303\u56f4\u7684\u968f\u673a\u6574\u6570\u6784\u6210\u7684\u4e09\u7ef4\u6570\u7ec4\uff0c\u4ee3\u7801\uff1a</p> <pre><code>array12 = np.random.randint(1, 100, (3, 4, 5))\narray12\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[[94, 26, 49, 24, 43],\n        [27, 27, 33, 98, 33],\n        [13, 73,  6,  1, 77],\n        [54, 32, 51, 86, 59]],\n\n       [[62, 75, 62, 29, 87],\n        [90, 26,  6, 79, 41],\n        [31, 15, 32, 56, 64],\n        [37, 84, 61, 71, 71]],\n\n       [[45, 24, 78, 77, 41],\n        [75, 37,  4, 74, 93],\n        [ 1, 36, 36, 60, 43],\n        [23, 84, 44, 89, 79]]])\n</code></pre> <p>\u65b9\u6cd5\u516b\uff1a\u521b\u5efa\u51680\u3001\u51681\u6216\u6307\u5b9a\u5143\u7d20\u7684\u6570\u7ec4</p> <p>\u4f7f\u7528<code>zeros</code>\u51fd\u6570\uff0c\u4ee3\u7801\uff1a</p> <pre><code>array13 = np.zeros((3, 4))\narray13\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[0., 0., 0., 0.],\n       [0., 0., 0., 0.],\n       [0., 0., 0., 0.]])\n</code></pre> <p>\u4f7f\u7528<code>ones</code>\u51fd\u6570\uff0c\u4ee3\u7801\uff1a</p> <pre><code>array14 = np.ones((3, 4))\narray14\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1., 1., 1., 1.],\n       [1., 1., 1., 1.],\n       [1., 1., 1., 1.]])\n</code></pre> <p>\u4f7f\u7528<code>full</code>\u51fd\u6570\uff0c\u4ee3\u7801\uff1a</p> <pre><code>array15 = np.full((3, 4), 10)\narray15\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[10, 10, 10, 10],\n       [10, 10, 10, 10],\n       [10, 10, 10, 10]])\n</code></pre> <p>\u65b9\u6cd5\u4e5d\uff1a\u4f7f\u7528<code>eye</code>\u51fd\u6570\u521b\u5efa\u5355\u4f4d\u77e9\u9635</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.eye(4)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1., 0., 0., 0.],\n       [0., 1., 0., 0.],\n       [0., 0., 1., 0.],\n       [0., 0., 0., 1.]])\n</code></pre> <p>\u65b9\u6cd5\u5341\uff1a\u8bfb\u53d6\u56fe\u7247\u83b7\u5f97\u5bf9\u5e94\u7684\u4e09\u7ef4\u6570\u7ec4</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array16 = plt.imread('../../../../img/res/guido.jpg')\narray16\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[[ 36,  33,  28],\n        [ 36,  33,  28],\n        [ 36,  33,  28],\n        ...,\n        [ 32,  31,  29],\n        [ 32,  31,  27],\n        [ 31,  32,  26]],\n\n       [[ 37,  34,  29],\n        [ 38,  35,  30],\n        [ 38,  35,  30],\n        ...,\n        [ 31,  30,  28],\n        [ 31,  30,  26],\n        [ 30,  31,  25]],\n\n       [[ 38,  35,  30],\n        [ 38,  35,  30],\n        [ 38,  35,  30],\n        ...,\n        [ 30,  29,  27],\n        [ 30,  29,  25],\n        [ 29,  30,  25]],\n\n       ...,\n\n       [[239, 178, 123],\n        [237, 176, 121],\n        [235, 174, 119],\n        ...,\n        [ 78,  68,  56],\n        [ 75,  67,  54],\n        [ 73,  65,  52]],\n\n       [[238, 177, 120],\n        [236, 175, 118],\n        [234, 173, 116],\n        ...,\n        [ 82,  70,  58],\n        [ 78,  68,  56],\n        [ 75,  66,  51]],\n\n       [[238, 176, 119],\n        [236, 175, 118],\n        [234, 173, 116],\n        ...,\n        [ 84,  70,  61],\n        [ 81,  69,  57],\n        [ 79,  67,  53]]], dtype=uint8)\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u8bfb\u53d6\u4e86\u5f53\u524d\u8def\u5f84\u4e0b<code>res</code>\u76ee\u5f55\u4e2d\u540d\u4e3a<code>guido.jpg</code> \u7684\u56fe\u7247\u6587\u4ef6\uff0c\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u7684\u56fe\u7247\u901a\u5e38\u7531\u82e5\u5e72\u884c\u82e5\u5e72\u5217\u7684\u50cf\u7d20\u70b9\u6784\u6210\uff0c\u800c\u6bcf\u4e2a\u50cf\u7d20\u70b9\u53c8\u662f\u7531\u7ea2\u7eff\u84dd\u4e09\u539f\u8272\u6784\u6210\u7684\uff0c\u521a\u597d\u53ef\u4ee5\u7528\u4e09\u7ef4\u6570\u7ec4\u6765\u8868\u793a\u3002\u8bfb\u53d6\u56fe\u7247\u7528\u5230\u4e86<code>matplotlib</code>\u5e93\u7684<code>imread</code>\u51fd\u6570\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/68.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-1/#_3","title":"\u6570\u7ec4\u5bf9\u8c61\u7684\u5c5e\u6027","text":"<p><code>size</code>\u5c5e\u6027\uff1a\u83b7\u53d6\u6570\u7ec4\u5143\u7d20\u4e2a\u6570\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array17 = np.arange(1, 100, 2)\narray18 = np.random.rand(3, 4)\nprint(array16.size)\nprint(array17.size)\nprint(array18.size)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>1125000\n50\n12\n</code></pre> <p><code>shape</code>\u5c5e\u6027\uff1a\u83b7\u53d6\u6570\u7ec4\u7684\u5f62\u72b6\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(array16.shape)\nprint(array17.shape)\nprint(array18.shape)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>(750, 500, 3)\n(50,)\n(3, 4)\n</code></pre> <p><code>dtype</code>\u5c5e\u6027\uff1a\u83b7\u53d6\u6570\u7ec4\u5143\u7d20\u7684\u6570\u636e\u7c7b\u578b\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(array16.dtype)\nprint(array17.dtype)\nprint(array18.dtype)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>uint8\nint64\nfloat64\n</code></pre> <p><code>ndarray</code>\u5bf9\u8c61\u5143\u7d20\u7684\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u6240\u793a\u7684\u8868\u683c\u3002</p> <p></p> <p><code>ndim</code>\u5c5e\u6027\uff1a\u83b7\u53d6\u6570\u7ec4\u7684\u7ef4\u5ea6\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(array16.ndim)\nprint(array17.ndim)\nprint(array18.ndim)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>3\n1\n2\n</code></pre> <p><code>itemsize</code>\u5c5e\u6027\uff1a\u83b7\u53d6\u6570\u7ec4\u5355\u4e2a\u5143\u7d20\u5360\u7528\u5185\u5b58\u7a7a\u95f4\u7684\u5b57\u8282\u6570\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(array16.itemsize)\nprint(array17.itemsize)\nprint(array18.itemsize)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>1\n8\n8\n</code></pre> <p><code>nbytes</code>\u5c5e\u6027\uff1a\u83b7\u53d6\u6570\u7ec4\u6240\u6709\u5143\u7d20\u5360\u7528\u5185\u5b58\u7a7a\u95f4\u7684\u5b57\u8282\u6570\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(array16.nbytes)\nprint(array17.nbytes)\nprint(array18.nbytes)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>1125000\n400\n96\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/68.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-1/#_4","title":"\u6570\u7ec4\u7684\u7d22\u5f15\u8fd0\u7b97","text":"<p>\u548c Python \u4e2d\u7684\u5217\u8868\u7c7b\u4f3c\uff0cNumPy \u7684<code>ndarray</code>\u5bf9\u8c61\u53ef\u4ee5\u8fdb\u884c\u7d22\u5f15\u548c\u5207\u7247\u64cd\u4f5c\uff0c\u901a\u8fc7\u7d22\u5f15\u53ef\u4ee5\u83b7\u53d6\u6216\u4fee\u6539\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u901a\u8fc7\u5207\u7247\u64cd\u4f5c\u53ef\u4ee5\u53d6\u51fa\u6570\u7ec4\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u628a\u5207\u7247\u64cd\u4f5c\u4e5f\u79f0\u4e3a\u5207\u7247\u7d22\u5f15\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/68.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-1/#_5","title":"\u666e\u901a\u7d22\u5f15","text":"<p>\u7c7b\u4f3c\u4e8e Python \u4e2d<code>list</code>\u7c7b\u578b\u7684\u7d22\u5f15\u8fd0\u7b97\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array19 = np.arange(1, 10)\nprint(array19[0], array19[array19.size - 1])\nprint(array19[-array19.size], array19[-1])\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>1 9\n1 9\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array20 = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\narray20[2]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([7, 8, 9])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(array20[0][0])\nprint(array20[-1][-1])\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>1\n9\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(array20[1][1])\nprint(array20[1, 1])\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>5\n5\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array20[1][1] = 10\narray20\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[ 1,  2,  3],\n       [ 4, 10,  6],\n       [ 7,  8,  9]])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array20[1] = [10, 11, 12]\narray20\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[ 1,  2,  3],\n       [10, 11, 12],\n       [ 7,  8,  9]])\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/68.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-1/#_6","title":"\u5207\u7247\u7d22\u5f15","text":"<p>\u5207\u7247\u7d22\u5f15\u662f\u5f62\u5982<code>[\u5f00\u59cb\u7d22\u5f15:\u7ed3\u675f\u7d22\u5f15:\u8de8\u5ea6]</code>\u7684\u8bed\u6cd5\uff0c\u901a\u8fc7\u6307\u5b9a\u5f00\u59cb\u7d22\u5f15\uff08\u9ed8\u8ba4\u503c\u65e0\u7a77\u5c0f\uff09\u3001\u7ed3\u675f\u7d22\u5f15\uff08\u9ed8\u8ba4\u503c\u65e0\u7a77\u5927\uff09\u548c\u8de8\u5ea6\uff08\u9ed8\u8ba4\u503c1\uff09\uff0c\u4ece\u6570\u7ec4\u4e2d\u53d6\u51fa\u6307\u5b9a\u90e8\u5206\u7684\u5143\u7d20\u5e76\u6784\u6210\u65b0\u7684\u6570\u7ec4\u3002\u56e0\u4e3a\u5f00\u59cb\u7d22\u5f15\u3001\u7ed3\u675f\u7d22\u5f15\u548c\u6b65\u957f\u90fd\u6709\u9ed8\u8ba4\u503c\uff0c\u6240\u4ee5\u5b83\u4eec\u90fd\u53ef\u4ee5\u7701\u7565\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u6b65\u957f\uff0c\u7b2c\u4e8c\u4e2a\u5192\u53f7\u4e5f\u53ef\u4ee5\u7701\u7565\u3002\u4e00\u7ef4\u6570\u7ec4\u7684\u5207\u7247\u8fd0\u7b97\u8ddf Python \u4e2d\u7684<code>list</code>\u7c7b\u578b\u7684\u5207\u7247\u975e\u5e38\u7c7b\u4f3c\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\uff0c\u4e8c\u7ef4\u6570\u7ec4\u7684\u5207\u7247\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u76f8\u4fe1\u975e\u5e38\u5bb9\u6613\u7406\u89e3\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array20[:2, 1:]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[ 2,  3],\n       [11, 12]])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array20[2, :]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([7, 8, 9])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array20[2:, :]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[7, 8, 9]])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array20[:, :2]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[ 1,  2],\n       [10, 11],\n       [ 7,  8]])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array20[::2, ::2]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1, 3],\n       [7, 9]])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array20[::-2, ::-2]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[9, 7],\n       [3, 1]])\n</code></pre> <p>\u5173\u4e8e\u6570\u7ec4\u7684\u7d22\u5f15\u548c\u5207\u7247\u8fd0\u7b97\uff0c\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4e24\u5f20\u56fe\u6765\u589e\u5f3a\u5370\u8c61\uff0c\u8fd9\u4e24\u5f20\u56fe\u6765\u81ea\u300a\u5229\u7528Python\u8fdb\u884c\u6570\u636e\u5206\u6790\u300b\u4e00\u4e66\uff0c\u5b83\u662f pandas \u5e93\u7684\u4f5c\u8005 Wes McKinney \u64b0\u5199\u7684 Python \u6570\u636e\u5206\u6790\u9886\u57df\u7684\u7ecf\u5178\u6559\u79d1\u4e66\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u8d2d\u4e70\u548c\u9605\u8bfb\u539f\u4e66\u3002</p> <p>\u56fe1\uff1a\u4e8c\u7ef4\u6570\u7ec4\u7684\u666e\u901a\u7d22\u5f15</p> <p></p> <p>\u56fe2\uff1a\u4e8c\u7ef4\u6570\u7ec4\u7684\u5207\u7247\u7d22\u5f15</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/68.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-1/#_7","title":"\u82b1\u5f0f\u7d22\u5f15","text":"<p>\u82b1\u5f0f\u7d22\u5f15\u662f\u7528\u4fdd\u5b58\u6574\u6570\u7684\u6570\u7ec4\u5145\u5f53\u4e00\u4e2a\u6570\u7ec4\u7684\u7d22\u5f15\uff0c\u8fd9\u91cc\u6240\u8bf4\u7684\u6570\u7ec4\u53ef\u4ee5\u662f NumPy \u7684<code>ndarray</code>\uff0c\u4e5f\u53ef\u4ee5\u662f Python \u4e2d<code>list</code>\u3001<code>tuple</code>\u7b49\u53ef\u8fed\u4ee3\u7c7b\u578b\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b63\u5411\u6216\u8d1f\u5411\u7d22\u5f15\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array19[[0, 1, 1, -1, 4, -1]]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([1, 2, 2, 9, 5, 9])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array20[[0, 2]]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1, 2, 3],\n       [7, 8, 9]])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array20[[0, 2], [1, 2]]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([2, 9])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array20[[0, 2], 1]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([2, 8])\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/68.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-1/#_8","title":"\u5e03\u5c14\u7d22\u5f15","text":"<p>\u5e03\u5c14\u7d22\u5f15\u5c31\u662f\u901a\u8fc7\u4fdd\u5b58\u5e03\u5c14\u503c\u7684\u6570\u7ec4\u5145\u5f53\u4e00\u4e2a\u6570\u7ec4\u7684\u7d22\u5f15\uff0c\u5e03\u5c14\u503c\u4e3a<code>True</code>\u7684\u5143\u7d20\u4fdd\u7559\uff0c\u5e03\u5c14\u503c\u4e3a<code>False</code>\u7684\u5143\u7d20\u4e0d\u4f1a\u88ab\u9009\u4e2d\u3002\u5e03\u5c14\u503c\u7684\u6570\u7ec4\u53ef\u4ee5\u624b\u52a8\u6784\u9020\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5173\u7cfb\u8fd0\u7b97\u6765\u4ea7\u751f\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array19[[True, True, False, False, True, False, False, True, True]]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([1, 2, 5, 8, 9])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array19 &gt; 5\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([False, False, False, False, False,  True,  True,  True,  True])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>~(array19 &gt; 5)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([ True,  True,  True,  True,  True, False, False, False, False])\n</code></pre> <p>\u8bf4\u660e\uff1a<code>~</code>\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5bf9\u5e03\u5c14\u6570\u7ec4\u4e2d\u7684\u5e03\u5c14\u503c\u8fdb\u884c\u903b\u8f91\u53d6\u53cd\uff0c\u4e5f\u5c31\u662f\u539f\u6765\u7684<code>True</code>\u4f1a\u53d8\u6210<code>False</code>\uff0c\u539f\u6765\u7684<code>False</code>\u4f1a\u53d8\u6210<code>True</code>\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array19[array19 &gt; 5]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([6, 7, 8, 9])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array19 % 2 == 0\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([False,  True, False,  True, False,  True, False,  True, False])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array19[array19 % 2 == 0]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([2, 4, 6, 8])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>(array19 &gt; 5) &amp; (array19 % 2 == 0)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([False, False, False, False, False,  True, False,  True, False])\n</code></pre> <p>\u8bf4\u660e\uff1a<code>&amp;</code>\u8fd0\u7b97\u7b26\u53ef\u4ee5\u4f5c\u7528\u4e8e\u4e24\u4e2a\u5e03\u5c14\u6570\u7ec4\uff0c\u5982\u679c\u4e24\u4e2a\u6570\u7ec4\u5bf9\u5e94\u5143\u7d20\u90fd\u662f<code>True</code>\uff0c\u90a3\u4e48\u8fd0\u7b97\u7684\u7ed3\u679c\u5c31\u662f<code>True</code>\uff0c\u5426\u5219\u5c31\u662f<code>False</code>\uff0c\u8be5\u8fd0\u7b97\u7b26\u7684\u8fd0\u7b97\u89c4\u5219\u7c7b\u4f3c\u4e8e Python \u4e2d\u7684 <code>and</code> \u8fd0\u7b97\u7b26\uff0c\u53ea\u4e0d\u8fc7\u4f5c\u7528\u7684\u5bf9\u8c61\u662f\u4e24\u4e2a\u5e03\u5c14\u6570\u7ec4\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array19[(array19 &gt; 5) &amp; (array19 % 2 == 0)]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([6, 8])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array19[(array19 &gt; 5) | (array19 % 2 == 0)]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([2, 4, 6, 7, 8, 9])\n</code></pre> <p>\u8bf4\u660e\uff1a<code>|</code>\u8fd0\u7b97\u7b26\u53ef\u4ee5\u4f5c\u7528\u4e8e\u4e24\u4e2a\u5e03\u5c14\u6570\u7ec4\uff0c\u5982\u679c\u4e24\u4e2a\u6570\u7ec4\u5bf9\u5e94\u5143\u7d20\u90fd\u662f<code>False</code>\uff0c\u90a3\u4e48\u8fd0\u7b97\u7684\u7ed3\u679c\u5c31\u662f<code>False</code>\uff0c\u5426\u5219\u5c31\u662f<code>True</code>\uff0c\u8be5\u8fd0\u7b97\u7b26\u7684\u8fd0\u7b97\u89c4\u5219\u7c7b\u4f3c\u4e8e Python \u4e2d\u7684 <code>or</code> \u8fd0\u7b97\u7b26\uff0c\u53ea\u4e0d\u8fc7\u4f5c\u7528\u7684\u5bf9\u8c61\u662f\u4e24\u4e2a\u5e03\u5c14\u6570\u7ec4\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array20[array21 % 2 != 0]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([1, 3, 5, 7, 9])\n</code></pre> <p>\u5173\u4e8e\u7d22\u5f15\u8fd0\u7b97\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5207\u7247\u7d22\u5f15\u867d\u7136\u521b\u5efa\u4e86\u65b0\u7684\u6570\u7ec4\u5bf9\u8c61\uff0c\u4f46\u662f\u65b0\u6570\u7ec4\u548c\u539f\u6570\u7ec4\u5171\u4eab\u4e86\u6570\u7ec4\u4e2d\u7684\u6570\u636e\uff0c\u7b80\u5355\u7684\u8bf4\uff0c\u65e0\u8bba\u4f60\u901a\u8fc7\u65b0\u6570\u7ec4\u5bf9\u8c61\u6216\u539f\u6570\u7ec4\u5bf9\u8c61\u4fee\u6539\u6570\u7ec4\u4e2d\u7684\u6570\u636e\uff0c\u4fee\u6539\u7684\u5176\u5b9e\u662f\u5185\u5b58\u4e2d\u7684\u540c\u4e00\u5757\u6570\u636e\u3002\u82b1\u5f0f\u7d22\u5f15\u548c\u5e03\u5c14\u7d22\u5f15\u4e5f\u4f1a\u521b\u5efa\u65b0\u7684\u6570\u7ec4\u5bf9\u8c61\uff0c\u800c\u4e14\u65b0\u6570\u7ec4\u590d\u5236\u4e86\u539f\u6570\u7ec4\u7684\u5143\u7d20\uff0c\u65b0\u6570\u7ec4\u548c\u539f\u6570\u7ec4\u5e76\u4e0d\u662f\u5171\u4eab\u6570\u636e\u7684\u5173\u7cfb\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u67e5\u770b\u6570\u7ec4\u5bf9\u8c61\u7684<code>base</code>\u5c5e\u6027\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u63a2\u7d22\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/68.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-1/#_9","title":"\u6848\u4f8b\uff1a\u901a\u8fc7\u6570\u7ec4\u5207\u7247\u5904\u7406\u56fe\u50cf","text":"<p>\u5b66\u4e60\u57fa\u7840\u77e5\u8bc6\u603b\u662f\u6bd4\u8f83\u67af\u71e5\u4e14\u6ca1\u6709\u6210\u5c31\u611f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u6765\u4e2a\u6848\u4f8b\u4e3a\u5927\u5bb6\u6f14\u793a\u4e0b\u4e0a\u9762\u5b66\u4e60\u7684\u6570\u7ec4\u7d22\u5f15\u548c\u5207\u7247\u64cd\u4f5c\u5230\u5e95\u6709\u4ec0\u4e48\u7528\u3002\u524d\u9762\u6211\u4eec\u8bf4\u5230\u8fc7\uff0c\u53ef\u4ee5\u7528\u4e09\u7ef4\u6570\u7ec4\u6765\u8868\u793a\u56fe\u50cf\uff0c\u90a3\u4e48\u901a\u8fc7\u56fe\u50cf\u5bf9\u5e94\u7684\u4e09\u7ef4\u6570\u7ec4\u8fdb\u884c\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u56fe\u50cf\u7684\u5904\u7406\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u8bfb\u5165\u56fe\u7247\u521b\u5efa\u4e09\u7ef4\u6570\u7ec4\u5bf9\u8c61\u3002</p> <pre><code>guido_image = plt.imread('guido.jpg')\nplt.imshow(guido_image)\n</code></pre> <p></p> <p>\u5bf9\u6570\u7ec4\u76840\u8f74\u8fdb\u884c\u53cd\u5411\u5207\u7247\uff0c\u5b9e\u73b0\u56fe\u50cf\u7684\u5782\u76f4\u7ffb\u8f6c\u3002</p> <pre><code>plt.imshow(guido_image[::-1])\n</code></pre> <p></p> <p>\u5bf9\u6570\u7ec4\u76841\u8f74\u8fdb\u884c\u53cd\u5411\u5207\u7247\uff0c\u5b9e\u73b0\u56fe\u50cf\u7684\u6c34\u5e73\u7ffb\u8f6c\u3002</p> <pre><code>plt.imshow(guido_image[:,::-1])\n</code></pre> <p></p> <p>\u901a\u8fc7\u5207\u7247\u64cd\u4f5c\u5b9e\u73b0\u62a0\u56fe\uff0c\u5c06\u5409\u591a\u5927\u53d4\u7684\u5934\u62a0\u51fa\u6765\u3002</p> <pre><code>plt.imshow(guido_image[30:350, 90:300])\n</code></pre> <p></p> <p>\u901a\u8fc7\u5207\u7247\u64cd\u4f5c\u5b9e\u73b0\u964d\u91c7\u6837\u3002</p> <pre><code>plt.imshow(guido_image[::10, ::10])\n</code></pre> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/69.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-2/","title":"69.NumPy\u7684\u5e94\u7528 2","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/69.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-2/#numpy-2","title":"NumPy\u7684\u5e94\u7528-2","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/69.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-2/#_1","title":"\u6570\u7ec4\u5bf9\u8c61\u7684\u65b9\u6cd5","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/69.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-2/#_2","title":"\u83b7\u53d6\u63cf\u8ff0\u7edf\u8ba1\u4fe1\u606f","text":"<p>\u63cf\u8ff0\u7edf\u8ba1\u4fe1\u606f\u4e3b\u8981\u5305\u62ec\u6570\u636e\u7684\u96c6\u4e2d\u8d8b\u52bf\u3001\u79bb\u6563\u7a0b\u5ea6\u548c\u9891\u6570\u5206\u6790\u7b49\uff0c\u5176\u4e2d\u96c6\u4e2d\u8d8b\u52bf\u4e3b\u8981\u770b\u5747\u503c\u548c\u4e2d\u4f4d\u6570\uff0c\u79bb\u6563\u7a0b\u5ea6\u53ef\u4ee5\u770b\u6781\u503c\u3001\u65b9\u5dee\u3001\u6807\u51c6\u5dee\u7b49\uff0c\u8be6\u7ec6\u7684\u5185\u5bb9\u5927\u5bb6\u53ef\u4ee5\u9605\u8bfb\u300a\u7edf\u8ba1\u601d\u7ef4\u7cfb\u5217\u8bfe\u7a0b01\uff1a\u89e3\u8bfb\u6570\u636e\u300b\u3002</p> <pre><code>array1 = np.random.randint(1, 100, 10)\narray1\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([46, 51, 15, 42, 53, 71, 20, 62,  6, 94])\n</code></pre> <p>\u8ba1\u7b97\u603b\u548c\u3001\u5747\u503c\u548c\u4e2d\u4f4d\u6570\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(array1.sum())\nprint(np.sum(array1))\nprint(array1.mean())\nprint(np.mean(array1))\nprint(np.median(array1))\nprint(np.quantile(array1, 0.5))\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684<code>mean</code>\u3001<code>median</code>\u548c<code>quantile</code>\u5206\u522b\u662f NumPy \u4e2d\u8ba1\u7b97\u7b97\u672f\u5e73\u5747\u503c\u3001\u4e2d\u4f4d\u6570\u548c\u5206\u4f4d\u6570\u7684\u51fd\u6570\uff0c\u5176\u4e2d<code>quantitle</code>\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e3a0.5\u8868\u793a\u8ba1\u7b9750%\u5206\u4f4d\u6570\uff0c\u4e5f\u5c31\u662f\u4e2d\u4f4d\u6570\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>460\n460\n46.0\n46.0\n48.5\n48.5\n</code></pre> <p>\u6781\u503c\u3001\u5168\u8ddd\u548c\u56db\u5206\u4f4d\u8ddd\u79bb\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(array1.max())\nprint(np.amax(array1))\nprint(array1.min())\nprint(np.amin(array1))\nprint(array1.ptp()) # peak to peak\uff08\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u4e4b\u5dee\uff09\nprint(np.ptp(array1))\nq1, q3 = np.quantile(array1, [0.25, 0.75])\nprint(q3 - q1)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>94\n94\n6\n6\n88\n88\n34.25\n</code></pre> <p>\u65b9\u5dee\u3001\u6807\u51c6\u5dee\u548c\u53d8\u5f02\u7cfb\u6570\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(array1.var())\nprint(np.var(array1))\nprint(array1.std())\nprint(np.std(array1))\nprint(array1.std() / array1.mean())\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>651.2\n651.2\n25.51862065237853\n25.51862065237853\n0.5547526228777941\n</code></pre> <p>\u7ed8\u5236\u7bb1\u7ebf\u56fe\u3002</p> <p>\u7bb1\u7ebf\u56fe\u53c8\u79f0\u4e3a\u76d2\u987b\u56fe\uff0c\u662f\u663e\u793a\u4e00\u7ec4\u6570\u636e\u5206\u6563\u60c5\u51b5\u7684\u7edf\u8ba1\u56fe\uff0c\u56e0\u5f62\u72b6\u5982\u7bb1\u5b50\u800c\u5f97\u540d\u3002 \u5b83\u4e3b\u8981\u7528\u4e8e\u53cd\u6620\u539f\u59cb\u6570\u636e\u5206\u5e03\u7684\u7279\u5f81\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u591a\u7ec4\u6570\u636e\u5206\u5e03\u7279\u5f81\u7684\u6bd4\u8f83\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>plt.boxplot(array1, showmeans=True)\nplt.ylim([-20, 120])\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u4e8c\u7ef4\u6216\u66f4\u9ad8\u7ef4\u7684\u6570\u7ec4\uff0c\u5728\u83b7\u53d6\u63cf\u8ff0\u7edf\u8ba1\u4fe1\u606f\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u540d\u4e3a<code>axis</code>\u7684\u53c2\u6570\u6307\u5b9a\u5747\u503c\u3001\u65b9\u5dee\u7b49\u8fd0\u7b97\u662f\u6cbf\u7740\u54ea\u4e00\u4e2a\u8f74\u6765\u6267\u884c\uff0c<code>axis</code>\u53c2\u6570\u4e0d\u540c\uff0c\u6267\u884c\u7684\u7ed3\u679c\u53ef\u80fd\u662f\u5927\u76f8\u5f84\u5ead\u7684\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array2 = np.random.randint(60, 101, (5, 3))\narray2\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[72, 64, 73],\n       [61, 73, 61],\n       [76, 85, 77],\n       [97, 88, 90],\n       [63, 93, 82]])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array2.mean()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>77.0\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array2.mean(axis=0)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([73.8, 80.6, 76.6])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array2.mean(axis=1)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([69.66666667, 65.        , 79.33333333, 91.66666667, 79.33333333])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array2.max(axis=0)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([97, 93, 90])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array2.max(axis=1)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([73, 73, 85, 97, 93])\n</code></pre> <p>\u518d\u770b\u770b\u7ed8\u5236\u7bb1\u7ebf\u56fe\uff0c\u5bf9\u4e8e\u4e8c\u7ef4\u6570\u7ec4\u6bcf\u4e00\u5217\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u7edf\u8ba1\u56fe\u5f62\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>plt.boxplot(array2, showmeans=True)\nplt.ylim([-20, 120])\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u8bf4\u660e\uff1a\u7bb1\u7ebf\u56fe\u4e2d\u7684\u5c0f\u5706\u5708\u7528\u6765\u8868\u793a\u79bb\u7fa4\u70b9\uff0c\u4e5f\u5c31\u662f\u5927\u4e8e\\(\\small{Q_3 + 1.5 \\times IQR}\\)\u6216\u5c0f\u4e8e\\(\\small{Q_1 - 1.5 \\times IQR}\\)\u7684\u503c\u3002\u516c\u5f0f\u4e2d\u7684\u5e38\u91cf<code>1.5</code>\u53ef\u4ee5\u901a\u8fc7\u7ed8\u5236\u7bb1\u7ebf\u56fe\u7684<code>boxplot</code>\u51fd\u6570\u7684<code>whis</code>\u53c2\u6570\u8fdb\u884c\u4fee\u6539\uff0c\u5e38\u7528\u7684\u503c\u662f<code>1.5</code>\u548c<code>3</code>\uff0c\u4fee\u6539\u4e3a<code>3</code>\u901a\u5e38\u662f\u4e3a\u4e86\u6807\u8bc6\u51fa\u6781\u5ea6\u79bb\u7fa4\u70b9\u3002</p> <p>\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0cNumPy \u7684\u6570\u7ec4\u5bf9\u8c61\u5e76\u6ca1\u6709\u63d0\u4f9b\u8ba1\u7b97\u51e0\u4f55\u5e73\u5747\u503c\u3001\u8c03\u548c\u5e73\u5747\u503c\u3001\u53bb\u5c3e\u5e73\u5747\u503c\u7b49\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u6709\u8fd9\u65b9\u9762\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3a scipy \u7684\u4e09\u65b9\u5e93\uff0c\u5b83\u7684<code>stats</code>\u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86\u8fd9\u4e9b\u51fd\u6570\u3002\u6b64\u5916\uff0c\u8be5\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u8ba1\u7b97\u4f17\u6570\u3001\u53d8\u5f02\u7cfb\u6570\u3001\u504f\u6001\u3001\u5cf0\u5ea6\u7684\u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>from scipy import stats\n\nprint(np.mean(array1))                # \u7b97\u672f\u5e73\u5747\u503c\nprint(stats.gmean(array1))            # \u51e0\u4f55\u5e73\u5747\u503c\nprint(stats.hmean(array1))            # \u8c03\u548c\u5e73\u5747\u503c\nprint(stats.tmean(array1, [10, 90]))  # \u53bb\u5c3e\u5e73\u5747\u503c\nprint(stats.variation(array1))        # \u53d8\u5f02\u7cfb\u6570\nprint(stats.skew(array1))             # \u504f\u6001\u7cfb\u6570\nprint(stats.kurtosis(array1))         # \u5cf0\u5ea6\u7cfb\u6570\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>46.0\n36.22349548825599\n24.497219530825497\n45.0\n0.5547526228777941\n0.11644192634527782\n-0.7106251396024126\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/69.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-2/#_3","title":"\u5176\u4ed6\u76f8\u5173\u65b9\u6cd5\u6982\u8ff0","text":"<ol> <li> <p><code>all()</code> / <code>any()</code>\u65b9\u6cd5\uff1a\u5224\u65ad\u6570\u7ec4\u662f\u5426\u6240\u6709\u5143\u7d20\u90fd\u662f<code>True</code> / \u5224\u65ad\u6570\u7ec4\u662f\u5426\u6709\u4e3a<code>True</code>\u7684\u5143\u7d20\u3002</p> </li> <li> <p><code>astype()</code>\u65b9\u6cd5\uff1a\u62f7\u8d1d\u6570\u7ec4\uff0c\u5e76\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u7c7b\u578b\u3002</p> </li> <li> <p><code>reshape()</code>\u65b9\u6cd5\uff1a\u8c03\u6574\u6570\u7ec4\u5bf9\u8c61\u7684\u5f62\u72b6\u3002</p> </li> <li> <p><code>dump()</code>\u65b9\u6cd5\uff1a\u4fdd\u5b58\u6570\u7ec4\u5230\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 NumPy \u4e2d\u7684<code>load()</code>\u51fd\u6570\u4ece\u4fdd\u5b58\u7684\u6587\u4ef6\u4e2d\u52a0\u8f7d\u6570\u636e\u521b\u5efa\u6570\u7ec4\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array.dump('array1-data')\narray3 = np.load('array1-data', allow_pickle=True)\narray3\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([46, 51, 15, 42, 53, 71, 20, 62,  6, 94])\n</code></pre> </li> <li> <p><code>tofile()</code>\u65b9\u6cd5\uff1a\u5c06\u6570\u7ec4\u5bf9\u8c61\u5199\u5165\u6587\u4ef6\u4e2d\u3002</p> <pre><code>array1.tofile('../../../../img/res/array.txt', sep=',')\n</code></pre> </li> <li> <p><code>fill()</code>\u65b9\u6cd5\uff1a\u5411\u6570\u7ec4\u4e2d\u586b\u5145\u6307\u5b9a\u7684\u5143\u7d20\u3002</p> </li> <li> <p><code>flatten()</code>\u65b9\u6cd5\uff1a\u5c06\u591a\u7ef4\u6570\u7ec4\u6241\u5e73\u5316\u4e3a\u4e00\u7ef4\u6570\u7ec4\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array2.flatten()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([1, 2, 3, 4, 5, 6, 7, 8, 9])\n</code></pre> </li> <li> <p><code>nonzero()</code>\u65b9\u6cd5\uff1a\u8fd4\u56de\u975e0\u5143\u7d20\u7684\u7d22\u5f15\u3002</p> </li> <li> <p><code>round()</code>\u65b9\u6cd5\uff1a\u5bf9\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u505a\u56db\u820d\u4e94\u5165\u64cd\u4f5c\u3002</p> </li> <li> <p><code>sort()</code>\u65b9\u6cd5\uff1a\u5bf9\u6570\u7ec4\u8fdb\u884c\u5c31\u5730\u6392\u5e8f\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array1.sort()\narray1\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([ 6, 15, 20, 42, 46, 51, 53, 62, 71, 94])\n</code></pre> </li> <li> <p><code>swapaxes()</code>\u548c<code>transpose()</code>\u65b9\u6cd5\uff1a\u4ea4\u6362\u6570\u7ec4\u6307\u5b9a\u7684\u8f74\u548c\u8f6c\u7f6e\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array2.swapaxes(0, 1)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1, 4, 7],\n       [2, 5, 8],\n       [3, 6, 9]])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array2.transpose()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1, 4, 7],\n       [2, 5, 8],\n       [3, 6, 9]])\n</code></pre> </li> <li> <p><code>tolist()</code>\u65b9\u6cd5\uff1a\u5c06\u6570\u7ec4\u8f6c\u6210 Python \u4e2d\u7684<code>list</code>\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(array2.tolist())\nprint(type(array2.tolist()))\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n&lt;class 'list'&gt;\n</code></pre> </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/70.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-3/","title":"70.NumPy\u7684\u5e94\u7528 3","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/70.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-3/#numpy-3","title":"NumPy\u7684\u5e94\u7528-3","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/70.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-3/#_1","title":"\u6570\u7ec4\u7684\u8fd0\u7b97","text":"<p>\u4f7f\u7528 NumPy \u6700\u4e3a\u65b9\u4fbf\u7684\u662f\u5f53\u9700\u8981\u5bf9\u6570\u7ec4\u5143\u7d20\u8fdb\u884c\u8fd0\u7b97\u65f6\uff0c\u4e0d\u7528\u7f16\u5199\u5faa\u73af\u4ee3\u7801\u904d\u5386\u6bcf\u4e2a\u5143\u7d20\uff0c\u6240\u6709\u7684\u8fd0\u7b97\u90fd\u4f1a\u81ea\u52a8\u7684\u77e2\u91cf\u5316\u3002\u7b80\u5355\u7684\u8bf4\u5c31\u662f\uff0cNumPy \u4e2d\u7684\u6570\u5b66\u8fd0\u7b97\u548c\u6570\u5b66\u51fd\u6570\u4f1a\u81ea\u52a8\u4f5c\u7528\u4e8e\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u6210\u5458\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/70.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-3/#_2","title":"\u6570\u7ec4\u8ddf\u6807\u91cf\u7684\u8fd0\u7b97","text":"<p>NumPy \u7684\u6570\u7ec4\u53ef\u4ee5\u8ddf\u4e00\u4e2a\u6570\u503c\u8fdb\u884c\u52a0\u3001\u51cf\u3001\u4e58\u3001\u9664\u3001\u6c42\u6a21\u3001\u6c42\u5e42\u7b49\u8fd0\u7b97\uff0c\u5bf9\u5e94\u7684\u8fd0\u7b97\u4f1a\u4f5c\u7528\u5230\u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e0a\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array1 = np.arange(1, 10)\nprint(array1 + 10)\nprint(array1 * 10)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>[11 12 13 14 15 16 17 18 19]\n[10 20 30 40 50 60 70 80 90]\n</code></pre> <p>\u9664\u4e86\u4e0a\u8ff0\u7684\u8fd0\u7b97\uff0c\u5173\u7cfb\u8fd0\u7b97\u4e5f\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u4e4b\u524d\u8bb2\u5e03\u5c14\u7d22\u5f15\u7684\u65f6\u5019\u5df2\u7ecf\u9047\u5230\u8fc7\u4e86\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(array1 &gt; 5)\nprint(array1 % 2 == 0)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>[False False False False False  True  True  True  True]\n[False  True False  True False  True False  True False]\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/70.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-3/#_3","title":"\u6570\u7ec4\u8ddf\u6570\u7ec4\u7684\u8fd0\u7b97","text":"<p>NumPy \u7684\u6570\u7ec4\u8ddf\u6570\u7ec4\u4e5f\u53ef\u4ee5\u6267\u884c\u7b97\u672f\u8fd0\u7b97\u548c\u5173\u7cfb\u8fd0\u7b97\uff0c\u8fd0\u7b97\u4f1a\u4f5c\u7528\u4e8e\u4e24\u4e2a\u6570\u7ec4\u5bf9\u5e94\u7684\u5143\u7d20\u4e0a\uff0c\u8fd9\u5c31\u8981\u6c42\u4e24\u4e2a\u6570\u7ec4\u7684\u5f62\u72b6\uff08<code>shape</code>\u5c5e\u6027\uff09\u8981\u76f8\u540c\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array2 = np.array([1, 1, 1, 2, 2, 2, 3, 3, 3])\nprint(array1 + array2)\nprint(array1 * array2)\nprint(array1 ** array2)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>[ 2  3  4  6  7  8 10 11 12]\n[ 1  2  3  8 10 12 21 24 27]\n[  1   2   3  16  25  36 343 512 729]\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(array1 &gt; array2)\nprint(array1 % array2 == 0)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>[False  True  True  True  True  True  True  True  True]\n[ True  True  True  True False  True False False  True]\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/70.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-3/#_4","title":"\u901a\u7528\u4e00\u5143\u51fd\u6570","text":"<p>NumPy \u4e2d\u901a\u7528\u4e00\u5143\u51fd\u6570\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6570\u7ec4\u5bf9\u8c61\uff0c\u51fd\u6570\u4f1a\u5bf9\u6570\u7ec4\u8fdb\u884c\u5143\u7d20\u7ea7\u7684\u5904\u7406\uff0c\u4f8b\u5982\uff1a<code>sqrt</code>\u51fd\u6570\u4f1a\u5bf9\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8ba1\u7b97\u5e73\u65b9\u6839\uff0c\u800c<code>log2</code>\u51fd\u6570\u4f1a\u5bf9\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8ba1\u7b97\u4ee52\u4e3a\u5e95\u7684\u5bf9\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(np.sqrt(array1))\nprint(np.log2(array1))\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>[1.         1.41421356 1.73205081 2.         2.23606798 2.44948974\n 2.64575131 2.82842712 3.        ]\n[0.         1.         1.5849625  2.         2.32192809 2.5849625\n 2.80735492 3.         3.169925  ]\n</code></pre> <p>\u88681\uff1a\u901a\u7528\u4e00\u5143\u51fd\u6570</p> \u51fd\u6570 \u8bf4\u660e <code>abs</code> / <code>fabs</code> \u6c42\u7edd\u5bf9\u503c\u7684\u51fd\u6570 <code>sqrt</code> \u6c42\u5e73\u65b9\u6839\u7684\u51fd\u6570\uff0c\u76f8\u5f53\u4e8e<code>array ** 0.5</code> <code>square</code> \u6c42\u5e73\u65b9\u7684\u51fd\u6570\uff0c\u76f8\u5f53\u4e8e<code>array ** 2</code> <code>exp</code> \u8ba1\u7b97\\(e^x\\)\u7684\u51fd\u6570 <code>log</code> / <code>log10</code> / <code>log2</code> \u5bf9\u6570\u51fd\u6570\uff08<code>e</code>\u4e3a\u5e95 / <code>10</code>\u4e3a\u5e95 / <code>2</code>\u4e3a\u5e95\uff09 <code>sign</code> \u7b26\u53f7\u51fd\u6570\uff08<code>1</code> - \u6b63\u6570\uff1b<code>0</code> - \u96f6\uff1b<code>-1</code> - \u8d1f\u6570\uff09 <code>ceil</code> / <code>floor</code> \u4e0a\u53d6\u6574 /  \u4e0b\u53d6\u6574 <code>isnan</code> \u8fd4\u56de\u5e03\u5c14\u6570\u7ec4\uff0cNaN\u5bf9\u5e94<code>True</code>\uff0c\u975eNaN\u5bf9\u5e94<code>False</code> <code>isfinite</code> / <code>isinf</code> \u5224\u65ad\u6570\u503c\u662f\u5426\u4e3a\u65e0\u7a77\u5927\u7684\u51fd\u6570 <code>cos</code> / <code>cosh</code> / <code>sin</code> \u4e09\u89d2\u51fd\u6570 <code>sinh</code> / <code>tan</code> / <code>tanh</code> \u4e09\u89d2\u51fd\u6570 <code>arccos</code> / <code>arccosh</code> / <code>arcsin</code> \u53cd\u4e09\u89d2\u51fd\u6570 <code>arcsinh</code> / <code>arctan</code> / <code>arctanh</code> \u53cd\u4e09\u89d2\u51fd\u6570 <code>rint</code> / <code>round</code> \u56db\u820d\u4e94\u5165\u51fd\u6570"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/70.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-3/#_5","title":"\u901a\u7528\u4e8c\u5143\u51fd\u6570","text":"<p>NumPy \u4e2d\u901a\u7528\u4e8c\u5143\u51fd\u6570\u7684\u53c2\u6570\u662f\u4e24\u4e2a\u6570\u7ec4\u5bf9\u8c61\uff0c\u51fd\u6570\u4f1a\u5bf9\u4e24\u4e2a\u6570\u7ec4\u4e2d\u7684\u5bf9\u5e94\u5143\u7d20\u8fdb\u884c\u8fd0\u7b97\uff0c\u4f8b\u5982\uff1a<code>maximum</code>\u51fd\u6570\u4f1a\u5bf9\u4e24\u4e2a\u6570\u7ec4\u4e2d\u5bf9\u5e94\u7684\u5143\u7d20\u627e\u6700\u5927\u503c\uff0c\u800c<code>power</code>\u51fd\u6570\u4f1a\u5bf9\u4e24\u4e2a\u6570\u7ec4\u4e2d\u5bf9\u5e94\u7684\u5143\u7d20\u8fdb\u884c\u6c42\u5e42\u64cd\u4f5c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array3 = np.array([[4, 5, 6], [7, 8, 9]])\narray4 = np.array([[1, 2, 3], [3, 2, 1]])\nprint(np.maximum(array3, array4))\nprint(np.power(array3, array4))\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>[[4 5 6]\n [7 8 9]]\n[[  4  25 216]\n [343  64   9]]\n</code></pre> <p>\u88682\uff1a\u901a\u7528\u4e8c\u5143\u51fd\u6570</p> \u51fd\u6570 \u8bf4\u660e <code>add(x, y)</code> / <code>substract(x, y)</code> \u52a0\u6cd5\u51fd\u6570 / \u51cf\u6cd5\u51fd\u6570 <code>multiply(x, y)</code> / <code>divide(x, y)</code> \u4e58\u6cd5\u51fd\u6570 / \u9664\u6cd5\u51fd\u6570 <code>floor_divide(x, y)</code> / <code>mod(x, y)</code> \u6574\u9664\u51fd\u6570 / \u6c42\u6a21\u51fd\u6570 <code>allclose(x, y)</code> \u68c0\u67e5\u6570\u7ec4<code>x</code>\u548c<code>y</code>\u5143\u7d20\u662f\u5426\u51e0\u4e4e\u76f8\u7b49 <code>power(x, y)</code> \u6570\u7ec4\\(x\\)\u7684\u5143\u7d20\\(x_i\\)\u548c\u6570\u7ec4\\(y\\)\u7684\u5143\u7d20\\(y_i\\)\uff0c\u8ba1\u7b97\\(x_i^{y_i}\\) <code>maximum(x, y)</code> / <code>fmax(x, y)</code> \u4e24\u4e24\u6bd4\u8f83\u5143\u7d20\u83b7\u53d6\u6700\u5927\u503c / \u83b7\u53d6\u6700\u5927\u503c\uff08\u5ffd\u7565NaN\uff09 <code>minimum(x, y)</code> / <code>fmin(x, y)</code> \u4e24\u4e24\u6bd4\u8f83\u5143\u7d20\u83b7\u53d6\u6700\u5c0f\u503c / \u83b7\u53d6\u6700\u5c0f\u503c\uff08\u5ffd\u7565NaN\uff09 <code>dot(x, y)</code> \u70b9\u79ef\u8fd0\u7b97\uff08\u6570\u91cf\u79ef\uff0c\u901a\u5e38\u8bb0\u4e3a\\(\\cdot\\)\uff0c\u7528\u4e8e\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\uff08Euclidean space\uff09\uff09 <code>inner(x, y)</code> \u5185\u79ef\u8fd0\u7b97\uff08\u5185\u79ef\u7684\u542b\u4e49\u8981\u9ad8\u4e8e\u70b9\u79ef\uff0c\u70b9\u79ef\u76f8\u5f53\u4e8e\u662f\u5185\u79ef\u5728\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\\(\\mathbb{R}^n\\)\u7684\u7279\u4f8b\uff0c\u800c\u5185\u79ef\u53ef\u4ee5\u63a8\u5e7f\u5230\u8d4b\u8303\u5411\u91cf\u7a7a\u95f4\uff0c\u53ea\u8981\u5b83\u6ee1\u8db3\u5e73\u884c\u56db\u8fb9\u5f62\u6cd5\u5219\u5373\u53ef\uff09 <code>cross(x, y)</code> \u53c9\u79ef\u8fd0\u7b97\uff08\u5411\u91cf\u79ef\uff0c\u901a\u5e38\u8bb0\u4e3a\\(\\times\\)\uff0c\u8fd0\u7b97\u7ed3\u679c\u662f\u4e00\u4e2a\u5411\u91cf\uff09 <code>outer(x, y)</code> \u5916\u79ef\u8fd0\u7b97\uff08\u5f20\u91cf\u79ef\uff0c\u901a\u5e38\u8bb0\u4e3a\\(\\bigotimes\\)\uff0c\u8fd0\u7b97\u7ed3\u679c\u901a\u5e38\u662f\u4e00\u4e2a\u77e9\u9635\uff09 <code>intersect1d(x, y)</code> \u8ba1\u7b97<code>x</code>\u548c<code>y</code>\u7684\u4ea4\u96c6\uff0c\u8fd4\u56de\u8fd9\u4e9b\u5143\u7d20\u6784\u6210\u7684\u6709\u5e8f\u6570\u7ec4 <code>union1d(x, y)</code> \u8ba1\u7b97<code>x</code>\u548c<code>y</code>\u7684\u5e76\u96c6\uff0c\u8fd4\u56de\u8fd9\u4e9b\u5143\u7d20\u6784\u6210\u7684\u6709\u5e8f\u6570\u7ec4 <code>in1d(x, y)</code> \u8fd4\u56de\u7531\u5224\u65ad<code>x</code> \u7684\u5143\u7d20\u662f\u5426\u5728<code>y</code>\u4e2d\u5f97\u5230\u7684\u5e03\u5c14\u503c\u6784\u6210\u7684\u6570\u7ec4 <code>setdiff1d(x, y)</code> \u8ba1\u7b97<code>x</code>\u548c<code>y</code>\u7684\u5dee\u96c6\uff0c\u8fd4\u56de\u8fd9\u4e9b\u5143\u7d20\u6784\u6210\u7684\u6570\u7ec4 <code>setxor1d(x, y)</code> \u8ba1\u7b97<code>x</code>\u548c<code>y</code>\u7684\u5bf9\u79f0\u5dee\uff0c\u8fd4\u56de\u8fd9\u4e9b\u5143\u7d20\u6784\u6210\u7684\u6570\u7ec4 <p>\u8bf4\u660e\uff1a\u5173\u4e8e\u5411\u91cf\u548c\u77e9\u9635\u7684\u8fd0\u7b97\uff0c\u6211\u4eec\u5728\u4e0b\u4e00\u4e2a\u7ae0\u8282\u52a0\u4ee5\u8bf4\u660e\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/70.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-3/#_6","title":"\u5e7f\u64ad\u673a\u5236","text":"<p>\u4e0a\u9762\u6570\u7ec4\u8fd0\u7b97\u7684\u4f8b\u5b50\u4e2d\uff0c\u4e24\u4e2a\u6570\u7ec4\u7684\u5f62\u72b6\uff08<code>shape</code>\u5c5e\u6027\uff09\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u6211\u4eec\u518d\u6765\u7814\u7a76\u4e00\u4e0b\uff0c\u4e24\u4e2a\u5f62\u72b6\u4e0d\u540c\u7684\u6570\u7ec4\u662f\u5426\u53ef\u4ee5\u76f4\u63a5\u505a\u4e8c\u5143\u8fd0\u7b97\u6216\u4f7f\u7528\u901a\u7528\u4e8c\u5143\u51fd\u6570\u8fdb\u884c\u8fd0\u7b97\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array5 = np.array([[0, 0, 0], [1, 1, 1], [2, 2, 2], [3, 3, 3]])\narray6 = np.array([1, 2, 3])\narray5 + array6\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1, 2, 3],\n       [2, 3, 4],\n       [3, 4, 5],\n       [4, 5, 6]])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>array7 = np.array([[1], [2], [3], [4]])\narray5 + array7\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1, 1, 1],\n       [3, 3, 3],\n       [5, 5, 5],\n       [7, 7, 7]])\n</code></pre> <p>\u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u53d1\u73b0\u5f62\u72b6\u4e0d\u540c\u7684\u6570\u7ec4\u4ecd\u7136\u6709\u673a\u4f1a\u8fdb\u884c\u4e8c\u5143\u8fd0\u7b97\uff0c\u4f46\u8fd9\u4e0d\u4ee3\u8868\u4efb\u610f\u5f62\u72b6\u7684\u6570\u7ec4\u90fd\u53ef\u4ee5\u8fdb\u884c\u4e8c\u5143\u8fd0\u7b97\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u53ea\u6709\u4e24\u4e2a\u6570\u7ec4\u540e\u7f18\u7ef4\u5ea6\u76f8\u540c\u6216\u8005\u540e\u7f18\u7ef4\u5ea6\u4e0d\u540c\u4f46\u5176\u4e2d\u4e00\u4e2a\u6570\u7ec4\u540e\u7f18\u7ef4\u5ea6\u4e3a1\u65f6\uff0c\u5e7f\u64ad\u673a\u5236\u624d\u4f1a\u88ab\u89e6\u53d1\u3002\u901a\u8fc7\u5e7f\u64ad\u673a\u5236\uff0cNumPy \u5c06\u4e24\u4e2a\u539f\u672c\u5f62\u72b6\u4e0d\u76f8\u540c\u7684\u6570\u7ec4\u53d8\u6210\u5f62\u72b6\u76f8\u540c\uff0c\u624d\u80fd\u8fdb\u884c\u4e8c\u5143\u8fd0\u7b97\u3002\u6240\u8c13\u540e\u7f18\u7ef4\u5ea6\uff0c\u6307\u7684\u662f\u6570\u7ec4\u5f62\u72b6\uff08<code>shape</code>\u5c5e\u6027\uff09\u4ece\u540e\u5f80\u524d\u770b\u5bf9\u5e94\u7684\u90e8\u5206\uff0c\u6211\u4eec\u4e3e\u4f8b\u8bf4\u660e\u3002</p> <p></p> <p>\u4e0a\u56fe\u4e2d\uff0c\u4e00\u4e2a\u6570\u7ec4\u7684\u5f62\u72b6\u662f<code>(4, 3)</code>\uff0c\u53e6\u4e00\u4e2a\u6570\u7ec4\u7684\u5f62\u72b6\u662f<code>(3, )</code>\uff0c\u4ece\u540e\u5f80\u524d\u770b\u5bf9\u5e94\u7684\u90e8\u5206\u90fd\u662f<code>3</code>\uff0c\u5c5e\u4e8e\u540e\u7f18\u7ef4\u5ea6\u76f8\u540c\uff0c\u53ef\u4ee5\u5e94\u7528\u5e7f\u64ad\u673a\u5236\uff0c\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u4f1a\u6cbf\u7740\u7f3a\u5931\u5143\u7d20\u90a3\u4e2a\u8f74\u7684\u65b9\u5411\u53bb\u5e7f\u64ad\u81ea\u5df1\uff0c\u6700\u7ec8\u8ba9\u4e24\u4e2a\u6570\u7ec4\u5f62\u72b6\u8fbe\u6210\u4e00\u81f4\u3002</p> <p></p> <p>\u4e0a\u56fe\u4e2d\uff0c\u4e00\u4e2a\u6570\u7ec4\u7684\u5f62\u72b6\u662f<code>(3, 4, 2)</code>\uff0c\u53e6\u4e00\u4e2a\u6570\u7ec4\u7684\u5f62\u72b6\u662f<code>(4, 2)</code>\uff0c\u4ece\u540e\u5f80\u524d\u770b\u5bf9\u5e94\u7684\u90e8\u5206\u90fd\u662f<code>(4, 2)</code>\uff0c\u5c5e\u4e8e\u540e\u7f18\u7ef4\u5ea6\u76f8\u540c\uff0c\u53ef\u4ee5\u5e94\u7528\u5e7f\u64ad\u673a\u5236\uff0c\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u4f1a\u6cbf\u7740\u7f3a\u5931\u5143\u7d20\u90a3\u4e2a\u8f74\u7684\u65b9\u5411\u53bb\u5e7f\u64ad\u81ea\u5df1\uff0c\u6700\u7ec8\u8ba9\u4e24\u4e2a\u6570\u7ec4\u5f62\u72b6\u8fbe\u6210\u4e00\u81f4\u3002</p> <p></p> <p>\u4e0a\u56fe\u4e2d\uff0c\u4e00\u4e2a\u6570\u7ec4\u7684\u5f62\u72b6\u662f<code>(4, 3)</code>\uff0c\u53e6\u4e00\u4e2a\u6570\u7ec4\u7684\u5f62\u72b6\u662f<code>(4, 1)</code>\uff0c\u8fd9\u662f\u540e\u7f18\u7ef4\u5ea6\u4e0d\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u8ddf\u7b2c\u4e00\u4e2a\u6570\u7ec4\u4e0d\u540c\u7684\u5730\u65b9\u4e3a<code>1</code>\uff0c\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u53ef\u4ee5\u6cbf\u7740\u4e3a<code>1</code> \u7684\u90a3\u4e2a\u8f74\u5e7f\u64ad\u81ea\u5df1\uff0c\u6700\u7ec8\u8ba9\u4e24\u4e2a\u6570\u7ec4\u5f62\u72b6\u8fbe\u6210\u4e00\u81f4\u3002</p> <p>\u601d\u8003\uff1a\u4e00\u4e2a3\u884c1\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4\u548c\u4e00\u4e2a1\u884c3\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4\u80fd\u591f\u6267\u884c\u52a0\u6cd5\u8fd0\u7b97\u5417\uff1f</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/70.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-3/#_7","title":"\u5176\u4ed6\u5e38\u7528\u51fd\u6570","text":"<p>\u9664\u4e86\u4e0a\u9762\u8bb2\u5230\u7684\u51fd\u6570\u5916\uff0cNumPy \u4e2d\u8fd8\u63d0\u4f9b\u4e86\u5f88\u591a\u7528\u4e8e\u5904\u7406\u6570\u7ec4\u7684\u51fd\u6570\uff0c<code>ndarray</code>\u5bf9\u8c61\u7684\u5f88\u591a\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u51fd\u6570\u6765\u5b9e\u73b0\uff0c\u4e0b\u8868\u7ed9\u51fa\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u51fd\u6570\u3002</p> <p>\u88683\uff1aNumPy\u5176\u4ed6\u5e38\u7528\u51fd\u6570</p> \u51fd\u6570 \u8bf4\u660e <code>unique</code> \u53bb\u9664\u6570\u7ec4\u91cd\u590d\u5143\u7d20\uff0c\u8fd4\u56de\u552f\u4e00\u5143\u7d20\u6784\u6210\u7684\u6709\u5e8f\u6570\u7ec4 <code>copy</code> \u8fd4\u56de\u62f7\u8d1d\u6570\u7ec4\u5f97\u5230\u7684\u6570\u7ec4 <code>sort</code> \u8fd4\u56de\u6570\u7ec4\u5143\u7d20\u6392\u5e8f\u540e\u7684\u62f7\u8d1d <code>split</code> / <code>hsplit</code> / <code>vsplit</code> \u5c06\u6570\u7ec4\u62c6\u6210\u82e5\u5e72\u4e2a\u5b50\u6570\u7ec4 <code>stack</code> / <code>hstack</code> / <code>vstack</code> \u5c06\u591a\u4e2a\u6570\u7ec4\u5806\u53e0\u6210\u65b0\u6570\u7ec4 <code>concatenate</code> \u6cbf\u7740\u6307\u5b9a\u7684\u8f74\u8fde\u63a5\u591a\u4e2a\u6570\u7ec4\u6784\u6210\u65b0\u6570\u7ec4 <code>append</code> / <code>insert</code> \u5411\u6570\u7ec4\u672b\u5c3e\u8ffd\u52a0\u5143\u7d20 / \u5728\u6570\u7ec4\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20 <code>argwhere</code> \u627e\u51fa\u6570\u7ec4\u4e2d\u975e0\u5143\u7d20\u7684\u4f4d\u7f6e <code>extract</code> / <code>select</code> / <code>where</code> \u6309\u7167\u6307\u5b9a\u7684\u6761\u4ef6\u4ece\u6570\u7ec4\u4e2d\u62bd\u53d6\u6216\u5904\u7406\u6570\u7ec4\u5143\u7d20 <code>flip</code> \u6cbf\u6307\u5b9a\u7684\u8f74\u7ffb\u8f6c\u6570\u7ec4\u4e2d\u7684\u5143\u7d20 <code>fromregex</code> \u901a\u8fc7\u8bfb\u53d6\u6587\u4ef6\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u89e3\u6790\u83b7\u53d6\u6570\u636e\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61 <code>repeat</code> / <code>tile</code> \u901a\u8fc7\u5bf9\u5143\u7d20\u7684\u91cd\u590d\u6765\u521b\u5efa\u65b0\u6570\u7ec4 <code>roll</code> \u6cbf\u6307\u5b9a\u8f74\u5bf9\u6570\u7ec4\u5143\u7d20\u8fdb\u884c\u79fb\u4f4d <code>resize</code> \u91cd\u65b0\u8c03\u6574\u6570\u7ec4\u7684\u5927\u5c0f <code>place</code> / <code>put</code> \u5c06\u6570\u7ec4\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20/\u6307\u5b9a\u7684\u5143\u7d20\u66ff\u6362\u4e3a\u6307\u5b9a\u7684\u503c <code>partition</code> \u7528\u9009\u5b9a\u7684\u5143\u7d20\u5bf9\u6570\u7ec4\u8fdb\u884c\u4e00\u6b21\u5212\u5206\u5e76\u8fd4\u56de\u5212\u5206\u540e\u7684\u6570\u7ec4 <p>\u53bb\u91cd\uff08\u91cd\u590d\u5143\u7d20\u53ea\u4fdd\u7559\u4e00\u9879\uff09\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.unique(array5)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([0, 1, 2, 3])\n</code></pre> <p>\u5806\u53e0\u548c\u62fc\u63a5\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>array8 = np.array([[1, 1, 1], [2, 2, 2], [3, 3, 3]])\narray9 = np.array([[4, 4, 4], [5, 5, 5], [6, 6, 6]])\nnp.hstack((array8, array9))\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1, 1, 1, 4, 4, 4],\n       [2, 2, 2, 5, 5, 5],\n       [3, 3, 3, 6, 6, 6]])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.vstack((array8, array9))\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1, 1, 1],\n       [2, 2, 2],\n       [3, 3, 3],\n       [4, 4, 4],\n       [5, 5, 5],\n       [6, 6, 6]])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.concatenate((array8, array9))\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1, 1, 1],\n       [2, 2, 2],\n       [3, 3, 3],\n       [4, 4, 4],\n       [5, 5, 5],\n       [6, 6, 6]])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.concatenate((array8, array9), axis=1)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1, 1, 1, 4, 4, 4],\n       [2, 2, 2, 5, 5, 5],\n       [3, 3, 3, 6, 6, 6]])\n</code></pre> <p>\u8ffd\u52a0\u548c\u63d2\u5165\u5143\u7d20\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.append(array1, [10, 100])\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([  1,   2,   3,   4,   5,   6,   7,   8,   9,  10, 100])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.insert(array1, 1, [98, 99, 100])\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([  1,  98,  99, 100,   2,   3,   4,   5,   6,   7,   8,   9])\n</code></pre> <p>\u62bd\u53d6\u548c\u5904\u7406\u5143\u7d20\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.extract(array1 % 2 != 0, array1)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([1, 3, 5, 7, 9])\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762<code>extract</code>\u51fd\u6570\u7684\u64cd\u4f5c\u76f8\u5f53\u4e8e\u6211\u4eec\u4e4b\u524d\u8bb2\u7684\u5e03\u5c14\u7d22\u5f15\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.select([array1 &lt;= 3, array1 &gt;= 7], [array1 * 10, array1 ** 2])\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([10, 20, 30,  0,  0,  0, 49, 64, 81])\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762<code>select</code>\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e86\u4e24\u4e2a\u6761\u4ef6\uff0c\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u6761\u4ef6\u7684\u5143\u7d20\u6267\u884c\u4e86\u4e58\u4ee510\u7684\u64cd\u4f5c\uff0c\u6ee1\u8db3\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u7684\u5143\u7d20\u6267\u884c\u4e86\u6c42\u5e73\u65b9\u7684\u64cd\u4f5c\uff0c\u4e24\u4e2a\u6761\u4ef6\u90fd\u4e0d\u80fd\u6ee1\u8db3\u7684\u6570\u7ec4\u5143\u7d20\u4f1a\u88ab\u5904\u7406\u4e3a0\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.where(array1 &lt;= 5, array1 * 10, array1 ** 2)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([10, 20, 30, 40, 50, 36, 49, 64, 81])\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762<code>where</code>\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u7ed9\u51fa\u4e86\u6761\u4ef6\uff0c\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20\u6267\u884c\u4e86\u4e58\u4ee510\u7684\u64cd\u4f5c\uff0c\u4e0d\u80fd\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20\u6267\u884c\u4e86\u6c42\u5e73\u65b9\u7684\u64cd\u4f5c\u3002</p> <p>\u91cd\u590d\u6570\u7ec4\u5143\u7d20\u521b\u5efa\u65b0\u6570\u7ec4\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.repeat(array1, 3)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.tile(array1, 2)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n</code></pre> <p>\u8c03\u6574\u6570\u7ec4\u5927\u5c0f\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.resize(array1, (5, 3))\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9],\n       [1, 2, 3],\n       [4, 5, 6]])\n</code></pre> <p>\u63d0\u793a\uff1a<code>array1</code>\u539f\u672c\u662f\u4e00\u4e2a\u67099\u4e2a\u5143\u7d20\u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u901a\u8fc7<code>resize</code>\u51fd\u6570\u8c03\u6574\u6210\u4e3a5\u884c3\u5217\u517115\u4e2a\u5143\u7d20\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7f3a\u5c11\u7684\u5143\u7d20\u901a\u8fc7\u590d\u7528\u539f\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u6765\u8865\u5145\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code> np.resize(array5, (2, 4))\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[0, 0, 0, 1],\n       [1, 1, 2, 2]])\n</code></pre> <p>\u66ff\u6362\u6570\u7ec4\u5143\u7d20\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.put(array1, [0, 1, -1, 3, 5], [100, 200])\narray1\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([100, 200,   3, 200,   5, 100,   7,   8, 100])\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762<code>put</code>\u51fd\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7ed9\u51fa\u4e86\u8981\u88ab\u66ff\u6362\u7684\u5143\u7d20\u7684\u7d22\u5f15\uff0c\u4f46\u662f\u7528\u6765\u4f5c\u4e3a\u66ff\u6362\u503c\u7684\u5143\u7d20\u53ea\u6709<code>100</code>\u548c<code>200</code>\uff0c\u6240\u4ee5\u8fd9\u4e24\u4e2a\u503c\u4f1a\u88ab\u5faa\u73af\u4f7f\u7528\uff0c\u56e0\u6b64\u7d22\u5f15\u4e3a<code>0</code>\u3001<code>1</code>\u3001<code>-1</code>\u3001<code>3</code>\u3001<code>5</code>\u7684\u5143\u7d20\u88ab\u4f9d\u6b21\u66ff\u6362\u6210\u4e86<code>100</code>\u3001<code>200</code>\u3001<code>100</code>\u3001<code>200</code>\u3001<code>100</code>\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.place(array1, array1 &gt; 5, [1, 2, 3])\narray1\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([1, 2, 3, 3, 5, 1, 2, 3, 1])\n</code></pre> <p>\u6ce8\u610f\uff1a<code>put</code>\u51fd\u6570\u548c<code>place</code>\u51fd\u6570\u90fd\u6ca1\u6709\u8fd4\u56de\u65b0\u7684\u6570\u7ec4\u5bf9\u8c61\uff0c\u800c\u662f\u5728\u539f\u6765\u7684\u6570\u7ec4\u4e0a\u76f4\u63a5\u8fdb\u884c\u66ff\u6362\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/","title":"71.NumPy\u7684\u5e94\u7528 4","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#numpy-4","title":"NumPy\u7684\u5e94\u7528-4","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#_1","title":"\u5411\u91cf","text":"<p>\u5411\u91cf\uff08vector\uff09\u4e5f\u53eb\u77e2\u91cf\uff0c\u662f\u4e00\u4e2a\u540c\u65f6\u5177\u6709\u5927\u5c0f\u548c\u65b9\u5411\uff0c\u4e14\u6ee1\u8db3\u5e73\u884c\u56db\u8fb9\u5f62\u6cd5\u5219\u7684\u51e0\u4f55\u5bf9\u8c61\u3002\u4e0e\u5411\u91cf\u76f8\u5bf9\u7684\u6982\u5ff5\u53eb\u6807\u91cf\u6216\u6570\u91cf\uff0c\u6807\u91cf\u53ea\u6709\u5927\u5c0f\uff0c\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6ca1\u6709\u65b9\u5411\u3002\u6211\u4eec\u901a\u5e38\u7528\u5e26\u7bad\u5934\u7684\u7ebf\u6bb5\u6765\u8868\u793a\u5411\u91cf\uff0c\u5728\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d\u7684\u5411\u91cf\u5982\u4e0b\u56fe\u6240\u793a\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5411\u91cf\u662f\u8868\u8fbe\u5927\u5c0f\u548c\u65b9\u5411\u7684\u91cf\uff0c\u5e76\u6ca1\u6709\u89c4\u5b9a\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u6240\u4ee5\u76f8\u540c\u7684\u5411\u91cf\u53ef\u4ee5\u753b\u5728\u4efb\u610f\u4f4d\u7f6e\uff0c\u4f8b\u5982\u4e0b\u56fe\u4e2d\\(\\boldsymbol{w}\\)\u548c\\(\\boldsymbol{v}\\)\u4e24\u4e2a\u5411\u91cf\u5e76\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u3002</p> <p></p> <p>\u5411\u91cf\u6709\u5f88\u591a\u79cd\u4ee3\u6570\u8868\u793a\u6cd5\uff0c\u5bf9\u4e8e\u4e8c\u7ef4\u7a7a\u95f4\u7684\u5411\u91cf\uff0c\u4e0b\u9762\u51e0\u79cd\u5199\u6cd5\u90fd\u662f\u53ef\u4ee5\u7684\u3002 $$ \\boldsymbol{a} = \\langle a_1, a_2 \\rangle = (a_1, a_2) = \\begin{pmatrix} a_1 \\ a_2 \\end{pmatrix} = \\begin{bmatrix} a_1 \\ a_2 \\end{bmatrix} $$ \u5411\u91cf\u7684\u5927\u5c0f\u79f0\u4e3a\u5411\u91cf\u7684\u6a21\uff0c\u5b83\u662f\u4e00\u4e2a\u6807\u91cf\uff0c\u5bf9\u4e8e\u4e8c\u7ef4\u7a7a\u95f4\u7684\u5411\u91cf\uff0c\u6a21\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u516c\u5f0f\u8ba1\u7b97\u3002 $$ \\lvert \\boldsymbol{a} \\rvert = \\sqrt{a_{1}^{2} + a_{2}^{2}} $$ \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\\(\\lvert \\boldsymbol{a} \\rvert\\)\u5e76\u4e0d\u662f\u7edd\u5bf9\u503c\uff0c\u4f60\u53ef\u4ee5\u5c06\u5176\u79f0\u4e3a\u5411\u91cf\\(\\boldsymbol{a}\\)\u7684\u4e8c\u8303\u6570\uff0c\u8fd9\u662f\u6570\u5b66\u4e2d\u7684\u7b26\u53f7\u91cd\u7528\u73b0\u8c61\u3002\u4e0a\u9762\u7684\u5199\u6cd5\u548c\u6982\u5ff5\u4e5f\u53ef\u4ee5\u63a8\u5e7f\u5230\\(n\\)\u7ef4\u7a7a\u95f4\uff0c\u6211\u4eec\u901a\u5e38\u7528\\(\\boldsymbol{R^n}\\)\u8868\u793a\\(n\\)\u7ef4\u7a7a\u95f4\uff0c\u6211\u4eec\u521a\u624d\u8bf4\u7684\u4e8c\u7ef4\u7a7a\u95f4\u53ef\u4ee5\u8bb0\u4e3a\\(\\boldsymbol{R^2}\\)\uff0c\u4e09\u7ef4\u7a7a\u95f4\u53ef\u4ee5\u8bb0\u4e3a\\(\\boldsymbol{R^3}\\)\u3002\u867d\u7136\u751f\u6d3b\u5728\u4e09\u7ef4\u7a7a\u95f4\u7684\u6211\u4eec\u5f88\u96be\u60f3\u8c61\u56db\u7ef4\u7a7a\u95f4\u3001\u4e94\u7ef4\u7a7a\u95f4\u662f\u4ec0\u4e48\u6837\u5b50\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u5f71\u54cd\u6211\u4eec\u63a2\u8ba8\u9ad8\u7ef4\u7a7a\u95f4\uff0c\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u628a\u6709\\(n\\)\u4e2a\u7279\u5f81\u7684\u8bad\u7ec3\u6837\u672c\u79f0\u4e3a\u4e00\u4e2a\\(n\\)\u7ef4\u5411\u91cf\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#_2","title":"\u5411\u91cf\u7684\u52a0\u6cd5","text":"<p>\u76f8\u540c\u7ef4\u5ea6\u7684\u5411\u91cf\u53ef\u4ee5\u76f8\u52a0\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u5411\u91cf\uff0c\u8fd0\u7b97\u7684\u65b9\u6cd5\u662f\u5c06\u5411\u91cf\u7684\u6bcf\u4e2a\u5206\u91cf\u76f8\u52a0\uff0c\u5982\u4e0b\u6240\u793a\u3002 $$ \\boldsymbol{u} = \\begin{bmatrix} u_1 \\ u_2 \\ \\vdots \\ u_n \\end{bmatrix}, \\quad \\boldsymbol{v} = \\begin{bmatrix} v_1 \\ v_2 \\ \\vdots \\ v_n \\end{bmatrix}, \\quad \\boldsymbol{u} + \\boldsymbol{v} = \\begin{bmatrix} u_1 + v_1 \\ u_2 + v_2 \\ \\vdots \\ u_n + v_n \\end{bmatrix} $$ \u5411\u91cf\u7684\u52a0\u6cd5\u6ee1\u8db3\u201c\u5e73\u884c\u56db\u8fb9\u5f62\u6cd5\u5219\u201d\uff0c\u5373\u4e24\u4e2a\u5411\u91cf\\(\\boldsymbol{u}\\)\u548c\\(\\boldsymbol{v}\\)\u6784\u6210\u4e86\u5e73\u884c\u56db\u8fb9\u5f62\u7684\u4e24\u6761\u90bb\u8fb9\uff0c\u76f8\u52a0\u7684\u7ed3\u679c\u662f\u5e73\u884c\u56db\u8fb9\u5f62\u7684\u5bf9\u89d2\u7ebf\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#_3","title":"\u5411\u91cf\u7684\u6570\u4e58","text":"<p>\u4e00\u4e2a\u5411\u91cf\\(\\boldsymbol{v}\\)\u53ef\u4ee5\u548c\u4e00\u4e2a\u6807\u91cf\\(k\\)\u76f8\u4e58\uff0c\u8fd0\u7b97\u7684\u65b9\u6cd5\u662f\u5c06\u5411\u91cf\u4e2d\u7684\u6bcf\u4e2a\u5206\u91cf\u4e0e\u8be5\u6807\u91cf\u76f8\u4e58\u5373\u53ef\uff0c\u5982\u4e0b\u6240\u793a\u3002 $$ \\boldsymbol{v} = \\begin{bmatrix} v_1 \\ v_2 \\ \\vdots \\ v_n \\end{bmatrix}, \\quad k \\cdot \\boldsymbol{v} = \\begin{bmatrix} k \\cdot v_1 \\ k \\cdot v_2 \\ \\vdots \\ k \\cdot v_n \\end{bmatrix} $$ \u6211\u4eec\u53ef\u4ee5\u7528 NumPy \u7684\u6570\u7ec4\u6765\u8868\u793a\u5411\u91cf\uff0c\u5411\u91cf\u7684\u52a0\u6cd5\u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u6570\u7ec4\u7684\u52a0\u6cd5\u6765\u5b9e\u73b0\uff0c\u5411\u91cf\u7684\u6570\u4e58\u53ef\u4ee5\u901a\u8fc7\u6570\u7ec4\u548c\u6807\u91cf\u7684\u4e58\u6cd5\u6765\u5b9e\u73b0\uff0c\u6b64\u5904\u4e0d\u518d\u8fdb\u884c\u8d58\u8ff0\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#_4","title":"\u5411\u91cf\u7684\u70b9\u79ef","text":"<p>\u70b9\u79ef\uff08dot product\uff09\u662f\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u6700\u4e3a\u91cd\u8981\u7684\u8fd0\u7b97\u4e4b\u4e00\uff0c\u8fd0\u7b97\u7684\u65b9\u6cd5\u662f\u5c06\u4e24\u4e2a\u5411\u91cf\u5bf9\u5e94\u5206\u91cf\u7684\u4e58\u79ef\u6c42\u548c\uff0c\u6240\u4ee5\u70b9\u79ef\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u6807\u91cf\uff0c\u5176\u51e0\u4f55\u610f\u4e49\u662f\u4e24\u4e2a\u5411\u91cf\u7684\u6a21\u4e58\u4ee5\u4e8c\u8005\u5939\u89d2\u7684\u4f59\u5f26\u5982\u4e0b\u6240\u793a\u3002 $$ \\boldsymbol{u} = \\begin{bmatrix} u_1 \\ u_2 \\ \\vdots \\ u_n \\end{bmatrix}, \\quad \\boldsymbol{v} = \\begin{bmatrix} v_1 \\ v_2 \\ \\vdots \\ v_n \\end{bmatrix} \\quad \\ \\boldsymbol{u} \\cdot \\boldsymbol{v} = \\sum_{i=1}^{n}{u_iv_i} = \\lvert \\boldsymbol{u} \\rvert \\lvert \\boldsymbol{v} \\rvert cos\\theta $$ \u5047\u5982\u6211\u4eec\u75283\u7ef4\u5411\u91cf\u6765\u8868\u793a\u7528\u6237\u5bf9\u559c\u5267\u7247\u3001\u8a00\u60c5\u7247\u548c\u52a8\u4f5c\u7247\u8fd9\u4e09\u7c7b\u7535\u5f71\u7684\u504f\u597d\uff0c\u6211\u4eec\u75281\u52305\u7684\u6570\u5b57\u6765\u8868\u793a\u559c\u6b22\u7684\u7a0b\u5ea6\uff0c\u5176\u4e2d5\u8868\u793a\u975e\u5e38\u559c\u6b22\uff0c4\u8868\u793a\u6bd4\u8f83\u559c\u6b22\uff0c3\u8868\u793a\u65e0\u611f\uff0c2\u8868\u793a\u6bd4\u8f83\u53cd\u611f\uff0c1\u8868\u793a\u7279\u522b\u53cd\u611f\u3002\u90a3\u4e48\uff0c\u4e0b\u9762\u7684\u5411\u91cf\u8868\u793a\u7528\u6237\u975e\u5e38\u559c\u6b22\u559c\u5267\u7247\uff0c\u7279\u522b\u53cd\u611f\u8a00\u60c5\u7247\uff0c\u5bf9\u52a8\u4f5c\u7247\u4e0d\u559c\u6b22\u4e5f\u4e0d\u53cd\u611f\u3002 $$ \\boldsymbol{u} = \\begin{pmatrix} 5 \\ 1 \\ 3 \\end{pmatrix} $$ \u73b0\u5728\u6709\u4e24\u90e8\u7535\u5f71\u4e0a\u6620\u4e86\uff0c\u4e00\u90e8\u5c5e\u4e8e\u8a00\u60c5\u559c\u5267\u7247\uff0c\u4e00\u90e8\u5c5e\u4e8e\u559c\u5267\u52a8\u4f5c\u7247\uff0c\u6211\u4eec\u628a\u4e24\u90e8\u7535\u5f71\u4e5f\u901a\u8fc73\u7ef4\u5411\u91cf\u7684\u65b9\u5f0f\u8fdb\u884c\u8868\u793a\uff0c\u5982\u4e0b\u6240\u793a\u3002 $$ \\boldsymbol{m_1} = \\begin{pmatrix} 4 \\ 5 \\ 1 \\end{pmatrix}, \\quad \\boldsymbol{m_2} = \\begin{pmatrix} 5 \\ 1 \\ 5 \\end{pmatrix} $$ \u5982\u679c\u73b0\u5728\u6211\u4eec\u9700\u8981\u5411\u521a\u624d\u7684\u7528\u6237\u63a8\u8350\u4e00\u90e8\u7535\u5f71\uff0c\u6211\u4eec\u5e94\u8be5\u7ed9\u4ed6\u63a8\u8350\u54ea\u4e00\u90e8\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5c06\u4ee3\u8868\u7528\u6237\u7684\u5411\u91cf\\(\\boldsymbol{u}\\)\u548c\u4ee3\u8868\u7535\u5f71\u7684\u5411\u91cf\\(\\boldsymbol{m_1}\\)\u548c\\(\\boldsymbol{m_2}\\)\u5206\u522b\u8fdb\u884c\u70b9\u79ef\u8fd0\u7b97\uff0c\u518d\u9664\u4ee5\u5411\u91cf\u7684\u6a21\u957f\uff0c\u5f97\u5230\u5411\u91cf\u5939\u89d2\u7684\u4f59\u5f26\u503c\uff0c\u4f59\u5f26\u503c\u8d8a\u63a5\u8fd11\uff0c\u8bf4\u660e\u5411\u91cf\u7684\u5939\u89d2\u8d8a\u63a5\u8fd10\u5ea6\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2a\u5411\u91cf\u7684\u76f8\u4f3c\u5ea6\u8d8a\u9ad8\u3002\u5f88\u663e\u7136\uff0c\u6211\u4eec\u5e94\u8be5\u5411\u7528\u6237\u63a8\u8350\u8ddf\u4ed6\u89c2\u5f71\u559c\u597d\u76f8\u4f3c\u5ea6\u66f4\u9ad8\u7684\u7535\u5f71\u3002 $$ cos\\theta_1 = \\frac{\\boldsymbol{u} \\cdot \\boldsymbol{m1}}{|\\boldsymbol{u}||\\boldsymbol{m1}|} \\approx \\frac{4 \\times 5 + 5 \\times 1 + 3 \\times 1}{5.92 \\times 6.48} \\approx 0.73 \\ cos\\theta_2 = \\frac{\\boldsymbol{u} \\cdot \\boldsymbol{m2}}{|\\boldsymbol{u}||\\boldsymbol{m2}|} \\approx \\frac{5 \\times 5 + 1 \\times 1 + 3 \\times 5}{5.92 \\times 7.14} \\approx 0.97 $$ \u5927\u5bb6\u53ef\u80fd\u4f1a\u8bf4\uff0c\u5411\u91cf\\(\\boldsymbol{m_2}\\)\u4ee3\u8868\u7684\u7535\u5f71\u8089\u773c\u53ef\u89c1\u8ddf\u7528\u6237\u662f\u66f4\u52a0\u5339\u914d\u7684\u3002\u7684\u786e\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e09\u7ef4\u5411\u91cf\u6211\u4eec\u51ed\u501f\u76f4\u89c9\u4e5f\u80fd\u591f\u7ed9\u51fa\u6b63\u786e\u7684\u7b54\u6848\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e2a\\(n\\)\u7ef4\u5411\u91cf\uff0c\u5f53\\(n\\)\u7684\u503c\u975e\u5e38\u5927\u65f6\uff0c\u4f60\u8fd8\u6709\u4fe1\u5fc3\u51ed\u501f\u8089\u773c\u7684\u89c2\u5bdf\u548c\u672c\u80fd\u7684\u76f4\u89c9\u7ed9\u51fa\u51c6\u786e\u7684\u7b54\u6848\u5417\uff1f\u5411\u91cf\u7684\u70b9\u79ef\u53ef\u4ee5\u901a\u8fc7<code>dot</code>\u51fd\u6570\u6765\u8ba1\u7b97\uff0c\u800c\u5411\u91cf\u7684\u6a21\u957f\u53ef\u4ee5\u901a\u8fc7 NumPy \u7684<code>linalg</code>\u6a21\u5757\u4e2d\u7684<code>norm</code>\u51fd\u6570\u6765\u8ba1\u7b97\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>u = np.array([5, 1, 3])\nm1 = np.array([4, 5, 1])\nm2 = np.array([5, 1, 5])\nprint(np.dot(u, m1) / (np.linalg.norm(u) * np.linalg.norm(m1)))  # 0.7302967433402214\nprint(np.dot(u, m2) / (np.linalg.norm(u) * np.linalg.norm(m2)))  # 0.9704311900788593\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#_5","title":"\u5411\u91cf\u7684\u53c9\u79ef","text":"<p>\u5728\u4e8c\u7ef4\u7a7a\u95f4\uff0c\u4e24\u4e2a\u5411\u91cf\u7684\u53c9\u79ef\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff1a $$ \\boldsymbol{A} = \\begin{pmatrix} a_{1} \\ a_{2} \\end{pmatrix}, \\quad \\boldsymbol{B} = \\begin{pmatrix} b_{1} \\ b_{2} \\end{pmatrix} \\ \\boldsymbol{A} \\times \\boldsymbol{B} = \\begin{vmatrix} a_{1} \\quad a_{2} \\ b_{1} \\quad b_{2} \\end{vmatrix} = a_{1}b_{2} - a_{2}b_{1} $$ \u5bf9\u4e8e\u4e09\u7ef4\u7a7a\u95f4\uff0c\u4e24\u4e2a\u5411\u91cf\u7684\u53c9\u79ef\u7ed3\u679c\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5982\u4e0b\u6240\u793a\uff1a $$ \\boldsymbol{A} = \\begin{pmatrix} a_{1} \\ a_{2} \\ a_{3} \\end{pmatrix}, \\quad \\boldsymbol{B} = \\begin{pmatrix} b_{1} \\ b_{2} \\ b_{3} \\end{pmatrix} \\ \\boldsymbol{A} \\times \\boldsymbol{B} = \\begin{vmatrix} \\boldsymbol{\\hat{i}} \\quad \\boldsymbol{\\hat{j}} \\quad \\boldsymbol{\\hat{k}} \\ a_{1} \\quad a_{2} \\quad a_{3} \\ b_{1} \\quad b_{2} \\quad b_{3} \\end{vmatrix} = \\langle \\boldsymbol{\\hat{i}}\\begin{vmatrix} a_{2} \\quad a_{3} \\ b_{2} \\quad b_{3} \\end{vmatrix}, -\\boldsymbol{\\hat{j}}\\begin{vmatrix} a_{1} \\quad a_{3} \\ b_{1} \\quad b_{3} \\end{vmatrix}, \\boldsymbol{\\hat{k}}\\begin{vmatrix} a_{1} \\quad a_{2} \\ b_{1} \\quad b_{2} \\end{vmatrix} \\rangle $$ \u56e0\u4e3a\u53c9\u79ef\u7684\u7ed3\u679c\u662f\u5411\u91cf\uff0c\u6240\u4ee5\\(\\boldsymbol{A} \\times \\boldsymbol{B}\\)\u548c\\(\\boldsymbol{B} \\times \\boldsymbol{A}\\)\u7684\u7ed3\u679c\u5e76\u4e0d\u76f8\u540c\uff0c\u4e8b\u5b9e\u4e0a\uff1a $$ \\boldsymbol{A} \\times \\boldsymbol{B} = -(\\boldsymbol{B} \\times \\boldsymbol{A}) $$ NumPy \u4e2d\u53ef\u4ee5\u901a\u8fc7<code>cross</code>\u51fd\u6570\u6765\u8ba1\u7b97\u5411\u91cf\u7684\u53c9\u79ef\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>print(np.cross(u, m1))  # [-14   7  21]\nprint(np.cross(m1, u))  # [ 14  -7 -21]\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#_6","title":"\u884c\u5217\u5f0f","text":"<p>\u884c\u5217\u5f0f\uff08determinant\uff09\u901a\u5e38\u8bb0\u4f5c\\(det(\\boldsymbol{A})\\)\u6216\\(|\\boldsymbol{A}|\\)\uff0c\u5176\u4e2d\\(\\boldsymbol{A}\\)\u662f\u4e00\u4e2a\\(n\\)\u9636\u65b9\u9635\u3002\u884c\u5217\u5f0f\u53ef\u4ee5\u770b\u505a\u662f\u6709\u5411\u9762\u79ef\u6216\u4f53\u79ef\u7684\u6982\u5ff5\u5728\u4e00\u822c\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\u7684\u63a8\u5e7f\uff0c\u6216\u8005\u8bf4\u884c\u5217\u5f0f\u63cf\u8ff0\u7684\u662f\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\u5bf9\u201c\u4f53\u79ef\u201d\u6240\u9020\u6210\u7684\u5f71\u54cd\u3002\u884c\u5217\u5f0f\u7684\u6982\u5ff5\u6700\u65e9\u51fa\u73b0\u5728\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5341\u4e03\u4e16\u7eaa\u665a\u671f\uff0c\u5173\u5b5d\u548c\uff08\u65e5\u672c\u6c5f\u6237\u65f6\u4ee3\u7684\u6570\u5b66\u5bb6\uff09\u4e0e\u83b1\u5e03\u5c3c\u8328\u7684\u8457\u4f5c\u4e2d\u5df2\u7ecf\u4f7f\u7528\u884c\u5217\u5f0f\u6765\u786e\u5b9a\u7ebf\u6027\u65b9\u7a0b\u7ec4\u89e3\u7684\u4e2a\u6570\u4ee5\u53ca\u5f62\u5f0f\uff1b\u5341\u516b\u4e16\u7eaa\u5f00\u59cb\uff0c\u884c\u5217\u5f0f\u5f00\u59cb\u4f5c\u4e3a\u72ec\u7acb\u7684\u6570\u5b66\u6982\u5ff5\u88ab\u7814\u7a76\uff1b\u5341\u4e5d\u4e16\u7eaa\u4ee5\u540e\uff0c\u884c\u5217\u5f0f\u7406\u8bba\u8fdb\u4e00\u6b65\u5f97\u5230\u53d1\u5c55\u548c\u5b8c\u5584\u3002</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#_7","title":"\u884c\u5217\u5f0f\u7684\u6027\u8d28","text":"<p>\u884c\u5217\u5f0f\u662f\u7531\u5411\u91cf\u5f15\u51fa\u7684\uff0c\u6240\u4ee5\u884c\u5217\u5f0f\u89e3\u91ca\u7684\u5176\u5b9e\u662f\u5411\u91cf\u7684\u6027\u8d28\u3002</p> <p>\u6027\u8d281\uff1a\u5982\u679c\\(det(\\boldsymbol{A})\\)\u4e2d\u67d0\u884c\uff08\u6216\u67d0\u5217\uff09\u7684\u5143\u7d20\u5168\u90e8\u4e3a0\uff0c\u90a3\u4e48\\(det(\\boldsymbol{A}) = 0\\)\u3002</p> <p>\u6027\u8d282\uff1a\u5982\u679c\\(det(\\boldsymbol{A})\\)\u4e2d\u67d0\u884c\uff08\u6216\u67d0\u5217\uff09\u6709\u516c\u5171\u56e0\u5b50\\(k\\)\uff0c\u5219\u53ef\u4ee5\u63d0\u51fa\\(k\\)\uff0c\u5f97\u5230\u884c\u5217\u5f0f\\(det(\\boldsymbol{A^{'}})\\)\uff0c\u4e14\\(det(\\boldsymbol{A}) = k \\cdot det(\\boldsymbol{A^{'}})\\)\u3002 $$ det(\\boldsymbol{A})={\\begin{vmatrix}a_{11}&amp;a_{12}&amp;\\dots &amp;a_{1n}\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\{\\color {blue}k}a_{i1}&amp;{\\color {blue}k}a_{i2}&amp;\\dots &amp;{\\color {blue}k}a_{in}\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\a_{n1}&amp;a_{n2}&amp;\\dots &amp;a_{nn}\\end{vmatrix}}={\\color {blue}k}{\\begin{vmatrix}a_{11}&amp;a_{12}&amp;\\dots &amp;a_{1n}\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\a_{i1}&amp;a_{i2}&amp;\\dots &amp;a_{in}\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\a_{n1}&amp;a_{n2}&amp;\\dots &amp;a_{nn}\\end{vmatrix}}={\\color {blue}k} \\cdot det(\\boldsymbol{A^{'}}) $$</p> <p>\u6027\u8d283\uff1a\u5982\u679c\\(det(\\boldsymbol{A})\\)\u4e2d\u67d0\u884c\uff08\u6216\u67d0\u5217\uff09\u7684\u6bcf\u4e2a\u5143\u7d20\u662f\u4e24\u6570\u4e4b\u548c\uff0c\u5219\u6b64\u884c\u5217\u5f0f\u53ef\u62c6\u5206\u4e3a\u4e24\u4e2a\u884c\u5217\u5f0f\u76f8\u52a0\uff0c\u5982\u4e0b\u6240\u793a\u3002 $$ {\\begin{vmatrix}a_{11}&amp;a_{12}&amp;\\dots &amp;a_{1n}\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\{\\color {blue}a_{i1}}+{\\color {OliveGreen}b_{i1}}&amp;{\\color {blue}a_{i2}}+{\\color {OliveGreen}b_{i2}}&amp;\\dots &amp;{\\color {blue}a_{in}}+{\\color {OliveGreen}b_{in}}\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\a_{n1}&amp;a_{n2}&amp;\\dots &amp;a_{nn}\\end{vmatrix}}={\\begin{vmatrix}a_{11}&amp;a_{12}&amp;\\dots &amp;a_{1n}\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\{\\color {blue}a_{i1}}&amp;{\\color {blue}a_{i2}}&amp;\\dots &amp;{\\color {blue}a_{in}}\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\a_{n1}&amp;a_{n2}&amp;\\dots &amp;a_{nn}\\end{vmatrix}}+{\\begin{vmatrix}a_{11}&amp;a_{12}&amp;\\dots &amp;a_{1n}\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\{\\color {OliveGreen}b_{i1}}&amp;{\\color {OliveGreen}b_{i2}}&amp;\\dots &amp;{\\color {OliveGreen}b_{in}}\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\a_{n1}&amp;a_{n2}&amp;\\dots &amp;a_{nn}\\end{vmatrix}} $$ \u6027\u8d284\uff1a\u5982\u679c\\(det(\\boldsymbol{A})\\)\u4e2d\u4e24\u884c\uff08\u6216\u4e24\u5217\uff09\u5143\u7d20\u5bf9\u5e94\u6210\u6bd4\u4f8b\uff0c\u90a3\u4e48\\(det(\\boldsymbol{A}) = 0\\)\u3002</p> <p>\u6027\u8d285\uff1a\u5982\u679c\\(det(\\boldsymbol{A})\\)\u4e2d\u4e24\u884c\uff08\u6216\u4e24\u5217\uff09\u4e92\u6362\u5f97\u5230\\(det(\\boldsymbol{A^{'}})\\)\uff0c\u90a3\u4e48\\(det(\\boldsymbol{A}) = -det(\\boldsymbol{A^{'}})\\)\u3002</p> <p>\u6027\u8d286\uff1a\u5c06\\(det(\\boldsymbol{A})\\)\u4e2d\u67d0\u884c\uff08\u6216\u67d0\u5217\uff09\u7684\\(k\\)\u500d\u52a0\u8fdb\u53e6\u4e00\u884c\uff08\u6216\u53e6\u4e00\u5217\uff09\u91cc\uff0c\u884c\u5217\u5f0f\u7684\u503c\u4e0d\u53d8\uff0c\u5982\u4e0b\u6240\u793a\u3002 $$ {\\begin{vmatrix}\\vdots &amp;\\vdots &amp;\\vdots &amp;\\vdots \\a_{i1}&amp;a_{i2}&amp;\\dots &amp;a_{in}\\a_{j1}&amp;a_{j2}&amp;\\dots &amp;a_{jn}\\\\vdots &amp;\\vdots &amp;\\vdots &amp;\\vdots \\\\end{vmatrix}}={\\begin{vmatrix}\\vdots &amp;\\vdots &amp;\\vdots &amp;\\vdots \\a_{i1}&amp;a_{i2}&amp;\\dots &amp;a_{in}\\a_{j1}{\\color {blue}+ka_{i1}}&amp;a_{j2}{\\color {blue}+ka_{i2}}&amp;\\dots &amp;a_{jn}{\\color {blue}+ka_{in}}\\\\vdots &amp;\\vdots &amp;\\vdots &amp;\\vdots \\\\end{vmatrix}} $$ \u6027\u8d287\uff1a\u5c06\u884c\u5217\u5f0f\u7684\u884c\u5217\u4e92\u6362\uff0c\u884c\u5217\u5f0f\u7684\u503c\u4e0d\u53d8\uff0c\u5982\u4e0b\u6240\u793a\u3002 $$ {\\begin{vmatrix}a_{11}&amp;a_{12}&amp;\\dots &amp;a_{1n}\\a_{21}&amp;a_{22}&amp;\\dots &amp;a_{2n}\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\a_{n1}&amp;a_{n2}&amp;\\dots &amp;a_{nn}\\end{vmatrix}}={\\begin{vmatrix}a_{11}&amp;a_{21}&amp;\\dots &amp;a_{n1}\\a_{12}&amp;a_{22}&amp;\\dots &amp;a_{n2}\\\\vdots &amp;\\vdots &amp;\\ddots &amp;\\vdots \\a_{1n}&amp;a_{2n}&amp;\\dots &amp;a_{nn}\\end{vmatrix}} $$ \u6027\u8d288\uff1a\u65b9\u5757\u77e9\u9635\\(\\boldsymbol{A}\\)\u548c\\(\\boldsymbol{B}\\)\u7684\u4e58\u79ef\u7684\u884c\u5217\u5f0f\u7b49\u4e8e\u5176\u884c\u5217\u5f0f\u7684\u4e58\u79ef\uff0c\u5373\\(det(\\boldsymbol{A}\\boldsymbol{B}) = det(\\boldsymbol{A})det(\\boldsymbol{B})\\)\u3002\u7279\u522b\u7684\uff0c\u82e5\u5c06\u77e9\u9635\u4e2d\u7684\u6bcf\u4e00\u884c\u90fd\u4e58\u4ee5\u5e38\u6570\\(r\\)\uff0c\u90a3\u4e48\u884c\u5217\u5f0f\u7684\u503c\u5c06\u662f\u539f\u6765\u7684\\(r^{n}\\)\u500d\uff0c\u5373\\(det(r\\boldsymbol{A}) = det(r\\boldsymbol{I_{n}} \\cdot \\boldsymbol{A}) = r^{n}det(\\boldsymbol{A})\\)\uff0c\u5176\u4e2d\\(\\boldsymbol{I_{n}}\\)\u662f\\(n\\)\u9636\u5355\u4f4d\u77e9\u9635\u3002</p> <p>\u6027\u8d289\uff1a\u82e5\\(\\boldsymbol{A}\\)\u662f\u53ef\u9006\u77e9\u9635\uff0c\u90a3\u4e48\\(det(\\boldsymbol{A}^{-1}) = (det(\\boldsymbol{A}))^{-1}\\)\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#_8","title":"\u884c\u5217\u5f0f\u7684\u8ba1\u7b97","text":"<p>\\(n\\)\u9636\u884c\u5217\u5f0f\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a $$ det(\\boldsymbol{A})=\\sum_{n!} \\pm {a_{1\\alpha}a_{2\\beta} \\cdots a_{n\\omega}} $$</p> <p>\u5bf9\u4e8e\u4e8c\u9636\u884c\u5217\u5f0f\uff0c\u4e0a\u9762\u7684\u516c\u5f0f\u76f8\u5f53\u4e8e\uff1a $$ \\begin{vmatrix} a_{11} \\quad a_{12} \\ a_{21} \\quad a_{22} \\end{vmatrix} = a_{11}a_{22} - a_{12}a_{21} $$ \u5bf9\u4e8e\u4e09\u9636\u884c\u5217\u5f0f\uff0c\u4e0a\u9762\u7684\u8ba1\u7b97\u516c\u5f0f\u76f8\u5f53\u4e8e\uff1a $$ \\begin{vmatrix} a_{11} \\quad a_{12} \\quad a_{13} \\ a_{21} \\quad a_{22} \\quad a_{23} \\ a_{31} \\quad a_{32} \\quad a_{33} \\end{vmatrix} = a_{11}a_{22}a_{33} + a_{12}a_{23}a_{31} + a_{13}a_{21}a_{32} - a_{11}a_{23}a_{32} - a_{12}a_{21}a_{33} - a_{13}a_{22}a_{31} $$ \u9ad8\u9636\u884c\u5217\u5f0f\u53ef\u4ee5\u7528\u4ee3\u6570\u4f59\u5b50\u5f0f\uff08cofactor\uff09\u5c55\u5f00\u6210\u591a\u4e2a\u4f4e\u9636\u884c\u5217\u5f0f\uff0c\u5982\u4e0b\u6240\u793a\uff1a $$ det(\\boldsymbol{A})=a_{11}C_{11}+a_{12}C_{12}+ \\cdots +a_{1n}C_{1n} = \\sum_{i=1}^{n}{a_{1i}C_{1i}} $$ \u5176\u4e2d\uff0c\\(C_{11}\\)\u662f\u539f\u884c\u5217\u5f0f\u53bb\u6389\\(a_{11}\\)\u6240\u5728\u884c\u548c\u5217\u4e4b\u540e\u5269\u4f59\u7684\u90e8\u5206\u6784\u6210\u7684\u884c\u5217\u5f0f\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#_9","title":"\u77e9\u9635","text":"<p>\u77e9\u9635\uff08matrix\uff09\u662f\u7531\u4e00\u7cfb\u5217\u5143\u7d20\u6392\u6210\u7684\u77e9\u5f62\u9635\u5217\uff0c\u77e9\u9635\u91cc\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u6570\u5b57\u3001\u7b26\u53f7\u6216\u6570\u5b66\u516c\u5f0f\u3002\u77e9\u9635\u53ef\u4ee5\u8fdb\u884c\u52a0\u6cd5\u3001\u51cf\u6cd5\u3001\u6570\u4e58\u3001\u8f6c\u7f6e\u3001\u77e9\u9635\u4e58\u6cd5\u7b49\u8fd0\u7b97\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\uff0c\u8be5\u8fd0\u7b97\u4ec5\u5f53\u7b2c\u4e00\u4e2a\u77e9\u9635\\(\\boldsymbol{A}\\)\u7684\u5217\u6570\u548c\u53e6\u4e00\u4e2a\u77e9\u9635\\(\\boldsymbol{B}\\)\u7684\u884c\u6570\u76f8\u7b49\u65f6\u624d\u80fd\u5b9a\u4e49\u3002\u5982\u679c\\(\\boldsymbol{A}\\)\u662f\u4e00\u4e2a\\(m \\times n\\)\u7684\u77e9\u9635\uff0c\\(\\boldsymbol{B}\\)\u662f\u4e00\u4e2a\\(n \\times k\\)\u77e9\u9635\uff0c\u5b83\u4eec\u7684\u4e58\u79ef\u662f\u4e00\u4e2a\\(m \\times k\\)\u7684\u77e9\u9635\uff0c\u5176\u4e2d\u5143\u7d20\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a $$  [\\mathbf{AB}]{i,j} = A $$ }B_{1,j} + A_{i,2}B_{2,j} + \\cdots + A_{i,n}B_{n,j} = \\sum_{r=1}^n A_{i,r}B_{r,j</p> <p>\u4f8b\u5982\uff1a $$ \\begin{bmatrix}     1 &amp; 0 &amp; 2 \\     -1 &amp; 3 &amp; 1 \\   \\end{bmatrix} \\times   \\begin{bmatrix}     3 &amp; 1 \\     2 &amp; 1 \\     1 &amp; 0   \\end{bmatrix} =   \\begin{bmatrix}      (1 \\times 3  +  0 \\times 2  +  2 \\times 1) &amp; (1 \\times 1   +   0 \\times 1   +   2 \\times 0) \\     (-1 \\times 3  +  3 \\times 2  +  1 \\times 1) &amp; (-1 \\times 1   +   3 \\times 1   +   1 \\times 0) \\   \\end{bmatrix} =   \\begin{bmatrix}     5 &amp; 1 \\     4 &amp; 2 \\   \\end{bmatrix} $$ \u77e9\u9635\u7684\u4e58\u6cd5\u6ee1\u8db3\u7ed3\u5408\u5f8b\u548c\u5bf9\u77e9\u9635\u52a0\u6cd5\u7684\u5206\u914d\u5f8b\uff1a</p> <p>\u7ed3\u5408\u5f8b\uff1a \\((\\boldsymbol{AB})\\boldsymbol{C} = \\boldsymbol{A}(\\boldsymbol{BC})\\)\u3002</p> <p>\u5de6\u5206\u914d\u5f8b\uff1a\\((\\boldsymbol{A} + \\boldsymbol{B})\\boldsymbol{C} = \\boldsymbol{AC} + \\boldsymbol{BC}\\)\u3002</p> <p>\u53f3\u5206\u914d\u5f8b\uff1a\\(\\boldsymbol{C}(\\boldsymbol{A} + \\boldsymbol{B}) = \\boldsymbol{CA} + \\boldsymbol{CB}\\)\u3002</p> <p>\u77e9\u9635\u4e58\u6cd5\u4e0d\u6ee1\u8db3\u4ea4\u6362\u5f8b\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u77e9\u9635\\(\\boldsymbol{A}\\)\u548c\\(\\boldsymbol{B}\\)\u7684\u4e58\u79ef\\(\\boldsymbol{AB}\\)\u5b58\u5728\uff0c\u4f46\\(\\boldsymbol{BA}\\)\u4e0d\u4e00\u5b9a\u5b58\u5728\uff0c\u5373\u4fbf\\(\\boldsymbol{BA}\\)\u5b58\u5728\uff0c\u5927\u591a\u6570\u65f6\u5019\\(\\boldsymbol{AB} \\neq \\boldsymbol{BA}\\)\u3002</p> <p>\u77e9\u9635\u4e58\u6cd5\u7684\u4e00\u4e2a\u57fa\u672c\u5e94\u7528\u662f\u5728\u7ebf\u6027\u65b9\u7a0b\u7ec4\u4e0a\u3002\u7ebf\u6027\u65b9\u7a0b\u7ec4\u662f\u65b9\u7a0b\u7ec4\u7684\u4e00\u79cd\uff0c\u5b83\u7b26\u5408\u4ee5\u4e0b\u7684\u5f62\u5f0f\uff1a $$ \\begin{cases}      a_{1,1}x_{1} + a_{1,2}x_{2} + \\cdots + a_{1,n}x_{n}=  b_{1} \\      a_{2,1}x_{1} + a_{2,2}x_{2} + \\cdots + a_{2,n}x_{n}=  b_{2} \\      \\vdots \\quad \\quad \\quad \\vdots \\      a_{m,1}x_{1} + a_{m,2}x_{2} + \\cdots + a_{m,n}x_{n}=  b_{m}  \\end{cases} $$ \u8fd0\u7528\u77e9\u9635\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06\u7ebf\u6027\u65b9\u7a0b\u7ec4\u5199\u6210\u4e00\u4e2a\u5411\u91cf\u65b9\u7a0b\uff1a $$ \\boldsymbol{Ax} = \\boldsymbol{b} $$ \u5176\u4e2d\uff0c\\(\\boldsymbol{A}\\)\u662f\u7531\u65b9\u7a0b\u7ec4\u91cc\u672a\u77e5\u6570\u7684\u7cfb\u6570\u6392\u6210\u7684\\(m \\times n\\)\u77e9\u9635\uff0c\\(\\boldsymbol{x}\\)\u662f\u542b\u6709\\(n\\)\u4e2a\u5143\u7d20\u7684\u884c\u5411\u91cf\uff0c\\(\\boldsymbol{b}\\)\u662f\u542b\u6709\\(m\\)\u4e2a\u5143\u7d20\u7684\u884c\u5411\u91cf\u3002</p> <p>\u77e9\u9635\u662f\u7ebf\u6027\u53d8\u6362\uff08\u4fdd\u6301\u5411\u91cf\u52a0\u6cd5\u548c\u6807\u91cf\u4e58\u6cd5\u7684\u51fd\u6570\uff09\u7684\u4fbf\u5229\u8868\u8fbe\u6cd5\u3002\u77e9\u9635\u4e58\u6cd5\u7684\u672c\u8d28\u5728\u8054\u7cfb\u5230\u7ebf\u6027\u53d8\u6362\u7684\u65f6\u5019\u6700\u80fd\u4f53\u73b0\uff0c\u56e0\u4e3a\u77e9\u9635\u4e58\u6cd5\u548c\u7ebf\u6027\u53d8\u6362\u7684\u5408\u6210\u6709\u4ee5\u4e0b\u7684\u8054\u7cfb\uff0c\u5373\u6bcf\u4e2a\\(m \\times n\\)\u7684\u77e9\u9635\\(\\boldsymbol{A}\\)\u90fd\u4ee3\u8868\u4e86\u4e00\u4e2a\u4ece\\(\\boldsymbol{R}^{n}\\)\u5c04\u5230\\(\\boldsymbol{R}^{m}\\)\u7684\u7ebf\u6027\u53d8\u6362\u3002\u5982\u679c\u65e0\u6cd5\u7406\u89e3\u4e0a\u9762\u8fd9\u4e9b\u5185\u5bb9\uff0c\u63a8\u8350\u5927\u5bb6\u770b\u770bB\u7ad9\u4e0a\u540d\u4e3a\u300a\u7ebf\u6027\u4ee3\u6570\u7684\u672c\u8d28\u300b\u7684\u89c6\u9891\uff0c\u76f8\u4fe1\u8fd9\u5957\u89c6\u9891\u4f1a\u8ba9\u4f60\u5bf9\u7ebf\u6027\u4ee3\u6570\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u8ba4\u77e5\u3002</p> <p>\u4e0b\u56fe\u662f\u4e00\u4e2a\u6765\u81ea\u4e8e\u7ef4\u57fa\u767e\u79d1\u7684\u4f8b\u5b50\uff0c\u56fe\u4e2d\u5c55\u793a\u4e86\u4e00\u4e9b\u5178\u578b\u7684\u4e8c\u7ef4\u5b9e\u5e73\u9762\u4e0a\u7684\u7ebf\u6027\u53d8\u6362\u5bf9\u5e73\u9762\u5411\u91cf\uff08\u56fe\u5f62\uff09\u9020\u6210\u7684\u6548\u679c\u4ee5\u53ca\u5b83\u4eec\u5bf9\u5e94\u7684\u4e8c\u7ef4\u77e9\u9635\uff0c\u5176\u4e2d\u6bcf\u4e2a\u7ebf\u6027\u53d8\u6362\u5c06\u84dd\u8272\u56fe\u5f62\u6620\u5c04\u6210\u7eff\u8272\u56fe\u5f62\uff1b\u5e73\u9762\u7684\u539f\u70b9\\((0, 0)\\)\u7528\u9ed1\u70b9\u8868\u793a\u3002</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#_10","title":"\u77e9\u9635\u5bf9\u8c61","text":"<p>NumPy \u4e2d\u63d0\u4f9b\u4e86\u4e13\u95e8\u7528\u4e8e\u7ebf\u6027\u4ee3\u6570\uff08linear algebra\uff09\u7684\u6a21\u5757\u548c\u8868\u793a\u77e9\u9635\u7684\u7c7b\u578b<code>matrix</code>\uff0c\u5f53\u7136\u6211\u4eec\u901a\u8fc7\u4e8c\u7ef4\u6570\u7ec4\u4e5f\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u77e9\u9635\uff0c\u5b98\u65b9\u5e76\u4e0d\u63a8\u8350\u4f7f\u7528<code>matrix</code>\u7c7b\u800c\u662f\u5efa\u8bae\u4f7f\u7528\u4e8c\u7ef4\u6570\u7ec4\uff0c\u800c\u4e14\u6709\u53ef\u80fd\u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u4f1a\u79fb\u9664<code>matrix</code>\u7c7b\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u5229\u7528\u8fd9\u4e9b\u5df2\u7ecf\u5c01\u88c5\u597d\u7684\u7c7b\u548c\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u6109\u5feb\u7684\u5b9e\u73b0\u5f88\u591a\u5bf9\u77e9\u9635\u7684\u64cd\u4f5c\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u521b\u5efa\u77e9\u9635\uff08<code>matrix</code>\uff09\u5bf9\u8c61\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>m1 = np.matrix('1 2 3; 4 5 6')\nm1\n</code></pre> <p>\u8bf4\u660e\uff1a<code>matrix</code>\u6784\u9020\u5668\u53ef\u4ee5\u4f20\u5165\u7c7b\u6570\u7ec4\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u4f20\u5165\u5b57\u7b26\u4e32\u6765\u6784\u9020\u77e9\u9635\u5bf9\u8c61\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>matrix([[1, 2, 3],\n        [4, 5, 6]])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>m2 = np.asmatrix(np.array([[1, 1], [2, 2], [3, 3]]))\nm2\n</code></pre> <p>\u8bf4\u660e\uff1a<code>asmatrix</code>\u51fd\u6570\u4e5f\u53ef\u4ee5\u7528<code>mat</code>\u51fd\u6570\u4ee3\u66ff\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u5176\u5b9e\u662f\u540c\u4e00\u4e2a\u51fd\u6570\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>matrix([[1, 1],\n        [2, 2],\n        [3, 3]])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>m1 * m2\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>matrix([[14, 14],\n        [32, 32]])\n</code></pre> <p>\u8bf4\u660e\uff1a\u6ce8\u610f<code>matrix</code>\u5bf9\u8c61\u548c<code>ndarray</code>\u5bf9\u8c61\u4e58\u6cd5\u8fd0\u7b97\u7684\u5dee\u522b\uff0c<code>matrix</code>\u5bf9\u8c61\u7684<code>*</code>\u8fd0\u7b97\u662f\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\u3002\u5982\u679c\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u8981\u505a\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\uff0c\u5e94\u8be5\u4f7f\u7528<code>@</code>\u8fd0\u7b97\u7b26\u6216<code>matmul</code>\u51fd\u6570\uff0c\u800c\u4e0d\u662f<code>*</code>\u8fd0\u7b97\u7b26\u3002</p> <p>\u77e9\u9635\u5bf9\u8c61\u7684\u5c5e\u6027\u5982\u4e0b\u8868\u6240\u793a\u3002</p> \u5c5e\u6027 \u8bf4\u660e <code>A</code> \u83b7\u53d6\u77e9\u9635\u5bf9\u8c61\u5bf9\u5e94\u7684<code>ndarray</code>\u5bf9\u8c61 <code>A1</code> \u83b7\u53d6\u77e9\u9635\u5bf9\u8c61\u5bf9\u5e94\u7684\u6241\u5e73\u5316\u540e\u7684<code>ndarray</code>\u5bf9\u8c61 <code>I</code> \u53ef\u9006\u77e9\u9635\u7684\u9006\u77e9\u9635 <code>T</code> \u77e9\u9635\u7684\u8f6c\u7f6e <code>H</code> \u77e9\u9635\u7684\u5171\u8f6d\u8f6c\u7f6e <code>shape</code> \u77e9\u9635\u7684\u5f62\u72b6 <code>size</code> \u77e9\u9635\u5143\u7d20\u7684\u4e2a\u6570 <p>\u77e9\u9635\u5bf9\u8c61\u7684\u65b9\u6cd5\u8ddf\u4e4b\u524d\u8bb2\u8fc7\u7684<code>ndarray</code>\u6570\u7ec4\u5bf9\u8c61\u7684\u65b9\u6cd5\u57fa\u672c\u5dee\u4e0d\u591a\uff0c\u6b64\u5904\u4e0d\u518d\u8fdb\u884c\u8d58\u8ff0\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#_11","title":"\u7ebf\u6027\u4ee3\u6570\u6a21\u5757","text":"<p>NumPy \u7684<code>linalg</code>\u6a21\u5757\u4e2d\u6709\u4e00\u7ec4\u6807\u51c6\u7684\u77e9\u9635\u5206\u89e3\u8fd0\u7b97\u4ee5\u53ca\u8bf8\u5982\u6c42\u9006\u548c\u884c\u5217\u5f0f\u4e4b\u7c7b\u7684\u51fd\u6570\uff0c\u5b83\u4eec\u8ddf MATLAB \u548c R \u7b49\u8bed\u8a00\u6240\u4f7f\u7528\u7684\u662f\u76f8\u540c\u7684\u884c\u4e1a\u6807\u51c6\u7ebf\u6027\u4ee3\u6570\u5e93\uff0c\u4e0b\u9762\u7684\u8868\u683c\u5217\u51fa\u4e86<code>numpy</code>\u4ee5\u53ca<code>linalg</code>\u6a21\u5757\u4e2d\u4e00\u4e9b\u5e38\u7528\u7684\u7ebf\u6027\u4ee3\u6570\u76f8\u5173\u51fd\u6570\u3002</p> \u51fd\u6570 \u8bf4\u660e <code>diag</code> \u4ee5\u4e00\u7ef4\u6570\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de\u65b9\u9635\u7684\u5bf9\u89d2\u7ebf\u5143\u7d20\u6216\u5c06\u4e00\u7ef4\u6570\u7ec4\u8f6c\u6362\u4e3a\u65b9\u9635\uff08\u975e\u5bf9\u89d2\u5143\u7d20\u5143\u7d20\u4e3a0\uff09 <code>matmul</code> \u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97 <code>trace</code> \u8ba1\u7b97\u5bf9\u89d2\u7ebf\u5143\u7d20\u7684\u548c <code>norm</code> \u6c42\u77e9\u9635\u6216\u5411\u91cf\u7684\u8303\u6570 <code>det</code> \u8ba1\u7b97\u884c\u5217\u5f0f\u7684\u503c <code>matrix_rank</code> \u8ba1\u7b97\u77e9\u9635\u7684\u79e9 <code>eig</code> \u8ba1\u7b97\u77e9\u9635\u7684\u7279\u5f81\u503c\uff08eigenvalue\uff09\u548c\u7279\u5f81\u5411\u91cf\uff08eigenvector\uff09 <code>inv</code> \u8ba1\u7b97\u975e\u5947\u5f02\u77e9\u9635\uff08\\(n\\)\u9636\u65b9\u9635\uff09\u7684\u9006\u77e9\u9635 <code>pinv</code> \u8ba1\u7b97\u77e9\u9635\u7684\u6469\u5c14-\u5f6d\u82e5\u65af\uff08Moore-Penrose\uff09\u5e7f\u4e49\u9006 <code>qr</code> QR\u5206\u89e3\uff08\u628a\u77e9\u9635\u5206\u89e3\u6210\u4e00\u4e2a\u6b63\u4ea4\u77e9\u9635\u4e0e\u4e00\u4e2a\u4e0a\u4e09\u89d2\u77e9\u9635\u7684\u79ef\uff09 <code>svd</code> \u8ba1\u7b97\u5947\u5f02\u503c\u5206\u89e3\uff08singular value decomposition\uff09 <code>solve</code> \u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\\(\\boldsymbol{Ax}=\\boldsymbol{b}\\)\uff0c\u5176\u4e2d\\(\\boldsymbol{A}\\)\u662f\u4e00\u4e2a\u65b9\u9635 <code>lstsq</code> \u8ba1\u7b97\\(\\boldsymbol{Ax}=\\boldsymbol{b}\\)\u7684\u6700\u5c0f\u4e8c\u4e58\u89e3 <p>\u4e0b\u9762\u6211\u4eec\u7b80\u5355\u5c1d\u8bd5\u4e00\u4e0b\u4e0a\u9762\u7684\u51fd\u6570\uff0c\u5148\u8bd5\u4e00\u8bd5\u6c42\u9006\u77e9\u9635\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>m3 = np.array([[1., 2.], [3., 4.]])\nm4 = np.linalg.inv(m3)\nm4\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[-2. ,  1. ],\n       [ 1.5, -0.5]])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.around(m3 @ m4)\n</code></pre> <p>\u8bf4\u660e\uff1a<code>around</code>\u51fd\u6570\u5bf9\u6570\u7ec4\u5143\u7d20\u8fdb\u884c\u56db\u820d\u4e94\u5165\u64cd\u4f5c\uff0c\u9ed8\u8ba4\u5c0f\u6570\u70b9\u540e\u9762\u7684\u4f4d\u6570\u4e3a0\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1., 0.],\n       [0., 1.]])\n</code></pre> <p>\u8bf4\u660e\uff1a\u77e9\u9635\u548c\u5b83\u7684\u9006\u77e9\u9635\u505a\u77e9\u9635\u4e58\u6cd5\u4f1a\u5f97\u5230\u5355\u4f4d\u77e9\u9635\u3002</p> <p>\u8ba1\u7b97\u884c\u5217\u5f0f\u7684\u503c\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>m5 = np.array([[1, 3, 5], [2, 4, 6], [4, 7, 9]])\nnp.linalg.det(m5)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>2\n</code></pre> <p>\u8ba1\u7b97\u77e9\u9635\u7684\u79e9\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.linalg.matrix_rank(m5)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>3\n</code></pre> <p>\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\u3002 $$ \\begin{cases} x_1 + 2x_2 + x_3 = 8 \\ 3x_1 + 7x_2 + 2x_3 = 23 \\ 2x_1 + 2x_2 + x_3 = 9 \\end{cases} $$</p> <p>\u5bf9\u4e8e\u4e0a\u9762\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u77e9\u9635\u7684\u5f62\u5f0f\u6765\u8868\u793a\u5b83\uff0c\u5982\u4e0b\u6240\u793a\u3002 $$ \\boldsymbol{A} = \\begin{bmatrix} 1 &amp; 2 &amp; 1\\ 3 &amp; 7 &amp; 2\\ 2 &amp; 2 &amp; 1 \\end{bmatrix}, \\quad \\boldsymbol{x} = \\begin{bmatrix} x_1 \\ x_2\\ x_3 \\end{bmatrix}, \\quad \\boldsymbol{b} = \\begin{bmatrix} 8 \\ 23\\ 9 \\end{bmatrix} $$</p> \\[ \\boldsymbol{Ax} = \\boldsymbol{b} \\] <p>\u7ebf\u6027\u65b9\u7a0b\u7ec4\u6709\u552f\u4e00\u89e3\u7684\u6761\u4ef6\uff1a\u7cfb\u6570\u77e9\u9635\\(\\boldsymbol{A}\\)\u7684\u79e9\u7b49\u4e8e\u589e\u5e7f\u77e9\u9635\\(\\boldsymbol{Ab}\\)\u7684\u79e9\uff0c\u800c\u4e14\u8ddf\u672a\u77e5\u6570\u7684\u4e2a\u6570\u76f8\u540c\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>A = np.array([[1, 2, 1], [3, 7, 2], [2, 2, 1]])\nb = np.array([8, 23, 9]).reshape(-1, 1)\nprint(np.linalg.matrix_rank(A))\nprint(np.linalg.matrix_rank(np.hstack((A, b))))\n</code></pre> <p>\u8bf4\u660e\uff1a\u4f7f\u7528\u6570\u7ec4\u5bf9\u8c61\u7684<code>reshape</code>\u65b9\u6cd5\u8c03\u5f62\u65f6\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u53c2\u6570\u4e3a-1\uff0c\u90a3\u4e48\u8be5\u7ef4\u5ea6\u6709\u591a\u5c11\u4e2a\u5143\u7d20\u662f\u901a\u8fc7\u6570\u7ec4\u5143\u7d20\u4e2a\u6570\uff08<code>size</code>\u5c5e\u6027\uff09\u548c\u5176\u4ed6\u7ef4\u5ea6\u7684\u5143\u7d20\u4e2a\u6570\u81ea\u52a8\u8ba1\u7b97\u51fa\u6765\u7684\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>3\n3\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.linalg.solve(A, b)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1.],\n       [2.],\n       [3.]])\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u7684\u7ed3\u679c\u8868\u793a\uff0c\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u89e3\u4e3a\uff1a\\(x_1 = 1, x_2 = 2, x_3 = 3\\)\u3002</p> <p>\u4e0b\u9762\u662f\u53e6\u4e00\u79cd\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u65b9\u6cd5\uff0c\u5927\u5bb6\u53ef\u4ee5\u505c\u4e0b\u6765\u601d\u8003\u4e0b\u4e3a\u4ec0\u4e48\u3002 $$ \\boldsymbol{x} = \\boldsymbol{A}^{-1} \\cdot \\boldsymbol{b} $$ \u4ee3\u7801\uff1a</p> <pre><code>np.linalg.inv(A) @ b\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1.],\n       [2.],\n       [3.]])\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#_12","title":"\u591a\u9879\u5f0f","text":"<p>\u9664\u4e86\u6570\u7ec4\uff0cNumPy \u4e2d\u8fd8\u5c01\u88c5\u4e86\u7528\u4e8e\u591a\u9879\u5f0f\uff08polynomial\uff09\u8fd0\u7b97\u7684\u6570\u636e\u7c7b\u578b\u3002\u591a\u9879\u5f0f\u662f\u53d8\u91cf\u7684\u6574\u6570\u6b21\u5e42\u4e0e\u7cfb\u6570\u7684\u4e58\u79ef\u4e4b\u548c\uff0c\u5f62\u5982\uff1a $$ f(x)=a_nx^n + a_{n-1}x^{n-1} + \\cdots + a_1x^{1} + a_0x^{0} $$ \u5728 NumPy 1.4\u7248\u672c\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528<code>poly1d</code>\u7c7b\u578b\u6765\u8868\u793a\u591a\u9879\u5f0f\uff0c\u76ee\u524d\u5b83\u4ecd\u7136\u53ef\u7528\uff0c\u4f46\u662f\u5b98\u65b9\u63d0\u4f9b\u4e86\u65b0\u7684\u6a21\u5757<code>numpy.polynomial</code>\uff0c\u5b83\u9664\u4e86\u652f\u6301\u57fa\u672c\u7684\u5e42\u7ea7\u6570\u591a\u9879\u5f0f\u5916\uff0c\u8fd8\u53ef\u4ee5\u652f\u6301\u5207\u6bd4\u96ea\u592b\u591a\u9879\u5f0f\u3001\u62c9\u76d6\u5c14\u591a\u9879\u5f0f\u7b49\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#_13","title":"\u521b\u5efa\u591a\u9879\u5f0f\u5bf9\u8c61","text":"<p>\u521b\u5efa<code>poly1d</code>\u5bf9\u8c61\uff0c\u4f8b\u5982\uff1a\\(\\small{f(x)=3x^{2}+2x+1}\\)\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>p1 = np.poly1d([3, 2, 1])\np2 = np.poly1d([1, 2, 3])\nprint(p1)\nprint(p2)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>   2\n3 x + 2 x + 1\n   2\n1 x + 2 x + 3\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#_14","title":"\u591a\u9879\u5f0f\u7684\u64cd\u4f5c","text":"<p>\u83b7\u53d6\u591a\u9879\u5f0f\u7684\u7cfb\u6570</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(p1.coefficients)\nprint(p2.coeffs)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>[3 2 1]\n[1 2 3]\n</code></pre> <p>\u4e24\u4e2a\u591a\u9879\u5f0f\u7684\u56db\u5219\u8fd0\u7b97</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(p1 + p2)\nprint(p1 * p2)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>   2\n4 x + 4 x + 4\n   4     3      2\n3 x + 8 x + 14 x + 8 x + 3\n</code></pre> <p>\u5e26\u5165\\(\\small{x}\\)\u6c42\u591a\u9879\u5f0f\u7684\u503c</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(p1(3))\nprint(p2(3))\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>34\n18\n</code></pre> <p>\u591a\u9879\u5f0f\u6c42\u5bfc\u548c\u4e0d\u5b9a\u79ef\u5206</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(p1.deriv())\nprint(p1.integ())\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>6 x + 2\n   3     2\n1 x + 1 x + 1 x\n</code></pre> <p>\u6c42\u591a\u9879\u5f0f\u7684\u6839</p> <p>\u4f8b\u5982\u6709\u591a\u9879\u5f0f\\(\\small{f(x)=x^2+3x+2}\\)\uff0c\u591a\u9879\u5f0f\u7684\u6839\u5373\u4e00\u5143\u4e8c\u6b21\u65b9\u7a0b\\(\\small{x^2+3x+2=0}\\)\u7684\u89e3\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>p3 = np.poly1d([1, 3, 2])\nprint(p3.roots)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>[-2. -1.]\n</code></pre> <p>\u5982\u679c\u4f7f\u7528<code>numpy.polynomial</code>\u6a21\u5757\u7684<code>Polynomial</code>\u7c7b\u6765\u8868\u793a\u591a\u9879\u5f0f\u5bf9\u8c61\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u64cd\u4f5c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>from numpy.polynomial import Polynomial\n\np3 = Polynomial((2, 3, 1))\nprint(p3)           # \u8f93\u51fa\u591a\u9879\u5f0f\nprint(p3(3))        # \u4ee4x=3\uff0c\u8ba1\u7b97\u591a\u9879\u5f0f\u7684\u503c\nprint(p3.roots())   # \u8ba1\u7b97\u591a\u9879\u5f0f\u7684\u6839\nprint(p3.degree())  # \u83b7\u5f97\u591a\u9879\u5f0f\u7684\u6b21\u6570\nprint(p3.deriv())   # \u6c42\u5bfc\nprint(p3.integ())   # \u6c42\u4e0d\u5b9a\u79ef\u5206\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>2.0 + 3.0\u00b7x + 1.0\u00b7x\u00b2\n20.0\n[-2. -1.]\n2\n3.0 + 2.0\u00b7x\n0.0 + 2.0\u00b7x + 1.5\u00b7x\u00b2 + 0.33333333\u00b7x\u00b3\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/71.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-4/#_15","title":"\u6700\u5c0f\u4e8c\u4e58\u89e3","text":"<p><code>Polynomial</code>\u7c7b\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3a<code>fit</code>\u7684\u7c7b\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u7ed9\u591a\u9879\u5f0f\u6c42\u6700\u5c0f\u4e8c\u4e58\u89e3\u3002\u6240\u8c13\u6700\u5c0f\u4e8c\u4e58\u89e3\uff08least-squares solution\uff09\uff0c\u662f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u901a\u8fc7\u6700\u5c0f\u5316\u8bef\u5dee\u7684\u5e73\u65b9\u548c\u6765\u5bfb\u627e\u6570\u636e\u7684\u6700\u4f73\u5339\u914d\u51fd\u6570\u7684\u7cfb\u6570\u3002\u5047\u8bbe\u591a\u9879\u5f0f\u4e3a\\(\\small{f(x)=ax+b}\\)\uff0c\u6700\u5c0f\u4e8c\u4e58\u89e3\u5c31\u662f\u8ba9\u4e0b\u9762\u7684\u6b8b\u5dee\u5e73\u65b9\u548c\\(\\small{RSS}\\)\u8fbe\u5230\u6700\u5c0f\u7684\\(\\small{a}\\)\u548c\\(\\small{b}\\)\u3002 $$ RSS = \\sum_{i=0}^{k}(f(x_i) - y_i)^{2} $$ \u4f8b\u5982\uff0c\u6211\u4eec\u60f3\u5229\u7528\u6536\u96c6\u5230\u7684\u6708\u6536\u5165\u548c\u7f51\u8d2d\u652f\u51fa\u7684\u5386\u53f2\u6570\u636e\u6765\u5efa\u7acb\u4e00\u4e2a\u9884\u6d4b\u6a21\u578b\uff0c\u4ee5\u8fbe\u5230\u901a\u8fc7\u67d0\u4eba\u7684\u6708\u6536\u5165\u9884\u6d4b\u4ed6\u7f51\u8d2d\u652f\u51fa\u91d1\u989d\u7684\u76ee\u6807\uff0c\u4e0b\u9762\u662f\u6211\u4eec\u6536\u96c6\u5230\u7684\u6536\u5165\u548c\u7f51\u8d2d\u652f\u51fa\u7684\u6570\u636e\uff0c\u4fdd\u5b58\u5728\u4e24\u4e2a\u6570\u7ec4\u4e2d\u3002</p> <pre><code>x = np.array([\n    25000, 15850, 15500, 20500, 22000, 20010, 26050, 12500, 18500, 27300,\n    15000,  8300, 23320,  5250,  5800,  9100,  4800, 16000, 28500, 32000,\n    31300, 10800,  6750,  6020, 13300, 30020,  3200, 17300,  8835,  3500\n])\ny = np.array([\n    2599, 1400, 1120, 2560, 1900, 1200, 2320,  800, 1650, 2200,\n     980,  580, 1885,  600,  400,  800,  420, 1380, 1980, 3999,\n    3800,  725,  520,  420, 1200, 4020,  350, 1500,  560,  500\n])\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u5148\u7ed8\u5236\u6563\u70b9\u56fe\u6765\u4e86\u89e3\u4e24\u7ec4\u6570\u636e\u662f\u5426\u5177\u6709\u6b63\u76f8\u5173\u6216\u8d1f\u76f8\u5173\u5173\u7cfb\u3002\u6b63\u76f8\u5173\u610f\u5473\u7740\u6570\u7ec4<code>x</code>\u4e2d\u8f83\u5927\u7684\u503c\u5bf9\u5e94\u5230\u6570\u7ec4<code>y</code>\u4e2d\u4e5f\u662f\u8f83\u5927\u7684\u503c\uff0c\u800c\u8d1f\u76f8\u5173\u5219\u610f\u5473\u7740\u6570\u7ec4<code>x</code>\u4e2d\u8f83\u5927\u7684\u503c\u5bf9\u5e94\u5230\u6570\u7ec4<code>y</code>\u4e2d\u8f83\u5c0f\u7684\u503c\u3002</p> <pre><code>import matplotlib.pyplot as plt\n\nplt.figure(dpi=120)\nplt.scatter(x, y, color='blue')\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u5982\u679c\u9700\u8981\u5b9a\u91cf\u7684\u7814\u7a76\u4e24\u7ec4\u6570\u636e\u7684\u76f8\u5173\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u534f\u65b9\u5dee\u6216\u76f8\u5173\u7cfb\u6570\uff0c\u5bf9\u5e94\u7684 NumPy \u51fd\u6570\u5206\u522b\u662f<code>cov</code>\u548c<code>corrcoef</code>\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>np.corrcoef(x, y)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([[1.        , 0.92275889],\n       [0.92275889, 1.        ]])\n</code></pre> <p>\u8bf4\u660e\uff1a\u76f8\u5173\u7cfb\u6570\u662f\u4e00\u4e2a<code>-1</code>\u5230<code>1</code>\u4e4b\u95f4\u7684\u503c\uff0c\u8d8a\u9760\u8fd1<code>1</code> \u8bf4\u660e\u6b63\u76f8\u5173\u6027\u8d8a\u5f3a\uff0c\u8d8a\u9760\u8fd1<code>-1</code>\u8bf4\u660e\u8d1f\u76f8\u5173\u6027\u8d8a\u5f3a\uff0c\u9760\u8fd1<code>0</code>\u5219\u8bf4\u660e\u4e24\u7ec4\u6570\u636e\u6ca1\u6709\u660e\u663e\u7684\u76f8\u5173\u6027\u3002\u4e0a\u9762\u6708\u6536\u5165\u548c\u7f51\u8d2d\u652f\u51fa\u4e4b\u95f4\u7684\u76f8\u5173\u7cfb\u6570\u662f<code>0.92275889</code>\uff0c\u8bf4\u660e\u4e8c\u8005\u662f\u5f3a\u6b63\u76f8\u5173\u5173\u7cfb\u3002</p> <p>\u901a\u8fc7\u4e0a\u9762\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u786e\u5b9a\u4e86\u6536\u5165\u548c\u7f51\u8d2d\u652f\u51fa\u4e4b\u524d\u5b58\u5728\u5f3a\u6b63\u76f8\u5173\u5173\u7cfb\uff0c\u4e8e\u662f\u6211\u4eec\u7528\u8fd9\u4e9b\u6570\u636e\u6765\u521b\u5efa\u4e00\u4e2a\u56de\u5f52\u6a21\u578b\uff0c\u627e\u51fa\u4e00\u6761\u80fd\u591f\u5f88\u597d\u7684\u62df\u5408\u8fd9\u4e9b\u6570\u636e\u70b9\u7684\u76f4\u7ebf\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5230\u4e0a\u9762\u63d0\u5230\u7684<code>fit</code>\u65b9\u6cd5\uff0c\u5177\u4f53\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>from numpy.polynomial import Polynomial\n\nPolynomial.fit(x, y, deg=1).convert().coef\n</code></pre> <p>\u8bf4\u660e\uff1a<code>deg=1</code>\u8bf4\u660e\u56de\u5f52\u6a21\u578b\u6700\u9ad8\u6b21\u9879\u5c31\u662f1\u6b21\u9879\uff0c\u56de\u5f52\u6a21\u578b\u5f62\u5982\\(\\small{y=ax+b}\\)\uff1b\u5982\u679c\u8981\u751f\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\\(\\small{y=ax^2+bx+c}\\)\u7684\u6a21\u578b\uff0c\u5c31\u9700\u8981\u8bbe\u7f6e<code>deg=2</code>\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([-2.94883437e+02,  1.10333716e-01])\n</code></pre> <p>\u6839\u636e\u4e0a\u9762\u8f93\u51fa\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u7684\u56de\u5f52\u65b9\u7a0b\u5e94\u8be5\u662f\\(\\small{y=0.110333716x-294.883437}\\)\u3002\u6211\u4eec\u5c06\u8fd9\u4e2a\u56de\u5f52\u65b9\u7a0b\u7ed8\u5236\u5230\u521a\u624d\u7684\u6563\u70b9\u56fe\u4e0a\uff0c\u7ea2\u8272\u7684\u70b9\u662f\u6211\u4eec\u7684\u9884\u6d4b\u503c\uff0c\u84dd\u8272\u7684\u70b9\u662f\u5386\u53f2\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u771f\u5b9e\u503c\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>import matplotlib.pyplot as plt\n\nplt.scatter(x, y, color='blue')\nplt.scatter(x, 0.110333716 * x - 294.883437, color='red')\nplt.plot(x, 0.110333716 * x - 294.883437, color='darkcyan')\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u5982\u679c\u4e0d\u4f7f\u7528<code>Polynomial</code>\u7c7b\u578b\u7684<code>fit</code>\u65b9\u6cd5\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 NumPy \u63d0\u4f9b\u7684<code>polyfit</code>\u51fd\u6570\u6765\u5b8c\u6210\u540c\u6837\u7684\u64cd\u4f5c\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/","title":"72.\u6df1\u5165\u6d45\u51fapandas 1","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/#pandas-1","title":"\u6df1\u5165\u6d45\u51fapandas-1","text":"<p>Pandas \u662f Wes McKinney \u57282008\u5e74\u5f00\u53d1\u7684\u4e00\u4e2a\u5f3a\u5927\u7684\u5206\u6790\u7ed3\u6784\u5316\u6570\u636e\u7684\u5de5\u5177\u96c6\u3002Pandas \u4ee5 NumPy \u4e3a\u57fa\u7840\uff08\u5b9e\u73b0\u6570\u636e\u5b58\u50a8\u548c\u8fd0\u7b97\uff09\uff0c\u63d0\u4f9b\u4e86\u4e13\u95e8\u7528\u4e8e\u6570\u636e\u5206\u6790\u7684\u7c7b\u578b\u3001\u65b9\u6cd5\u548c\u51fd\u6570\uff0c\u5bf9\u6570\u636e\u5206\u6790\u548c\u6570\u636e\u6316\u6398\u63d0\u4f9b\u4e86\u5f88\u597d\u7684\u652f\u6301\uff1b\u540c\u65f6 pandas \u8fd8\u53ef\u4ee5\u8ddf\u6570\u636e\u53ef\u89c6\u5316\u5de5\u5177 matplotlib \u5f88\u597d\u7684\u6574\u5408\u5728\u4e00\u8d77\uff0c\u975e\u5e38\u8f7b\u677e\u6109\u5feb\u7684\u5b9e\u73b0\u6570\u636e\u53ef\u89c6\u5316\u5448\u73b0\u3002</p> <p>Pandas \u6838\u5fc3\u7684\u6570\u636e\u7c7b\u578b\u662f<code>Series</code>\uff08\u6570\u636e\u7cfb\u5217\uff09\u3001<code>DataFrame</code>\uff08\u6570\u636e\u7a97/\u6570\u636e\u6846\uff09\uff0c\u5206\u522b\u7528\u4e8e\u5904\u7406\u4e00\u7ef4\u548c\u4e8c\u7ef4\u7684\u6570\u636e\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3a<code>Index</code>\u7684\u7c7b\u578b\u53ca\u5176\u5b50\u7c7b\u578b\uff0c\u5b83\u4eec\u4e3a<code>Series</code>\u548c<code>DataFrame</code>\u63d0\u4f9b\u4e86\u7d22\u5f15\u529f\u80fd\u3002\u65e5\u5e38\u5de5\u4f5c\u4e2d<code>DataFrame</code>\u4f7f\u7528\u5f97\u6700\u4e3a\u5e7f\u6cdb\uff0c\u56e0\u4e3a\u4e8c\u7ef4\u7684\u6570\u636e\u7ed3\u6784\u521a\u597d\u53ef\u4ee5\u5bf9\u5e94\u6709\u884c\u6709\u5217\u7684\u8868\u683c\u3002<code>Series</code>\u548c<code>DataFrame</code>\u90fd\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\uff0c\u6570\u636e\u5206\u6790\u5e08\u4ee5\u6b64\u4e3a\u57fa\u7840\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u6570\u636e\u7684\u7b5b\u9009\u3001\u5408\u5e76\u3001\u62fc\u63a5\u3001\u6e05\u6d17\u3001\u9884\u5904\u7406\u3001\u805a\u5408\u3001\u900f\u89c6\u548c\u53ef\u89c6\u5316\u7b49\u5404\u79cd\u64cd\u4f5c\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/#series","title":"\u521b\u5efaSeries\u5bf9\u8c61","text":"<p>Pandas \u5e93\u4e2d\u7684<code>Series</code>\u5bf9\u8c61\u53ef\u4ee5\u7528\u6765\u8868\u793a\u4e00\u7ef4\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u662f\u591a\u4e86\u7d22\u5f15\u548c\u4e00\u4e9b\u989d\u5916\u7684\u529f\u80fd\u3002<code>Series</code>\u7c7b\u578b\u7684\u5185\u90e8\u7ed3\u6784\u5305\u542b\u4e86\u4e24\u4e2a\u6570\u7ec4\uff0c\u5176\u4e2d\u4e00\u4e2a\u7528\u6765\u4fdd\u5b58\u6570\u636e\uff0c\u53e6\u4e00\u4e2a\u7528\u6765\u4fdd\u5b58\u6570\u636e\u7684\u7d22\u5f15\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5217\u8868\u6216\u6570\u7ec4\u521b\u5efa<code>Series</code>\u5bf9\u8c61\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>import numpy as np\nimport pandas as pd\n\nser1 = pd.Series(data=[120, 380, 250, 360], index=['\u4e00\u5b63\u5ea6', '\u4e8c\u5b63\u5ea6', '\u4e09\u5b63\u5ea6', '\u56db\u5b63\u5ea6'])\nser1\n</code></pre> <p>\u8bf4\u660e\uff1a<code>Series</code>\u6784\u9020\u5668\u4e2d\u7684<code>data</code>\u53c2\u6570\u8868\u793a\u6570\u636e\uff0c<code>index</code>\u53c2\u6570\u8868\u793a\u6570\u636e\u7684\u7d22\u5f15\uff0c\u76f8\u5f53\u4e8e\u6570\u636e\u5bf9\u5e94\u7684\u6807\u7b7e\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u4e00\u5b63\u5ea6    120\n\u4e8c\u5b63\u5ea6    380\n\u4e09\u5b63\u5ea6    250\n\u56db\u5b63\u5ea6    360\ndtype: int64\n</code></pre> <p>\u901a\u8fc7\u5b57\u5178\u521b\u5efaSeries\u5bf9\u8c61\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser2 = pd.Series({'\u4e00\u5b63\u5ea6': 320, '\u4e8c\u5b63\u5ea6': 180, '\u4e09\u5b63\u5ea6': 300, '\u56db\u5b63\u5ea6': 405})\nser2\n</code></pre> <p>\u8bf4\u660e\uff1a\u901a\u8fc7\u5b57\u5178\u521b\u5efa<code>Series</code>\u5bf9\u8c61\u65f6\uff0c\u5b57\u5178\u7684\u952e\u5c31\u662f\u6570\u636e\u7684\u6807\u7b7e\uff08\u7d22\u5f15\uff09\uff0c\u952e\u5bf9\u5e94\u7684\u503c\u5c31\u662f\u6570\u636e\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u4e00\u5b63\u5ea6    320\n\u4e8c\u5b63\u5ea6    180\n\u4e09\u5b63\u5ea6    300\n\u56db\u5b63\u5ea6    405\ndtype: int64\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/#series_1","title":"Series\u5bf9\u8c61\u7684\u8fd0\u7b97","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/#_1","title":"\u6807\u91cf\u8fd0\u7b97","text":"<p>\u6211\u4eec\u5c1d\u8bd5\u7ed9\u521a\u624d\u7684<code>ser1</code>\u6bcf\u4e2a\u5b63\u5ea6\u52a0\u4e0a<code>10</code>\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser1 += 10\nser1\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u4e00\u5b63\u5ea6    130\n\u4e8c\u5b63\u5ea6    390\n\u4e09\u5b63\u5ea6    260\n\u56db\u5b63\u5ea6    370\ndtype: int64\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/#_2","title":"\u77e2\u91cf\u8fd0\u7b97","text":"<p>\u6211\u4eec\u5c1d\u8bd5\u628a<code>ser1</code>\u548c<code>ser2</code>\u5bf9\u5e94\u5b63\u5ea6\u7684\u6570\u636e\u52a0\u8d77\u6765\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser1 + ser2\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u4e00\u5b63\u5ea6    450\n\u4e8c\u5b63\u5ea6    570\n\u4e09\u5b63\u5ea6    560\n\u56db\u5b63\u5ea6    775\ndtype: int64\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/#_3","title":"\u7d22\u5f15\u8fd0\u7b97","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/#_4","title":"\u666e\u901a\u7d22\u5f15","text":"<p>\u8ddf\u6570\u7ec4\u4e00\u6837\uff0c<code>Series</code>\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u8fdb\u884c\u7d22\u5f15\u548c\u5207\u7247\u64cd\u4f5c\uff0c\u4e0d\u540c\u7684\u662f<code>Series</code>\u5bf9\u8c61\u56e0\u4e3a\u5185\u90e8\u7ef4\u62a4\u4e86\u4e00\u4e2a\u4fdd\u5b58\u7d22\u5f15\u7684\u6570\u7ec4\uff0c\u6240\u4ee5\u9664\u4e86\u53ef\u4ee5\u4f7f\u7528\u6574\u6570\u7d22\u5f15\u68c0\u7d22\u6570\u636e\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u81ea\u5df1\u8bbe\u7f6e\u7684\u7d22\u5f15\uff08\u6807\u7b7e\uff09\u83b7\u53d6\u5bf9\u5e94\u7684\u6570\u636e\u3002</p> <p>\u4f7f\u7528\u6574\u6570\u7d22\u5f15\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser1[2]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>260\n</code></pre> <p>\u4f7f\u7528\u81ea\u5b9a\u4e49\u7d22\u5f15\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser1['\u4e09\u5b63\u5ea6']\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>260\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser1['\u4e00\u5b63\u5ea6'] = 380\nser1\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u4e00\u5b63\u5ea6    380\n\u4e8c\u5b63\u5ea6    390\n\u4e09\u5b63\u5ea6    260\n\u56db\u5b63\u5ea6    370\ndtype: int64\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/#_5","title":"\u5207\u7247\u7d22\u5f15","text":"<p><code>Series</code>\u5bf9\u8c61\u7684\u5207\u7247\u64cd\u4f5c\u8ddf\u5217\u8868\u3001\u6570\u7ec4\u7c7b\u4f3c\uff0c\u901a\u8fc7\u7ed9\u51fa\u8d77\u59cb\u548c\u7ed3\u675f\u7d22\u5f15\uff0c\u4ece\u539f\u6765\u7684<code>Series</code>\u5bf9\u8c61\u4e2d\u53d6\u51fa\u6216\u4fee\u6539\u90e8\u5206\u6570\u636e\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6574\u6570\u7d22\u5f15\u548c\u81ea\u5b9a\u4e49\u7684\u7d22\u5f15\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser2[1:3]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u4e8c\u5b63\u5ea6    180\n\u4e09\u5b63\u5ea6    300\ndtype: int64\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser2['\u4e8c\u5b63\u5ea6':'\u56db\u5b63\u5ea6']\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u4e8c\u5b63\u5ea6    180\n\u4e09\u5b63\u5ea6    300\n\u56db\u5b63\u5ea6    405\ndtype: int64\n</code></pre> <p>\u63d0\u793a\uff1a\u5728\u4f7f\u7528\u81ea\u5b9a\u4e49\u7d22\u5f15\u8fdb\u884c\u5207\u7247\u65f6\uff0c\u7ed3\u675f\u7d22\u5f15\u5bf9\u5e94\u7684\u5143\u7d20\u4e5f\u662f\u53ef\u4ee5\u53d6\u5230\u7684\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser2[1:3] = 400, 500\nser2\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u4e00\u5b63\u5ea6    320\n\u4e8c\u5b63\u5ea6    400\n\u4e09\u5b63\u5ea6    500\n\u56db\u5b63\u5ea6    405\ndtype: int64\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/#_6","title":"\u82b1\u5f0f\u7d22\u5f15","text":"<p>\u4ee3\u7801\uff1a</p> <pre><code>ser2[['\u4e8c\u5b63\u5ea6', '\u56db\u5b63\u5ea6']]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u4e8c\u5b63\u5ea6    400\n\u56db\u5b63\u5ea6    405\ndtype: int64\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser2[['\u4e8c\u5b63\u5ea6', '\u56db\u5b63\u5ea6']] = 600, 520\nser2\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u4e00\u5b63\u5ea6    320\n\u4e8c\u5b63\u5ea6    600\n\u4e09\u5b63\u5ea6    500\n\u56db\u5b63\u5ea6    520\ndtype: int64\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/#_7","title":"\u5e03\u5c14\u7d22\u5f15","text":"<p>\u4ee3\u7801\uff1a</p> <pre><code>ser2[ser2 &gt;= 500]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u4e8c\u5b63\u5ea6    600\n\u4e09\u5b63\u5ea6    500\n\u56db\u5b63\u5ea6    520\ndtype: int64\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/#series_2","title":"Series\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u65b9\u6cd5","text":"<p><code>Series</code>\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u975e\u5e38\u591a\uff0c\u6211\u4eec\u5c31\u6361\u7740\u91cd\u8981\u7684\u8ddf\u5927\u5bb6\u8bb2\u5427\u3002\u5148\u770b\u770b\u4e0b\u9762\u7684\u8868\u683c\uff0c\u5b83\u5c55\u793a\u4e86<code>Series</code>\u5bf9\u8c61\u5e38\u7528\u7684\u5c5e\u6027\u3002</p> \u5c5e\u6027 \u8bf4\u660e <code>dtype</code> / <code>dtypes</code> \u8fd4\u56de<code>Series</code>\u5bf9\u8c61\u7684\u6570\u636e\u7c7b\u578b <code>hasnans</code> \u5224\u65ad<code>Series</code>\u5bf9\u8c61\u4e2d\u6709\u6ca1\u6709\u7a7a\u503c <code>at</code> / <code>iat</code> \u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee<code>Series</code>\u5bf9\u8c61\u4e2d\u7684\u5355\u4e2a\u503c <code>loc</code> / <code>iloc</code> \u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee<code>Series</code>\u5bf9\u8c61\u4e2d\u7684\u5355\u4e2a\u503c\u6216\u4e00\u7ec4\u503c <code>index</code> \u8fd4\u56de<code>Series</code>\u5bf9\u8c61\u7684\u7d22\u5f15\uff08<code>Index</code>\u5bf9\u8c61\uff09 <code>is_monotonic</code> \u5224\u65ad<code>Series</code>\u5bf9\u8c61\u4e2d\u7684\u6570\u636e\u662f\u5426\u5355\u8c03 <code>is_monotonic_increasing</code> \u5224\u65ad<code>Series</code>\u5bf9\u8c61\u4e2d\u7684\u6570\u636e\u662f\u5426\u5355\u8c03\u9012\u589e <code>is_monotonic_decreasing</code> \u5224\u65ad<code>Series</code>\u5bf9\u8c61\u4e2d\u7684\u6570\u636e\u662f\u5426\u5355\u8c03\u9012\u51cf <code>is_unique</code> \u5224\u65ad<code>Series</code>\u5bf9\u8c61\u4e2d\u7684\u6570\u636e\u662f\u5426\u72ec\u4e00\u65e0\u4e8c <code>size</code> \u8fd4\u56de<code>Series</code>\u5bf9\u8c61\u4e2d\u5143\u7d20\u7684\u4e2a\u6570 <code>values</code> \u4ee5<code>ndarray</code>\u7684\u65b9\u5f0f\u8fd4\u56de<code>Series</code>\u5bf9\u8c61\u4e2d\u7684\u503c\uff08<code>ndarray</code>\u5bf9\u8c61\uff09 <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u4e86\u89e3<code>Series</code>\u5bf9\u8c61\u7684\u5c5e\u6027\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(ser2.dtype)                    # \u6570\u636e\u7c7b\u578b\nprint(ser2.hasnans)                  # \u6709\u6ca1\u6709\u7a7a\u503c\nprint(ser2.index)                    # \u7d22\u5f15\nprint(ser2.values)                   # \u503c\nprint(ser2.is_monotonic_increasing)  # \u662f\u5426\u5355\u8c03\u9012\u589e\nprint(ser2.is_unique)                # \u662f\u5426\u6bcf\u4e2a\u503c\u90fd\u72ec\u4e00\u65e0\u4e8c\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>int64\nFalse\nIndex(['\u4e00\u5b63\u5ea6', '\u4e8c\u5b63\u5ea6', '\u4e09\u5b63\u5ea6', '\u56db\u5b63\u5ea6'], dtype='object')\n[320 600 500 520]\nFalse\nTrue\n</code></pre> <p><code>Series</code>\u5bf9\u8c61\u7684\u65b9\u6cd5\u5f88\u591a\uff0c\u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e9b\u4ee3\u7801\u7247\u6bb5\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5e38\u7528\u7684\u65b9\u6cd5\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/#_8","title":"\u7edf\u8ba1\u76f8\u5173","text":"<p><code>Series</code>\u5bf9\u8c61\u652f\u6301\u5404\u79cd\u83b7\u53d6\u63cf\u8ff0\u6027\u7edf\u8ba1\u4fe1\u606f\u7684\u65b9\u6cd5\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>print(ser2.count())   # \u8ba1\u6570\nprint(ser2.sum())     # \u6c42\u548c\nprint(ser2.mean())    # \u6c42\u5e73\u5747\nprint(ser2.median())  # \u627e\u4e2d\u4f4d\u6570\nprint(ser2.max())     # \u627e\u6700\u5927\nprint(ser2.min())     # \u627e\u6700\u5c0f\nprint(ser2.std())     # \u6c42\u6807\u51c6\u5dee\nprint(ser2.var())     # \u6c42\u65b9\u5dee\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>4\n1940\n485.0\n510.0\n600\n320\n118.18065267490557\n13966.666666666666\n</code></pre> <p><code>Series</code>\u5bf9\u8c61\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3a<code>describe()</code>\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u83b7\u5f97\u4e0a\u8ff0\u6240\u6709\u7684\u63cf\u8ff0\u6027\u7edf\u8ba1\u4fe1\u606f\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser2.describe()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>count      4.000000\nmean     485.000000\nstd      118.180653\nmin      320.000000\n25%      455.000000\n50%      510.000000\n75%      540.000000\nmax      600.000000\ndtype: float64\n</code></pre> <p>\u63d0\u793a\uff1a\u56e0\u4e3a<code>describe()</code>\u8fd4\u56de\u7684\u4e5f\u662f\u4e00\u4e2a<code>Series</code>\u5bf9\u8c61\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u7528<code>ser2.describe()['mean']</code>\u6765\u83b7\u53d6\u5e73\u5747\u503c\uff0c\u7528<code>ser2.describe()[['max', 'min']]</code>\u6765\u83b7\u53d6\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002</p> <p>\u5982\u679c<code>Series</code>\u5bf9\u8c61\u6709\u91cd\u590d\u7684\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>unique()</code>\u65b9\u6cd5\u83b7\u5f97\u7531\u72ec\u4e00\u65e0\u4e8c\u7684\u503c\u6784\u6210\u7684\u6570\u7ec4\uff1b\u53ef\u4ee5\u4f7f\u7528<code>nunique()</code>\u65b9\u6cd5\u7edf\u8ba1\u4e0d\u91cd\u590d\u503c\u7684\u6570\u91cf\uff1b\u5982\u679c\u60f3\u8981\u7edf\u8ba1\u6bcf\u4e2a\u503c\u91cd\u590d\u7684\u6b21\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528<code>value_counts()</code>\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a<code>Series</code>\u5bf9\u8c61\uff0c\u5b83\u7684\u7d22\u5f15\u5c31\u662f\u539f\u6765\u7684<code>Series</code>\u5bf9\u8c61\u4e2d\u7684\u503c\uff0c\u800c\u6bcf\u4e2a\u503c\u51fa\u73b0\u7684\u6b21\u6570\u5c31\u662f\u8fd4\u56de\u7684<code>Series</code>\u5bf9\u8c61\u4e2d\u7684\u6570\u636e\uff0c\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u6309\u7167\u51fa\u73b0\u6b21\u6570\u505a\u964d\u5e8f\u6392\u5217\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser3 = pd.Series(data=['apple', 'banana', 'apple', 'pitaya', 'apple', 'pitaya', 'durian'])\nser3.value_counts()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>apple     3\npitaya    2\ndurian    1\nbanana    1\ndtype: int64\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser3.nunique()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>4\n</code></pre> <p>\u5bf9\u4e8e<code>ser3</code>\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u7528<code>mode()</code>\u65b9\u6cd5\u6765\u627e\u51fa\u6570\u636e\u7684\u4f17\u6570\uff0c\u7531\u4e8e\u4f17\u6570\u53ef\u80fd\u4e0d\u552f\u4e00\uff0c\u6240\u4ee5<code>mode()</code>\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4ecd\u7136\u662f\u4e00\u4e2a<code>Series</code>\u5bf9\u8c61\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser3.mode()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>0    apple\ndtype: object\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/#_9","title":"\u5904\u7406\u6570\u636e","text":"<p><code>Series</code>\u5bf9\u8c61\u7684<code>isna()</code>\u548c<code>isnull()</code>\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e8e\u7a7a\u503c\u7684\u5224\u65ad\uff0c<code>notna()</code>\u548c<code>notnull()</code>\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e8e\u975e\u7a7a\u503c\u7684\u5224\u65ad\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser4 = pd.Series(data=[10, 20, np.nan, 30, np.nan])\nser4.isna()\n</code></pre> <p>\u8bf4\u660e\uff1a<code>np.nan</code>\u662f\u4e00\u4e2aIEEE 754\u6807\u51c6\u7684\u6d6e\u70b9\u5c0f\u6570\uff0c\u4e13\u95e8\u7528\u6765\u8868\u793a\u201c\u4e0d\u662f\u4e00\u4e2a\u6570\u201d\uff0c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u7528\u5b83\u6765\u4ee3\u8868\u7a7a\u503c\uff1b\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u7528 Python \u4e2d\u7684<code>None</code>\u6765\u8868\u793a\u7a7a\u503c\uff0c\u5728 pandas \u4e2d<code>None</code>\u4e5f\u4f1a\u88ab\u5904\u7406\u4e3a<code>np.nan</code>\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>0    False\n1    False\n2     True\n3    False\n4     True\ndtype: bool\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser4.notna()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>0     True\n1     True\n2    False\n3     True\n4    False\ndtype: bool\n</code></pre> <p><code>Series</code>\u5bf9\u8c61\u7684<code>dropna()</code>\u548c<code>fillna()</code>\u65b9\u6cd5\u5206\u522b\u7528\u6765\u5220\u9664\u7a7a\u503c\u548c\u586b\u5145\u7a7a\u503c\uff0c\u5177\u4f53\u7684\u7528\u6cd5\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser4.dropna()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>0    10.0\n1    20.0\n3    30.0\ndtype: float64\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser4.fillna(value=40)  # \u5c06\u7a7a\u503c\u586b\u5145\u4e3a40\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>0    10.0\n1    20.0\n2    40.0\n3    30.0\n4    40.0\ndtype: float64\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser4.fillna(method='ffill')  # \u7528\u7a7a\u503c\u524d\u9762\u7684\u975e\u7a7a\u503c\u586b\u5145\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>0    10.0\n1    20.0\n2    20.0\n3    30.0\n4    30.0\ndtype: float64\n</code></pre> <p>\u9700\u8981\u63d0\u9192\u5927\u5bb6\u6ce8\u610f\u7684\u662f\uff0c<code>dropna()</code>\u548c<code>fillna()</code>\u65b9\u6cd5\u90fd\u6709\u4e00\u4e2a\u540d\u4e3a<code>inplace</code>\u7684\u53c2\u6570\uff0c\u5b83\u7684\u9ed8\u8ba4\u503c\u662f<code>False</code>\uff0c\u8868\u793a\u5220\u9664\u7a7a\u503c\u6216\u586b\u5145\u7a7a\u503c\u4e0d\u4f1a\u4fee\u6539\u539f\u6765\u7684<code>Series</code>\u5bf9\u8c61\uff0c\u800c\u662f\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684<code>Series</code>\u5bf9\u8c61\u3002\u5982\u679c\u5c06<code>inplace</code>\u53c2\u6570\u7684\u503c\u4fee\u6539\u4e3a<code>True</code>\uff0c\u90a3\u4e48\u5220\u9664\u6216\u586b\u5145\u7a7a\u503c\u4f1a\u5c31\u5730\u64cd\u4f5c\uff0c\u76f4\u63a5\u4fee\u6539\u539f\u6765\u7684<code>Series</code>\u5bf9\u8c61\uff0c\u6b64\u65f6\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u662f<code>None</code>\u3002\u540e\u9762\u6211\u4eec\u4f1a\u63a5\u89e6\u5230\u7684\u5f88\u591a\u65b9\u6cd5\uff0c\u5305\u62ec<code>DataFrame</code>\u5bf9\u8c61\u7684\u5f88\u591a\u65b9\u6cd5\u90fd\u4f1a\u6709\u8fd9\u4e2a\u53c2\u6570\uff0c\u5b83\u4eec\u7684\u610f\u4e49\u8ddf\u8fd9\u91cc\u662f\u4e00\u6837\u7684\u3002</p> <p><code>Series</code>\u5bf9\u8c61\u7684<code>mask()</code>\u548c<code>where()</code>\u65b9\u6cd5\u53ef\u4ee5\u5c06\u6ee1\u8db3\u6216\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u503c\u8fdb\u884c\u66ff\u6362\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser5 = pd.Series(range(5))\nser5.where(ser5 &gt; 0)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>0    NaN\n1    1.0\n2    2.0\n3    3.0\n4    4.0\ndtype: float64\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser5.where(ser5 &gt; 1, 10)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>0    10\n1    10\n2     2\n3     3\n4     4\ndtype: int64\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser5.mask(ser5 &gt; 1, 10)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>0     0\n1     1\n2    10\n3    10\n4    10\ndtype: int64\n</code></pre> <p><code>Series</code>\u5bf9\u8c61\u7684<code>duplicated()</code>\u65b9\u6cd5\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u627e\u51fa\u91cd\u590d\u7684\u6570\u636e\uff0c\u800c<code>drop_duplicates()</code>\u65b9\u6cd5\u53ef\u4ee5\u5e2e\u6211\u4eec\u5220\u9664\u91cd\u590d\u6570\u636e\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser3.duplicated()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>0    False\n1    False\n2     True\n3    False\n4     True\n5     True\n6    False\ndtype: bool\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser3.drop_duplicates()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>0     apple\n1    banana\n3    pitaya\n6    durian\ndtype: object\n</code></pre> <p><code>Series</code>\u5bf9\u8c61\u7684<code>apply()</code>\u548c<code>map()</code>\u65b9\u6cd5\u975e\u5e38\u91cd\u8981\uff0c\u5b83\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b57\u5178\u6216\u8005\u6307\u5b9a\u7684\u51fd\u6570\u6765\u5904\u7406\u6570\u636e\uff0c\u628a\u6570\u636e\u6620\u5c04\u6216\u8f6c\u6362\u6210\u6211\u4eec\u60f3\u8981\u7684\u6837\u5b50\u3002\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u5728\u6570\u636e\u51c6\u5907\u9636\u6bb5\u975e\u5e38\u91cd\u8981\uff0c\u6211\u4eec\u5148\u6765\u8bd5\u4e00\u8bd5\u8fd9\u4e2a\u540d\u4e3a<code>map</code>\u7684\u65b9\u6cd5\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser6 = pd.Series(['cat', 'dog', np.nan, 'rabbit'])\nser6\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>0       cat\n1       dog\n2       NaN\n3    rabbit\ndtype: object\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser6.map({'cat': 'kitten', 'dog': 'puppy'})\n</code></pre> <p>\u8bf4\u660e\uff1a\u901a\u8fc7\u5b57\u5178\u7ed9\u51fa\u7684\u6620\u5c04\u89c4\u5219\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>0    kitten\n1     puppy\n2       NaN\n3       NaN\ndtype: object\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser6.map('I am a {}'.format, na_action='ignore')\n</code></pre> <p>\u8bf4\u660e\uff1a\u5c06\u6307\u5b9a\u5b57\u7b26\u4e32\u7684<code>format</code>\u65b9\u6cd5\u4f5c\u7528\u5230\u6570\u636e\u7cfb\u5217\u7684\u6570\u636e\u4e0a\uff0c\u5ffd\u7565\u6389\u6240\u6709\u7684\u7a7a\u503c\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>0       I am a cat\n1       I am a dog\n2              NaN\n3    I am a rabbit\ndtype: object\n</code></pre> <p>\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u65b0\u7684<code>Series</code>\u5bf9\u8c61\uff0c</p> <pre><code>ser7 = pd.Series([20, 21, 12],  index=['London', 'New York', 'Helsinki'])\nser7\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>London      20\nNew York    21\nHelsinki    12\ndtype: int64\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser7.apply(np.square)\n</code></pre> <p>\u8bf4\u660e\uff1a\u5c06\u6c42\u5e73\u65b9\u7684\u51fd\u6570\u4f5c\u7528\u5230\u6570\u636e\u7cfb\u5217\u7684\u6570\u636e\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u5c06\u53c2\u6570<code>np.square</code>\u66ff\u6362\u4e3a<code>lambda x: x ** 2</code>\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>London      400\nNew York    441\nHelsinki    144\ndtype: int64\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser7.apply(lambda x, value: x - value, args=(5, ))\n</code></pre> <p>\u6ce8\u610f\uff1a\u4e0a\u9762<code>apply</code>\u65b9\u6cd5\u4e2d\u7684<code>lambda</code>\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6570\u636e\u7cfb\u5217\u4e2d\u7684\u6570\u636e\uff0c\u800c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u9700\u8981\u6211\u4eec\u4f20\u5165\uff0c\u6240\u4ee5\u6211\u4eec\u7ed9<code>apply</code>\u65b9\u6cd5\u589e\u52a0\u4e86<code>args</code>\u53c2\u6570\uff0c\u7528\u4e8e\u7ed9<code>lambda</code>\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u503c\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>London      15\nNew York    16\nHelsinki     7\ndtype: int64\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/#_10","title":"\u53d6\u5934\u90e8\u503c\u548c\u6392\u5e8f","text":"<p><code>Series</code>\u5bf9\u8c61\u7684<code>sort_index()</code>\u548c<code>sort_values()</code>\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e8e\u5bf9\u7d22\u5f15\u548c\u6570\u636e\u7684\u6392\u5e8f\uff0c\u6392\u5e8f\u65b9\u6cd5\u6709\u4e00\u4e2a\u540d\u4e3a<code>ascending</code>\u7684\u5e03\u5c14\u7c7b\u578b\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u7528\u4e8e\u63a7\u5236\u6392\u5e8f\u7684\u7ed3\u679c\u662f\u5347\u5e8f\u8fd8\u662f\u964d\u5e8f\uff1b\u800c\u540d\u4e3a<code>kind</code>\u7684\u53c2\u6570\u5219\u7528\u6765\u63a7\u5236\u6392\u5e8f\u4f7f\u7528\u7684\u7b97\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528\u4e86<code>quicksort</code>\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9<code>mergesort</code>\u6216<code>heapsort</code>\uff1b\u5982\u679c\u5b58\u5728\u7a7a\u503c\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528<code>na_position</code>\u53c2\u6570\u7a7a\u503c\u653e\u5728\u6700\u524d\u8fd8\u662f\u6700\u540e\uff0c\u9ed8\u8ba4\u662f<code>last</code>\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser8 = pd.Series(\n    data=[35, 96, 12, 57, 25, 89], \n    index=['grape', 'banana', 'pitaya', 'apple', 'peach', 'orange']\n)\nser8.sort_values()  # \u6309\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>pitaya    12\npeach     25\ngrape     35\napple     57\norange    89\nbanana    96\ndtype: int64\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser8.sort_index(ascending=False)  # \u6309\u7d22\u5f15\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>pitaya    12\npeach     25\norange    89\ngrape     35\nbanana    96\napple     57\ndtype: int64\n</code></pre> <p>\u5982\u679c\u8981\u4ece<code>Series</code>\u5bf9\u8c61\u4e2d\u627e\u51fa\u5143\u7d20\u4e2d\u6700\u5927\u6216\u6700\u5c0f\u7684\u201cTop-N\u201d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5bf9\u6240\u6709\u7684\u503c\u8fdb\u884c\u6392\u5e8f\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528<code>nlargest()</code>\u548c<code>nsmallest()</code>\u65b9\u6cd5\u6765\u5b8c\u6210\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser8.nlargest(3)  # \u503c\u6700\u5927\u76843\u4e2a\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>banana    96\norange    89\napple     57\ndtype: int64\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser8.nsmallest(2)  # \u503c\u6700\u5c0f\u76842\u4e2a\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>pitaya    12\npeach     25\ndtype: int64\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/72.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-1/#_11","title":"\u7ed8\u5236\u56fe\u8868","text":"<p><code>Series</code>\u5bf9\u8c61\u6709\u4e00\u4e2a\u540d\u4e3a<code>plot</code>\u7684\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u751f\u6210\u56fe\u8868\uff0c\u5982\u679c\u9009\u62e9\u751f\u6210\u6298\u7ebf\u56fe\u3001\u997c\u56fe\u3001\u67f1\u72b6\u56fe\u7b49\uff0c\u9ed8\u8ba4\u4f1a\u4f7f\u7528<code>Series</code>\u5bf9\u8c61\u7684\u7d22\u5f15\u4f5c\u4e3a\u6a2a\u5750\u6807\uff0c\u4f7f\u7528<code>Series</code>\u5bf9\u8c61\u7684\u6570\u636e\u4f5c\u4e3a\u7eb5\u5750\u6807\u3002\u4e0b\u9762\u6211\u4eec\u521b\u5efa\u4e00\u4e2a<code>Series</code>\u5bf9\u8c61\u5e76\u57fa\u4e8e\u5b83\u7ed8\u5236\u67f1\u72b6\u56fe\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>import matplotlib.pyplot as plt\n\nser9 = pd.Series({'Q1': 400, 'Q2': 520, 'Q3': 180, 'Q4': 380})\n# \u901a\u8fc7plot\u65b9\u6cd5\u7684kind\u6307\u5b9a\u56fe\u8868\u7c7b\u578b\u4e3a\u67f1\u72b6\u56fe\nser9.plot(kind='bar')\n# \u5b9a\u5236\u7eb5\u8f74\u7684\u53d6\u503c\u8303\u56f4\nplt.ylim(0, 600)\n# \u5b9a\u5236\u6a2a\u8f74\u523b\u5ea6\uff08\u65cb\u8f6c\u52300\u5ea6\uff09\nplt.xticks(rotation=0)\n# \u4e3a\u67f1\u5b50\u589e\u52a0\u6570\u636e\u6807\u7b7e\nfor i in range(ser9.size):\n    plt.text(i, ser9[i] + 5, ser9[i], ha='center')\n# ha: \u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f\uff08horizontal alignment\uff09\n# \u5728\u56fe\u8868\u4e2d\u6dfb\u52a0\u6587\u672c\u6807\u7b7e\uff0c\u5185\u5bb9\u4e3a ser9[i] \u7684\u503c\uff0c\u4f4d\u7f6e\u5728 (i, ser9[i] + 5)\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u5176\u7ed8\u5236\u4e3a\u997c\u56fe\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code># plot\u65b9\u6cd5\u7684kind\u53c2\u6570\u6307\u5b9a\u4e86\u56fe\u8868\u7c7b\u578b\u4e3a\u997c\u56fe\n# autopct\u4f1a\u81ea\u52a8\u8ba1\u7b97\u5e76\u663e\u793a\u767e\u5206\u6bd4\n# pctdistance\u7528\u6765\u63a7\u5236\u767e\u5206\u6bd4\u5230\u5706\u5fc3\u7684\u8ddd\u79bb\nser9.plot(kind='pie', autopct='%.1f%%', pctdistance=0.65)\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/73.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-2/","title":"73.\u6df1\u5165\u6d45\u51fapandas 2","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/73.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-2/#pandas-2","title":"\u6df1\u5165\u6d45\u51fapandas-2","text":"<p>\u5982\u679c\u4f7f\u7528 pandas \u505a\u6570\u636e\u5206\u6790\uff0c\u90a3\u4e48<code>DataFrame</code>\u4e00\u5b9a\u662f\u88ab\u4f7f\u7528\u5f97\u6700\u591a\u7684\u7c7b\u578b\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u4fdd\u5b58\u548c\u5904\u7406\u5f02\u8d28\u7684\u4e8c\u7ef4\u6570\u636e\u3002\u8fd9\u91cc\u6240\u8c13\u7684\u201c\u5f02\u8d28\u201d\u662f\u6307<code>DataFrame</code>\u4e2d\u6bcf\u4e2a\u5217\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u9700\u8981\u76f8\u540c\uff0c\u8fd9\u4e5f\u662f\u5b83\u533a\u522b\u4e8e NumPy \u4e8c\u7ef4\u6570\u7ec4\u7684\u5730\u65b9\u3002<code>DataFrame</code>\u63d0\u4f9b\u4e86\u6781\u4e3a\u4e30\u5bcc\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u5bf9\u6570\u636e\u7684\u91cd\u5851\u3001\u6e05\u6d17\u3001\u9884\u5904\u7406\u3001\u900f\u89c6\u3001\u5448\u73b0\u7b49\u4e00\u7cfb\u5217\u64cd\u4f5c\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/73.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-2/#dataframe","title":"\u521b\u5efaDataFrame\u5bf9\u8c61","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/73.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-2/#dataframe_1","title":"\u901a\u8fc7\u4e8c\u7ef4\u6570\u7ec4\u521b\u5efaDataFrame\u5bf9\u8c61","text":"<p>\u4ee3\u7801\uff1a</p> <pre><code>scores = np.random.randint(60, 101, (5, 3))\ncourses = ['\u8bed\u6587', '\u6570\u5b66', '\u82f1\u8bed']\nstu_ids = np.arange(1001, 1006)\ndf1 = pd.DataFrame(data=scores, columns=courses, index=stu_ids)\ndf1\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>        \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n1001    69    80    79\n1002    71    60    100\n1003    94    81    93\n1004    88    88    67\n1005    82    66    60\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/73.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-2/#dataframe_2","title":"\u901a\u8fc7\u5b57\u5178\u521b\u5efaDataFrame\u5bf9\u8c61","text":"<p>\u4ee3\u7801\uff1a</p> <pre><code>scores = {\n    '\u8bed\u6587': [62, 72, 93, 88, 93],\n    '\u6570\u5b66': [95, 65, 86, 66, 87],\n    '\u82f1\u8bed': [66, 75, 82, 69, 82],\n}\nstu_ids = np.arange(1001, 1006)\ndf2 = pd.DataFrame(data=scores, index=stu_ids)\ndf2\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>        \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n1001    62    95    66\n1002    72    65    75\n1003    93    86    82\n1004    88    66    69\n1005    93    87    82\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/73.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-2/#csvdataframe","title":"\u8bfb\u53d6CSV\u6587\u4ef6\u521b\u5efaDataFrame\u5bf9\u8c61","text":"<p>\u53ef\u4ee5\u901a\u8fc7<code>pandas</code> \u6a21\u5757\u7684<code>read_csv</code>\u51fd\u6570\u6765\u8bfb\u53d6 CSV \u6587\u4ef6\uff0c<code>read_csv</code>\u51fd\u6570\u7684\u53c2\u6570\u975e\u5e38\u591a\uff0c\u4e0b\u9762\u4ecb\u7ecd\u51e0\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u53c2\u6570\u3002</p> <ul> <li><code>sep</code> / <code>delimiter</code>\uff1a\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u662f<code>,</code>\u3002</li> <li><code>header</code>\uff1a\u8868\u5934\uff08\u5217\u7d22\u5f15\uff09\u7684\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u503c\u662f<code>infer</code>\uff0c\u7528\u7b2c\u4e00\u884c\u7684\u5185\u5bb9\u4f5c\u4e3a\u8868\u5934\uff08\u5217\u7d22\u5f15\uff09\u3002</li> <li><code>index_col</code>\uff1a\u7528\u4f5c\u884c\u7d22\u5f15\uff08\u6807\u7b7e\uff09\u7684\u5217\u3002</li> <li><code>usecols</code>\uff1a\u9700\u8981\u52a0\u8f7d\u7684\u5217\uff0c\u53ef\u4ee5\u4f7f\u7528\u5e8f\u53f7\u6216\u8005\u5217\u540d\u3002</li> <li><code>true_values</code> / <code>false_values</code>\uff1a\u54ea\u4e9b\u503c\u88ab\u89c6\u4e3a\u5e03\u5c14\u503c<code>True</code> / <code>False</code>\u3002</li> <li><code>skiprows</code>\uff1a\u901a\u8fc7\u884c\u53f7\u3001\u7d22\u5f15\u6216\u51fd\u6570\u6307\u5b9a\u9700\u8981\u8df3\u8fc7\u7684\u884c\u3002</li> <li><code>skipfooter</code>\uff1a\u8981\u8df3\u8fc7\u7684\u672b\u5c3e\u884c\u6570\u3002</li> <li><code>nrows</code>\uff1a\u9700\u8981\u8bfb\u53d6\u7684\u884c\u6570\u3002</li> <li><code>na_values</code>\uff1a\u54ea\u4e9b\u503c\u88ab\u89c6\u4e3a\u7a7a\u503c\u3002</li> <li><code>iterator</code>\uff1a\u8bbe\u7f6e\u4e3a<code>True</code>\uff0c\u51fd\u6570\u8fd4\u56de\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002</li> <li><code>chunksize</code>\uff1a\u914d\u5408\u4e0a\u9762\u7684\u53c2\u6570\uff0c\u8bbe\u7f6e\u6bcf\u6b21\u8fed\u4ee3\u83b7\u53d6\u7684\u6570\u636e\u4f53\u91cf\u3002</li> </ul> <p>\u4ee3\u7801\uff1a</p> <pre><code>df3 = pd.read_csv('data/2018\u5e74\u5317\u4eac\u79ef\u5206\u843d\u6237\u6570\u636e.csv', index_col='id')\ndf3\n</code></pre> <p>\u63d0\u793a\uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684CSV\u6587\u4ef6\u662f\u7528\u76f8\u5bf9\u8def\u5f84\u8fdb\u884c\u83b7\u53d6\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u4e0b\u6709\u540d\u4e3a<code>data</code>\u7684\u6587\u4ef6\u5939\uff0c\u800c\u201c2018\u5e74\u5317\u4eac\u79ef\u5206\u843d\u6237\u6570\u636e.csv\u201d\u5c31\u5728\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e0b\u3002\u5982\u679c\u4f7f\u7528Windows\u7cfb\u7edf\uff0c\u5728\u5199\u8def\u5f84\u5206\u9694\u7b26\u65f6\u4e5f\u5efa\u8bae\u4f7f\u7528<code>/</code>\u800c\u4e0d\u662f<code>\\</code>\uff0c\u5982\u679c\u60f3\u4f7f\u7528<code>\\</code>\uff0c\u5efa\u8bae\u5728\u5b57\u7b26\u4e32\u524d\u9762\u6dfb\u52a0\u4e00\u4e2a<code>r</code>\uff0c\u4f7f\u7528\u539f\u59cb\u5b57\u7b26\u4e32\u6765\u907f\u5f00\u8f6c\u4e49\u5b57\u7b26\uff0c\u4f8b\u5982<code>r'c:\\new\\data\\2018\u5e74\u5317\u4eac\u79ef\u5206\u843d\u6237\u6570\u636e.csv'</code>\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>      name   birthday      company          score\nid                                             \n1     \u6768xx   1972-12       \u5317\u4eac\u5229\u5fb7\u534e\u798fxxxx  122.59\n2     \u7eaaxx   1974-12       \u5317\u4eac\u822a\u5929\u6570\u636exxxx  121.25\n3     \u738bx    1974-05       \u54c1\u724c\u8054\u76df(\u5317\u4eac)xx  118.96\n4     \u6768x    1975-07       \u4e2d\u79d1\u4e13\u5229\u5546\u6807xxxx  118.21\n5     \u5f20xx   1974-11       \u5317\u4eac\u963f\u91cc\u5df4\u5df4xxxx  117.79\n...   ...      ...                  ...     ...\n6015  \u5b59xx   1978-08       \u534e\u4e3a\u6d77\u6d0b\u7f51\u7edcxxxx   90.75\n6016  \u5218xx   1976-11       \u798f\u65af\uff08\u4e0a\u6d77\uff09xxxx   90.75\n6017  \u5468x    1977-10       \u8d62\u521b\u5fb7\u56fa\u8d5bxxxxxx   90.75\n6018  \u8d75x    1979-07       \u6fb3\u79d1\u5229\u8033\u533b\u7597xxxx   90.75\n6019  \u8d3ax    1981-06       \u5317\u4eac\u5b9d\u6d01\u6280\u672fxxxx   90.75\n\n[6019 rows x 4 columns]\n</code></pre> <p>\u8bf4\u660e\uff1a \u4e0a\u9762\u8f93\u51fa\u7684\u5185\u5bb9\u9690\u53bb\u4e86\u59d3\u540d\uff08name\uff09\u548c\u516c\u53f8\u540d\u79f0\uff08company\uff09\u5b57\u6bb5\u4e2d\u7684\u90e8\u5206\u4fe1\u606f\u3002\u5982\u679c\u9700\u8981\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684 CSV \u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u767e\u5ea6\u4e91\u76d8\u83b7\u53d6\uff0c\u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g\uff0c\u63d0\u53d6\u7801\uff1ae7b4\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/73.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-2/#exceldataframe","title":"\u8bfb\u53d6Excel\u5de5\u4f5c\u8868\u521b\u5efaDataFrame\u5bf9\u8c61","text":"<p>\u53ef\u4ee5\u901a\u8fc7<code>pandas</code> \u6a21\u5757\u7684<code>read_excel</code>\u51fd\u6570\u6765\u8bfb\u53d6 Excel \u6587\u4ef6\uff0c\u8be5\u51fd\u6570\u4e0e\u4e0a\u9762\u7684<code>read_csv</code>\u975e\u5e38\u7c7b\u4f3c\uff0c\u591a\u4e86\u4e00\u4e2a<code>sheet_name</code>\u53c2\u6570\u6765\u6307\u5b9a\u6570\u636e\u8868\u7684\u540d\u79f0\uff0c\u4f46\u662f\u4e0d\u540c\u4e8e CSV \u6587\u4ef6\uff0c\u6ca1\u6709<code>sep</code>\u6216<code>delimiter</code>\u8fd9\u6837\u7684\u53c2\u6570\u3002\u5047\u8bbe\u6709\u540d\u4e3a\u201c2022\u5e74\u80a1\u7968\u6570\u636e.xlsx\u201d\u7684 Excel \u6587\u4ef6\uff0c\u91cc\u9762\u6709\u7528\u80a1\u7968\u4ee3\u7801\u547d\u540d\u7684\u4e94\u4e2a\u8868\u5355\uff0c\u5206\u522b\u662f\u963f\u91cc\u5df4\u5df4\uff08BABA\uff09\u3001\u767e\u5ea6\uff08BIDU\uff09\u3001\u4eac\u4e1c\uff08JD\uff09\u3001\u4e9a\u9a6c\u900a\uff08AMZN\uff09\u3001\u7532\u9aa8\u6587\uff08ORCL\uff09\u8fd9\u4e94\u4e2a\u516c\u53f82022\u5e74\u7684\u80a1\u7968\u6570\u636e\uff0c\u5982\u679c\u60f3\u52a0\u8f7d\u4e9a\u9a6c\u900a\u7684\u80a1\u7968\u6570\u636e\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>df4 = pd.read_excel('data/2022\u5e74\u80a1\u7968\u6570\u636e.xlsx', sheet_name='AMZN', index_col='Date')\ndf4\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684 CSV \u6587\u4ef6\u53ef\u4ee5\u901a\u8fc7\u767e\u5ea6\u4e91\u76d8\u83b7\u53d6\uff0c\u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g\uff0c\u63d0\u53d6\u7801\uff1ae7b4\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>               Open     High       Low    Close    Volume\nDate                                                     \n2022-12-30   83.120   84.050   82.4700   84.000  62401194\n2022-12-29   82.870   84.550   82.5500   84.180  54995895\n2022-12-28   82.800   83.480   81.6900   81.820  58228575\n2022-12-27   84.970   85.350   83.0000   83.040  57284035\n2022-12-23   83.250   85.780   82.9344   85.250  57433655\n...             ...      ...       ...      ...       ...\n2022-01-07  163.839  165.243  162.0310  162.554  46605900\n2022-01-06  163.450  164.800  161.9370  163.254  51957780\n2022-01-05  166.883  167.126  164.3570  164.357  64302720\n2022-01-04  170.438  171.400  166.3490  167.522  70725160\n2022-01-03  167.550  170.704  166.1600  170.404  63869140\n\n[251 rows x 5 columns]\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/73.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-2/#dataframe_3","title":"\u8bfb\u53d6\u5173\u7cfb\u6570\u636e\u5e93\u4e8c\u7ef4\u8868\u521b\u5efaDataFrame\u5bf9\u8c61","text":"<p><code>pandas</code>\u6a21\u5757\u7684<code>read_sql</code>\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7 SQL \u8bed\u53e5\u4ece\u6570\u636e\u5e93\u4e2d\u8bfb\u53d6\u6570\u636e\u521b\u5efa<code>DataFrame</code>\u5bf9\u8c61\uff0c\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4ee3\u8868\u4e86\u9700\u8981\u8fde\u63a5\u7684\u6570\u636e\u5e93\u3002\u5bf9\u4e8e MySQL \u6570\u636e\u5e93\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>pymysql</code>\u6216<code>mysqlclient</code>\u6765\u521b\u5efa\u6570\u636e\u5e93\u8fde\u63a5\uff08\u9700\u8981\u63d0\u524d\u5b89\u88c5\u597d\u4e09\u65b9\u5e93\uff09\uff0c\u5f97\u5230\u4e00\u4e2a<code>Connection</code> \u5bf9\u8c61\uff0c\u800c\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u662f<code>read_sql</code>\u51fd\u6570\u9700\u8981\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>import pymysql\n\n# \u521b\u5efa\u4e00\u4e2aMySQL\u6570\u636e\u5e93\u7684\u8fde\u63a5\u5bf9\u8c61\nconn = pymysql.connect(\n    host='101.42.16.8', port=3306,\n    user='guest', password='Guest.618',\n    database='hrs', charset='utf8mb4'\n)\n# \u901a\u8fc7SQL\u4ece\u6570\u636e\u5e93\u4e8c\u7ef4\u8868\u8bfb\u53d6\u6570\u636e\u521b\u5efaDataFrame\ndf5 = pd.read_sql('select * from tb_emp', conn, index_col='eno')\ndf5\n</code></pre> <p>\u63d0\u793a\uff1a\u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u9700\u8981\u5148\u5b89\u88c5<code>pymysql</code>\u5e93\uff0c\u5982\u679c\u5c1a\u672a\u5b89\u88c5\uff0c\u53ef\u4ee5\u5148\u5728\u5355\u5143\u683c\u4e2d\u5148\u6267\u884c\u9b54\u6cd5\u6307\u4ee4<code>%pip install pymysql</code>\uff0c\u7136\u540e\u518d\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u8fde\u63a5\u7684\u662f\u6211\u90e8\u7f72\u5728\u817e\u8baf\u4e91\u4e0a\u7684 MySQL \u6570\u636e\u5e93\uff0c\u516c\u7f51 IP \u5730\u5740\uff1a<code>101.42.16.8</code>\uff0c\u7528\u6237\u540d\uff1a<code>guest</code>\uff0c\u5bc6\u7801\uff1a<code>Guest.618</code>\uff0c\u6570\u636e\u5e93\uff1a<code>hrs</code>\uff0c\u5b57\u7b26\u96c6\uff1a<code>utf8mb4</code>\uff0c\u5927\u5bb6\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u6570\u636e\u5e93\uff0c\u4f46\u662f\u4e0d\u8981\u8fdb\u884c\u6076\u610f\u7684\u8bbf\u95ee\u3002<code>hrs</code>\u6570\u636e\u5e93\u4e00\u5171\u6709\u4e09\u5f20\u8868\uff0c\u5206\u522b\u662f\uff1a<code>tb_dept</code>\uff08\u90e8\u95e8\u8868\uff09\u3001<code>tb_emp</code>\uff08\u5458\u5de5\u8868\uff09\u3001<code>tb_emp2</code>\uff08\u5458\u5de5\u88682\uff09\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>       ename   job     mgr     sal    comm    dno\neno                                        \n1359   \u80e1\u4e00\u5200   \u9500\u552e\u5458  3344.0  1800   200.0   30\n2056    \u4e54\u5cf0   \u5206\u6790\u5e08   7800.0  5000  1500.0   20\n3088   \u674e\u83ab\u6101   \u8bbe\u8ba1\u5e08  2056.0  3500   800.0   20\n3211   \u5f20\u65e0\u5fcc   \u7a0b\u5e8f\u5458  2056.0  3200     NaN   20\n3233   \u4e18\u5904\u673a   \u7a0b\u5e8f\u5458  2056.0  3400     NaN   20\n3244   \u6b27\u9633\u950b   \u7a0b\u5e8f\u5458  3088.0  3200     NaN   20\n3251   \u5f20\u7fe0\u5c71   \u7a0b\u5e8f\u5458  2056.0  4000     NaN   20\n3344    \u9ec4\u84c9  \u9500\u552e\u4e3b\u7ba1  7800.0  3000   800.0   30\n3577    \u6768\u8fc7    \u4f1a\u8ba1    5566.0  2200     NaN   10\n3588   \u6731\u4e5d\u771f    \u4f1a\u8ba1   5566.0  2500     NaN   10\n4466   \u82d7\u4eba\u51e4   \u9500\u552e\u5458  3344.0  2500     NaN   30\n5234    \u90ed\u9756    \u51fa\u7eb3    5566.0  2000     NaN   10\n5566   \u5b8b\u8fdc\u6865   \u4f1a\u8ba1\u5e08  7800.0  4000  1000.0   10\n7800   \u5f20\u4e09\u4e30    \u603b\u88c1     NaN   9000  1200.0   20\n</code></pre> <p>\u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u51fa\u73b0\u4e00\u4e2a\u8b66\u544a\uff0c\u56e0\u4e3a pandas \u5e93\u5e0c\u671b\u6211\u4eec\u4f7f\u7528<code>SQLAlchemy</code>\u4e09\u65b9\u5e93\u63a5\u5165\u6570\u636e\u5e93\uff0c\u5177\u4f53\u5185\u5bb9\u662f\uff1a\u201cUserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\u201d\u3002\u5982\u679c\u4e0d\u60f3\u770b\u5230\u8fd9\u4e2a\u8b66\u544a\uff0c\u6211\u4eec\u53ef\u4ee5\u8bd5\u4e00\u8bd5\u4e0b\u9762\u7684\u89e3\u51b3\u65b9\u6848\u3002</p> <p>\u9996\u5148\uff0c\u5b89\u88c5\u4e09\u65b9\u5e93<code>SQLAlchemy</code>\uff0c\u5728 Jupyter \u4e2d\u53ef\u4ee5\u4f7f\u7528<code>%pip</code>\u9b54\u6cd5\u6307\u4ee4\u3002</p> <pre><code>%pip install sqlalchemy\n</code></pre> <p>\u901a\u8fc7<code>SQLAlchemy</code>\u7684<code>create_engine</code>\u51fd\u6570\u521b\u5efa<code>Engine</code>\u5bf9\u8c61\u4f5c\u4e3a<code>read_sql</code>\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u6b64\u65f6<code>read_sql</code>\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u662f SQL \u8bed\u53e5\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e8c\u7ef4\u8868\u7684\u8868\u540d\u3002</p> <pre><code>from sqlalchemy import create_engine\n\n# \u901a\u8fc7\u6307\u5b9a\u7684URL\uff08\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u7b26\uff09\u8bbf\u95ee\u6570\u636e\u5e93\nengine = create_engine('mysql+pymysql://guest:Guest.618@101.42.16.8:3306/hrs')\n# \u76f4\u63a5\u901a\u8fc7\u8868\u540d\u52a0\u8f7d\u6574\u5f20\u8868\u7684\u6570\u636e\ndf5 = pd.read_sql('tb_emp', engine, index_col='eno')\ndf5\n</code></pre> <p>\u8bf4\u660e\uff1a\u5982\u679c\u901a\u8fc7\u8868\u540d\u52a0\u8f7d\u4e8c\u7ef4\u8868\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u51fd\u6570\u6362\u6210<code>read_sql_table</code>\u3002</p> <p>\u6211\u4eec\u518d\u6765\u52a0\u8f7d\u90e8\u95e8\u8868\u7684\u6570\u636e\u521b\u5efa<code>DataFrame</code>\u5bf9\u8c61\u3002</p> <pre><code>df6 = pd.read_sql('select dno, dname, dloc from tb_dept', engine, index_col='dno')\ndf6\n</code></pre> <p>\u8bf4\u660e\uff1a\u5982\u679c\u901a\u8fc7 SQL \u67e5\u8be2\u83b7\u53d6\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u51fd\u6570\u6362\u6210<code>read_sql_query</code>\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>      dname   dloc\ndno           \n10    \u4f1a\u8ba1\u90e8   \u5317\u4eac\n20    \u7814\u53d1\u90e8   \u6210\u90fd\n30    \u9500\u552e\u90e8   \u91cd\u5e86\n40    \u8fd0\u7ef4\u90e8   \u6df1\u5733\n</code></pre> <p>\u5728\u5b8c\u6210\u6570\u636e\u52a0\u8f7d\u540e\uff0c\u5982\u679c\u5e0c\u671b\u91ca\u653e\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u3002</p> <pre><code>engine.connect().close()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/73.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-2/#_1","title":"\u57fa\u672c\u5c5e\u6027\u548c\u65b9\u6cd5","text":"<p>\u5728\u5f00\u59cb\u8bb2\u89e3<code>DataFrame</code>\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u524d\uff0c\u6211\u4eec\u5148\u4ece\u4e4b\u524d\u63d0\u5230\u7684<code>hrs</code>\u6570\u636e\u5e93\u4e2d\u8bfb\u53d6\u4e09\u5f20\u8868\u7684\u6570\u636e\uff0c\u521b\u5efa\u51fa\u4e09\u4e2a<code>DataFrame</code>\u5bf9\u8c61\uff0c\u5b8c\u6574\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>from sqlalchemy import create_engine\n\nengine = create_engine('mysql+pymysql://guest:Guest.618@101.42.16.8:3306/hrs')\ndept_df = pd.read_sql_table('tb_dept', engine, index_col='dno')\nemp_df = pd.read_sql_table('tb_emp', engine, index_col='eno')\nemp2_df = pd.read_sql_table('tb_emp2', engine, index_col='eno')\n</code></pre> <p>\u5f97\u5230\u7684\u4e09\u4e2a<code>DataFrame</code>\u5bf9\u8c61\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u90e8\u95e8\u8868\uff08<code>dept_df</code>\uff09\uff0c\u5176\u4e2d<code>dno</code>\u662f\u90e8\u95e8\u7684\u7f16\u53f7\uff0c<code>dname</code>\u548c<code>dloc</code>\u5206\u522b\u662f\u90e8\u95e8\u7684\u540d\u79f0\u548c\u6240\u5728\u5730\u3002</p> <pre><code>    dname  dloc\ndno\n10  \u4f1a\u8ba1\u90e8 \u5317\u4eac\n20  \u7814\u53d1\u90e8 \u6210\u90fd\n30  \u9500\u552e\u90e8 \u91cd\u5e86\n40  \u8fd0\u7ef4\u90e8 \u6df1\u5733\n</code></pre> <p>\u5458\u5de5\u8868\uff08<code>emp_df</code>\uff09\uff0c\u5176\u4e2d<code>eno</code>\u662f\u5458\u5de5\u7f16\u53f7\uff0c<code>ename</code>\u3001<code>job</code>\u3001<code>mgr</code>\u3001<code>sal</code>\u3001<code>comm</code>\u548c<code>dno</code>\u5206\u522b\u4ee3\u8868\u5458\u5de5\u7684\u59d3\u540d\u3001\u804c\u4f4d\u3001\u4e3b\u7ba1\u7f16\u53f7\u3001\u6708\u85aa\u3001\u8865\u8d34\u548c\u90e8\u95e8\u7f16\u53f7\u3002</p> <pre><code>        ename    job        mgr      sal     comm    dno\neno\n1359    \u80e1\u4e00\u5200    \u9500\u552e\u5458     3344.0   1800    200.0   30\n2056    \u4e54\u5cf0      \u5206\u6790\u5e08     7800.0   5000    1500.0  20\n3088    \u674e\u83ab\u6101    \u8bbe\u8ba1\u5e08     2056.0   3500    800.0   20\n3211    \u5f20\u65e0\u5fcc    \u7a0b\u5e8f\u5458     2056.0   3200    NaN     20\n3233    \u4e18\u5904\u673a    \u7a0b\u5e8f\u5458     2056.0   3400    NaN     20\n3244    \u6b27\u9633\u950b    \u7a0b\u5e8f\u5458     3088.0   3200    NaN     20\n3251    \u5f20\u7fe0\u5c71    \u7a0b\u5e8f\u5458     2056.0   4000    NaN     20\n3344    \u9ec4\u84c9      \u9500\u552e\u4e3b\u7ba1   7800.0   3000    800.0   30\n3577    \u6768\u8fc7      \u4f1a\u8ba1       5566.0   2200    NaN     10\n3588    \u6731\u4e5d\u771f    \u4f1a\u8ba1       5566.0   2500    NaN     10\n4466    \u82d7\u4eba\u51e4    \u9500\u552e\u5458     3344.0   2500    NaN     30\n5234    \u90ed\u9756      \u51fa\u7eb3       5566.0   2000    NaN     10\n5566    \u5b8b\u8fdc\u6865    \u4f1a\u8ba1\u5e08     7800.0   4000    1000.0  10\n7800    \u5f20\u4e09\u4e30    \u603b\u88c1       NaN      9000    1200.0  20\n</code></pre> <p>\u8bf4\u660e\uff1a\u5728\u6570\u636e\u5e93\u4e2d<code>mgr</code>\u548c<code>comm</code>\u4e24\u4e2a\u5217\u7684\u6570\u636e\u7c7b\u578b\u662f<code>int</code>\uff0c\u4f46\u662f\u56e0\u4e3a\u6709\u7f3a\u5931\u503c\uff08\u7a7a\u503c\uff09\uff0c\u8bfb\u53d6\u5230<code>DataFrame</code>\u4e4b\u540e\uff0c\u5217\u7684\u6570\u636e\u7c7b\u578b\u53d8\u6210\u4e86<code>float</code>\uff0c\u56e0\u4e3a\u6211\u4eec\u901a\u5e38\u4f1a\u7528<code>float</code>\u7c7b\u578b\u7684<code>NaN</code>\u6765\u8868\u793a\u7a7a\u503c\u3002</p> <p>\u5458\u5de5\u8868\uff08<code>emp2_df</code>\uff09\uff0c\u8ddf\u4e0a\u9762\u7684\u5458\u5de5\u8868\u7ed3\u6784\u76f8\u540c\uff0c\u4f46\u662f\u4fdd\u5b58\u4e86\u4e0d\u540c\u7684\u5458\u5de5\u6570\u636e\u3002</p> <pre><code>       ename    job      mgr      sal    comm    dno\neno                                      \n9500   \u5f20\u4e09\u4e30   \u603b\u88c1      NaN      50000  8000    20\n9600   \u738b\u5927\u9524   \u7a0b\u5e8f\u5458    9800.0   8000   600     20\n9700   \u5f20\u4e09\u4e30   \u603b\u88c1      NaN      60000  6000    20\n9800   \u9a86\u660a     \u67b6\u6784\u5e08    7800.0   30000  5000    20\n9900   \u9648\u5c0f\u5200   \u5206\u6790\u5e08    9800.0   10000  1200    20\n</code></pre> <p><code>DataFrame</code>\u5bf9\u8c61\u7684\u5c5e\u6027\u5982\u4e0b\u8868\u6240\u793a\u3002</p> \u5c5e\u6027\u540d \u8bf4\u660e <code>at</code> / <code>iat</code> \u901a\u8fc7\u6807\u7b7e\u83b7\u53d6<code>DataFrame</code>\u4e2d\u7684\u5355\u4e2a\u503c\u3002 <code>columns</code> <code>DataFrame</code>\u5bf9\u8c61\u5217\u7684\u7d22\u5f15 <code>dtypes</code> <code>DataFrame</code>\u5bf9\u8c61\u6bcf\u4e00\u5217\u7684\u6570\u636e\u7c7b\u578b <code>empty</code> <code>DataFrame</code>\u5bf9\u8c61\u662f\u5426\u4e3a\u7a7a <code>loc</code> / <code>iloc</code> \u901a\u8fc7\u6807\u7b7e\u83b7\u53d6<code>DataFrame</code>\u4e2d\u7684\u4e00\u7ec4\u503c\u3002 <code>ndim</code> <code>DataFrame</code>\u5bf9\u8c61\u7684\u7ef4\u5ea6 <code>shape</code> <code>DataFrame</code>\u5bf9\u8c61\u7684\u5f62\u72b6\uff08\u884c\u6570\u548c\u5217\u6570\uff09 <code>size</code> <code>DataFrame</code>\u5bf9\u8c61\u4e2d\u5143\u7d20\u7684\u4e2a\u6570 <code>values</code> <code>DataFrame</code>\u5bf9\u8c61\u7684\u6570\u636e\u5bf9\u5e94\u7684\u4e8c\u7ef4\u6570\u7ec4 <p>\u5173\u4e8e<code>DataFrame</code>\u7684\u65b9\u6cd5\uff0c\u9996\u5148\u9700\u8981\u4e86\u89e3\u7684\u662f<code>info()</code>\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u4e86\u89e3<code>DataFrame</code>\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>emp_df.info()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;\nInt64Index: 14 entries, 1359 to 7800\nData columns (total 6 columns):\n #   Column  Non-Null Count  Dtype  \n---  ------  --------------  -----  \n 0   ename   14 non-null     object \n 1   job     14 non-null     object \n 2   mgr     13 non-null     float64\n 3   sal     14 non-null     int64  \n 4   comm    6 non-null      float64\n 5   dno     14 non-null     int64  \ndtypes: float64(2), int64(2), object(2)\nmemory usage: 1.3+ KB\n</code></pre> <p>\u5982\u679c\u9700\u8981\u67e5\u770b<code>DataFrame</code>\u7684\u5934\u90e8\u6216\u5c3e\u90e8\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528<code>head()</code>\u6216<code>tail()</code>\u65b9\u6cd5\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u9ed8\u8ba4\u53c2\u6570\u662f<code>5</code>\uff0c\u8868\u793a\u83b7\u53d6<code>DataFrame</code>\u6700\u524d\u97625\u884c\u6216\u6700\u540e\u97625\u884c\u7684\u6570\u636e\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>emp_df.head()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>        ename    job    mgr    sal    comm  dno\neno                     \n1359    \u80e1\u4e00\u5200   \u9500\u552e\u5458   3344   1800  200   30\n2056    \u4e54\u5cf0     \u5206\u6790\u5e08   7800   5000  1500  20\n3088    \u674e\u83ab\u6101   \u8bbe\u8ba1\u5e08   2056   3500  800   20\n3211    \u5f20\u65e0\u5fcc   \u7a0b\u5e8f\u5458   2056   3200  NaN   20\n3233    \u4e18\u5904\u673a   \u7a0b\u5e8f\u5458   2056   3400  NaN   20\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/73.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-2/#_2","title":"\u64cd\u4f5c\u6570\u636e","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/73.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-2/#_3","title":"\u7d22\u5f15\u548c\u5207\u7247","text":"<p>\u5982\u679c\u8981\u83b7\u53d6<code>DataFrame</code>\u7684\u67d0\u4e00\u5217\uff0c\u4f8b\u5982\u53d6\u51fa\u4e0a\u9762<code>emp_df</code>\u7684<code>ename</code>\u5217\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4e24\u79cd\u65b9\u5f0f\u3002</p> <pre><code>emp_df.ename\n</code></pre> <p>\u6216\u8005</p> <pre><code>emp_df['ename']\n</code></pre> <p>\u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u83b7\u5f97\u7684\u662f\u4e00\u4e2a<code>Series</code>\u5bf9\u8c61\u3002\u4e8b\u5b9e\u4e0a\uff0c<code>DataFrame</code>\u5bf9\u8c61\u5c31\u662f\u5c06\u591a\u4e2a<code>Series</code>\u5bf9\u8c61\u7ec4\u5408\u5230\u4e00\u8d77\u7684\u7ed3\u679c\u3002</p> <p>\u5982\u679c\u8981\u83b7\u53d6<code>DataFrame</code>\u7684\u67d0\u4e00\u884c\uff0c\u53ef\u4ee5\u4f7f\u7528\u6574\u6570\u7d22\u5f15\u6216\u6211\u4eec\u8bbe\u7f6e\u7684\u7d22\u5f15\uff0c\u4f8b\u5982\u53d6\u51fa\u5458\u5de5\u7f16\u53f7\u4e3a<code>2056</code>\u7684\u5458\u5de5\u6570\u636e\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>emp_df.iloc[1]\n</code></pre> <p>\u6216\u8005</p> <pre><code>emp_df.loc[2056]\n</code></pre> <p>\u901a\u8fc7\u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u6211\u4eec\u53d1\u73b0\uff0c\u5355\u72ec\u53d6<code>DataFrame</code> \u7684\u67d0\u4e00\u884c\u6216\u67d0\u4e00\u5217\u5f97\u5230\u7684\u90fd\u662f<code>Series</code>\u5bf9\u8c61\u3002\u6211\u4eec\u5f53\u7136\u4e5f\u53ef\u4ee5\u901a\u8fc7\u82b1\u5f0f\u7d22\u5f15\u6765\u83b7\u53d6\u591a\u4e2a\u884c\u6216\u591a\u4e2a\u5217\u7684\u6570\u636e\uff0c\u82b1\u5f0f\u7d22\u5f15\u7684\u7ed3\u679c\u4ecd\u7136\u662f\u4e00\u4e2a<code>DataFrame</code>\u5bf9\u8c61\u3002</p> <p>\u83b7\u53d6\u591a\u4e2a\u5217\uff1a</p> <pre><code>emp_df[['ename', 'job']]\n</code></pre> <p>\u83b7\u53d6\u591a\u4e2a\u884c\uff1a</p> <pre><code>emp_df.loc[[2056, 7800, 3344]]\n</code></pre> <p>\u5982\u679c\u8981\u83b7\u53d6\u6216\u4fee\u6539<code>DataFrame</code> \u5bf9\u8c61\u67d0\u4e2a\u5355\u5143\u683c\u7684\u6570\u636e\uff0c\u9700\u8981\u540c\u65f6\u6307\u5b9a\u884c\u548c\u5217\u7684\u7d22\u5f15\uff0c\u4f8b\u5982\u8981\u83b7\u53d6\u5458\u5de5\u7f16\u53f7\u4e3a<code>2056</code>\u7684\u5458\u5de5\u7684\u804c\u4f4d\u4fe1\u606f\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>emp_df['job'][2056]\n</code></pre> <p>\u6216\u8005</p> <pre><code>emp_df.loc[2056]['job']\n</code></pre> <p>\u6216\u8005</p> <pre><code>emp_df.loc[2056, 'job']\n</code></pre> <p>\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u7b2c\u4e09\u79cd\u505a\u6cd5\uff0c\u56e0\u4e3a\u5b83\u53ea\u505a\u4e86\u4e00\u6b21\u7d22\u5f15\u8fd0\u7b97\u3002\u5982\u679c\u8981\u5c06\u8be5\u5458\u5de5\u7684\u804c\u4f4d\u4fee\u6539\u4e3a\u201c\u67b6\u6784\u5e08\u201d\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u3002</p> <pre><code>emp_df.loc[2056, 'job'] = '\u67b6\u6784\u5e08'\n</code></pre> <p>\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5207\u7247\u64cd\u4f5c\u6765\u83b7\u53d6\u591a\u884c\u591a\u5217\uff0c\u76f8\u4fe1\u5927\u5bb6\u4e00\u5b9a\u5df2\u7ecf\u60f3\u5230\u4e86\u8fd9\u4e00\u70b9\u3002</p> <pre><code>emp_df.loc[2056:3344]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>        ename    job        mgr      sal     comm    dno\neno\n2056    \u4e54\u5cf0      \u5206\u6790\u5e08     7800.0   5000    1500.0  20\n3088    \u674e\u83ab\u6101    \u8bbe\u8ba1\u5e08     2056.0   3500    800.0   20\n3211    \u5f20\u65e0\u5fcc    \u7a0b\u5e8f\u5458     2056.0   3200    NaN     20\n3233    \u4e18\u5904\u673a    \u7a0b\u5e8f\u5458     2056.0   3400    NaN     20\n3244    \u6b27\u9633\u950b    \u7a0b\u5e8f\u5458     3088.0   3200    NaN     20\n3251    \u5f20\u7fe0\u5c71    \u7a0b\u5e8f\u5458     2056.0   4000    NaN     20\n3344    \u9ec4\u84c9      \u9500\u552e\u4e3b\u7ba1   7800.0   3000    800.0   30\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/73.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-2/#_4","title":"\u6570\u636e\u7b5b\u9009","text":"<p>\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u4e86\u82b1\u5f0f\u7d22\u5f15\uff0c\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u8054\u60f3\u5230\u4e86\u5e03\u5c14\u7d22\u5f15\u3002\u8ddf<code>ndarray</code>\u548c<code>Series</code>\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5e03\u5c14\u7d22\u5f15\u5bf9<code>DataFrame</code>\u5bf9\u8c61\u8fdb\u884c\u6570\u636e\u7b5b\u9009\uff0c\u4f8b\u5982\u6211\u4eec\u8981\u4ece<code>emp_df</code>\u4e2d\u7b5b\u9009\u51fa\u6708\u85aa\u8d85\u8fc7<code>3500</code>\u7684\u5458\u5de5\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>emp_df[emp_df.sal &gt; 3500]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>        ename    job        mgr      sal     comm    dno\neno\n2056    \u4e54\u5cf0      \u5206\u6790\u5e08     7800.0   5000    1500.0  20\n3251    \u5f20\u7fe0\u5c71    \u7a0b\u5e8f\u5458     2056.0   4000    NaN     20\n5566    \u5b8b\u8fdc\u6865    \u4f1a\u8ba1\u5e08     7800.0   4000    1000.0  10\n7800    \u5f20\u4e09\u4e30    \u603b\u88c1       NaN      9000    1200.0  20\n</code></pre> <p>\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7ec4\u5408\u591a\u4e2a\u6761\u4ef6\u6765\u8fdb\u884c\u6570\u636e\u7b5b\u9009\uff0c\u4f8b\u5982\u4ece<code>emp_df</code>\u4e2d\u7b5b\u9009\u51fa\u6708\u85aa\u8d85\u8fc7<code>3500</code>\u4e14\u90e8\u95e8\u7f16\u53f7\u4e3a<code>20</code>\u7684\u5458\u5de5\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>emp_df[(emp_df.sal &gt; 3500) &amp; (emp_df.dno == 20)]\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>        ename    job        mgr      sal     comm    dno\neno\n2056    \u4e54\u5cf0      \u5206\u6790\u5e08     7800.0   5000    1500.0  20\n3251    \u5f20\u7fe0\u5c71    \u7a0b\u5e8f\u5458     2056.0   4000    NaN     20\n7800    \u5f20\u4e09\u4e30    \u603b\u88c1       NaN      9000    1200.0  20\n</code></pre> <p>\u9664\u4e86\u4f7f\u7528\u5e03\u5c14\u7d22\u5f15\uff0c<code>DataFrame</code>\u5bf9\u8c61\u7684<code>query</code>\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u6570\u636e\u7b5b\u9009\uff0c<code>query</code>\u65b9\u6cd5\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b83\u4ee3\u8868\u4e86\u7b5b\u9009\u6570\u636e\u4f7f\u7528\u7684\u8868\u8fbe\u5f0f\uff0c\u800c\u4e14\u66f4\u7b26\u5408 Python \u7a0b\u5e8f\u5458\u7684\u4f7f\u7528\u4e60\u60ef\u3002\u4e0b\u9762\u6211\u4eec\u4f7f\u7528<code>query</code>\u65b9\u6cd5\u5c06\u4e0a\u9762\u7684\u6548\u679c\u91cd\u65b0\u5b9e\u73b0\u4e00\u904d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>emp_df.query('sal &gt; 3500 and dno == 20')\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/74.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-3/","title":"74.\u6df1\u5165\u6d45\u51fapandas 3","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/74.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-3/#pandas-3","title":"\u6df1\u5165\u6d45\u51fapandas-3","text":"<p>\u5728\u5b8c\u6210\u6570\u636e\u52a0\u8f7d\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u5bf9\u4e8b\u5b9e\u8868\u548c\u7ef4\u5ea6\u8868\u8fdb\u884c\u8fde\u63a5\uff0c\u8fd9\u662f\u5bf9\u6570\u636e\u8fdb\u884c\u591a\u7ef4\u5ea6\u62c6\u89e3\u7684\u57fa\u7840\uff1b\u6211\u4eec\u53ef\u80fd\u4ece\u4e0d\u540c\u7684\u6570\u636e\u6e90\u52a0\u8f7d\u4e86\u7ed3\u6784\u76f8\u540c\u7684\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e9b\u6570\u636e\u62fc\u63a5\u8d77\u6765\uff1b\u6211\u4eec\u628a\u8fd9\u4e9b\u64cd\u4f5c\u7edf\u79f0\u4e3a\u6570\u636e\u91cd\u5851\u3002\u5f53\u7136\uff0c\u7531\u4e8e\u4f01\u4e1a\u7684\u4fe1\u606f\u5316\u6c34\u5e73\u4ee5\u53ca\u6570\u636e\u4e2d\u53f0\u5efa\u8bbe\u6c34\u5e73\u7684\u5dee\u5f02\uff0c\u6211\u4eec\u62ff\u5230\u7684\u6570\u636e\u672a\u5fc5\u662f\u8d28\u91cf\u5f88\u597d\u7684\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u5bf9\u6570\u636e\u4e2d\u7684\u7f3a\u5931\u503c\u3001\u91cd\u590d\u503c\u3001\u5f02\u5e38\u503c\u8fdb\u884c\u9002\u5f53\u7684\u5904\u7406\u3002\u5373\u4fbf\u6211\u4eec\u83b7\u53d6\u7684\u6570\u636e\u5728\u8d28\u91cf\u4e0a\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u4f46\u4e5f\u53ef\u80fd\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u9884\u5904\u7406\uff0c\u624d\u80fd\u6ee1\u8db3\u6211\u4eec\u505a\u6570\u636e\u5206\u6790\u7684\u9700\u6c42\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c31\u4e3a\u5927\u5bb6\u8bb2\u89e3\u548c\u68b3\u7406\u8fd9\u65b9\u9762\u7684\u77e5\u8bc6\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/74.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-3/#_1","title":"\u6570\u636e\u91cd\u5851","text":"<p>\u6709\u7684\u65f6\u5019\uff0c\u6211\u4eec\u505a\u6570\u636e\u5206\u6790\u9700\u8981\u7684\u539f\u59cb\u6570\u636e\u53ef\u80fd\u5e76\u4e0d\u662f\u6765\u81ea\u4e00\u4e2a\u5730\u65b9\uff0c\u5c31\u50cf\u4e0a\u4e00\u7ae0\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4ece\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u8bfb\u53d6\u4e86\u4e09\u5f20\u8868\uff0c\u5f97\u5230\u4e86\u4e09\u4e2a<code>DataFrame</code>\u5bf9\u8c61\uff0c\u4f46\u5b9e\u9645\u5de5\u4f5c\u53ef\u80fd\u9700\u8981\u6211\u4eec\u628a\u4ed6\u4eec\u7684\u6570\u636e\u6574\u5408\u5230\u4e00\u8d77\u3002\u4f8b\u5982\uff1a<code>emp_df</code>\u548c<code>emp2_df</code>\u5176\u5b9e\u90fd\u662f\u5458\u5de5\u7684\u6570\u636e\uff0c\u800c\u4e14\u6570\u636e\u7ed3\u6784\u5b8c\u5168\u4e00\u81f4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>pandas</code>\u63d0\u4f9b\u7684<code>concat</code>\u51fd\u6570\u5b9e\u73b0\u4e24\u4e2a\u6216\u591a\u4e2a<code>DataFrame</code>\u7684\u6570\u636e\u62fc\u63a5\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>all_emp_df = pd.concat([emp_df, emp2_df])\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>        ename    job        mgr      sal     comm    dno\neno\n1359    \u80e1\u4e00\u5200    \u9500\u552e\u5458     3344.0   1800    200.0   30\n2056    \u4e54\u5cf0      \u5206\u6790\u5e08     7800.0   5000    1500.0  20\n3088    \u674e\u83ab\u6101    \u8bbe\u8ba1\u5e08     2056.0   3500    800.0   20\n3211    \u5f20\u65e0\u5fcc    \u7a0b\u5e8f\u5458     2056.0   3200    NaN     20\n3233    \u4e18\u5904\u673a    \u7a0b\u5e8f\u5458     2056.0   3400    NaN     20\n3244    \u6b27\u9633\u950b    \u7a0b\u5e8f\u5458     3088.0   3200    NaN     20\n3251    \u5f20\u7fe0\u5c71    \u7a0b\u5e8f\u5458     2056.0   4000    NaN     20\n3344    \u9ec4\u84c9      \u9500\u552e\u4e3b\u7ba1   7800.0   3000    800.0   30\n3577    \u6768\u8fc7      \u4f1a\u8ba1       5566.0   2200    NaN     10\n3588    \u6731\u4e5d\u771f    \u4f1a\u8ba1       5566.0   2500    NaN     10\n4466    \u82d7\u4eba\u51e4    \u9500\u552e\u5458     3344.0   2500    NaN     30\n5234    \u90ed\u9756      \u51fa\u7eb3       5566.0   2000    NaN     10\n5566    \u5b8b\u8fdc\u6865    \u4f1a\u8ba1\u5e08     7800.0   4000    1000.0  10\n7800    \u5f20\u4e09\u4e30    \u603b\u88c1       NaN      9000    1200.0  20\n9500    \u5f20\u4e09\u4e30    \u603b\u88c1       NaN      50000   8000.0  20\n9600    \u738b\u5927\u9524    \u7a0b\u5e8f\u5458     9800.0   8000    600.0   20\n9700    \u5f20\u4e09\u4e30    \u603b\u88c1       NaN      60000   6000.0  20\n9800    \u9a86\u660a      \u67b6\u6784\u5e08     7800.0   30000   5000.0  20\n9900    \u9648\u5c0f\u5200    \u5206\u6790\u5e08     9800.0   10000   1200.0  20\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u5c06\u4e24\u4e2a\u4ee3\u8868\u5458\u5de5\u6570\u636e\u7684<code>DataFrame</code>\u62fc\u63a5\u5230\u4e86\u4e00\u8d77\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528<code>merge</code>\u51fd\u6570\u5c06\u5458\u5de5\u8868\u548c\u90e8\u95e8\u8868\u7684\u6570\u636e\u5408\u5e76\u5230\u4e00\u5f20\u8868\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u5148\u4f7f\u7528<code>reset_index</code>\u65b9\u6cd5\u91cd\u65b0\u8bbe\u7f6e<code>all_emp_df</code>\u7684\u7d22\u5f15\uff0c\u8fd9\u6837<code>eno</code> \u4e0d\u518d\u662f\u7d22\u5f15\u800c\u662f\u4e00\u4e2a\u666e\u901a\u5217\uff0c<code>reset_index</code>\u65b9\u6cd5\u7684<code>inplace</code>\u53c2\u6570\u8bbe\u7f6e\u4e3a<code>True</code>\u8868\u793a\uff0c\u91cd\u7f6e\u7d22\u5f15\u7684\u64cd\u4f5c\u76f4\u63a5\u5728<code>all_emp_df</code>\u4e0a\u6267\u884c\uff0c\u800c\u4e0d\u662f\u8fd4\u56de\u4fee\u6539\u540e\u7684\u65b0\u5bf9\u8c61\u3002</p> <pre><code>all_emp_df.reset_index(inplace=True)\n</code></pre> <p>\u901a\u8fc7<code>merge</code>\u51fd\u6570\u5408\u5e76\u6570\u636e\uff0c\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u8c03\u7528<code>DataFrame</code>\u5bf9\u8c61\u7684<code>merge</code>\u65b9\u6cd5\u6765\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\u3002</p> <pre><code>pd.merge(all_emp_df, dept_df, how='inner', on='dno')\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>    eno     ename   job      mgr     sal     comm    dno    dname    dloc\n0   1359    \u80e1\u4e00\u5200  \u9500\u552e\u5458    3344.0  1800    200.0   30     \u9500\u552e\u90e8   \u91cd\u5e86\n1   3344    \u9ec4\u84c9    \u9500\u552e\u4e3b\u7ba1  7800.0  3000    800.0   30     \u9500\u552e\u90e8   \u91cd\u5e86\n2   4466    \u82d7\u4eba\u51e4  \u9500\u552e\u5458    3344.0  2500    NaN     30     \u9500\u552e\u90e8   \u91cd\u5e86\n3   2056    \u4e54\u5cf0    \u5206\u6790\u5e08    7800.0  5000    1500.0  20     \u7814\u53d1\u90e8   \u6210\u90fd\n4   3088    \u674e\u83ab\u6101  \u8bbe\u8ba1\u5e08    2056.0  3500    800.0   20     \u7814\u53d1\u90e8   \u6210\u90fd\n5   3211    \u5f20\u65e0\u5fcc  \u7a0b\u5e8f\u5458    2056.0  3200    NaN     20     \u7814\u53d1\u90e8   \u6210\u90fd\n6   3233    \u4e18\u5904\u673a  \u7a0b\u5e8f\u5458    2056.0  3400    NaN     20     \u7814\u53d1\u90e8   \u6210\u90fd\n7   3244    \u6b27\u9633\u950b  \u7a0b\u5e8f\u5458    3088.0  3200    NaN     20     \u7814\u53d1\u90e8   \u6210\u90fd\n8   3251    \u5f20\u7fe0\u5c71  \u7a0b\u5e8f\u5458    2056.0  4000    NaN     20     \u7814\u53d1\u90e8   \u6210\u90fd\n9   7800    \u5f20\u4e09\u4e30  \u603b\u88c1      NaN     9000    1200.0  20     \u7814\u53d1\u90e8   \u6210\u90fd\n10  9500    \u5f20\u4e09\u4e30  \u603b\u88c1      NaN     50000   8000.0  20     \u7814\u53d1\u90e8   \u6210\u90fd\n11  9600    \u738b\u5927\u9524  \u7a0b\u5e8f\u5458    9800.0  8000    600.0   20     \u7814\u53d1\u90e8   \u6210\u90fd\n12  9700    \u5f20\u4e09\u4e30  \u603b\u88c1      NaN     60000   6000.0  20     \u7814\u53d1\u90e8   \u6210\u90fd\n13  9800    \u9a86\u660a    \u67b6\u6784\u5e08    7800.0  30000   5000.0  20     \u7814\u53d1\u90e8   \u6210\u90fd\n14  9900    \u9648\u5c0f\u5200  \u5206\u6790\u5e08    9800.0  10000   1200.0  20     \u7814\u53d1\u90e8   \u6210\u90fd\n15  3577    \u6768\u8fc7    \u4f1a\u8ba1      5566.0  2200    NaN     10    \u4f1a\u8ba1\u90e8   \u5317\u4eac\n16  3588    \u6731\u4e5d\u771f  \u4f1a\u8ba1      5566.0  2500    NaN     10    \u4f1a\u8ba1\u90e8   \u5317\u4eac\n17  5234    \u90ed\u9756    \u51fa\u7eb3      5566.0  2000    NaN     10    \u4f1a\u8ba1\u90e8   \u5317\u4eac\n18  5566    \u5b8b\u8fdc\u6865  \u4f1a\u8ba1\u5e08    7800.0  4000    1000.0  10    \u4f1a\u8ba1\u90e8   \u5317\u4eac\n</code></pre> <p><code>merge</code>\u51fd\u6570\u7684\u4e00\u4e2a\u53c2\u6570\u4ee3\u8868\u5408\u5e76\u7684\u5de6\u8868\u3001\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4ee3\u8868\u5408\u5e76\u7684\u53f3\u8868\uff0c\u6709SQL\u7f16\u7a0b\u7ecf\u9a8c\u7684\u540c\u5b66\u5bf9\u8fd9\u4e24\u4e2a\u8bcd\u662f\u4e0d\u662f\u611f\u89c9\u5230\u975e\u5e38\u4eb2\u5207\u3002\u6b63\u5982\u5927\u5bb6\u731c\u60f3\u7684\u90a3\u6837\uff0c<code>DataFrame</code>\u5bf9\u8c61\u7684\u5408\u5e76\u8ddf\u6570\u636e\u5e93\u4e2d\u7684\u8868\u8fde\u63a5\u975e\u5e38\u7c7b\u4f3c\uff0c\u6240\u4ee5\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684<code>how</code>\u4ee3\u8868\u4e86\u5408\u5e76\u4e24\u5f20\u8868\u7684\u65b9\u5f0f\uff0c\u6709<code>left</code>\u3001<code>right</code>\u3001<code>inner</code>\u3001<code>outer</code>\u56db\u4e2a\u9009\u9879\uff1b\u800c<code>on</code>\u5219\u4ee3\u8868\u4e86\u57fa\u4e8e\u54ea\u4e2a\u5217\u5b9e\u73b0\u8868\u7684\u5408\u5e76\uff0c\u76f8\u5f53\u4e8e SQL \u8868\u8fde\u63a5\u4e2d\u7684\u8fde\u8868\u6761\u4ef6\uff0c\u5982\u679c\u5de6\u53f3\u4e24\u8868\u5bf9\u5e94\u7684\u5217\u5217\u540d\u4e0d\u540c\uff0c\u53ef\u4ee5\u7528<code>left_on</code>\u548c<code>right_on</code>\u53c2\u6570\u53d6\u4ee3<code>on</code>\u53c2\u6570\u5206\u522b\u8fdb\u884c\u6307\u5b9a\u3002</p> <p>\u5982\u679c\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\uff0c\u5c06<code>how</code>\u53c2\u6570\u4fee\u6539\u4e3a<code>'right'</code>\uff0c\u5927\u5bb6\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u4ee3\u7801\u6267\u884c\u7684\u7ed3\u679c\u3002</p> <pre><code>pd.merge(all_emp_df, dept_df, how='right', on='dno')\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u6bd4\u4e4b\u524d\u7684\u8f93\u51fa\u591a\u51fa\u4e86\u5982\u4e0b\u6240\u793a\u7684\u4e00\u884c\uff0c\u8fd9\u662f\u56e0\u4e3a<code>how='right'</code>\u4ee3\u8868\u53f3\u5916\u8fde\u63a5\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u53f3\u8868<code>dept_df</code>\u4e2d\u7684\u6570\u636e\u4f1a\u88ab\u5b8c\u6574\u7684\u67e5\u51fa\u6765\uff0c\u4f46\u662f\u5728<code>all_emp_df</code>\u4e2d\u53c8\u6ca1\u6709\u7f16\u53f7\u4e3a<code>40</code> \u90e8\u95e8\u7684\u5458\u5de5\uff0c\u6240\u4ee5\u5bf9\u5e94\u7684\u4f4d\u7f6e\u90fd\u88ab\u586b\u5165\u4e86\u7a7a\u503c\u3002</p> <pre><code>19  NaN    NaN    NaN    NaN    NaN     NaN    40    \u8fd0\u7ef4\u90e8    \u6df1\u5733\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/74.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-3/#_2","title":"\u6570\u636e\u6e05\u6d17","text":"<p>\u901a\u5e38\uff0c\u6211\u4eec\u4ece Excel\u3001CSV \u6216\u6570\u636e\u5e93\u4e2d\u83b7\u53d6\u5230\u7684\u6570\u636e\u5e76\u4e0d\u662f\u975e\u5e38\u5b8c\u7f8e\u7684\uff0c\u91cc\u9762\u53ef\u80fd\u56e0\u4e3a\u7cfb\u7edf\u6216\u4eba\u4e3a\u7684\u539f\u56e0\u6df7\u5165\u4e86\u91cd\u590d\u503c\u6216\u5f02\u5e38\u503c\uff0c\u4e5f\u53ef\u80fd\u5728\u67d0\u4e9b\u5b57\u6bb5\u4e0a\u5b58\u5728\u7f3a\u5931\u503c\uff1b\u518d\u8005\uff0c<code>DataFrame</code>\u4e2d\u7684\u6570\u636e\u4e5f\u53ef\u80fd\u5b58\u5728\u683c\u5f0f\u4e0d\u7edf\u4e00\u3001\u91cf\u7eb2\u4e0d\u7edf\u4e00\u7b49\u5404\u79cd\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u5728\u5f00\u59cb\u6570\u636e\u5206\u6790\u4e4b\u524d\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u6e05\u6d17\u5c31\u663e\u5f97\u7279\u522b\u91cd\u8981\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/74.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-3/#_3","title":"\u7f3a\u5931\u503c","text":"<p>\u53ef\u4ee5\u4f7f\u7528<code>DataFrame</code>\u5bf9\u8c61\u7684<code>isnull</code>\u6216<code>isna</code>\u65b9\u6cd5\u6765\u627e\u51fa\u6570\u636e\u8868\u4e2d\u7684\u7f3a\u5931\u503c\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>emp_df.isnull()\n</code></pre> <p>\u6216\u8005</p> <pre><code>emp_df.isna()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>        ename   job     mgr     sal     comm    dno\neno                     \n1359    False   False   False   False   False   False\n2056    False   False   False   False   False   False\n3088    False   False   False   False   False   False\n3211    False   False   False   False   True    False\n3233    False   False   False   False   True    False\n3244    False   False   False   False   True    False\n3251    False   False   False   False   True    False\n3344    False   False   False   False   False   False\n3577    False   False   False   False   True    False\n3588    False   False   False   False   True    False\n4466    False   False   False   False   True    False\n5234    False   False   False   False   True    False\n5566    False   False   False   False   False   False\n7800    False   False   True    False   False   False\n</code></pre> <p>\u76f8\u5bf9\u5e94\u7684\uff0c<code>notnull</code>\u548c<code>notna</code>\u65b9\u6cd5\u53ef\u4ee5\u5c06\u975e\u7a7a\u7684\u503c\u6807\u8bb0\u4e3a<code>True</code>\u3002\u5982\u679c\u60f3\u5220\u9664\u8fd9\u4e9b\u7f3a\u5931\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528<code>DataFrame</code>\u5bf9\u8c61\u7684<code>dropna</code>\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7684<code>axis</code>\u53c2\u6570\u53ef\u4ee5\u6307\u5b9a\u6cbf\u77400\u8f74\u8fd8\u662f1\u8f74\u5220\u9664\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u9047\u5230\u7a7a\u503c\u65f6\uff0c\u662f\u5220\u9664\u6574\u884c\u8fd8\u662f\u5220\u9664\u6574\u5217\uff0c\u9ed8\u8ba4\u662f\u6cbf0\u8f74\u8fdb\u884c\u5220\u9664\u7684\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>emp_df.dropna()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>        ename   job      mgr     sal    comm     dno\neno                     \n1359    \u80e1\u4e00\u5200  \u9500\u552e\u5458    3344.0  1800   200.0    30\n2056    \u4e54\u5cf0    \u67b6\u6784\u5e08    7800.0  5000   1500.0   20\n3088    \u674e\u83ab\u6101  \u8bbe\u8ba1\u5e08    2056.0  3500   800.0    20\n3344    \u9ec4\u84c9    \u9500\u552e\u4e3b\u7ba1  7800.0  3000   800.0    30\n5566    \u5b8b\u8fdc\u6865  \u4f1a\u8ba1\u5e08    7800.0  4000   1000.0   10\n</code></pre> <p>\u5982\u679c\u8981\u6cbf\u77401\u8f74\u8fdb\u884c\u5220\u9664\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u3002</p> <pre><code>emp_df.dropna(axis=1)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>        ename    job      sal    dno\neno             \n1359    \u80e1\u4e00\u5200   \u9500\u552e\u5458    1800   30\n2056    \u4e54\u5cf0     \u67b6\u6784\u5e08    5000   20\n3088    \u674e\u83ab\u6101   \u8bbe\u8ba1\u5e08    3500   20\n3211    \u5f20\u65e0\u5fcc   \u7a0b\u5e8f\u5458    3200   20\n3233    \u4e18\u5904\u673a   \u7a0b\u5e8f\u5458    3400   20\n3244    \u6b27\u9633\u950b   \u7a0b\u5e8f\u5458    3200   20\n3251    \u5f20\u7fe0\u5c71   \u7a0b\u5e8f\u5458    4000   20\n3344    \u9ec4\u84c9     \u9500\u552e\u4e3b\u7ba1  3000   30\n3577    \u6768\u8fc7     \u4f1a\u8ba1      2200   10\n3588    \u6731\u4e5d\u771f   \u4f1a\u8ba1      2500   10\n4466    \u82d7\u4eba\u51e4   \u9500\u552e\u5458    2500   30\n5234    \u90ed\u9756     \u51fa\u7eb3      2000   10\n5566    \u5b8b\u8fdc\u6865   \u4f1a\u8ba1\u5e08    4000   10\n7800    \u5f20\u4e09\u4e30   \u603b\u88c1      9000   20\n</code></pre> <p>\u6ce8\u610f\uff1a<code>DataFrame</code>\u5bf9\u8c61\u7684\u5f88\u591a\u65b9\u6cd5\u90fd\u6709\u4e00\u4e2a\u540d\u4e3a<code>inplace</code>\u7684\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\u4e3a<code>False</code>\uff0c\u8868\u793a\u6211\u4eec\u7684\u64cd\u4f5c\u4e0d\u4f1a\u4fee\u6539\u539f\u6765\u7684<code>DataFrame</code>\u5bf9\u8c61\uff0c\u800c\u662f\u5c06\u5904\u7406\u540e\u7684\u7ed3\u679c\u901a\u8fc7\u4e00\u4e2a\u65b0\u7684<code>DataFrame</code>\u5bf9\u8c61\u8fd4\u56de\u3002\u5982\u679c\u5c06\u8be5\u53c2\u6570\u7684\u503c\u8bbe\u7f6e\u4e3a<code>True</code>\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u64cd\u4f5c\u5c31\u4f1a\u5728\u539f\u6765\u7684<code>DataFrame</code>\u4e0a\u9762\u76f4\u63a5\u4fee\u6539\uff0c\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4e3a<code>None</code>\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u4e0a\u9762\u7684\u64cd\u4f5c\u5e76\u6ca1\u6709\u4fee\u6539<code>emp_df</code>\uff0c\u800c\u662f\u8fd4\u56de\u4e86\u4e00\u4e2a\u65b0\u7684<code>DataFrame</code>\u5bf9\u8c61\u3002</p> <p>\u5728\u67d0\u4e9b\u7279\u5b9a\u7684\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u7a7a\u503c\u8fdb\u884c\u586b\u5145\uff0c\u5bf9\u5e94\u7684\u65b9\u6cd5\u662f<code>fillna</code>\uff0c\u586b\u5145\u7a7a\u503c\u65f6\u53ef\u4ee5\u4f7f\u7528\u6307\u5b9a\u7684\u503c\uff08\u901a\u8fc7<code>value</code>\u53c2\u6570\u8fdb\u884c\u6307\u5b9a\uff09\uff0c\u4e5f\u53ef\u4ee5\u7528\u8868\u683c\u4e2d\u524d\u4e00\u4e2a\u5355\u5143\u683c\uff08\u901a\u8fc7\u8bbe\u7f6e\u53c2\u6570<code>method=ffill</code>\uff09\u6216\u540e\u4e00\u4e2a\u5355\u5143\u683c\uff08\u901a\u8fc7\u8bbe\u7f6e\u53c2\u6570<code>method=bfill</code>\uff09\u7684\u503c\u8fdb\u884c\u586b\u5145\uff0c\u5f53\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>emp_df.fillna(value=0)\n</code></pre> <p>\u6ce8\u610f\uff1a\u586b\u5145\u7684\u503c\u5982\u4f55\u9009\u62e9\u4e5f\u662f\u4e00\u4e2a\u503c\u5f97\u63a2\u8ba8\u7684\u8bdd\u9898\uff0c\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u53ef\u80fd\u4f1a\u4f7f\u7528\u67d0\u79cd\u7edf\u8ba1\u91cf\uff08\u5982\uff1a\u5747\u503c\u3001\u4f17\u6570\u7b49\uff09\u8fdb\u884c\u586b\u5145\uff0c\u6216\u8005\u4f7f\u7528\u67d0\u79cd\u63d2\u503c\u6cd5\uff08\u5982\uff1a\u968f\u673a\u63d2\u503c\u6cd5\u3001\u62c9\u683c\u6717\u65e5\u63d2\u503c\u6cd5\u7b49\uff09\u8fdb\u884c\u586b\u5145\uff0c\u751a\u81f3\u6709\u53ef\u80fd\u901a\u8fc7\u56de\u5f52\u6a21\u578b\u3001\u8d1d\u53f6\u65af\u6a21\u578b\u7b49\u5bf9\u7f3a\u5931\u6570\u636e\u8fdb\u884c\u586b\u5145\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>        ename    job        mgr      sal     comm    dno\neno\n1359    \u80e1\u4e00\u5200    \u9500\u552e\u5458     3344.0   1800    200.0   30\n2056    \u4e54\u5cf0      \u5206\u6790\u5e08     7800.0   5000    1500.0  20\n3088    \u674e\u83ab\u6101    \u8bbe\u8ba1\u5e08     2056.0   3500    800.0   20\n3211    \u5f20\u65e0\u5fcc    \u7a0b\u5e8f\u5458     2056.0   3200    0.0     20\n3233    \u4e18\u5904\u673a    \u7a0b\u5e8f\u5458     2056.0   3400    0.0     20\n3244    \u6b27\u9633\u950b    \u7a0b\u5e8f\u5458     3088.0   3200    0.0     20\n3251    \u5f20\u7fe0\u5c71    \u7a0b\u5e8f\u5458     2056.0   4000    0.0     20\n3344    \u9ec4\u84c9      \u9500\u552e\u4e3b\u7ba1   7800.0   3000    800.0   30\n3577    \u6768\u8fc7      \u4f1a\u8ba1       5566.0   2200    0.0     10\n3588    \u6731\u4e5d\u771f    \u4f1a\u8ba1       5566.0   2500    0.0     10\n4466    \u82d7\u4eba\u51e4    \u9500\u552e\u5458     3344.0   2500    0.0     30\n5234    \u90ed\u9756      \u51fa\u7eb3       5566.0   2000    0.0     10\n5566    \u5b8b\u8fdc\u6865    \u4f1a\u8ba1\u5e08     7800.0   4000    1000.0  10\n7800    \u5f20\u4e09\u4e30    \u603b\u88c1       0.0      9000    1200.0  20\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/74.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-3/#_4","title":"\u91cd\u590d\u503c","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5148\u7ed9\u4e4b\u524d\u7684\u90e8\u95e8\u8868\u6dfb\u52a0\u4e24\u884c\u6570\u636e\uff0c\u8ba9\u90e8\u95e8\u8868\u4e2d\u540d\u4e3a\u201c\u7814\u53d1\u90e8\u201d\u548c\u201c\u9500\u552e\u90e8\u201d\u7684\u90e8\u95e8\u5404\u6709\u4e24\u4e2a\u3002</p> <pre><code>dept_df.loc[50] = {'dname': '\u7814\u53d1\u90e8', 'dloc': '\u4e0a\u6d77'}\ndept_df.loc[60] = {'dname': '\u9500\u552e\u90e8', 'dloc': '\u957f\u6c99'}\ndept_df\n</code></pre> <p>\u8f93\u51fa:</p> <pre><code>    dname  dloc\ndno     \n10  \u4f1a\u8ba1\u90e8 \u5317\u4eac\n20  \u7814\u53d1\u90e8 \u6210\u90fd\n30  \u9500\u552e\u90e8 \u91cd\u5e86\n40  \u8fd0\u7ef4\u90e8 \u5929\u6d25\n50  \u7814\u53d1\u90e8 \u4e0a\u6d77\n60  \u9500\u552e\u90e8 \u957f\u6c99\n</code></pre> <p>\u73b0\u5728\uff0c\u6211\u4eec\u7684\u6570\u636e\u8868\u4e2d\u6709\u91cd\u590d\u6570\u636e\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>DataFrame</code>\u5bf9\u8c61\u7684<code>duplicated</code>\u65b9\u6cd5\u5224\u65ad\u662f\u5426\u5b58\u5728\u91cd\u590d\u503c\uff0c\u8be5\u65b9\u6cd5\u5728\u4e0d\u6307\u5b9a\u53c2\u6570\u65f6\u9ed8\u8ba4\u5224\u65ad\u884c\u7d22\u5f15\u662f\u5426\u91cd\u590d\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6307\u5b9a\u6839\u636e\u90e8\u95e8\u540d\u79f0<code>dname</code>\u5224\u65ad\u90e8\u95e8\u662f\u5426\u91cd\u590d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>dept_df.duplicated('dname')\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>dno\n10    False\n20    False\n30    False\n40    False\n50     True\n60     True\ndtype: bool\n</code></pre> <p>\u4ece\u4e0a\u9762\u7684\u8f93\u51fa\u53ef\u4ee5\u770b\u5230\uff0c<code>50</code>\u548c<code>60</code>\u4e24\u4e2a\u90e8\u95e8\u4ece\u90e8\u95e8\u540d\u79f0\u4e0a\u6765\u770b\u662f\u91cd\u590d\u7684\uff0c\u5982\u679c\u8981\u5220\u9664\u91cd\u590d\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528<code>drop_duplicates</code>\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7684<code>keep</code>\u53c2\u6570\u53ef\u4ee5\u63a7\u5236\u5728\u9047\u5230\u91cd\u590d\u503c\u65f6\uff0c\u4fdd\u7559\u7b2c\u4e00\u9879\u8fd8\u662f\u4fdd\u7559\u6700\u540e\u4e00\u9879\uff0c\u6216\u8005\u591a\u4e2a\u91cd\u590d\u9879\u4e00\u4e2a\u90fd\u4e0d\u7528\u4fdd\u7559\uff0c\u5168\u90e8\u5220\u9664\u6389\u3002</p> <pre><code>dept_df.drop_duplicates('dname')\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>    dname   dloc\ndno     \n10  \u4f1a\u8ba1\u90e8 \u5317\u4eac\n20  \u7814\u53d1\u90e8 \u6210\u90fd\n30  \u9500\u552e\u90e8 \u91cd\u5e86\n40  \u8fd0\u7ef4\u90e8 \u5929\u6d25\n</code></pre> <p>\u5c06<code>keep</code>\u53c2\u6570\u7684\u503c\u4fee\u6539\u4e3a<code>last</code>\u3002</p> <pre><code>dept_df.drop_duplicates('dname', keep='last')\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>    dname   dloc\ndno     \n10  \u4f1a\u8ba1\u90e8 \u5317\u4eac\n40  \u8fd0\u7ef4\u90e8 \u5929\u6d25\n50  \u7814\u53d1\u90e8 \u4e0a\u6d77\n60  \u9500\u552e\u90e8 \u957f\u6c99\n</code></pre> <p>\u4f7f\u7528\u540c\u6837\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6e05\u9664<code>all_emp_df</code>\u4e2d\u7684\u91cd\u590d\u6570\u636e\uff0c\u4f8b\u5982\u6211\u4eec\u8ba4\u5b9a\u201cename\u201d\u548c\u201cjob\u201d\u4e24\u4e2a\u5b57\u6bb5\u5b8c\u5168\u76f8\u540c\u7684\u5c31\u662f\u91cd\u590d\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u53bb\u9664\u91cd\u590d\u6570\u636e\u3002</p> <pre><code>all_emp_df.drop_duplicates(['ename', 'job'], inplace=True)\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u7684<code>drop_duplicates</code>\u65b9\u6cd5\u6dfb\u52a0\u4e86\u53c2\u6570<code>inplace=True</code>\uff0c\u8be5\u65b9\u6cd5\u4e0d\u4f1a\u8fd4\u56de\u65b0\u7684<code>DataFrame</code>\u5bf9\u8c61\uff0c\u800c\u662f\u5728\u539f\u6765\u7684<code>DataFrame</code>\u5bf9\u8c61\u4e0a\u76f4\u63a5\u5220\u9664\uff0c\u5927\u5bb6\u53ef\u4ee5\u67e5\u770b<code>all_emp_df</code>\u770b\u770b\u662f\u4e0d\u662f\u5df2\u7ecf\u79fb\u9664\u4e86\u91cd\u590d\u7684\u5458\u5de5\u6570\u636e\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/74.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-3/#_5","title":"\u5f02\u5e38\u503c","text":"<p>\u5f02\u5e38\u503c\u5728\u7edf\u8ba1\u5b66\u4e0a\u7684\u5168\u79f0\u662f\u7591\u4f3c\u5f02\u5e38\u503c\uff0c\u4e5f\u79f0\u4f5c\u79bb\u7fa4\u70b9\uff08outlier\uff09\uff0c\u5f02\u5e38\u503c\u7684\u5206\u6790\u4e5f\u79f0\u4f5c\u79bb\u7fa4\u70b9\u5206\u6790\u3002\u5f02\u5e38\u503c\u662f\u6307\u6837\u672c\u4e2d\u51fa\u73b0\u7684\u201c\u6781\u7aef\u503c\u201d\uff0c\u6570\u636e\u503c\u770b\u8d77\u6765\u5f02\u5e38\u5927\u6216\u5f02\u5e38\u5c0f\uff0c\u5176\u5206\u5e03\u660e\u663e\u504f\u79bb\u5176\u4f59\u7684\u89c2\u6d4b\u503c\u3002\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u6709\u4e9b\u5f02\u5e38\u503c\u53ef\u80fd\u662f\u7531\u7cfb\u7edf\u6216\u4eba\u4e3a\u539f\u56e0\u9020\u6210\u7684\uff0c\u4f46\u6709\u4e9b\u5f02\u5e38\u503c\u5374\u4e0d\u662f\uff0c\u5b83\u4eec\u80fd\u591f\u91cd\u590d\u4e14\u7a33\u5b9a\u7684\u51fa\u73b0\uff0c\u5c5e\u4e8e\u6b63\u5e38\u7684\u6781\u7aef\u503c\uff0c\u4f8b\u5982\u5f88\u591a\u6e38\u620f\u4ea7\u54c1\u4e2d\u5934\u90e8\u73a9\u5bb6\u7684\u6570\u636e\u5f80\u5f80\u90fd\u662f\u79bb\u7fa4\u7684\u6781\u7aef\u503c\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u65e2\u4e0d\u80fd\u5ffd\u89c6\u5f02\u5e38\u503c\u7684\u5b58\u5728\uff0c\u4e5f\u4e0d\u80fd\u7b80\u5355\u5730\u628a\u5f02\u5e38\u503c\u4ece\u6570\u636e\u5206\u6790\u4e2d\u5254\u9664\u3002\u91cd\u89c6\u5f02\u5e38\u503c\u7684\u51fa\u73b0\uff0c\u5206\u6790\u5176\u4ea7\u751f\u7684\u539f\u56e0\uff0c\u5e38\u5e38\u6210\u4e3a\u53d1\u73b0\u95ee\u9898\u8fdb\u800c\u6539\u8fdb\u51b3\u7b56\u7684\u5951\u673a\u3002</p> <p>\u5f02\u5e38\u503c\u7684\u68c0\u6d4b\u6709Z-score \u65b9\u6cd5\u3001IQR \u65b9\u6cd5\u3001DBScan \u805a\u7c7b\u3001\u5b64\u7acb\u68ee\u6797\u7b49\uff0c\u8fd9\u91cc\u6211\u4eec\u5bf9\u524d\u4e24\u79cd\u65b9\u6cd5\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u4ecb\u7ecd\u3002</p> <p></p> <p>\u5982\u679c\u6570\u636e\u670d\u4ece\u6b63\u6001\u5206\u5e03\uff0c\u4f9d\u636e3\u03c3\u6cd5\u5219\uff0c\u5f02\u5e38\u503c\u88ab\u5b9a\u4e49\u4e0e\u5e73\u5747\u503c\u7684\u504f\u5dee\u8d85\u8fc7\u4e09\u500d\u6807\u51c6\u5dee\u7684\u503c\u3002\u5728\u6b63\u6001\u5206\u5e03\u4e0b\uff0c\u8ddd\u79bb\u5e73\u5747\u503c3\u03c3\u4e4b\u5916\u7684\u503c\u51fa\u73b0\u7684\u6982\u7387\u4e3a\\(P(|x-\\mu|&gt;3\\sigma)&lt;0.003\\)\uff0c\u5c5e\u4e8e\u5c0f\u6982\u7387\u4e8b\u4ef6\u3002\u5982\u679c\u6570\u636e\u4e0d\u670d\u4ece\u6b63\u6001\u5206\u5e03\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528\u8fdc\u79bb\u5747\u503c\u7684\u591a\u5c11\u500d\u7684\u6807\u51c6\u5dee\u6765\u63cf\u8ff0\uff0c\u8fd9\u91cc\u7684\u500d\u6570\u5c31\u662fZ-score\u3002Z-score\u4ee5\u6807\u51c6\u5dee\u4e3a\u5355\u4f4d\u53bb\u5ea6\u91cf\u67d0\u4e00\u539f\u59cb\u5206\u6570\u504f\u79bb\u5e73\u5747\u503c\u7684\u8ddd\u79bb\uff0c\u516c\u5f0f\u5982\u4e0b\u6240\u793a\u3002 $$ z = \\frac {X - \\mu} {\\sigma} \\ |z| &gt; 3 $$ Z-score\u9700\u8981\u6839\u636e\u7ecf\u9a8c\u548c\u5b9e\u9645\u60c5\u51b5\u6765\u51b3\u5b9a\uff0c\u901a\u5e38\u628a\u8fdc\u79bb\u6807\u51c6\u5dee<code>3</code>\u500d\u8ddd\u79bb\u4ee5\u4e0a\u7684\u6570\u636e\u70b9\u89c6\u4e3a\u79bb\u7fa4\u70b9\uff0c\u4e0b\u9762\u7684\u4ee3\u7ed9\u51fa\u4e86\u5982\u4f55\u901a\u8fc7Z-score\u65b9\u6cd5\u68c0\u6d4b\u5f02\u5e38\u503c\u3002</p> <pre><code>def detect_outliers_zscore(data, threshold=3):\n    avg_value = np.mean(data)\n    std_value = np.std(data)\n    z_score = np.abs((data - avg_value) / std_value)\n    return data[z_score &gt; threshold]\n</code></pre> <p>IQR \u65b9\u6cd5\u4e2d\u7684IQR\uff08Inter-Quartile Range\uff09\u4ee3\u8868\u56db\u5206\u4f4d\u8ddd\u79bb\uff0c\u5373\u4e0a\u56db\u5206\u4f4d\u6570\uff08Q3\uff09\u548c\u4e0b\u56db\u5206\u4f4d\u6570\uff08Q1\uff09\u7684\u5dee\u503c\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u5c0f\u4e8e \\(Q1 - 1.5 \\times IQR\\) \u6216\u5927\u4e8e \\(Q3 + 1.5 \\times IQR\\) \u7684\u5c31\u662f\u5f02\u5e38\u503c\uff0c\u800c\u8fd9\u79cd\u68c0\u6d4b\u5f02\u5e38\u503c\u7684\u65b9\u6cd5\u4e5f\u662f\u7bb1\u7ebf\u56fe\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u9ed8\u8ba4\u4f7f\u7528\u7684\u65b9\u6cd5\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u7ed9\u51fa\u4e86\u5982\u4f55\u901a\u8fc7 IQR \u65b9\u6cd5\u68c0\u6d4b\u5f02\u5e38\u503c\u3002</p> <pre><code>def detect_outliers_iqr(data, whis=1.5):\n    q1, q3 = np.quantile(data, [0.25, 0.75])\n    iqr = q3 - q1\n    lower, upper = q1 - whis * iqr, q3 + whis * iqr\n    return data[(data &lt; lower) | (data &gt; upper)]\n</code></pre> <p>\u5982\u679c\u8981\u5220\u9664\u5f02\u5e38\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528<code>DataFrame</code>\u5bf9\u8c61\u7684<code>drop</code>\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u6839\u636e\u884c\u7d22\u5f15\u6216\u5217\u7d22\u5f15\u5220\u9664\u6307\u5b9a\u7684\u884c\u6216\u5217\u3002\u4f8b\u5982\u6211\u4eec\u8ba4\u4e3a\u6708\u85aa\u4f4e\u4e8e<code>2000</code>\u6216\u9ad8\u4e8e<code>8000</code>\u7684\u662f\u5458\u5de5\u8868\u4e2d\u7684\u5f02\u5e38\u503c\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u5220\u9664\u5bf9\u5e94\u7684\u8bb0\u5f55\u3002</p> <pre><code>emp_df.drop(emp_df[(emp_df.sal &gt; 8000) | (emp_df.sal &lt; 2000)].index)\n</code></pre> <p>\u5982\u679c\u8981\u66ff\u6362\u6389\u5f02\u5e38\u503c\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ed9\u5355\u5143\u683c\u8d4b\u503c\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>replace</code>\u65b9\u6cd5\u5c06\u6307\u5b9a\u7684\u503c\u66ff\u6362\u6389\u3002\u4f8b\u5982\u6211\u4eec\u8981\u5c06\u6708\u85aa\u4e3a<code>1800</code>\u548c<code>9000</code>\u7684\u66ff\u6362\u4e3a\u6708\u85aa\u7684\u5e73\u5747\u503c\uff0c\u8865\u8d34\u4e3a<code>800</code>\u7684\u66ff\u6362\u4e3a<code>1000</code>\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>avg_sal = np.mean(emp_df.sal).astype(int)\nemp_df.replace({'sal': [1800, 9000], 'comm': 800}, {'sal': avg_sal, 'comm': 1000})\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/74.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-3/#_6","title":"\u9884\u5904\u7406","text":"<p>\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u5904\u7406\u4e5f\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u8bdd\u9898\uff0c\u5b83\u5305\u542b\u4e86\u5bf9\u6570\u636e\u7684\u62c6\u89e3\u3001\u53d8\u6362\u3001\u5f52\u7ea6\u3001\u79bb\u6563\u5316\u7b49\u64cd\u4f5c\u3002\u6211\u4eec\u5148\u6765\u770b\u770b\u6570\u636e\u7684\u62c6\u89e3\u3002\u5982\u679c\u6570\u636e\u8868\u4e2d\u7684\u6570\u636e\u662f\u4e00\u4e2a\u65f6\u95f4\u65e5\u671f\uff0c\u6211\u4eec\u901a\u5e38\u90fd\u9700\u8981\u4ece\u5e74\u3001\u5b63\u5ea6\u3001\u6708\u3001\u65e5\u3001\u661f\u671f\u3001\u5c0f\u65f6\u3001\u5206\u949f\u7b49\u7ef4\u5ea6\u5bf9\u5176\u8fdb\u884c\u62c6\u89e3\uff0c\u5982\u679c\u65f6\u95f4\u65e5\u671f\u662f\u7528\u5b57\u7b26\u4e32\u8868\u793a\u7684\uff0c\u53ef\u4ee5\u5148\u901a\u8fc7<code>pandas</code>\u7684<code>to_datetime</code>\u51fd\u6570\u5c06\u5176\u5904\u7406\u6210\u65f6\u95f4\u65e5\u671f\u3002</p> <p>\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5148\u8bfb\u53d6 Excel \u6587\u4ef6\uff0c\u83b7\u53d6\u5230\u4e00\u7ec4\u9500\u552e\u6570\u636e\uff0c\u5176\u4e2d\u7b2c\u4e00\u5217\u5c31\u662f\u9500\u552e\u65e5\u671f\uff0c\u6211\u4eec\u5c06\u5176\u62c6\u89e3\u4e3a\u201c\u6708\u4efd\u201d\u3001\u201c\u5b63\u5ea6\u201d\u548c\u201c\u661f\u671f\u201d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>sales_df = pd.read_excel(\n    'data/2020\u5e74\u9500\u552e\u6570\u636e.xlsx',\n    usecols=['\u9500\u552e\u65e5\u671f', '\u9500\u552e\u533a\u57df', '\u9500\u552e\u6e20\u9053', '\u54c1\u724c', '\u9500\u552e\u989d']\n)\nsales_df.info()\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u76f8\u5bf9\u8def\u5f84\u6765\u83b7\u53d6 Excel \u6587\u4ef6\uff0c\u4e5f\u5c31\u662f\u8bf4 Excel \u6587\u4ef6\u5728\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u4e0b\u540d\u4e3a<code>data</code>\u7684\u6587\u4ef6\u5939\u4e2d\u3002\u5982\u679c\u9700\u8981\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684 Excel \u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u767e\u5ea6\u4e91\u76d8\u5730\u5740\u8fdb\u884c\u83b7\u53d6\u3002\u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g\uff0c\u63d0\u53d6\u7801\uff1ae7b4\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 1945 entries, 0 to 1944\nData columns (total 5 columns):\n #   Column  Non-Null Count  Dtype         \n---  ------  --------------  -----         \n 0   \u9500\u552e\u65e5\u671f    1945 non-null   datetime64[ns]\n 1   \u9500\u552e\u533a\u57df    1945 non-null   object        \n 2   \u9500\u552e\u6e20\u9053    1945 non-null   object        \n 3   \u54c1\u724c        1945 non-null   object        \n 4   \u9500\u552e\u989d      1945 non-null   int64         \ndtypes: datetime64[ns](1), int64(1), object(3)\nmemory usage: 76.1+ KB\n</code></pre> <pre><code>sales_df['\u6708\u4efd'] = sales_df['\u9500\u552e\u65e5\u671f'].dt.month\nsales_df['\u5b63\u5ea6'] = sales_df['\u9500\u552e\u65e5\u671f'].dt.quarter\nsales_df['\u661f\u671f'] = sales_df['\u9500\u552e\u65e5\u671f'].dt.weekday\nsales_df\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>        \u9500\u552e\u65e5\u671f     \u9500\u552e\u533a\u57df   \u9500\u552e\u6e20\u9053    \u54c1\u724c    \u9500\u552e\u989d   \u6708\u4efd  \u5b63\u5ea6  \u661f\u671f\n0       2020-01-01  \u4e0a\u6d77       \u62fc\u591a\u591a     \u516b\u5339\u9a6c   8217     1    1     2\n1       2020-01-01  \u4e0a\u6d77       \u6296\u97f3       \u516b\u5339\u9a6c   6351     1    1     2\n2       2020-01-01  \u4e0a\u6d77       \u5929\u732b       \u516b\u5339\u9a6c   14365    1    1     2\n3       2020-01-01  \u4e0a\u6d77       \u5929\u732b       \u516b\u5339\u9a6c   2366     1    1     2\n4       2020-01-01  \u4e0a\u6d77       \u5929\u732b       \u76ae\u76ae\u867e   15189    1    1     2\n...     ...         ...        ...       ...      ...     ...  ...   ...\n1940    2020-12-30  \u5317\u4eac       \u4eac\u4e1c       \u82b1\u82b1\u59d1\u5a18 6994     12   4     2\n1941    2020-12-30  \u798f\u5efa       \u5b9e\u4f53       \u516b\u5339\u9a6c   7663     12   4     2\n1942    2020-12-31  \u798f\u5efa       \u5b9e\u4f53       \u82b1\u82b1\u59d1\u5a18 14795    12   4     3\n1943    2020-12-31  \u798f\u5efa       \u6296\u97f3       \u516b\u5339\u9a6c   3481     12   4     3\n1944    2020-12-31  \u798f\u5efa       \u5929\u732b       \u516b\u5339\u9a6c   2673     12   4     3\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u901a\u8fc7\u65e5\u671f\u65f6\u95f4\u7c7b\u578b\u7684<code>Series</code>\u5bf9\u8c61\u7684<code>dt</code> \u5c5e\u6027\uff0c\u83b7\u5f97\u4e00\u4e2a\u8bbf\u95ee\u65e5\u671f\u65f6\u95f4\u7684\u5bf9\u8c61\uff0c\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684<code>year</code>\u3001<code>month</code>\u3001<code>quarter</code>\u3001<code>hour</code>\u7b49\u5c5e\u6027\uff0c\u5c31\u53ef\u4ee5\u83b7\u53d6\u5230\u5e74\u3001\u6708\u3001\u5b63\u5ea6\u3001\u5c0f\u65f6\u7b49\u65f6\u95f4\u4fe1\u606f\uff0c\u83b7\u53d6\u5230\u7684\u4ecd\u7136\u662f\u4e00\u4e2a<code>Series</code>\u5bf9\u8c61\uff0c\u5b83\u5305\u542b\u4e86\u4e00\u7ec4\u65f6\u95f4\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u5e38\u4e5f\u5c06\u8fd9\u4e2a<code>dt</code>\u5c5e\u6027\u79f0\u4e3a\u201c\u65e5\u671f\u65f6\u95f4\u5411\u91cf\u201d\u3002</p> <p>\u6211\u4eec\u518d\u6765\u8bf4\u4e00\u8bf4\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6570\u636e\u7684\u5904\u7406\uff0c\u6211\u4eec\u5148\u4ece\u6307\u5b9a\u7684 Excel \u6587\u4ef6\u4e2d\u8bfb\u53d6\u67d0\u62db\u8058\u7f51\u7ad9\u7684\u62db\u8058\u6570\u636e\u3002</p> <pre><code>jobs_df = pd.read_csv(\n    'data/\u67d0\u62db\u8058\u7f51\u7ad9\u62db\u8058\u6570\u636e.csv',\n    usecols=['city', 'companyFullName', 'positionName', 'salary']\n)\njobs_df.info()\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u76f8\u5bf9\u8def\u5f84\u6765\u83b7\u53d6 CSV \u6587\u4ef6\uff0c\u4e5f\u5c31\u662f\u8bf4 CSV \u6587\u4ef6\u5728\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u4e0b\u540d\u4e3a<code>data</code>\u7684\u6587\u4ef6\u5939\u4e2d\u3002\u5982\u679c\u9700\u8981\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684 CSV \u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u767e\u5ea6\u4e91\u76d8\u5730\u5740\u8fdb\u884c\u83b7\u53d6\u3002\u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g\uff0c\u63d0\u53d6\u7801\uff1ae7b4\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 3140 entries, 0 to 3139\nData columns (total 4 columns):\n #   Column           Non-Null Count  Dtype \n---  ------           --------------  ----- \n 0   city             3140 non-null   object\n 1   companyFullName  3140 non-null   object\n 2   positionName     3140 non-null   object\n 3   salary           3140 non-null   object\ndtypes: object(4)\nmemory usage: 98.2+ KB\n</code></pre> <p>\u67e5\u770b\u524d<code>5</code>\u6761\u6570\u636e\u3002</p> <pre><code>jobs_df.head()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>    city    companyFullName              positionName    salary\n0   \u5317\u4eac    \u8fbe\u7586\u7f51\u7edc\u79d1\u6280\uff08\u4e0a\u6d77\uff09\u6709\u9650\u516c\u53f8    \u6570\u636e\u5206\u6790\u5c97       15k-30k\n1   \u5317\u4eac    \u5317\u4eac\u97f3\u5a31\u65f6\u5149\u79d1\u6280\u6709\u9650\u516c\u53f8        \u6570\u636e\u5206\u6790        10k-18k\n2   \u5317\u4eac    \u5317\u4eac\u5343\u559c\u9e64\u9910\u996e\u7ba1\u7406\u6709\u9650\u516c\u53f8      \u6570\u636e\u5206\u6790        20k-30k\n3   \u5317\u4eac    \u5409\u6797\u7701\u6d77\u751f\u7535\u5b50\u5546\u52a1\u6709\u9650\u516c\u53f8      \u6570\u636e\u5206\u6790        33k-50k\n4   \u5317\u4eac    \u97e6\u535a\u7f51\u8baf\u79d1\u6280\uff08\u5317\u4eac\uff09\u6709\u9650\u516c\u53f8    \u6570\u636e\u5206\u6790        10k-15k\n</code></pre> <p>\u4e0a\u9762\u7684\u6570\u636e\u8868\u4e00\u5171\u6709<code>3140</code>\u6761\u6570\u636e\uff0c\u4f46\u5e76\u975e\u6240\u6709\u7684\u804c\u4f4d\u90fd\u662f\u201c\u6570\u636e\u5206\u6790\u201d\u7684\u5c97\u4f4d\uff0c\u5982\u679c\u8981\u7b5b\u9009\u51fa\u6570\u636e\u5206\u6790\u7684\u5c97\u4f4d\uff0c\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5<code>positionName</code>\u5b57\u6bb5\u662f\u5426\u5305\u542b\u201c\u6570\u636e\u5206\u6790\u201d\u8fd9\u4e2a\u5173\u952e\u8bcd\uff0c\u8fd9\u91cc\u9700\u8981\u6a21\u7cca\u5339\u914d\uff0c\u5e94\u8be5\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5148\u83b7\u53d6<code>positionName</code>\u5217\uff0c\u56e0\u4e3a\u8fd9\u4e2a<code>Series</code>\u5bf9\u8c61\u7684<code>dtype</code>\u662f\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7<code>str</code>\u5c5e\u6027\u83b7\u53d6\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u5411\u91cf\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5229\u7528\u6211\u4eec\u719f\u6089\u7684\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\u6765\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>jobs_df = jobs_df[jobs_df.positionName.str.contains('\u6570\u636e\u5206\u6790')]\njobs_df.shape\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>(1515, 4)\n</code></pre> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u7b5b\u9009\u540e\u7684\u6570\u636e\u8fd8\u6709<code>1515</code>\u6761\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5bf9<code>salary</code>\u5b57\u6bb5\u8fdb\u884c\u5904\u7406\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u7edf\u8ba1\u6240\u6709\u5c97\u4f4d\u7684\u5e73\u5747\u5de5\u8d44\u6216\u6bcf\u4e2a\u57ce\u5e02\u7684\u5e73\u5747\u5de5\u8d44\uff0c\u9996\u5148\u9700\u8981\u5c06\u7528\u8303\u56f4\u8868\u793a\u7684\u5de5\u8d44\u5904\u7406\u6210\u5176\u4e2d\u95f4\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>jobs_df.salary.str.extract(r'(\\d+)[kK]?-(\\d+)[kK]?')\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u6355\u83b7\u7ec4\u4ece\u5b57\u7b26\u4e32\u4e2d\u62bd\u53d6\u51fa\u4e24\u7ec4\u6570\u5b57\uff0c\u5206\u522b\u5bf9\u5e94\u5de5\u8d44\u7684\u4e0b\u9650\u548c\u4e0a\u9650\uff0c\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0d\u719f\u6089\u7684\u8bfb\u8005\uff0c\u53ef\u4ee5\u9605\u8bfb\u77e5\u4e4e\u4e13\u680f\u201c\u4ece\u96f6\u5f00\u59cb\u5b66Python\u201d\u4e2d\u7684\u300a\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5e94\u7528\u300b\u4e00\u6587\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>        0     1\n0       15    30\n1       10    18\n2       20    30\n3       33    50\n4       10    15\n...     ...   ...\n3065    8     10\n3069    6     10\n3070    2     4\n3071    6     12\n3088    8     12\n</code></pre> <p>\u9700\u8981\u63d0\u9192\u5927\u5bb6\u7684\u662f\uff0c\u62bd\u53d6\u51fa\u6765\u7684\u4e24\u5217\u6570\u636e\u90fd\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u503c\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u8f6c\u6362\u6210<code>int</code>\u7c7b\u578b\uff0c\u624d\u80fd\u8ba1\u7b97\u5e73\u5747\u503c\uff0c\u5bf9\u5e94\u7684\u65b9\u6cd5\u662f<code>DataFrame</code>\u5bf9\u8c61\u7684<code>applymap</code>\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u8be5\u51fd\u6570\u4f1a\u4f5c\u7528\u4e8e<code>DataFrame</code>\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u3002\u5b8c\u6210\u8fd9\u4e00\u6b65\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528<code>apply</code>\u65b9\u6cd5\u5c06\u4e0a\u9762\u7684<code>DataFrame</code>\u5904\u7406\u6210\u4e2d\u95f4\u503c\uff0c<code>apply</code>\u65b9\u6cd5\u7684\u53c2\u6570\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a<code>axis</code>\u53c2\u6570\u4f7f\u5176\u4f5c\u7528\u4e8e<code>DataFrame</code> \u5bf9\u8c61\u7684\u884c\u6216\u5217\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>temp_df = jobs_df.salary.str.extract(r'(\\d+)[kK]?-(\\d+)[kK]?').applymap(int)\ntemp_df.apply(np.mean, axis=1)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>0       22.5\n1       14.0\n2       25.0\n3       41.5\n4       12.5\n        ... \n3065    9.0\n3069    8.0\n3070    3.0\n3071    9.0\n3088    10.0\nLength: 1515, dtype: float64\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0a\u9762\u7684\u7ed3\u679c\u66ff\u6362\u6389\u539f\u6765\u7684<code>salary</code>\u5217\u6216\u8005\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u5217\u6765\u8868\u793a\u804c\u4f4d\u5bf9\u5e94\u7684\u5de5\u8d44\uff0c\u5b8c\u6574\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>temp_df = jobs_df.salary.str.extract(r'(\\d+)[kK]?-(\\d+)[kK]?').applymap(int)\njobs_df['salary'] = temp_df.apply(np.mean, axis=1)\njobs_df.head()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>    city    companyFullName              positionName    salary\n0   \u5317\u4eac    \u8fbe\u7586\u7f51\u7edc\u79d1\u6280\uff08\u4e0a\u6d77\uff09\u6709\u9650\u516c\u53f8    \u6570\u636e\u5206\u6790\u5c97       22.5\n1   \u5317\u4eac    \u5317\u4eac\u97f3\u5a31\u65f6\u5149\u79d1\u6280\u6709\u9650\u516c\u53f8        \u6570\u636e\u5206\u6790        14.0\n2   \u5317\u4eac    \u5317\u4eac\u5343\u559c\u9e64\u9910\u996e\u7ba1\u7406\u6709\u9650\u516c\u53f8      \u6570\u636e\u5206\u6790        25.0\n3   \u5317\u4eac    \u5409\u6797\u7701\u6d77\u751f\u7535\u5b50\u5546\u52a1\u6709\u9650\u516c\u53f8      \u6570\u636e\u5206\u6790        41.5\n4   \u5317\u4eac    \u97e6\u535a\u7f51\u8baf\u79d1\u6280\uff08\u5317\u4eac\uff09\u6709\u9650\u516c\u53f8    \u6570\u636e\u5206\u6790        12.5\n</code></pre> <p><code>applymap</code>\u548c<code>apply</code>\u4e24\u4e2a\u65b9\u6cd5\u5728\u6570\u636e\u9884\u5904\u7406\u7684\u65f6\u5019\u7ecf\u5e38\u7528\u5230\uff0c<code>Series</code>\u5bf9\u8c61\u4e5f\u6709<code>apply</code>\u65b9\u6cd5\uff0c\u4e5f\u662f\u7528\u4e8e\u6570\u636e\u7684\u9884\u5904\u7406\uff0c\u4f46\u662f<code>DataFrame</code>\u5bf9\u8c61\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3a<code>transform</code> \u7684\u65b9\u6cd5\uff0c\u4e5f\u662f\u901a\u8fc7\u4f20\u5165\u7684\u51fd\u6570\u5bf9\u6570\u636e\u8fdb\u884c\u53d8\u6362\uff0c\u7c7b\u4f3c<code>Series</code>\u5bf9\u8c61\u7684<code>map</code>\u65b9\u6cd5\u3002\u9700\u8981\u5f3a\u8c03\u7684\u662f\uff0c<code>apply</code>\u65b9\u6cd5\u5177\u6709\u5f52\u7ea6\u6548\u679c\u7684\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u80fd\u5c06\u8f83\u591a\u7684\u6570\u636e\u5904\u7406\u6210\u8f83\u5c11\u7684\u6570\u636e\u6216\u4e00\u6761\u6570\u636e\uff1b\u800c<code>transform</code>\u65b9\u6cd5\u6ca1\u6709\u5f52\u7ea6\u6548\u679c\uff0c\u53ea\u80fd\u5bf9\u6570\u636e\u8fdb\u884c\u53d8\u6362\uff0c\u539f\u6765\u6709\u591a\u5c11\u6761\u6570\u636e\uff0c\u5904\u7406\u540e\u8fd8\u662f\u6709\u591a\u5c11\u6761\u6570\u636e\u3002</p> <p>\u5982\u679c\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u6df1\u5ea6\u7684\u5206\u6790\u548c\u6316\u6398\uff0c\u5b57\u7b26\u4e32\u3001\u65e5\u671f\u65f6\u95f4\u8fd9\u6837\u7684\u975e\u6570\u503c\u7c7b\u578b\u90fd\u9700\u8981\u5904\u7406\u6210\u6570\u503c\uff0c\u56e0\u4e3a\u975e\u6570\u503c\u7c7b\u578b\u6ca1\u6709\u529e\u6cd5\u8ba1\u7b97\u76f8\u5173\u6027\uff0c\u4e5f\u6ca1\u6709\u529e\u6cd5\u8fdb\u884c\\(\\chi^2\\)\u68c0\u9a8c\u7b49\u64cd\u4f5c\u3002\u5bf9\u4e8e\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u901a\u5e38\u53ef\u4ee5\u5176\u5206\u4e3a\u4ee5\u4e0b\u4e09\u7c7b\uff0c\u518d\u8fdb\u884c\u5bf9\u5e94\u7684\u5904\u7406\u3002</p> <ol> <li>\u6709\u5e8f\u53d8\u91cf\uff08Ordinal Variable\uff09\uff1a\u5b57\u7b26\u4e32\u8868\u793a\u7684\u6570\u636e\u6709\u987a\u5e8f\u5173\u7cfb\uff0c\u90a3\u4e48\u53ef\u4ee5\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u5e8f\u53f7\u5316\u5904\u7406\u3002</li> <li>\u5206\u7c7b\u53d8\u91cf\uff08Categorical Variable\uff09/ \u540d\u4e49\u53d8\u91cf\uff08Nominal Variable\uff09\uff1a\u5b57\u7b26\u4e32\u8868\u793a\u7684\u6570\u636e\u6ca1\u6709\u5927\u5c0f\u5173\u7cfb\u548c\u7b49\u7ea7\u4e4b\u5206\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4f7f\u7528\u72ec\u70ed\u7f16\u7801\u7684\u65b9\u5f0f\u5904\u7406\u6210\u54d1\u53d8\u91cf\uff08\u865a\u62df\u53d8\u91cf\uff09\u77e9\u9635\u3002</li> <li>\u5b9a\u8ddd\u53d8\u91cf\uff08Scale Variable\uff09\uff1a\u5b57\u7b26\u4e32\u672c\u8d28\u4e0a\u5bf9\u5e94\u5230\u4e00\u4e2a\u6709\u5927\u5c0f\u9ad8\u4f4e\u4e4b\u5206\u7684\u6570\u636e\uff0c\u800c\u4e14\u53ef\u4ee5\u8fdb\u884c\u52a0\u51cf\u8fd0\u7b97\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5c06\u5b57\u7b26\u4e32\u5904\u7406\u6210\u5bf9\u5e94\u7684\u6570\u503c\u5373\u53ef\u3002</li> </ol> <p>\u5bf9\u4e8e\u7b2c1\u7c7b\u548c\u7b2c3\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0a\u9762\u63d0\u5230\u7684<code>apply</code>\u6216<code>transform</code>\u65b9\u6cd5\u6765\u5904\u7406\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528<code>scikit-learn</code>\u4e2d\u7684<code>OrdinalEncoder</code>\u5904\u7406\u7b2c1\u7c7b\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e2a\u6211\u4eec\u5728\u540e\u7eed\u7684\u8bfe\u7a0b\u4e2d\u4f1a\u8bb2\u5230\u3002\u5bf9\u4e8e\u7b2c2\u7c7b\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528<code>pandas</code>\u7684<code>get_dummies()</code>\u51fd\u6570\u6765\u751f\u6210\u54d1\u53d8\u91cf\uff08\u865a\u62df\u53d8\u91cf\uff09\u77e9\u9635\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>persons_df = pd.DataFrame(\n    data={\n        '\u59d3\u540d': ['\u5173\u7fbd', '\u5f20\u98de', '\u8d75\u4e91', '\u9a6c\u8d85', '\u9ec4\u5fe0'],\n        '\u804c\u4e1a': ['\u533b\u751f', '\u533b\u751f', '\u7a0b\u5e8f\u5458', '\u753b\u5bb6', '\u6559\u5e08'],\n        '\u5b66\u5386': ['\u7814\u7a76\u751f', '\u5927\u4e13', '\u7814\u7a76\u751f', '\u9ad8\u4e2d', '\u672c\u79d1']\n    }\n)\npersons_df\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>    \u59d3\u540d  \u804c\u4e1a  \u5b66\u5386\n0   \u5173\u7fbd  \u533b\u751f  \u7814\u7a76\u751f\n1   \u5f20\u98de  \u533b\u751f  \u5927\u4e13\n2   \u8d75\u4e91  \u7a0b\u5e8f\u5458 \u7814\u7a76\u751f\n3   \u9a6c\u8d85  \u753b\u5bb6  \u9ad8\u4e2d\n4   \u9ec4\u5fe0  \u6559\u5e08  \u672c\u79d1\n</code></pre> <p>\u5c06\u804c\u4e1a\u5904\u7406\u6210\u54d1\u53d8\u91cf\u77e9\u9635\u3002</p> <pre><code>pd.get_dummies(persons_df['\u804c\u4e1a'])\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>    \u533b\u751f \u6559\u5e08  \u753b\u5bb6  \u7a0b\u5e8f\u5458\n0   1    0    0    0\n1   1    0    0    0\n2   0    0    0    1\n3   0    0    1    0\n4   0    1    0    0\n</code></pre> <p>\u5c06\u5b66\u5386\u5904\u7406\u6210\u5927\u5c0f\u4e0d\u540c\u7684\u503c\u3002</p> <pre><code>def handle_education(x):\n    edu_dict = {'\u9ad8\u4e2d': 1, '\u5927\u4e13': 3, '\u672c\u79d1': 5, '\u7814\u7a76\u751f': 10}\n    return edu_dict.get(x, 0)\n\n\npersons_df['\u5b66\u5386'].apply(handle_education)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>0    10\n1     3\n2    10\n3     1\n4     5\nName: \u5b66\u5386, dtype: int64\n</code></pre> <p>\u6211\u4eec\u518d\u6765\u8bf4\u8bf4\u6570\u636e\u79bb\u6563\u5316\u3002\u79bb\u6563\u5316\u4e5f\u53eb\u5206\u7bb1\uff0c\u5982\u679c\u53d8\u91cf\u7684\u53d6\u503c\u662f\u8fde\u7eed\u503c\uff0c\u90a3\u4e48\u5b83\u7684\u53d6\u503c\u6709\u65e0\u6570\u79cd\u53ef\u80fd\uff0c\u5728\u8fdb\u884c\u6570\u636e\u5206\u7ec4\u7684\u65f6\u5019\u5c31\u4f1a\u975e\u5e38\u7684\u4e0d\u65b9\u4fbf\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c06\u8fde\u7eed\u53d8\u91cf\u79bb\u6563\u5316\u5c31\u663e\u5f97\u975e\u5e38\u91cd\u8981\u3002\u4e4b\u6240\u4ee5\u628a\u79bb\u6563\u5316\u53eb\u505a\u5206\u7bb1\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u9884\u5148\u8bbe\u7f6e\u4e00\u4e9b\u7bb1\u5b50\uff0c\u6bcf\u4e2a\u7bb1\u5b50\u4ee3\u8868\u4e86\u6570\u636e\u53d6\u503c\u7684\u8303\u56f4\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u8fde\u7eed\u7684\u503c\u5206\u914d\u5230\u4e0d\u540c\u7684\u7bb1\u5b50\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u79bb\u6563\u5316\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u8bfb\u53d6\u4e862018\u5e74\u5317\u4eac\u79ef\u5206\u843d\u6237\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u843d\u6237\u79ef\u5206\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7ec4\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>luohu_df = pd.read_csv('data/2018\u5e74\u5317\u4eac\u79ef\u5206\u843d\u6237\u6570\u636e.csv', index_col='id')\nluohu_df.score.describe()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>count    6019.000000\nmean       95.654552\nstd         4.354445\nmin        90.750000\n25%        92.330000\n50%        94.460000\n75%        97.750000\nmax       122.590000\nName: score, dtype: float64\n</code></pre> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u843d\u6237\u79ef\u5206\u7684\u6700\u5927\u503c\u662f<code>122.59</code>\uff0c\u6700\u5c0f\u503c\u662f<code>90.75</code>\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u4ece<code>90</code>\u5206\u5230<code>125</code>\u5206\uff0c\u6bcf<code>5</code>\u5206\u4e00\u7ec4\u7684<code>7</code>\u4e2a\u7bb1\u5b50\uff0c<code>pandas</code>\u7684<code>cut</code>\u51fd\u6570\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u9996\u5148\u6570\u636e\u5206\u7bb1\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>bins = np.arange(90, 126, 5)\npd.cut(luohu_df.score, bins, right=False)\n</code></pre> <p>\u8bf4\u660e\uff1a<code>cut</code>\u51fd\u6570\u7684<code>right</code>\u53c2\u6570\u9ed8\u8ba4\u503c\u4e3a<code>True</code>\uff0c\u8868\u793a\u7bb1\u5b50\u5de6\u5f00\u53f3\u95ed\uff1b\u4fee\u6539\u4e3a<code>False</code>\u53ef\u4ee5\u8ba9\u7bb1\u5b50\u7684\u53f3\u8fb9\u754c\u4e3a\u5f00\u533a\u95f4\uff0c\u5de6\u8fb9\u754c\u4e3a\u95ed\u533a\u95f4\uff0c\u5927\u5bb6\u770b\u770b\u4e0b\u9762\u7684\u8f93\u51fa\u5c31\u660e\u767d\u4e86\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>id\n1       [120, 125)\n2       [120, 125)\n3       [115, 120)\n4       [115, 120)\n5       [115, 120)\n           ...    \n6015      [90, 95)\n6016      [90, 95)\n6017      [90, 95)\n6018      [90, 95)\n6019      [90, 95)\nName: score, Length: 6019, dtype: category\nCategories (7, interval[int64, left]): [[90, 95) &lt; [95, 100) &lt; [100, 105) &lt; [105, 110) &lt; [110, 115) &lt; [115, 120) &lt; [120, 125)]\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5206\u7bb1\u7684\u7ed3\u679c\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7ec4\uff0c\u7136\u540e\u4f7f\u7528\u805a\u5408\u51fd\u6570\u5bf9\u6bcf\u4e2a\u7ec4\u8fdb\u884c\u7edf\u8ba1\uff0c\u8fd9\u662f\u6570\u636e\u5206\u6790\u4e2d\u7ecf\u5e38\u7528\u5230\u7684\u64cd\u4f5c\uff0c\u4e0b\u4e00\u4e2a\u7ae0\u8282\u4f1a\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u3002\u9664\u6b64\u4e4b\u5916\uff0c<code>pandas</code>\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a<code>qcut</code>\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u6307\u5b9a\u5206\u4f4d\u6570\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7bb1\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/75.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-4/","title":"75.\u6df1\u5165\u6d45\u51fapandas 4","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/75.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-4/#pandas-4","title":"\u6df1\u5165\u6d45\u51fapandas-4","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/75.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-4/#_1","title":"\u6570\u636e\u900f\u89c6","text":"<p>\u7ecf\u8fc7\u524d\u9762\u7684\u5b66\u4e60\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06\u6570\u636e\u51c6\u5907\u5c31\u7eea\u800c\u4e14\u53d8\u6210\u4e86\u6211\u4eec\u60f3\u8981\u7684\u6837\u5b50\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u6700\u4e3a\u91cd\u8981\u7684\u6570\u636e\u900f\u89c6\u9636\u6bb5\u4e86\u3002\u5f53\u6211\u4eec\u62ff\u5230\u4e00\u5927\u5806\u6570\u636e\u7684\u65f6\u5019\uff0c\u5982\u4f55\u4ece\u6570\u636e\u4e2d\u8fc5\u901f\u7684\u89e3\u8bfb\u51fa\u6709\u4ef7\u503c\u7684\u4fe1\u606f\uff0c\u628a\u7e41\u6742\u7684\u6570\u636e\u53d8\u6210\u5bb9\u6613\u89e3\u8bfb\u7684\u7edf\u8ba1\u56fe\u8868\u5e76\u518d\u6b64\u57fa\u7840\u4e0a\u4ea7\u751f\u4e1a\u52a1\u6d1e\u5bdf\uff0c\u8fd9\u5c31\u662f\u6570\u636e\u5206\u6790\u8981\u89e3\u51b3\u7684\u6838\u5fc3\u95ee\u9898\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/75.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-4/#_2","title":"\u83b7\u53d6\u63cf\u8ff0\u6027\u7edf\u8ba1\u4fe1\u606f","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u6570\u636e\u7684\u63cf\u8ff0\u6027\u7edf\u8ba1\u4fe1\u606f\uff0c\u901a\u8fc7\u63cf\u8ff0\u6027\u7edf\u8ba1\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u4e86\u89e3\u6570\u636e\u7684\u96c6\u4e2d\u8d8b\u52bf\u548c\u79bb\u6563\u8d8b\u52bf\u3002</p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u6709\u5982\u4e0b\u6240\u793a\u7684\u5b66\u751f\u6210\u7ee9\u8868\u3002</p> <pre><code>scores = np.random.randint(50, 101, (5, 3))\nnames = ('\u5173\u7fbd', '\u5f20\u98de', '\u8d75\u4e91', '\u9a6c\u8d85', '\u9ec4\u5fe0')\ncourses = ('\u8bed\u6587', '\u6570\u5b66', '\u82f1\u8bed')\ndf = pd.DataFrame(data=scores, columns=courses, index=names)\ndf\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>     \u8bed\u6587   \u6570\u5b66   \u82f1\u8bed\n\u5173\u7fbd  96    72    73\n\u5f20\u98de  72    70    97\n\u8d75\u4e91  74    51    79\n\u9a6c\u8d85  100   54    54\n\u9ec4\u5fe0  89    100   88\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>DataFrame</code>\u5bf9\u8c61\u7684\u65b9\u6cd5<code>mean</code>\u3001<code>max</code>\u3001<code>min</code>\u3001<code>std</code>\u3001<code>var</code>\u7b49\u65b9\u6cd5\u5206\u522b\u83b7\u53d6\u6bcf\u4e2a\u5b66\u751f\u6216\u6bcf\u95e8\u8bfe\u7a0b\u7684\u5e73\u5747\u5206\u3001\u6700\u9ad8\u5206\u3001\u6700\u4f4e\u5206\u3001\u6807\u51c6\u5dee\u3001\u65b9\u5dee\u7b49\u4fe1\u606f\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7<code>describe</code>\u65b9\u6cd5\u76f4\u63a5\u83b7\u53d6\u63cf\u8ff0\u6027\u7edf\u8ba1\u4fe1\u606f\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u8ba1\u7b97\u6bcf\u95e8\u8bfe\u7a0b\u6210\u7ee9\u7684\u5e73\u5747\u5206\u3002</p> <pre><code>df.mean()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u8bed\u6587    86.2\n\u6570\u5b66    69.4\n\u82f1\u8bed    78.2\ndtype: float64\n</code></pre> <p>\u8ba1\u7b97\u6bcf\u4e2a\u5b66\u751f\u6210\u7ee9\u7684\u5e73\u5747\u5206\u3002</p> <pre><code>df.mean(axis=1)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u5173\u7fbd    80.333333\n\u5f20\u98de    79.666667\n\u8d75\u4e91    68.000000\n\u9a6c\u8d85    69.333333\n\u9ec4\u5fe0    92.333333\ndtype: float64\n</code></pre> <p>\u8ba1\u7b97\u6bcf\u95e8\u8bfe\u7a0b\u6210\u7ee9\u7684\u65b9\u5dee\u3002</p> <pre><code>df.var()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u8bed\u6587    161.2\n\u6570\u5b66    379.8\n\u82f1\u8bed    265.7\ndtype: float64\n</code></pre> <p>\u8bf4\u660e\uff1a\u901a\u8fc7\u65b9\u5dee\u53ef\u4ee5\u770b\u51fa\uff0c\u6570\u5b66\u6210\u7ee9\u6ce2\u52a8\u6700\u5927\uff0c\u4e24\u6781\u5206\u5316\u53ef\u80fd\u66f4\u4e25\u91cd\u3002</p> <p>\u83b7\u53d6\u6bcf\u95e8\u8bfe\u7a0b\u7684\u63cf\u8ff0\u6027\u7edf\u8ba1\u4fe1\u606f\u3002</p> <pre><code>df.describe()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>        \u8bed\u6587        \u6570\u5b66         \u82f1\u8bed\ncount   5.000000    5.000000    5.000000\nmean    86.200000   69.400000   78.200000\nstd     12.696456   19.488458   16.300307\nmin     72.000000   51.000000   54.000000\n25%     74.000000   54.000000   73.000000\n50%     89.000000   70.000000   79.000000\n75%     96.000000   72.000000   88.000000\nmax     100.000000  100.000000  97.000000\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/75.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-4/#_3","title":"\u6392\u5e8f\u548c\u53d6\u5934\u90e8\u503c","text":"<p>\u5982\u679c\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u53ef\u4ee5\u4f7f\u7528<code>DataFrame</code>\u5bf9\u8c61\u7684<code>sort_values</code>\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7684<code>by</code>\u53c2\u6570\u53ef\u4ee5\u6307\u5b9a\u6839\u636e\u54ea\u4e2a\u5217\u6216\u54ea\u4e9b\u5217\u8fdb\u884c\u6392\u5e8f\uff0c\u800c<code>ascending</code>\u53c2\u6570\u53ef\u4ee5\u6307\u5b9a\u5347\u5e8f\u6216\u662f\u964d\u5e8f\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u5c06\u5b66\u751f\u8868\u6309\u8bed\u6587\u6210\u7ee9\u6392\u964d\u5e8f\u3002</p> <pre><code>df.sort_values(by='\u8bed\u6587', ascending=False)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>      \u8bed\u6587   \u6570\u5b66   \u82f1\u8bed\n\u9a6c\u8d85  100    54     54\n\u5173\u7fbd  96     72     73\n\u9ec4\u5fe0  89     100    88\n\u8d75\u4e91  74     51     79\n\u5f20\u98de  72     70     97\n</code></pre> <p>\u5982\u679c<code>DataFrame</code>\u6570\u636e\u91cf\u5f88\u5927\uff0c\u6392\u5e8f\u5c06\u662f\u4e00\u4e2a\u975e\u5e38\u8017\u8d39\u65f6\u95f4\u7684\u64cd\u4f5c\u3002\u6709\u7684\u65f6\u5019\u6211\u4eec\u53ea\u9700\u8981\u83b7\u5f97\u6392\u524dN\u540d\u6216\u540eN\u540d\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u65f6\u5019\u5176\u5b9e\u6ca1\u6709\u5fc5\u8981\u5bf9\u6574\u4e2a\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u800c\u662f\u76f4\u63a5\u5229\u7528\u5806\u7ed3\u6784\u627e\u51faTop-N\u7684\u6570\u636e\u3002<code>DataFrame</code>\u7684<code>nlargest</code>\u548c<code>nsmallest</code>\u65b9\u6cd5\u5c31\u63d0\u4f9b\u5bf9Top-N\u64cd\u4f5c\u7684\u652f\u6301\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u627e\u51fa\u8bed\u6587\u6210\u7ee9\u524d3\u540d\u7684\u5b66\u751f\u4fe1\u606f\u3002</p> <pre><code>df.nlargest(3, '\u8bed\u6587')\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>      \u8bed\u6587   \u6570\u5b66   \u82f1\u8bed\n\u9a6c\u8d85  100    54     54\n\u5173\u7fbd  96     72     73\n\u9ec4\u5fe0  89     100    88\n</code></pre> <p>\u627e\u51fa\u6570\u5b66\u6210\u7ee9\u6700\u4f4e\u76843\u540d\u5b66\u751f\u7684\u4fe1\u606f\u3002</p> <pre><code>df.nsmallest(3, '\u6570\u5b66')\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u8d75\u4e91  74    51    79\n\u9a6c\u8d85  100   54    54\n\u5f20\u98de  72    70    97\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/75.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-4/#_4","title":"\u5206\u7ec4\u805a\u5408","text":"<p>\u6211\u4eec\u5148\u4ece\u4e4b\u524d\u4f7f\u7528\u8fc7\u7684 Excel \u6587\u4ef6\u4e2d\u8bfb\u53d62020\u5e74\u9500\u552e\u6570\u636e\uff0c\u7136\u540e\u518d\u4e3a\u5927\u5bb6\u6f14\u793a\u5982\u4f55\u8fdb\u884c\u5206\u7ec4\u805a\u5408\u64cd\u4f5c\u3002</p> <pre><code>df = pd.read_excel('data/2020\u5e74\u9500\u552e\u6570\u636e.xlsx')\ndf.head()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>    \u9500\u552e\u65e5\u671f     \u9500\u552e\u533a\u57df   \u9500\u552e\u6e20\u9053  \u9500\u552e\u8ba2\u5355     \u54c1\u724c    \u552e\u4ef7  \u9500\u552e\u6570\u91cf\n0   2020-01-01  \u4e0a\u6d77       \u62fc\u591a\u591a    182894-455  \u516b\u5339\u9a6c  99    83\n1   2020-01-01  \u4e0a\u6d77       \u6296\u97f3      205635-402  \u516b\u5339\u9a6c  219   29\n2   2020-01-01  \u4e0a\u6d77       \u5929\u732b      205654-021  \u516b\u5339\u9a6c  169   85\n3   2020-01-01  \u4e0a\u6d77       \u5929\u732b      205654-519  \u516b\u5339\u9a6c  169   14\n4   2020-01-01  \u4e0a\u6d77       \u5929\u732b      377781-010  \u76ae\u76ae\u867e  249   61\n</code></pre> <p>\u5982\u679c\u6211\u4eec\u8981\u7edf\u8ba1\u6bcf\u4e2a\u9500\u552e\u533a\u57df\u7684\u9500\u552e\u603b\u989d\uff0c\u53ef\u4ee5\u5148\u901a\u8fc7\u201c\u552e\u4ef7\u201d\u548c\u201c\u9500\u552e\u6570\u91cf\u201d\u8ba1\u7b97\u51fa\u9500\u552e\u989d\uff0c\u4e3a<code>DataFrame</code>\u6dfb\u52a0\u4e00\u4e2a\u5217\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>df['\u9500\u552e\u989d'] = df['\u552e\u4ef7'] * df['\u9500\u552e\u6570\u91cf']\ndf.head()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>    \u9500\u552e\u65e5\u671f     \u9500\u552e\u533a\u57df   \u9500\u552e\u6e20\u9053  \u9500\u552e\u8ba2\u5355     \u54c1\u724c    \u552e\u4ef7  \u9500\u552e\u6570\u91cf  \u9500\u552e\u989d\n0   2020-01-01  \u4e0a\u6d77       \u62fc\u591a\u591a    182894-455  \u516b\u5339\u9a6c  99    83        8217\n1   2020-01-01  \u4e0a\u6d77       \u6296\u97f3      205635-402  \u516b\u5339\u9a6c  219   29        6351\n2   2020-01-01  \u4e0a\u6d77       \u5929\u732b      205654-021  \u516b\u5339\u9a6c  169   85        14365\n3   2020-01-01  \u4e0a\u6d77       \u5929\u732b      205654-519  \u516b\u5339\u9a6c  169   14        2366\n4   2020-01-01  \u4e0a\u6d77       \u5929\u732b      377781-010  \u76ae\u76ae\u867e  249   61        15189\n</code></pre> <p>\u7136\u540e\u518d\u6839\u636e\u201c\u9500\u552e\u533a\u57df\u201d\u5217\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7ec4\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u7684\u662f<code>DataFrame</code>\u5bf9\u8c61\u7684<code>groupby</code>\u65b9\u6cd5\u3002\u5206\u7ec4\u4e4b\u540e\uff0c\u6211\u4eec\u53d6\u201c\u9500\u552e\u989d\u201d\u8fd9\u4e2a\u5217\u5728\u5206\u7ec4\u5185\u8fdb\u884c\u6c42\u548c\u5904\u7406\uff0c\u4ee3\u7801\u548c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>df.groupby('\u9500\u552e\u533a\u57df').\u9500\u552e\u989d.sum()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u9500\u552e\u533a\u57df\n\u4e0a\u6d77    11610489\n\u5317\u4eac    12477717\n\u5b89\u5fbd      895463\n\u5e7f\u4e1c     1617949\n\u6c5f\u82cf     2304380\n\u6d59\u6c5f      687862\n\u798f\u5efa    10178227\nName: \u9500\u552e\u989d, dtype: int64\n</code></pre> <p>\u5982\u679c\u6211\u4eec\u8981\u7edf\u8ba1\u6bcf\u4e2a\u6708\u7684\u9500\u552e\u603b\u989d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u201c\u9500\u552e\u65e5\u671f\u201d\u4f5c\u4e3agroupby`\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5f53\u7136\u8fd9\u91cc\u9700\u8981\u5148\u5c06\u201c\u9500\u552e\u65e5\u671f\u201d\u5904\u7406\u6210\u6708\uff0c\u4ee3\u7801\u548c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>df.groupby(df['\u9500\u552e\u65e5\u671f'].dt.month).\u9500\u552e\u989d.sum()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u9500\u552e\u65e5\u671f\n1     5409855\n2     4608455\n3     4164972\n4     3996770\n5     3239005\n6     2817936\n7     3501304\n8     2948189\n9     2632960\n10    2375385\n11    2385283\n12    1691973\nName: \u9500\u552e\u989d, dtype: int64\n</code></pre> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u96be\u5ea6\u5347\u7ea7\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u9500\u552e\u533a\u57df\u6bcf\u4e2a\u6708\u7684\u9500\u552e\u603b\u989d\uff0c\u8fd9\u53c8\u8be5\u5982\u4f55\u5904\u7406\u5462\uff1f\u4e8b\u5b9e\u4e0a\uff0c<code>groupby</code>\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5217\u8868\u4e2d\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u5206\u7ec4\u7684\u4f9d\u636e\uff0c\u5927\u5bb6\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u548c\u8f93\u51fa\u7ed3\u679c\u5c31\u660e\u767d\u4e86\u3002</p> <pre><code>df.groupby(['\u9500\u552e\u533a\u57df', df['\u9500\u552e\u65e5\u671f'].dt.month]).\u9500\u552e\u989d.sum()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u9500\u552e\u533a\u57df  \u9500\u552e\u65e5\u671f\n\u4e0a\u6d77    1       1679125\n        2       1689527\n        3       1061193\n        4       1082187\n        5        841199\n        6        785404\n        7        863906\n        8        734937\n        9       1107693\n        10       412108\n       11       825169\n       12       528041\n\u5317\u4eac    1       1878234\n        2       1807787\n        3       1360666\n        4       1205989\n        5        807300\n        6       1216432\n        7       1219083\n        8        645727\n        9        390077\n        10       671608\n        11       678668\n        12       596146\n\u5b89\u5fbd    4        341308\n        5        554155\n\u5e7f\u4e1c    3        388180\n        8        469390\n        9        365191\n        11       395188\n\u6c5f\u82cf    4        537079\n        7        841032\n        10       710962\n        12       215307\n\u6d59\u6c5f    3        248354\n        8        439508\n\u798f\u5efa    1       1852496\n        2       1111141\n        3       1106579\n        4        830207\n        5       1036351\n        6        816100\n        7        577283\n        8        658627\n        9        769999\n        10       580707\n        11       486258\n        12       352479\nName: \u9500\u552e\u989d, dtype: int64\n</code></pre> <p>\u5982\u679c\u5e0c\u671b\u7edf\u8ba1\u51fa\u6bcf\u4e2a\u533a\u57df\u7684\u9500\u552e\u603b\u989d\u4ee5\u53ca\u6bcf\u4e2a\u533a\u57df\u5355\u7b14\u91d1\u989d\u7684\u6700\u9ad8\u548c\u6700\u4f4e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728<code>DataFrame</code>\u6216<code>Series</code>\u5bf9\u8c61\u4e0a\u4f7f\u7528<code>agg</code>\u65b9\u6cd5\u5e76\u6307\u5b9a\u591a\u4e2a\u805a\u5408\u51fd\u6570\uff0c\u4ee3\u7801\u548c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>df.groupby('\u9500\u552e\u533a\u57df').\u9500\u552e\u989d.agg(['sum', 'max', 'min'])\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>           sum     max   min\n\u9500\u552e\u533a\u57df                        \n\u4e0a\u6d77    11610489  116303   948\n\u5317\u4eac    12477717  133411   690\n\u5b89\u5fbd      895463   68502  1683\n\u5e7f\u4e1c     1617949  120807   990\n\u6c5f\u82cf     2304380  114312  1089\n\u6d59\u6c5f      687862   90909  3927\n\u798f\u5efa    10178227   87527   897\n</code></pre> <p>\u5982\u679c\u5e0c\u671b\u81ea\u5b9a\u4e49\u805a\u5408\u540e\u7684\u5217\u7684\u540d\u5b57\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684\u65b9\u6cd5\u3002</p> <pre><code>df.groupby('\u9500\u552e\u533a\u57df').\u9500\u552e\u989d.agg(\u9500\u552e\u603b\u989d='sum', \u5355\u7b14\u6700\u9ad8='max', \u5355\u7b14\u6700\u4f4e='min')\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>          \u9500\u552e\u603b\u989d    \u5355\u7b14\u6700\u9ad8  \u5355\u7b14\u6700\u4f4e\n\u9500\u552e\u533a\u57df                        \n\u4e0a\u6d77      11610489     116303     948\n\u5317\u4eac      12477717     133411     690\n\u5b89\u5fbd        895463      68502    1683\n\u5e7f\u4e1c       1617949     120807     990\n\u6c5f\u82cf       2304380     114312    1089\n\u6d59\u6c5f        687862      90909    3927\n\u798f\u5efa      10178227      87527     897\n</code></pre> <p>\u5982\u679c\u9700\u8981\u5bf9\u591a\u4e2a\u5217\u4f7f\u7528\u4e0d\u540c\u7684\u805a\u5408\u51fd\u6570\uff0c\u4f8b\u5982\u201c\u7edf\u8ba1\u6bcf\u4e2a\u9500\u552e\u533a\u57df\u9500\u552e\u989d\u7684\u603b\u548c\u4ee5\u53ca\u9500\u552e\u6570\u91cf\u7684\u6700\u4f4e\u503c\u548c\u6700\u9ad8\u503c\u201d\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u64cd\u4f5c\u3002</p> <pre><code>df.groupby('\u9500\u552e\u533a\u57df')[['\u9500\u552e\u989d', '\u9500\u552e\u6570\u91cf']].agg({\n    '\u9500\u552e\u989d': 'sum', '\u9500\u552e\u6570\u91cf': ['max', 'min']\n})\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>           \u9500\u552e\u989d  \u9500\u552e\u6570\u91cf    \n           sum    max min\n\u9500\u552e\u533a\u57df                   \n\u4e0a\u6d77    11610489  100  10\n\u5317\u4eac    12477717  100  10\n\u5b89\u5fbd      895463   98  16\n\u5e7f\u4e1c     1617949   98  10\n\u6c5f\u82cf     2304380  100  11\n\u6d59\u6c5f      687862   95  20\n\u798f\u5efa    10178227  100  10\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/75.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-4/#_5","title":"\u900f\u89c6\u8868\u548c\u4ea4\u53c9\u8868","text":"<p>\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u201c\u7edf\u8ba1\u6bcf\u4e2a\u9500\u552e\u533a\u57df\u6bcf\u4e2a\u6708\u7684\u9500\u552e\u603b\u989d\u201d\u4f1a\u4ea7\u751f\u4e00\u4e2a\u770b\u8d77\u6765\u5f88\u957f\u7684\u7ed3\u679c\uff0c\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u6211\u4eec\u901a\u5e38\u628a\u90a3\u4e9b\u884c\u5f88\u591a\u5217\u5f88\u5c11\u7684\u8868\u6210\u4e3a\u201c\u7a84\u8868\u201d\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u60f3\u5f97\u5230\u8fd9\u6837\u7684\u4e00\u4e2a\u201c\u7a84\u8868\u201d\uff0c\u53ef\u4ee5\u4f7f\u7528<code>DataFrame</code>\u7684<code>pivot_table</code>\u65b9\u6cd5\u6216\u8005\u662f<code>pivot_table</code>\u51fd\u6570\u6765\u751f\u6210\u900f\u89c6\u8868\u3002\u900f\u89c6\u8868\u7684\u672c\u8d28\u5c31\u662f\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7ec4\u805a\u5408\u64cd\u4f5c\uff0c\u6839\u636e A \u5217\u5bf9 B \u5217\u8fdb\u884c\u7edf\u8ba1\uff0c\u5982\u679c\u5927\u5bb6\u6709\u4f7f\u7528 Excel \u7684\u7ecf\u9a8c\uff0c\u76f8\u4fe1\u5bf9\u900f\u89c6\u8868\u8fd9\u4e2a\u6982\u5ff5\u4e00\u5b9a\u4e0d\u4f1a\u964c\u751f\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u8981\u201c\u7edf\u8ba1\u6bcf\u4e2a\u9500\u552e\u533a\u57df\u7684\u9500\u552e\u603b\u989d\u201d\uff0c\u90a3\u4e48\u201c\u9500\u552e\u533a\u57df\u201d\u5c31\u662f\u6211\u4eec\u7684 A \u5217\uff0c\u800c\u201c\u9500\u552e\u989d\u201d\u5c31\u662f\u6211\u4eec\u7684 B \u5217\uff0c\u5728<code>pivot_table</code>\u51fd\u6570\u4e2d\u5206\u522b\u5bf9\u5e94<code>index</code>\u548c<code>values</code>\u53c2\u6570\uff0c\u8fd9\u4e24\u4e2a\u53c2\u6570\u90fd\u53ef\u4ee5\u662f\u5355\u4e2a\u5217\u6216\u8005\u591a\u4e2a\u5217\u3002</p> <pre><code>pd.pivot_table(df, index='\u9500\u552e\u533a\u57df', values='\u9500\u552e\u989d', aggfunc='sum')\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>           \u9500\u552e\u989d\n\u9500\u552e\u533a\u57df          \n\u4e0a\u6d77    11610489\n\u5317\u4eac    12477717\n\u5b89\u5fbd      895463\n\u5e7f\u4e1c     1617949\n\u6c5f\u82cf     2304380\n\u6d59\u6c5f      687862\n\u798f\u5efa    10178227\n</code></pre> <p>\u6ce8\u610f\uff1a\u4e0a\u9762\u7684\u7ed3\u679c\u64cd\u4f5c\u8ddf\u4e4b\u524d\u7528<code>groupby</code>\u7684\u65b9\u5f0f\u5f97\u5230\u7684\u7ed3\u679c\u6709\u4e00\u4e9b\u533a\u522b\uff0c<code>groupby</code>\u64cd\u4f5c\u540e\uff0c\u5982\u679c\u5bf9\u5355\u4e2a\u5217\u8fdb\u884c\u805a\u5408\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u662f\u4e00\u4e2a<code>Series</code>\u5bf9\u8c61\uff0c\u800c\u4e0a\u9762\u7684\u7ed3\u679c\u662f\u4e00\u4e2a<code>DataFrame</code> \u5bf9\u8c61\u3002</p> <p>\u5982\u679c\u8981\u7edf\u8ba1\u6bcf\u4e2a\u9500\u552e\u533a\u57df\u6bcf\u4e2a\u6708\u7684\u9500\u552e\u603b\u989d\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>pivot_table</code>\u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>df['\u6708\u4efd'] = df['\u9500\u552e\u65e5\u671f'].dt.month\npd.pivot_table(df, index=['\u9500\u552e\u533a\u57df', '\u6708\u4efd'], values='\u9500\u552e\u989d', aggfunc='sum')\n</code></pre> <p>\u4e0a\u9762\u7684\u64cd\u4f5c\u7ed3\u679c\u662f\u4e00\u4e2a<code>DataFrame</code>\uff0c\u4f46\u4e5f\u662f\u4e00\u4e2a\u957f\u957f\u7684\u201c\u7a84\u8868\u201d\uff0c\u5982\u679c\u5e0c\u671b\u505a\u6210\u4e00\u4e2a\u884c\u6bd4\u8f83\u5c11\u5217\u6bd4\u8f83\u591a\u7684\u201c\u5bbd\u8868\u201d\uff0c\u53ef\u4ee5\u5c06<code>index</code>\u53c2\u6570\u4e2d\u7684\u5217\u653e\u5230<code>columns</code>\u53c2\u6570\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>pd.pivot_table(df, index='\u9500\u552e\u533a\u57df', columns='\u6708\u4efd', values='\u9500\u552e\u989d', aggfunc='sum', fill_value=0)\n</code></pre> <p>\u8bf4\u660e\uff1a<code>pivot_table</code>\u51fd\u6570\u7684<code>fill_value=0</code>\u4f1a\u5c06\u7a7a\u503c\u5904\u7406\u4e3a<code>0</code>\u3002</p> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u4f7f\u7528<code>pivot_table</code>\u51fd\u6570\u65f6\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0<code>margins</code>\u548c<code>margins_name</code>\u53c2\u6570\u5bf9\u5206\u7ec4\u805a\u5408\u7684\u7ed3\u679c\u505a\u4e00\u4e2a\u6c47\u603b\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u548c\u6548\u679c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>pd.pivot_table(df, index='\u9500\u552e\u533a\u57df', columns='\u6708\u4efd', values='\u9500\u552e\u989d', aggfunc='sum', fill_value=0, margins=True, margins_name='\u603b\u8ba1')\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u4ea4\u53c9\u8868\u5c31\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u900f\u89c6\u8868\uff0c\u5b83\u4e0d\u9700\u8981\u5148\u6784\u9020\u4e00\u4e2a<code>DataFrame</code>\u5bf9\u8c61\uff0c\u800c\u662f\u76f4\u63a5\u901a\u8fc7\u6570\u7ec4\u6216<code>Series</code>\u5bf9\u8c61\u6307\u5b9a\u4e24\u4e2a\u6216\u591a\u4e2a\u56e0\u7d20\u8fdb\u884c\u8fd0\u7b97\u5f97\u5230\u7edf\u8ba1\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u8981\u7edf\u8ba1\u6bcf\u4e2a\u9500\u552e\u533a\u57df\u7684\u9500\u552e\u603b\u989d\uff0c\u4e5f\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u6765\u5b8c\u6210\uff0c\u6211\u4eec\u5148\u51c6\u5907\u4e09\u7ec4\u6570\u636e\u3002</p> <pre><code>sales_area, sales_month, sales_amount = df['\u9500\u552e\u533a\u57df'], df['\u6708\u4efd'], df['\u9500\u552e\u989d']\n</code></pre> <p>\u4f7f\u7528<code>crosstab</code>\u51fd\u6570\u751f\u6210\u4ea4\u53c9\u8868\u3002</p> <pre><code>pd.crosstab(index=sales_area, columns=sales_month, values=sales_amount, aggfunc='sum').fillna(0).astype('i8')\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u4f7f\u7528\u4e86<code>DataFrame</code>\u5bf9\u8c61\u7684<code>fillna</code>\u65b9\u6cd5\u5c06\u7a7a\u503c\u5904\u7406\u4e3a0\uff0c\u518d\u4f7f\u7528<code>astype</code>\u65b9\u6cd5\u5c06\u6570\u636e\u7c7b\u578b\u5904\u7406\u6210\u6574\u6570\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/75.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-4/#_6","title":"\u6570\u636e\u5448\u73b0","text":"<p>\u4e00\u56fe\u80dc\u5343\u8a00\uff0c\u6211\u4eec\u5bf9\u6570\u636e\u8fdb\u884c\u900f\u89c6\u7684\u7ed3\u679c\uff0c\u6700\u7ec8\u8981\u901a\u8fc7\u56fe\u8868\u7684\u65b9\u5f0f\u5448\u73b0\u51fa\u6765\uff0c\u56e0\u4e3a\u56fe\u8868\u5177\u6709\u6781\u5f3a\u7684\u8868\u73b0\u529b\uff0c\u80fd\u591f\u8ba9\u6211\u4eec\u8fc5\u901f\u7684\u89e3\u8bfb\u6570\u636e\u4e2d\u9690\u85cf\u7684\u4ef7\u503c\u3002\u548c<code>Series</code>\u4e00\u6837\uff0c<code>DataFrame</code>\u5bf9\u8c61\u63d0\u4f9b\u4e86<code>plot</code>\u65b9\u6cd5\u6765\u652f\u6301\u7ed8\u56fe\uff0c\u5e95\u5c42\u4ecd\u7136\u662f\u901a\u8fc7<code>matplotlib</code>\u5e93\u5b9e\u73b0\u56fe\u8868\u7684\u6e32\u67d3\u3002\u5173\u4e8e<code>matplotlib</code>\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u5728\u4e0b\u4e00\u4e2a\u7ae0\u8282\u8fdb\u884c\u8be6\u7ec6\u7684\u63a2\u8ba8\uff0c\u8fd9\u91cc\u6211\u4eec\u53ea\u7b80\u5355\u7684\u8bb2\u89e3<code>plot</code>\u65b9\u6cd5\u7684\u7528\u6cd5\u3002 </p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u60f3\u901a\u8fc7\u4e00\u5f20\u67f1\u72b6\u56fe\u6765\u6bd4\u8f83\u201c\u6bcf\u4e2a\u9500\u552e\u533a\u57df\u7684\u9500\u552e\u603b\u989d\u201d\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u900f\u89c6\u8868\u4e0a\u4f7f\u7528<code>plot</code>\u65b9\u6cd5\u751f\u6210\u67f1\u72b6\u56fe\u3002\u6211\u4eec\u5148\u5bfc\u5165<code>matplotlib.pyplot</code>\u6a21\u5757\uff0c\u901a\u8fc7\u4fee\u6539\u7ed8\u56fe\u7684\u53c2\u6570\u4f7f\u5176\u652f\u6301\u4e2d\u6587\u663e\u793a\u3002</p> <pre><code>import matplotlib.pyplot as plt\n\nplt.rcParams['font.sans-serif'] = 'FZJKai-Z03S'\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u7684<code>FZJKai-Z03S</code>\u662f\u6211\u7535\u8111\u4e0a\u5df2\u7ecf\u5b89\u88c5\u7684\u4e00\u79cd\u652f\u6301\u4e2d\u6587\u7684\u5b57\u4f53\u7684\u540d\u79f0\uff0c\u5b57\u4f53\u7684\u540d\u79f0\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u7528\u6237\u4e3b\u76ee\u5f55\u4e0b<code>.matplotlib</code>\u6587\u4ef6\u5939\u4e0b\u540d\u4e3a<code>fontlist-v330.json</code>\u7684\u6587\u4ef6\u6765\u83b7\u5f97\uff0c\u800c\u8fd9\u4e2a\u6587\u4ef6\u5728\u6267\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u540e\u5c31\u4f1a\u751f\u6210\u3002</p> <p>\u4f7f\u7528\u9b54\u6cd5\u6307\u4ee4\u914d\u7f6e\u751f\u6210\u77e2\u91cf\u56fe\u3002</p> <pre><code>%config InlineBackend.figure_format = 'svg'\n</code></pre> <p>\u7ed8\u5236\u201c\u6bcf\u4e2a\u9500\u552e\u533a\u57df\u9500\u552e\u603b\u989d\u201d\u7684\u67f1\u72b6\u56fe\u3002</p> <pre><code>temp = pd.pivot_table(df, index='\u9500\u552e\u533a\u57df', values='\u9500\u552e\u989d', aggfunc='sum')\ntemp.plot(figsize=(8, 4), kind='bar')\nplt.xticks(rotation=0)\nplt.show()\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u7684\u7b2c3\u884c\u4ee3\u7801\u4f1a\u5c06\u6a2a\u8f74\u523b\u5ea6\u4e0a\u7684\u6587\u5b57\u65cb\u8f6c\u52300\u5ea6\uff0c\u7b2c4\u884c\u4ee3\u7801\u4f1a\u663e\u793a\u56fe\u50cf\u3002</p> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u5982\u679c\u8981\u7ed8\u5236\u997c\u56fe\uff0c\u53ef\u4ee5\u4fee\u6539<code>plot</code>\u65b9\u6cd5\u7684<code>kind</code>\u53c2\u6570\u4e3a<code>pie</code>\uff0c\u7136\u540e\u4f7f\u7528\u5b9a\u5236\u997c\u56fe\u7684\u53c2\u6570\u5bf9\u56fe\u8868\u52a0\u4ee5\u5b9a\u5236\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>temp.sort_values(by='\u9500\u552e\u989d', ascending=False).plot(\n    figsize=(6, 6),\n    kind='pie',\n    y='\u9500\u552e\u989d',\n    ylabel='',\n    autopct='%.2f%%',\n    pctdistance=0.8,\n    wedgeprops=dict(linewidth=1, width=0.35), \n    # \u6307\u5b9a\u6bcf\u4e2a\u6247\u533a\u7684\u8fb9\u6846\u7ebf\u5bbd\u4e3a1\uff0c\u5bbd\u5ea6\u4e3a0.35\n    legend=False\n)\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/76.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-5/","title":"76.\u6df1\u5165\u6d45\u51fapandas 5","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/76.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-5/#pandas-5","title":"\u6df1\u5165\u6d45\u51fapandas-5","text":"<p>\u6211\u4eec\u518d\u6765\u8865\u5145\u4e00\u4e9b\u4f7f\u7528<code>DataFrame</code>\u505a\u6570\u636e\u5206\u6790\u65f6\u4f1a\u4f7f\u7528\u5230\u7684\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u4e0d\u4ec5\u5e38\u89c1\u800c\u4e14\u4e5f\u975e\u5e38\u91cd\u8981\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/76.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-5/#_1","title":"\u8ba1\u7b97\u540c\u6bd4\u73af\u6bd4","text":"<p>\u6211\u4eec\u4e4b\u524d\u8bb2\u8fc7\u4e00\u4e2a\u7edf\u8ba1\u6708\u5ea6\u9500\u552e\u989d\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>groupby</code>\u65b9\u6cd5\u505a\u5206\u7ec4\u805a\u5408\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7<code>pivot_table</code>\u751f\u6210\u900f\u89c6\u8868\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>sales_df = pd.read_excel('data/2020\u5e74\u9500\u552e\u6570\u636e.xlsx')\nsales_df['\u6708\u4efd'] = sales_df.\u9500\u552e\u65e5\u671f.dt.month\nsales_df['\u9500\u552e\u989d'] = sales_df.\u552e\u4ef7 * sales_df.\u9500\u552e\u6570\u91cf\nresult_df = sales_df.pivot_table(index='\u6708\u4efd', values='\u9500\u552e\u989d', aggfunc='sum')\nresult_df.rename(columns={'\u9500\u552e\u989d': '\u672c\u6708\u9500\u552e\u989d'}, inplace=True)\nresult_df\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>      \u672c\u6708\u9500\u552e\u989d\n\u6708\u4efd         \n1       5409855\n2       4608455\n3       4164972\n4       3996770\n5       3239005\n6       2817936\n7       3501304\n8       2948189\n9       2632960\n10      2375385\n11      2385283\n12      1691973\n</code></pre> <p>\u5728\u5f97\u5230\u6708\u5ea6\u9500\u552e\u989d\u4e4b\u540e\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6708\u73af\u6bd4\uff0c\u8fd9\u91cc\u6709\u4e24\u79cd\u65b9\u6848\u3002\u7b2c\u4e00\u79cd\u65b9\u6848\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>shift</code>\u65b9\u6cd5\u5bf9\u6570\u636e\u8fdb\u884c\u79fb\u52a8\uff0c\u5c06\u4e0a\u4e00\u4e2a\u6708\u7684\u6570\u636e\u4e0e\u672c\u6708\u6570\u636e\u5bf9\u9f50\uff0c\u7136\u540e\u901a\u8fc7<code>(\u672c\u6708\u9500\u552e\u989d - \u4e0a\u6708\u9500\u552e\u989d) / \u4e0a\u6708\u9500\u552e\u989d</code>\u6765\u8ba1\u7b97\u6708\u73af\u6bd4\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>result_df['\u4e0a\u6708\u9500\u552e\u989d'] = result_df.\u672c\u6708\u9500\u552e\u989d.shift(1)\nresult_df\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>      \u672c\u6708\u9500\u552e\u989d      \u4e0a\u6708\u9500\u552e\u989d\n\u6708\u4efd                    \n1       5409855            NaN\n2       4608455      5409855.0\n3       4164972      4608455.0\n4       3996770      4164972.0\n5       3239005      3996770.0\n6       2817936      3239005.0\n7       3501304      2817936.0\n8       2948189      3501304.0\n9       2632960      2948189.0\n10      2375385      2632960.0\n11      2385283      2375385.0\n12      1691973      2385283.0\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c<code>shift</code>\u65b9\u6cd5\u7684\u53c2\u6570\u4e3a<code>1</code>\u8868\u793a\u5c06\u6570\u636e\u5411\u4e0b\u79fb\u52a8\u4e00\u4e2a\u5355\u5143\uff0c\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570<code>-1</code>\u5c06\u6570\u636e\u5411\u4e0a\u79fb\u52a8\u4e00\u4e2a\u5355\u5143\u3002\u76f8\u4fe1\u5927\u5bb6\u80fd\u591f\u60f3\u5230\uff0c\u5982\u679c\u6211\u4eec\u6709\u66f4\u591a\u5e74\u4efd\u7684\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u53c2\u6570\u8bbe\u7f6e\u4e3a<code>12</code>\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8ba1\u7b97\u4eca\u5e74\u7684\u6bcf\u4e2a\u6708\u4e0e\u53bb\u5e74\u7684\u6bcf\u4e2a\u6708\u4e4b\u95f4\u7684\u540c\u6bd4\u3002</p> <pre><code>result_df['\u73af\u6bd4'] = (result_df.\u672c\u6708\u9500\u552e\u989d - result_df.\u4e0a\u6708\u9500\u552e\u989d) / result_df.\u4e0a\u6708\u9500\u552e\u989d\nresult_df.style.format(\n    formatter={'\u4e0a\u6708\u9500\u552e\u989d': '{:.0f}', '\u73af\u6bd4': '{:.2%}'},\n    na_rep='--------'\n)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>      \u672c\u6708\u9500\u552e\u989d      \u4e0a\u6708\u9500\u552e\u989d         \u73af\u6bd4\n\u6708\u4efd                    \n1       5409855       --------     -------- \n2       4608455        5409855      -14.81%     \n3       4164972        4608455       -9.62%\n4       3996770        4164972       -4.04%\n5       3239005        3996770      -18.96%\n6       2817936        3239005      -13.00%\n7       3501304        2817936       24.25%\n8       2948189        3501304      -15.80%\n9       2632960        2948189      -10.69%\n10      2375385        2632960       -9.78%\n11      2385283        2375385        0.42%\n12      1691973        2385283      -29.07%\n</code></pre> <p>\u8bf4\u660e\uff1a\u4f7f\u7528 JupyterLab \u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7<code>DataFrame</code>\u5bf9\u8c61\u7684<code>style</code>\u5c5e\u6027\u5728\u7f51\u9875\u4e2d\u5bf9\u5176\u8fdb\u884c\u6e32\u67d3\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u901a\u8fc7<code>Styler</code>\u5bf9\u8c61\u7684<code>format</code>\u65b9\u6cd5\u5c06\u73af\u6bd4\u683c\u5f0f\u5316\u4e3a\u767e\u5206\u6bd4\u8fdb\u884c\u663e\u793a\uff0c\u6b64\u5916\u8fd8\u6307\u5b9a\u4e86\u5c06\u7a7a\u503c\u66ff\u6362\u4e3a<code>--------</code>\u3002</p> <p>\u66f4\u4e3a\u7b80\u5355\u7684\u7b2c\u4e8c\u79cd\u65b9\u6848\u662f\u76f4\u63a5\u4f7f\u7528<code>pct_change</code>\u65b9\u6cd5\u8ba1\u7b97\u53d8\u5316\u7684\u767e\u5206\u6bd4\uff0c\u6211\u4eec\u5148\u5c06\u4e4b\u524d\u7684\u4e0a\u6708\u9500\u552e\u989d\u548c\u73af\u6bd4\u5217\u5220\u9664\u6389\u3002</p> <pre><code>result_df.drop(columns=['\u4e0a\u6708\u9500\u552e\u989d', '\u73af\u6bd4'], inplace=True)\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f7f\u7528<code>DataFrame</code>\u5bf9\u8c61\u7684<code>pct_change</code>\u65b9\u6cd5\u5b8c\u6210\u73af\u6bd4\u7684\u8ba1\u7b97\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c<code>pct_change</code>\u65b9\u6cd5\u6709\u4e00\u4e2a\u540d\u4e3a<code>periods</code>\u7684\u53c2\u6570\uff0c\u5b83\u7684\u9ed8\u8ba4\u503c\u662f<code>1</code>\uff0c\u8ba1\u7b97\u76f8\u90bb\u4e24\u9879\u6570\u636e\u53d8\u5316\u7684\u767e\u5206\u6bd4\uff0c\u8fd9\u4e0d\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u73af\u6bd4\u5417\uff1f\u5982\u679c\u6211\u4eec\u6709\u5f88\u591a\u5e74\u7684\u6570\u636e\uff0c\u5728\u8ba1\u7b97\u65f6\u628a\u8fd9\u4e2a\u53c2\u6570\u7684\u503c\u4fee\u6539\u4e3a<code>12</code>\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u76f8\u90bb\u4e24\u5e74\u7684\u6708\u540c\u6bd4\u3002</p> <pre><code>result_df['\u73af\u6bd4'] = result_df.pct_change()\nresult_df\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/76.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-5/#_2","title":"\u7a97\u53e3\u8ba1\u7b97","text":"<p><code>DataFrame</code>\u5bf9\u8c61\u7684<code>rolling</code>\u65b9\u6cd5\u5141\u8bb8\u6211\u4eec\u5c06\u6570\u636e\u7f6e\u4e8e\u7a97\u53e3\u4e2d\uff0c\u7136\u540e\u7528\u51fd\u6570\u5bf9\u7a97\u53e3\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u8fd0\u7b97\u548c\u5904\u7406\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u83b7\u53d6\u4e86\u67d0\u53ea\u80a1\u7968\u8fd1\u671f\u7684\u6570\u636e\uff0c\u60f3\u5236\u4f5c5\u65e5\u5747\u7ebf\u548c10\u65e5\u5747\u7ebf\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5148\u8bbe\u7f6e\u7a97\u53e3\u518d\u8fdb\u884c\u8fd0\u7b97\u3002\u6211\u4eec\u5148\u7528\u5982\u4e0b\u6240\u793a\u7684\u4ee3\u7801\u8bfb\u53d62022\u5e74\u767e\u5ea6\u7684\u80a1\u7968\u6570\u636e\uff0c\u6570\u636e\u6587\u4ef6\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u94fe\u63a5\u6765\u83b7\u53d6\u3002</p> <pre><code>baidu_df = pd.read_excel('data/2022\u5e74\u80a1\u7968\u6570\u636e.xlsx', sheet_name='BIDU')\nbaidu_df.sort_index(inplace=True)\nbaidu_df\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u4e0a\u9762\u7684<code>DataFrame</code>\u6709<code>Open</code>\u3001<code>High</code>\u3001<code>Low</code>\u3001<code>Close</code>\u3001<code>Volume</code>\u4e94\u4e2a\u5217\uff0c\u5206\u522b\u4ee3\u8868\u80a1\u7968\u7684\u5f00\u76d8\u4ef7\u3001\u6700\u9ad8\u4ef7\u3001\u6700\u4f4e\u4ef7\u3001\u6536\u76d8\u4ef7\u548c\u6210\u4ea4\u91cf\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5bf9\u767e\u5ea6\u7684\u80a1\u7968\u6570\u636e\u8fdb\u884c\u7a97\u53e3\u8ba1\u7b97\u3002</p> <pre><code>baidu_df.rolling(5).mean() \n# \u5bf9\u4e8e\u6570\u636e\u6846\u4e2d\u7684\u6bcf\u4e00\u884c\uff0c\u5b83\u90fd\u4f1a\u8ba1\u7b97\u5305\u62ec\u8be5\u884c\u5728\u5185\u7684\u524d 5 \u884c\u6570\u636e\u7684\u5e73\u5747\u503c\u3002\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728<code>Series</code>\u4e0a\u4f7f\u7528<code>rolling</code>\u8bbe\u7f6e\u7a97\u53e3\u5e76\u5728\u7a97\u53e3\u5185\u5b8c\u6210\u8fd0\u7b97\uff0c\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e0a\u9762\u7684\u767e\u5ea6\u80a1\u7968\u6536\u76d8\u4ef7\uff08<code>Close</code>\u5217\uff09\u8ba1\u7b975\u65e5\u5747\u7ebf\u548c10\u65e5\u5747\u7ebf\uff0c\u5e76\u4f7f\u7528<code>merge</code>\u51fd\u6570\u5c06\u5176\u7ec4\u88c5\u5230\u4e00\u4e2a<code>DataFrame</code>\u5bf9\u8c61\u4e2d\u5e76\u7ed8\u5236\u51fa\u53cc\u5747\u7ebf\u56fe\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>close_ma5 = baidu_df.Close.rolling(5).mean()\nclose_ma10 = baidu_df.Close.rolling(10).mean()\nresult_df = pd.merge(close_ma5, close_ma10, left_index=True, right_index=True)\nresult_df.rename(columns={'Close_x': 'MA5', 'Close_y': 'MA10'}, inplace=True)\nresult_df.plot(kind='line', figsize=(10, 6))\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/76.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-5/#_3","title":"\u76f8\u5173\u6027\u5224\u5b9a","text":"<p>\u5728\u7edf\u8ba1\u5b66\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u534f\u65b9\u5dee\uff08covariance\uff09\u6765\u8861\u91cf\u4e24\u4e2a\u968f\u673a\u53d8\u91cf\u7684\u8054\u5408\u53d8\u5316\u7a0b\u5ea6\u3002\u5982\u679c\u53d8\u91cf \\(X\\) \u7684\u8f83\u5927\u503c\u4e3b\u8981\u4e0e\u53e6\u4e00\u4e2a\u53d8\u91cf \\(Y\\) \u7684\u8f83\u5927\u503c\u76f8\u5bf9\u5e94\uff0c\u800c\u4e24\u8005\u8f83\u5c0f\u503c\u4e5f\u76f8\u5bf9\u5e94\uff0c\u90a3\u4e48\u4e24\u4e2a\u53d8\u91cf\u503e\u5411\u4e8e\u8868\u73b0\u51fa\u76f8\u4f3c\u7684\u884c\u4e3a\uff0c\u534f\u65b9\u5dee\u4e3a\u6b63\u3002\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u7684\u8f83\u5927\u503c\u4e3b\u8981\u5bf9\u5e94\u4e8e\u53e6\u4e00\u4e2a\u53d8\u91cf\u7684\u8f83\u5c0f\u503c\uff0c\u5219\u4e24\u4e2a\u53d8\u91cf\u503e\u5411\u4e8e\u8868\u73b0\u51fa\u76f8\u53cd\u7684\u884c\u4e3a\uff0c\u534f\u65b9\u5dee\u4e3a\u8d1f\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u534f\u65b9\u5dee\u7684\u6b63\u8d1f\u53f7\u663e\u793a\u7740\u4e24\u4e2a\u53d8\u91cf\u7684\u76f8\u5173\u6027\u3002\u65b9\u5dee\u662f\u534f\u65b9\u5dee\u7684\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u5373\u53d8\u91cf\u4e0e\u81ea\u8eab\u7684\u534f\u65b9\u5dee\u3002</p> \\[ cov(X,Y) = E((X - \\mu)(Y - \\upsilon)) = E(X \\cdot Y) - \\mu\\upsilon \\] <p>\u5982\u679c \\(X\\) \u548c \\(Y\\) \u662f\u7edf\u8ba1\u72ec\u7acb\u7684\uff0c\u90a3\u4e48\u4e8c\u8005\u7684\u534f\u65b9\u5dee\u4e3a0\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728 \\(X\\) \u548c \\(Y\\) \u72ec\u7acb\u7684\u60c5\u51b5\u4e0b\uff1a</p> \\[ E(X \\cdot Y) = E(X) \\cdot E(Y) = \\mu\\upsilon \\] <p>\u534f\u65b9\u5dee\u7684\u6570\u503c\u5927\u5c0f\u53d6\u51b3\u4e8e\u53d8\u91cf\u7684\u5927\u5c0f\uff0c\u901a\u5e38\u662f\u4e0d\u5bb9\u6613\u89e3\u91ca\u7684\uff0c\u4f46\u662f\u6b63\u6001\u5f62\u5f0f\u7684\u534f\u65b9\u5dee\u53ef\u4ee5\u663e\u793a\u4e24\u53d8\u91cf\u7ebf\u6027\u5173\u7cfb\u7684\u5f3a\u5f31\u3002\u5728\u7edf\u8ba1\u5b66\u4e2d\uff0c\u76ae\u5c14\u900a\u79ef\u77e9\u76f8\u5173\u7cfb\u6570\u5c31\u662f\u6b63\u6001\u5f62\u5f0f\u7684\u534f\u65b9\u5dee\uff0c\u5b83\u7528\u4e8e\u5ea6\u91cf\u4e24\u4e2a\u53d8\u91cf \\(X\\) \u548c \\(Y\\) \u4e4b\u95f4\u7684\u76f8\u5173\u7a0b\u5ea6\uff08\u7ebf\u6027\u76f8\u5173\uff09\uff0c\u5176\u503c\u4ecb\u4e8e<code>-1</code>\u5230<code>1</code>\u4e4b\u95f4\u3002</p> \\[ \\frac {cov(X, Y)} {\\sigma_{X}\\sigma_{Y}} \\] <p>\u4f30\u7b97\u6837\u672c\u7684\u534f\u65b9\u5dee\u548c\u6807\u51c6\u5dee\uff0c\u53ef\u4ee5\u5f97\u5230\u6837\u672c\u76ae\u5c14\u900a\u7cfb\u6570\uff0c\u901a\u5e38\u7528\u5e0c\u814a\u5b57\u6bcd \\(\\rho\\) \u8868\u793a\u3002</p> \\[ \\rho = \\frac {\\sum_{i=1}^{n}(X_i - \\bar{X})(Y_i - \\bar{Y})} {\\sqrt{\\sum_{i=1}^{n}(X_i - \\bar{X})^2} \\sqrt{\\sum_{i=1}^{n}(Y_i - \\bar{Y})^2}} \\] <p>\u6211\u4eec\u7528 \\(\\rho\\) \u503c\u5224\u65ad\u6307\u6807\u7684\u76f8\u5173\u6027\u65f6\u9075\u5faa\u4ee5\u4e0b\u4e24\u4e2a\u6b65\u9aa4\u3002</p> <ol> <li>\u5224\u65ad\u6307\u6807\u95f4\u662f\u6b63\u76f8\u5173\u3001\u8d1f\u76f8\u5173\uff0c\u8fd8\u662f\u4e0d\u76f8\u5173\u3002<ul> <li>\u5f53 \\(\\rho \\gt 0\\)\uff0c\u8ba4\u4e3a\u53d8\u91cf\u4e4b\u95f4\u662f\u6b63\u76f8\u5173\uff0c\u4e5f\u5c31\u662f\u4e24\u8005\u7684\u8d8b\u52bf\u4e00\u81f4\u3002</li> <li>\u5f53 \\(\\rho \\lt 0\\)\uff0c\u8ba4\u4e3a\u53d8\u91cf\u4e4b\u95f4\u662f\u8d1f\u76f8\u5173\uff0c\u4e5f\u5c31\u662f\u4e24\u8005\u7684\u8d8b\u52bf\u76f8\u53cd\u3002</li> <li>\u5f53 \\(\\rho \\approx 0\\)\uff0c\u8ba4\u4e3a\u53d8\u91cf\u4e4b\u95f4\u662f\u4e0d\u76f8\u5173\u7684\uff0c\u4f46\u5e76\u4e0d\u4ee3\u8868\u4e24\u4e2a\u6307\u6807\u662f\u7edf\u8ba1\u72ec\u7acb\u7684\u3002</li> </ul> </li> <li>\u5224\u65ad\u6307\u6807\u95f4\u7684\u76f8\u5173\u7a0b\u5ea6\u3002<ul> <li>\u5f53 \\(\\rho\\) \u7684\u7edd\u5bf9\u503c\u5728 \\([0.6,1]\\) \u4e4b\u95f4\uff0c\u8ba4\u4e3a\u53d8\u91cf\u4e4b\u95f4\u662f\u5f3a\u76f8\u5173\u7684\u3002</li> <li>\u5f53 \\(\\rho\\) \u7684\u7edd\u5bf9\u503c\u5728 \\([0.1,0.6)\\) \u4e4b\u95f4\uff0c\u8ba4\u4e3a\u53d8\u91cf\u4e4b\u95f4\u662f\u5f31\u76f8\u5173\u7684\u3002</li> <li>\u5f53 \\(\\rho\\) \u7684\u7edd\u5bf9\u503c\u5728 \\([0,0.1)\\) \u4e4b\u95f4\uff0c\u8ba4\u4e3a\u53d8\u91cf\u4e4b\u95f4\u6ca1\u6709\u76f8\u5173\u6027\u3002</li> </ul> </li> </ol> <p>\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u9002\u7528\u4e8e\uff1a</p> <ol> <li>\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u662f\u7ebf\u6027\u5173\u7cfb\uff0c\u90fd\u662f\u8fde\u7eed\u6570\u636e\u3002</li> <li>\u4e24\u4e2a\u53d8\u91cf\u7684\u603b\u4f53\u662f\u6b63\u6001\u5206\u5e03\uff0c\u6216\u63a5\u8fd1\u6b63\u6001\u7684\u5355\u5cf0\u5206\u5e03\u3002</li> <li>\u4e24\u4e2a\u53d8\u91cf\u7684\u89c2\u6d4b\u503c\u662f\u6210\u5bf9\u7684\uff0c\u6bcf\u5bf9\u89c2\u6d4b\u503c\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\u3002</li> </ol> <p>\u8fd9\u91cc\uff0c\u6211\u4eec\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u5982\u679c\u4e24\u7ec4\u53d8\u91cf\u5e76\u4e0d\u662f\u6765\u81ea\u4e8e\u6b63\u6001\u603b\u4f53\u7684\u8fde\u7eed\u503c\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u5224\u65ad\u76f8\u5173\u6027\u5462\uff1f\u5bf9\u4e8e\u5b9a\u5e8f\u5c3a\u5ea6\uff08\u7b49\u7ea7\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u65af\u76ae\u5c14\u66fc\u79e9\u76f8\u5173\u7cfb\u6570\uff0c\u5176\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a $$ r_{s}=1-{\\frac {6\\sum d_{i}^{2}}{n(n^{2}-1)}} $$ \u5176\u4e2d\uff0c\\(d_{i}=\\operatorname {R} (X_{i})-\\operatorname {R} (Y_{i})\\)\uff0c\u5373\u6bcf\u7ec4\u89c2\u6d4b\u4e2d\u4e24\u4e2a\u53d8\u91cf\u7684\u7b49\u7ea7\u5dee\u503c\uff0c\\(n\\)\u4e3a\u89c2\u6d4b\u6837\u672c\u6570\u3002</p> <p>\u5bf9\u4e8e\u5b9a\u7c7b\u5c3a\u5ea6\uff08\u7c7b\u522b\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5361\u65b9\u68c0\u9a8c\u7684\u65b9\u5f0f\u6765\u5224\u5b9a\u5176\u662f\u5426\u76f8\u5173\u3002\u5176\u5b9e\u5f88\u591a\u65f6\u5019\uff0c\u8fde\u7eed\u503c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5206\u7bb1\u7684\u65b9\u5f0f\u5904\u7406\u6210\u79bb\u6563\u7684\u7b49\u7ea7\u6216\u7c7b\u522b\uff0c\u7136\u540e\u4f7f\u7528\u65af\u76ae\u5c14\u66fc\u79e9\u76f8\u5173\u7cfb\u6570\u6216\u5361\u65b9\u68c0\u9a8c\u7684\u65b9\u5f0f\u6765\u5224\u5b9a\u76f8\u5173\u6027\u3002</p> <p><code>DataFrame</code>\u5bf9\u8c61\u7684<code>cov</code>\u65b9\u6cd5\u548c<code>corr</code>\u65b9\u6cd5\u5206\u522b\u7528\u4e8e\u8ba1\u7b97\u534f\u65b9\u5dee\u548c\u76f8\u5173\u7cfb\u6570\uff0c<code>corr</code>\u65b9\u6cd5\u6709\u4e00\u4e2a\u540d\u4e3a<code>method</code>\u7684\u53c2\u6570\uff0c\u5176\u9ed8\u8ba4\u503c\u662f<code>pearson</code>\uff0c\u8868\u793a\u8ba1\u7b97\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\uff1b\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u6307\u5b9a<code>kendall</code>\u6216<code>spearman</code>\u6765\u8ba1\u7b97\u80af\u5fb7\u5c14\u7cfb\u6570\u6216\u65af\u76ae\u5c14\u66fc\u79e9\u76f8\u5173\u7cfb\u6570\u3002</p> <p>\u6211\u4eec\u4ece\u540d\u4e3a<code>boston_house_price.csv</code>\u7684\u6587\u4ef6\u4e2d\u83b7\u53d6\u8457\u540d\u7684\u6ce2\u58eb\u987f\u623f\u4ef7\u6570\u636e\u96c6\u6765\u521b\u5efa\u4e00\u4e2a<code>DataFrame</code>\u3002</p> <pre><code>boston_df = pd.read_csv('data/boston_house_price.csv')\nboston_df\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u76f8\u5bf9\u8def\u5f84\u6765\u8bbf\u95ee CSV \u6587\u4ef6\uff0c\u4e5f\u5c31\u662f\u8bf4 CSV \u6587\u4ef6\u5728\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u4e0b\u540d\u4e3a<code>data</code>\u7684\u6587\u4ef6\u5939\u4e2d\u3002\u5982\u679c\u9700\u8981\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684 CSV \u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u767e\u5ea6\u4e91\u76d8\u5730\u5740\u8fdb\u884c\u83b7\u53d6\u3002\u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g?pwd=e7b4\uff0c\u63d0\u53d6\u7801\uff1ae7b4\u3002</p> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u8be5\u6570\u636e\u96c6\u4e2d\u5305\u542b\u4e86\u8bf8\u591a\u5f71\u54cd\u623f\u4ef7\u7684\u7279\u5f81\uff0c\u5305\u62ec\u72af\u7f6a\u7387\u3001\u4e00\u6c27\u5316\u6c2e\u6d53\u5ea6\u3001\u5e73\u5747\u623f\u95f4\u6570\u3001\u4f4e\u6536\u5165\u4eba\u7fa4\u5360\u6bd4\u7b49\uff0c\u5176\u4e2d<code>PRICE</code>\u4ee3\u8868\u623f\u4ef7\uff0c\u5177\u4f53\u60c5\u51b5\u5982\u4e0b\u6240\u793a\u3002</p> <p></p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u5176\u4e2d\u53ef\u4ee5\u89c6\u4e3a\u6765\u81ea\u4e8e\u6b63\u6001\u603b\u4f53\u7684\u8fde\u7eed\u503c\uff0c\u901a\u8fc7<code>corr</code>\u65b9\u6cd5\u8ba1\u7b97\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\uff0c\u770b\u770b\u54ea\u4e9b\u8ddf\u623f\u4ef7\u662f\u6b63\u76f8\u5173\u6216\u8d1f\u76f8\u5173\u7684\u5173\u7cfb\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>boston_df[['NOX', 'RM', 'PTRATIO', 'LSTAT', 'PRICE']].corr()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u5e73\u5747\u623f\u95f4\u6570\uff08<code>RM</code>\uff09\u8ddf\u623f\u4ef7\u6709\u8f83\u5f3a\u7684\u6b63\u76f8\u5173\u6027\uff0c\u800c\u4f4e\u6536\u5165\u4eba\u7fa4\u5360\u6bd4\uff08<code>LSTAT</code>\uff09\u8ddf\u623f\u4ef7\u4e4b\u95f4\u5b58\u5728\u660e\u663e\u7684\u8d1f\u76f8\u5173\u6027\u3002</p> <p>\u65af\u76ae\u5c14\u66fc\u79e9\u76f8\u5173\u7cfb\u6570\u5bf9\u6570\u636e\u6761\u4ef6\u7684\u8981\u6c42\u6ca1\u6709\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u4e25\u683c\uff0c\u53ea\u8981\u4e24\u4e2a\u53d8\u91cf\u7684\u89c2\u6d4b\u503c\u662f\u6210\u5bf9\u7684\u7b49\u7ea7\u6570\u636e\uff0c\u6216\u8005\u662f\u7531\u8fde\u7eed\u53d8\u91cf\u8f6c\u5316\u6210\u7b49\u7ea7\u7684\u6570\u636e\uff0c\u4e0d\u8bba\u4e24\u4e2a\u53d8\u91cf\u7684\u603b\u4f53\u5206\u5e03\u5f62\u6001\u3001\u6837\u672c\u5bb9\u91cf\u7684\u5927\u5c0f\u5982\u4f55\uff0c\u90fd\u53ef\u4ee5\u7528\u65af\u76ae\u5c14\u66fc\u7b49\u7ea7\u76f8\u5173\u7cfb\u6570\u6765\u8fdb\u884c\u7814\u7a76\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u5bf9\u90e8\u5206\u7279\u5f81\u8fdb\u884c\u9884\u5904\u7406\uff0c\u7136\u540e\u8ba1\u7b97\u65af\u76ae\u5c14\u66fc\u79e9\u76f8\u5173\u7cfb\u6570\u3002</p> <pre><code>boston_df['CRIM'] = boston_df.CRIM.apply(lambda x: x // 5 if x &lt; 25 else 5).map(int)\nboston_df['ZN'] = pd.qcut(boston_df.ZN, q=[0, 0.75, 0.8, 0.85, 0.9, 0.95, 1], labels=np.arange(6))\nboston_df['AGE'] = (boston_df.AGE // 20).map(int)\nboston_df['DIS'] = (boston_df.DIS // 2.05).map(int)\nboston_df['B'] = (boston_df.B // 66).map(int)\nboston_df['PRICE'] = pd.qcut(boston_df.PRICE, q=[0, 0.15, 0.3, 0.5, 0.7, 0.85, 1], labels=np.arange(6))\nboston_df[['CRIM', 'ZN', 'AGE', 'DIS', 'B', 'PRICE']].corr(method='spearman')\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u623f\u4ef7\u8ddf\u72af\u7f6a\u7387\uff08<code>CRIM</code>\uff09\u548c\u623f\u9f84\uff08<code>AGE</code>\uff09\u4e4b\u95f4\u5b58\u5728\u8f83\u4e3a\u660e\u663e\u7684\u8d1f\u76f8\u5173\u5173\u7cfb\uff0c\u8ddf\u4f4f\u623f\u7528\u5730\u5c3a\u5bf8\uff08<code>ZN</code>\uff09\u5b58\u5728\u5fae\u5f31\u7684\u6b63\u76f8\u5173\u5173\u7cfb\u3002\u76f8\u5173\u6027\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u627e\u5230\u4e1a\u52a1\u6293\u624b\uff0c\u5373\u627e\u5230\u90a3\u4e9b\u80fd\u591f\u5f71\u54cd\u6216\u6539\u53d8\u5de5\u4f5c\u7ed3\u679c\u7684\u76f8\u5173\u56e0\u7d20\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/77.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-6/","title":"77.\u6df1\u5165\u6d45\u51fapandas 6","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/77.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-6/#pandas-6","title":"\u6df1\u5165\u6d45\u51fapandas-6","text":"<p>\u6211\u4eec\u518d\u6765\u770b\u770b<code>Index</code>\u7c7b\u578b\uff0c\u5b83\u4e3a<code>Series</code>\u548c<code>DataFrame</code>\u5bf9\u8c61\u63d0\u4f9b\u4e86\u7d22\u5f15\u670d\u52a1\uff0c\u6709\u4e86\u7d22\u5f15\u6211\u4eec\u5c31\u53ef\u4ee5\u6392\u5e8f\u6570\u636e\uff08<code>sort_index</code>\u65b9\u6cd5\uff09\u3001\u5bf9\u9f50\u6570\u636e\uff08\u5728\u8fd0\u7b97\u548c\u5408\u5e76\u6570\u636e\u65f6\u975e\u5e38\u91cd\u8981\uff09\u5e76\u5b9e\u73b0\u5bf9\u6570\u636e\u7684\u5feb\u901f\u68c0\u7d22\uff08\u7d22\u5f15\u8fd0\u7b97\uff09\u3002\u7531\u4e8e<code>DataFrame</code>\u7c7b\u578b\u8868\u793a\u7684\u662f\u4e8c\u7ef4\u6570\u636e\uff0c\u6240\u4ee5\u5b83\u7684\u884c\u548c\u5217\u90fd\u6709\u7d22\u5f15\uff0c\u5206\u522b\u662f<code>index</code>\u548c<code>columns</code>\u3002<code>Index</code>\u7c7b\u578b\u7684\u521b\u5efa\u7684\u6bd4\u8f83\u7b80\u5355\uff0c\u901a\u5e38\u7ed9\u51fa<code>data</code>\u3001<code>dtype</code>\u548c<code>name</code>\u4e09\u4e2a\u53c2\u6570\u5373\u53ef\uff0c\u5206\u522b\u8868\u793a\u4f5c\u4e3a\u7d22\u5f15\u7684\u6570\u636e\u3001\u7d22\u5f15\u7684\u6570\u636e\u7c7b\u578b\u548c\u7d22\u5f15\u7684\u540d\u79f0\u3002\u7531\u4e8e<code>Index</code>\u672c\u8eab\u4e5f\u662f\u4e00\u7ef4\u7684\u6570\u636e\uff0c\u7d22\u5f15\u5b83\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\u8ddf<code>Series</code>\u975e\u5e38\u7c7b\u4f3c\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a<code>Index</code>\u5bf9\u8c61\uff0c\u7136\u540e\u5c1d\u8bd5\u4e00\u4e0b\u4e4b\u524d\u5b66\u8fc7\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u5728<code>Index</code>\u7c7b\u578b\u4e0a\u662f\u5426\u751f\u6548\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4e3b\u8981\u770b\u770b<code>Index</code>\u7684\u51e0\u79cd\u5b50\u7c7b\u578b\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/77.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-6/#_1","title":"\u8303\u56f4\u7d22\u5f15","text":"<p>\u8303\u56f4\u7d22\u5f15\u662f\u7531\u5177\u6709\u5355\u8c03\u6027\u7684\u6574\u6570\u6784\u6210\u7684\u7d22\u5f15\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>RangeIndex</code>\u6784\u9020\u5668\u6765\u521b\u5efa\u8303\u56f4\u7d22\u5f15\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7<code>RangeIndex</code>\u7c7b\u7684\u7c7b\u65b9\u6cd5<code>from_range</code>\u6765\u521b\u5efa\u8303\u56f4\u7d22\u5f15\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>sales_data = np.random.randint(400, 1000, 12)\nindex = pd.RangeIndex(1, 13, name='\u6708\u4efd')\nser = pd.Series(data=sales_data, index=index)\nser\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u6708\u4efd\n1     703\n2     705\n3     557\n4     943\n5     961\n6     615\n7     788\n8     985\n9     921\n10    951\n11    874\n12    609\ndtype: int64\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/77.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-6/#_2","title":"\u5206\u7c7b\u7d22\u5f15","text":"<p>\u5206\u7c7b\u7d22\u5f15\u662f\u7531\u5b9a\u7c7b\u5c3a\u5ea6\u6784\u6210\u7684\u7d22\u5f15\u3002\u5982\u679c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u7d22\u5f15\u5c06\u6570\u636e\u5206\u7ec4\uff0c\u7136\u540e\u518d\u8fdb\u884c\u805a\u5408\u64cd\u4f5c\uff0c\u5206\u7c7b\u7d22\u5f15\u5c31\u53ef\u4ee5\u6d3e\u4e0a\u7528\u573a\u3002\u5206\u7c7b\u7d22\u5f15\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3a<code>reorder_categories</code>\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u7ed9\u7d22\u5f15\u6307\u5b9a\u4e00\u4e2a\u987a\u5e8f\uff0c\u5206\u7ec4\u805a\u5408\u7684\u7ed3\u679c\u4f1a\u6309\u7167\u8fd9\u4e2a\u6307\u5b9a\u7684\u987a\u5e8f\u8fdb\u884c\u5448\u73b0\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>sales_data = [6, 6, 7, 6, 8, 6]\nindex = pd.CategoricalIndex(\n    data=['\u82f9\u679c', '\u9999\u8549', '\u82f9\u679c', '\u82f9\u679c', '\u6843\u5b50', '\u9999\u8549'],\n    categories=['\u82f9\u679c', '\u9999\u8549', '\u6843\u5b50'],\n    ordered=True\n)\nser = pd.Series(data=sales_data, index=index)\nser\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u82f9\u679c    6\n\u9999\u8549    6\n\u82f9\u679c    7\n\u82f9\u679c    6\n\u6843\u5b50    8\n\u9999\u8549    6\ndtype: int64\n</code></pre> <p>\u57fa\u4e8e\u7d22\u5f15\u5206\u7ec4\u6570\u636e\uff0c\u7136\u540e\u4f7f\u7528<code>sum</code>\u8fdb\u884c\u6c42\u548c\u3002</p> <pre><code>ser.groupby(level=0).sum()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u82f9\u679c    19\n\u9999\u8549    12\n\u6843\u5b50     8\ndtype: int64\n</code></pre> <p>\u6307\u5b9a\u7d22\u5f15\u7684\u987a\u5e8f\u3002</p> <pre><code>ser.index = index.reorder_categories(['\u9999\u8549', '\u6843\u5b50', '\u82f9\u679c'])\nser.groupby(level=0).sum()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u9999\u8549    12\n\u6843\u5b50     8\n\u82f9\u679c    19\ndtype: int64\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/77.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-6/#_3","title":"\u591a\u7ea7\u7d22\u5f15","text":"<p>Pandas \u4e2d\u7684<code>MultiIndex</code>\u7c7b\u578b\u7528\u6765\u8868\u793a\u5c42\u6b21\u6216\u591a\u7ea7\u7d22\u5f15\u3002\u53ef\u4ee5\u4f7f\u7528<code>MultiIndex</code>\u7c7b\u7684\u7c7b\u65b9\u6cd5<code>from_arrays</code>\u3001<code>from_product</code>\u3001<code>from_tuples</code>\u7b49\u6765\u521b\u5efa\u591a\u7ea7\u7d22\u5f15\uff0c\u6211\u4eec\u7ed9\u5927\u5bb6\u4e3e\u51e0\u4e2a\u4f8b\u5b50\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>tuples = [(1, 'red'), (1, 'blue'), (2, 'red'), (2, 'blue')]\nindex = pd.MultiIndex.from_tuples(tuples, names=['no', 'color'])\nindex\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>MultiIndex([(1,  'red'),\n            (1, 'blue'),\n            (2,  'red'),\n            (2, 'blue')],\n           names=['no', 'color'])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>arrays = [[1, 1, 2, 2], ['red', 'blue', 'red', 'blue']]\nindex = pd.MultiIndex.from_arrays(arrays, names=['no', 'color'])\nindex\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>MultiIndex([(1,  'red'),\n            (1, 'blue'),\n            (2,  'red'),\n            (2, 'blue')],\n           names=['no', 'color'])\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>sales_data = np.random.randint(1, 100, 4)\nser = pd.Series(data=sales_data, index=index)\nser\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>no  color\n1   red      43\n    blue     31\n2   red      55\n    blue     75\ndtype: int64\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser.groupby('no').sum()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>no\n1     74\n2    130\ndtype: int64\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>ser.groupby(level=1).sum()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>color\nblue    106\nred      98\ndtype: int64\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>stu_ids = np.arange(1001, 1006)\nsemisters = ['\u671f\u4e2d', '\u671f\u672b']\nindex = pd.MultiIndex.from_product((stu_ids, semisters), names=['\u5b66\u53f7', '\u5b66\u671f'])\ncourses = ['\u8bed\u6587', '\u6570\u5b66', '\u82f1\u8bed']\nscores = np.random.randint(60, 101, (10, 3))\ndf = pd.DataFrame(data=scores, columns=courses, index=index)\ndf\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>             \u8bed\u6587 \u6570\u5b66 \u82f1\u8bed\n\u5b66\u53f7  \u5b66\u671f          \n1001  \u671f\u4e2d    93  77  60\n      \u671f\u672b    93  98  84\n1002  \u671f\u4e2d    64  78  71\n      \u671f\u672b    70  71  97\n1003  \u671f\u4e2d    72  88  97\n      \u671f\u672b    99  100 63\n1004  \u671f\u4e2d    80  71  61\n      \u671f\u672b    91  62  72\n1005  \u671f\u4e2d    82  95  67\n      \u671f\u672b    84  78  86\n</code></pre> <p>\u6839\u636e\u7b2c\u4e00\u7ea7\u7d22\u5f15\u5206\u7ec4\u6570\u636e\uff0c\u6309\u7167\u671f\u4e2d\u6210\u7ee9\u5360<code>25%</code>\uff0c\u671f\u672b\u6210\u7ee9\u5360<code>75%</code> \u7684\u65b9\u5f0f\u8ba1\u7b97\u6bcf\u4e2a\u5b66\u751f\u6bcf\u95e8\u8bfe\u7684\u6210\u7ee9\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>df.groupby(level=0).agg(lambda x: x.values[0] * 0.25 + x.values[1] * 0.75)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>        \u8bed\u6587    \u6570\u5b66    \u82f1\u8bed\n\u5b66\u53f7          \n1001    93.00   92.75   78.00\n1002    68.50   72.75   90.50\n1003    92.25   97.00   71.50\n1004    88.25   64.25   69.25\n1005    83.50   82.25   81.25\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/77.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-6/#_4","title":"\u95f4\u9694\u7d22\u5f15","text":"<p>\u95f4\u9694\u7d22\u5f15\u987e\u540d\u601d\u4e49\u662f\u4f7f\u7528\u56fa\u5b9a\u7684\u95f4\u9694\u8303\u56f4\u5145\u5f53\u7d22\u5f15\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u4f7f\u7528<code>interval_range</code>\u51fd\u6570\u6765\u521b\u5efa\u95f4\u9694\u7d22\u5f15\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>index = pd.interval_range(start=0, end=5)\nindex\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>IntervalIndex([(0, 1], (1, 2], (2, 3], (3, 4], (4, 5]], dtype='interval[int64, right]')\n</code></pre> <p><code>IntervalIndex</code>\u6709\u4e00\u4e2a\u540d\u4e3a<code>contains</code>\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u68c0\u67e5\u8303\u56f4\u5185\u662f\u5426\u5305\u542b\u4e86\u67d0\u4e2a\u5143\u7d20\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>index.contains(1.5)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([False,  True, False, False, False])\n</code></pre> <p><code>IntervalIndex</code>\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3a<code>overlaps</code>\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u68c0\u67e5\u4e00\u4e2a\u8303\u56f4\u8ddf\u5176\u4ed6\u7684\u8303\u56f4\u662f\u5426\u6709\u91cd\u53e0\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>index.overlaps(pd.Interval(1.5, 3.5))\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>array([False,  True,  True,  True, False])\n</code></pre> <p>\u5982\u679c\u5e0c\u671b\u95f4\u9694\u8303\u56f4\u662f\u5de6\u95ed\u53f3\u5f00\u7684\u72b6\u6001\uff0c\u53ef\u4ee5\u5728\u521b\u5efa\u95f4\u9694\u7d22\u5f15\u65f6\u901a\u8fc7<code>closed='left'</code>\u6765\u505a\u5230\uff1b\u5982\u679c\u5e0c\u671b\u4e24\u8fb9\u90fd\u662f\u5173\u95ed\u72b6\u6001\uff0c\u53ef\u4ee5\u5c06<code>close</code>\u53c2\u6570\u7684\u503c\u8d4b\u503c\u4e3a<code>both</code>\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>index = pd.interval_range(start=0, end=5, closed='left')\nindex\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>IntervalIndex([[0, 1), [1, 2), [2, 3), [3, 4), [4, 5)], dtype='interval[int64, left]')\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>index = pd.interval_range(start=pd.Timestamp('2022-01-01'), end=pd.Timestamp('2022-01-04'), closed='both')\nindex\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>IntervalIndex([[2022-01-01, 2022-01-02], [2022-01-02, 2022-01-03], [2022-01-03, 2022-01-04]], dtype='interval[datetime64[ns], both]')\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/77.%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BApandas-6/#_5","title":"\u65e5\u671f\u65f6\u95f4\u7d22\u5f15","text":"<p><code>DatetimeIndex</code>\u5e94\u8be5\u662f\u4f17\u591a\u7d22\u5f15\u4e2d\u6700\u590d\u6742\u6700\u91cd\u8981\u7684\u4e00\u79cd\u7d22\u5f15\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u4f7f\u7528<code>date_range()</code>\u51fd\u6570\u6765\u521b\u5efa\u65e5\u671f\u65f6\u95f4\u7d22\u5f15\uff0c\u8be5\u51fd\u6570\u6709\u51e0\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u53c2\u6570<code>start</code>\u3001<code>end</code>\u3001<code>periods</code>\u3001<code>freq</code>\u3001<code>tz</code>\uff0c\u5206\u522b\u4ee3\u8868\u8d77\u59cb\u65e5\u671f\u65f6\u95f4\u3001\u7ed3\u675f\u65e5\u671f\u65f6\u95f4\u3001\u751f\u6210\u5468\u671f\u3001\u91c7\u6837\u9891\u7387\u548c\u65f6\u533a\u3002\u6211\u4eec\u5148\u6765\u770b\u770b\u5982\u4f55\u521b\u5efa<code>DatetimeIndex</code>\u5bf9\u8c61\uff0c\u518d\u6765\u8ba8\u8bba\u5b83\u7684\u76f8\u5173\u8fd0\u7b97\u548c\u64cd\u4f5c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>pd.date_range('2021-1-1', '2021-6-30', periods=10)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>DatetimeIndex(['2021-01-01', '2021-01-21', '2021-02-10', '2021-03-02',\n               '2021-03-22', '2021-04-11', '2021-05-01', '2021-05-21',\n               '2021-06-10', '2021-06-30'],\n              dtype='datetime64[ns]', freq=None)\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>pd.date_range('2021-1-1', '2021-6-30', freq='W')\n</code></pre> <p>\u8bf4\u660e\uff1a<code>freq=W</code>\u8868\u793a\u91c7\u6837\u5468\u671f\u4e3a\u4e00\u5468\uff0c\u5b83\u4f1a\u9ed8\u8ba4\u661f\u671f\u65e5\u662f\u4e00\u5468\u7684\u5f00\u59cb\uff1b\u5982\u679c\u4f60\u5e0c\u671b\u661f\u671f\u4e00\u8868\u793a\u4e00\u5468\u7684\u5f00\u59cb\uff0c\u4f60\u53ef\u4ee5\u5c06\u5176\u4fee\u6539\u4e3a<code>freq=W-MON</code>\uff1b\u4f60\u4e5f\u53ef\u4ee5\u8bd5\u7740\u5c06\u8be5\u53c2\u6570\u7684\u503c\u4fee\u6539\u4e3a<code>12H</code>\uff0c<code>M</code>\uff0c<code>Q</code>\u7b49\uff0c\u770b\u770b\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u76f8\u4fe1\u4f60\u4e0d\u96be\u731c\u5230\u5b83\u4eec\u7684\u542b\u4e49\u3002</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>DatetimeIndex(['2021-01-03', '2021-01-10', '2021-01-17', '2021-01-24',\n               '2021-01-31', '2021-02-07', '2021-02-14', '2021-02-21',\n               '2021-02-28', '2021-03-07', '2021-03-14', '2021-03-21',\n               '2021-03-28', '2021-04-04', '2021-04-11', '2021-04-18',\n               '2021-04-25', '2021-05-02', '2021-05-09', '2021-05-16',\n               '2021-05-23', '2021-05-30', '2021-06-06', '2021-06-13',\n               '2021-06-20', '2021-06-27'],\n              dtype='datetime64[ns]', freq='W-SUN')\n</code></pre> <p><code>DatatimeIndex</code>\u53ef\u4ee5\u8ddf<code>DateOffset</code>\u7c7b\u578b\u8fdb\u884c\u8fd0\u7b97\uff0c\u8fd9\u4e00\u70b9\u5f88\u597d\u7406\u89e3\uff0c\u4ee5\u4e3a\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u65f6\u95f4\u5dee\u8ba9\u65f6\u95f4\u5411\u524d\u6216\u5411\u540e\u504f\u79fb\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>index = pd.date_range('2021-1-1', '2021-6-30', freq='W')\nindex - pd.DateOffset(days=2)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>DatetimeIndex(['2021-01-01', '2021-01-08', '2021-01-15', '2021-01-22',\n               '2021-01-29', '2021-02-05', '2021-02-12', '2021-02-19',\n               '2021-02-26', '2021-03-05', '2021-03-12', '2021-03-19',\n               '2021-03-26', '2021-04-02', '2021-04-09', '2021-04-16',\n               '2021-04-23', '2021-04-30', '2021-05-07', '2021-05-14',\n               '2021-05-21', '2021-05-28', '2021-06-04', '2021-06-11',\n               '2021-06-18', '2021-06-25'],\n              dtype='datetime64[ns]', freq=None)\n</code></pre> <p>\u4ee3\u7801\uff1a</p> <pre><code>index + pd.DateOffset(hours=2, minutes=10)\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>DatetimeIndex(['2021-01-03 02:10:00', '2021-01-10 02:10:00',\n               '2021-01-17 02:10:00', '2021-01-24 02:10:00',\n               '2021-01-31 02:10:00', '2021-02-07 02:10:00',\n               '2021-02-14 02:10:00', '2021-02-21 02:10:00',\n               '2021-02-28 02:10:00', '2021-03-07 02:10:00',\n               '2021-03-14 02:10:00', '2021-03-21 02:10:00',\n               '2021-03-28 02:10:00', '2021-04-04 02:10:00',\n               '2021-04-11 02:10:00', '2021-04-18 02:10:00',\n               '2021-04-25 02:10:00', '2021-05-02 02:10:00',\n               '2021-05-09 02:10:00', '2021-05-16 02:10:00',\n               '2021-05-23 02:10:00', '2021-05-30 02:10:00',\n               '2021-06-06 02:10:00', '2021-06-13 02:10:00',\n               '2021-06-20 02:10:00', '2021-06-27 02:10:00'],\n              dtype='datetime64[ns]', freq=None)\n</code></pre> <p>\u5982\u679c<code>Series</code>\u5bf9\u8c61\u6216<code>DataFrame</code>\u5bf9\u8c61\u4f7f\u7528\u4e86<code>DatetimeIndex</code>\u7c7b\u578b\u7684\u7d22\u5f15\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>asfreq()</code>\u65b9\u6cd5\u6307\u5b9a\u4e00\u4e2a\u65f6\u95f4\u9891\u7387\u6765\u5b9e\u73b0\u5bf9\u6570\u636e\u7684\u62bd\u6837\uff0c\u6211\u4eec\u4ecd\u7136\u4ee5\u4e4b\u524d\u8bb2\u8fc7\u7684\u767e\u5ea6\u80a1\u7968\u6570\u636e\u4e3a\u4f8b\uff0c\u7ed9\u5927\u5bb6\u505a\u4e00\u4e2a\u6f14\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>baidu_df = pd.read_excel('data/2022\u5e74\u80a1\u7968\u6570\u636e.xlsx', sheet_name='BIDU', index_col='Date')\nbaidu_df.sort_index(inplace=True)\nbaidu_df.asfreq('5D')\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u5927\u5bb6\u53ef\u80fd\u6ce8\u610f\u5230\u4e86\uff0c\u6bcf5\u5929\u62bd\u53d61\u5929\u6709\u53ef\u80fd\u4f1a\u62bd\u4e2d\u975e\u4ea4\u6613\u65e5\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u5217\u90fd\u53d8\u6210\u4e86\u7a7a\u503c\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u4f7f\u7528<code>asfreq</code>\u65b9\u6cd5\u65f6\u53ef\u4ee5\u901a\u8fc7<code>method</code>\u53c2\u6570\u6765\u6307\u5b9a\u4e00\u79cd\u586b\u5145\u7a7a\u503c\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u76f8\u90bb\u7684\u4ea4\u6613\u65e5\u7684\u6570\u636e\u586b\u5165\u8fdb\u6765\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>baidu_df.asfreq('5D', method='ffill')\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u5f53\u4f7f\u7528<code>DatetimeIndex</code>\u7d22\u5f15\u65f6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7<code>resample()</code>\u65b9\u6cd5\u57fa\u4e8e\u65f6\u95f4\u5bf9\u6570\u636e\u8fdb\u884c\u91cd\u91c7\u6837\uff0c\u76f8\u5f53\u4e8e\u6839\u636e\u65f6\u95f4\u5468\u671f\u5bf9\u6570\u636e\u8fdb\u884c\u4e86\u5206\u7ec4\u64cd\u4f5c\uff0c\u5206\u7ec4\u4e4b\u540e\u8fd8\u53ef\u4ee5\u8fdb\u884c\u805a\u5408\u7edf\u8ba1\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>baidu_df.resample('1M').mean()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u4ee3\u7801\uff1a</p> <pre><code>baidu_df.resample('1M').agg(['mean', 'std'])\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u63d0\u793a\uff1a\u4e0d\u77e5\u5927\u5bb6\u662f\u5426\u6ce8\u610f\u5230\uff0c\u4e0a\u9762\u8f93\u51fa\u7684<code>DataFrame</code> \u7684\u5217\u7d22\u5f15\u662f\u4e00\u4e2a<code>MultiIndex</code>\u5bf9\u8c61\u3002\u4f60\u53ef\u4ee5\u8bbf\u95ee\u4e0a\u9762\u7684<code>DataFrame</code>\u5bf9\u8c61\u7684<code>columns</code>\u5c5e\u6027\u770b\u770b\u3002</p> <p>\u5982\u679c\u8981\u5b9e\u73b0\u65e5\u671f\u65f6\u95f4\u7684\u65f6\u533a\u8f6c\u6362\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u7528<code>tz_localize()</code>\u65b9\u6cd5\u5c06\u65e5\u671f\u65f6\u95f4\u672c\u5730\u5316\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>baidu_df = baidu_df.tz_localize('Asia/Chongqing')\nbaidu_df\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u5728\u5bf9\u65f6\u95f4\u672c\u5730\u5316\u4ee5\u540e\uff0c\u6211\u4eec\u518d\u4f7f\u7528<code>tz_convert()</code>\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b9e\u73b0\u8f6c\u6362\u65f6\u533a\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>baidu_df.tz_convert('America/New_York')\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u5982\u679c\u4f60\u7684\u6570\u636e\u4f7f\u7528\u4e86<code>DatetimeIndex</code>\u7c7b\u578b\u7684\u7d22\u5f15\uff0c\u90a3\u4e48\u4f60\u5c31\u5f88\u6709\u53ef\u80fd\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u65f6\u95f4\u5e8f\u5217\u5206\u6790\uff0c\u5173\u4e8e\u65f6\u95f4\u5e8f\u5217\u5206\u6790\u7684\u65b9\u6cd5\u548c\u6a21\u578b\u5e76\u4e0d\u662f\u672c\u7ae0\u8282\u8981\u63a2\u8ba8\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u5728\u5176\u4ed6\u7684\u4e13\u680f\u4e2d\u4e3a\u5927\u5bb6\u5206\u4eab\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/78.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/","title":"78.\u6570\u636e\u53ef\u89c6\u5316 1","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/78.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/#-1","title":"\u6570\u636e\u53ef\u89c6\u5316-1","text":"<p>\u5728\u5b8c\u6210\u4e86\u5bf9\u6570\u636e\u7684\u900f\u89c6\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6570\u636e\u900f\u89c6\u7684\u7ed3\u679c\u901a\u8fc7\u53ef\u89c6\u5316\u7684\u65b9\u5f0f\u5448\u73b0\u51fa\u6765\uff0c\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u5c06\u6570\u636e\u53d8\u6210\u6f02\u4eae\u7684\u7edf\u8ba1\u56fe\u8868\uff0c\u56e0\u4e3a\u4eba\u7c7b\u5bf9\u989c\u8272\u548c\u5f62\u72b6\u4f1a\u66f4\u52a0\u654f\u611f\uff0c\u7136\u540e\u518d\u8fdb\u4e00\u6b65\u89e3\u8bfb\u6570\u636e\u80cc\u540e\u9690\u85cf\u7684\u5546\u4e1a\u4ef7\u503c\u3002\u5728\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u4e3a\u5927\u5bb6\u5c55\u793a\u8fc7\u7528\u4f7f\u7528<code>Series</code>\u6216<code>DataFrame</code>\u5bf9\u8c61\u7684<code>plot</code>\u65b9\u6cd5\u751f\u6210\u53ef\u89c6\u5316\u56fe\u8868\u7684\u64cd\u4f5c\uff0c\u672c\u7ae0\u6211\u4eec\u4e3a\u5927\u5bb6\u8bb2\u89e3\u8fd9\u4e2a\u7ed8\u56fe\u65b9\u6cd5\u7684\u57fa\u77f3\uff0c\u5b83\u5c31\u662f\u5927\u540d\u9f0e\u9f0e\u7684 matplotlib \u5e93\u3002</p> <p>\u5728\u8bb2\u89e3 matplotlib \u4e4b\u524d\uff0c\u8bf7\u5927\u5bb6\u5148\u770b\u770b\u4e0b\u9762\u8fd9\u5f20\u56fe\uff0c\u5b83\u7ed9\u51fa\u4e86\u5e38\u7528\u7684\u56fe\u8868\u7c7b\u578b\u53ca\u5176\u5e94\u7528\u573a\u666f\u3002\u6211\u4eec\u5728\u9009\u62e9\u7edf\u8ba1\u56fe\u8868\u65f6\uff0c\u5982\u679c\u4e0d\u77e5\u9053\u505a\u51fa\u600e\u6837\u7684\u9009\u62e9\u6700\u5408\u9002\uff0c\u76f8\u4fe1\u8fd9\u5f20\u56fe\u5c31\u80fd\u5e2e\u5230\u4f60\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u770b\u8d8b\u52bf\u6298\u7ebf\u56fe\uff0c\u6bd4\u6570\u636e\u67f1\u72b6\u56fe\uff0c\u5b9a\u5173\u7cfb\u6563\u70b9\u56fe\uff0c\u67e5\u5360\u6bd4\u997c\u72b6\u56fe\uff0c\u770b\u5206\u5e03\u76f4\u65b9\u56fe\uff0c\u627e\u79bb\u7fa4\u7bb1\u7ebf\u56fe\u3002</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/78.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/#_1","title":"\u5bfc\u5165\u548c\u914d\u7f6e","text":"<p>\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e3a\u5927\u5bb6\u8bb2\u89e3\u8fc7\u5982\u4f55\u5b89\u88c5\u548c\u5bfc\u5165 matplotlib \u5e93\uff0c\u5982\u679c\u4e0d\u786e\u5b9a\u662f\u5426\u5df2\u7ecf\u5b89\u88c5\u4e86 matplotlib\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u9b54\u6cd5\u6307\u4ee4\u5c1d\u8bd5\u5b89\u88c5\u6216\u5347\u7ea7\u4f60\u7684 matplotlib\u3002</p> <pre><code>%pip install -U matplotlib\n</code></pre> <p>\u4e3a\u4e86\u89e3\u51b3 matplotlib \u56fe\u8868\u4e2d\u6587\u663e\u793a\u7684\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539<code>pyplot</code>\u6a21\u5757\u7684<code>rcParams</code>\u914d\u7f6e\u53c2\u6570\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>import matplotlib.pyplot as plt\n\nplt.rcParams['font.sans-serif'].insert(0, 'SimHei')\nplt.rcParams['axes.unicode_minus'] = False\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684<code>SimHei</code>\u662f\u5b57\u4f53\u540d\u79f0\uff0c\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7\u767e\u5ea6\u4e91\u76d8\u4e0b\u8f7d\u5e76\u5b89\u88c5\u8be5\u5b57\u4f53\uff0c\u94fe\u63a5\u5730\u5740\uff1ahttps://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g?pwd=e7b4\u3002\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5b89\u88c5\u5176\u4ed6\u7684\u4e2d\u6587\u5b57\u4f53\uff0c\u5b89\u88c5\u4e4b\u540e\u5982\u679c\u4e0d\u77e5\u9053\u5b57\u4f53\u53eb\u4ec0\u4e48\u540d\u5b57\uff0c\u53ef\u4ee5\u5230\u7528\u6237\u4e3b\u76ee\u5f55\u4e0b\u540d\u4e3a<code>.matplotlib</code>\u7684\u6587\u4ef6\u5939\u4e2d\u627e\u5230<code>fontlist-v330.json</code>\u6587\u4ef6\uff0c\u6253\u5f00\u540e\u53ef\u4ee5\u770b\u5230\u5b57\u4f53\u6587\u4ef6\u7684\u8def\u5f84\u548c\u5b57\u4f53\u7684\u540d\u79f0\u7b49\u4fe1\u606f\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f7f\u7528\u4e2d\u6587\u5b57\u4f53\u540e\u5750\u6807\u8f74\u4e0a\u7684\u8d1f\u53f7\u5c06\u4f1a\u65e0\u6cd5\u663e\u793a\uff0c\u9700\u8981\u5c06<code>axes.unicode_minus</code>\u53c2\u6570\u8bbe\u7f6e\u4e3a<code>False</code>\uff0c\u8fd9\u6837\u624d\u80fd\u8ba9\u5750\u6807\u8f74\u4e0a\u7684\u8d1f\u53f7\u6b63\u5e38\u663e\u793a\u3002</p> <p>\u901a\u8fc7\u4e0b\u9762\u7684\u9b54\u6cd5\u6307\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7ed8\u56fe\u65f6\u751f\u6210\u77e2\u91cf\u56fe\uff08SVG - Scalable Vector Graphics\uff09\uff0c\u77e2\u91cf\u56fe\u7684\u7279\u70b9\u662f\u4e0d\u4f1a\u56e0\u4e3a\u653e\u5927\u3001\u7f29\u5c0f\u6216\u65cb\u8f6c\u7b49\u64cd\u4f5c\u800c\u5931\u771f\uff0c\u770b\u8d77\u6765\u4f1a\u8212\u670d\u5f88\u591a\u3002</p> <pre><code>%config InlineBackend.figure_format='svg'\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/78.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/#_2","title":"\u521b\u5efa\u753b\u5e03","text":"<p><code>pyplot</code>\u6a21\u5757\u7684<code>figure</code>\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u753b\u5e03\uff0c\u521b\u5efa\u753b\u5e03\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7<code>figsize</code>\u53c2\u6570\u6307\u5b9a\u753b\u5e03\u7684\u5c3a\u5bf8\uff08\u9ed8\u8ba4\u503c\u662f<code>[6.4, 4.8]</code>\uff09\uff1b\u53ef\u4ee5\u901a\u8fc7<code>dpi</code>\u53c2\u6570\u8bbe\u7f6e\u7ed8\u56fe\u7684\u5206\u8fa8\u7387\uff0c\u56e0\u4e3a<code>dpi</code>\u4ee3\u8868\u4e86\u6bcf\u82f1\u5bf8\u7684\u50cf\u7d20\u70b9\u6570\u91cf\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7<code>facecolor</code>\u53c2\u6570\u8bbe\u7f6e\u753b\u5e03\u7684\u80cc\u666f\u8272\u3002<code>figure</code>\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a<code>Figure</code>\u5bf9\u8c61\uff0c\u5b83\u4ee3\u8868\u4e86\u7ed8\u56fe\u4f7f\u7528\u7684\u753b\u5e03\uff0c\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u753b\u5e03\u6765\u521b\u5efa\u7ed8\u56fe\u4f7f\u7528\u7684\u5750\u6807\u7cfb\u3002</p> <pre><code>plt.figure(figsize=(8, 4), dpi=120, facecolor='darkgray')\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/78.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/#_3","title":"\u521b\u5efa\u5750\u6807\u7cfb","text":"<p>\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528<code>pyplot</code>\u6a21\u5757\u7684<code>subplot</code>\u51fd\u6570\u6765\u521b\u5efa\u5750\u6807\u7cfb\uff0c\u8be5\u51fd\u6570\u4f1a\u8fd4\u56de<code>Axes</code>\u5bf9\u8c61\u3002<code>subplot</code>\u7684\u524d\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u7528\u6765\u6307\u5b9a\u6574\u4e2a\u753b\u5e03\u5206\u6210\u51e0\u884c\u51e0\u5217\u4ee5\u53ca\u5f53\u524d\u5750\u6807\u7cfb\u7684\u7d22\u5f15\uff0c\u8fd9\u4e09\u4e2a\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\u90fd\u662f<code>1</code>\u3002\u5982\u679c\u6ca1\u6709\u521b\u5efa\u5750\u6807\u7cfb\uff0c\u6211\u4eec\u7ed8\u56fe\u65f6\u4f1a\u4f7f\u7528\u753b\u5e03\u4e0a\u9ed8\u8ba4\u7684\u4e5f\u662f\u552f\u4e00\u7684\u4e00\u4e2a\u5750\u6807\u7cfb\uff1b\u5982\u679c\u9700\u8981\u5728\u753b\u5e03\u4e0a\u521b\u5efa\u591a\u4e2a\u5750\u6807\u7cfb\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u8be5\u51fd\u6570\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u521b\u5efa\u7684<code>Figure</code>\u5bf9\u8c61\u7684<code>add_subplot</code>\u65b9\u6cd5\u6216<code>add_axes</code>\u65b9\u6cd5\u6765\u521b\u5efa\u5750\u6807\u7cfb\uff0c\u524d\u8005\u8ddf<code>subplot</code>\u51fd\u6570\u7684\u4f5c\u7528\u4e00\u81f4\uff0c\u540e\u8005\u4f1a\u4ea7\u751f\u5d4c\u5957\u7684\u5750\u6807\u7cfb\u3002</p> <pre><code>plt.subplot(2, 2, 1)\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/78.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/#_4","title":"\u7ed8\u5236\u56fe\u8868","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/78.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/#_5","title":"\u6298\u7ebf\u56fe","text":"<p>\u5728\u7ed8\u56fe\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u5148\u8c03\u7528<code>figure</code>\u51fd\u6570\u548c<code>subplot</code>\u51fd\u6570\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u9ed8\u8ba4\u7684\u753b\u5e03\u548c\u5750\u6807\u7cfb\uff0c\u5982\u679c\u8981\u7ed8\u5236\u6298\u7ebf\u56fe\uff0c\u53ef\u4ee5\u4f7f\u7528<code>pyplot</code>\u6a21\u5757\u7684<code>plot</code>\u51fd\u6570\uff0c\u5e76\u6307\u5b9a\u6a2a\u8f74\u548c\u7eb5\u8f74\u7684\u6570\u636e\u3002\u6298\u7ebf\u56fe\u6700\u9002\u5408\u7528\u6765\u89c2\u5bdf\u6570\u636e\u7684\u8d8b\u52bf\uff0c\u5c24\u5176\u662f\u5f53\u6a2a\u5750\u6807\u4ee3\u8868\u65f6\u95f4\u7684\u60c5\u51b5\u4e0b\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>plot</code>\u51fd\u6570\u7684<code>color</code>\u53c2\u6570\u6765\u5b9a\u5236\u6298\u7ebf\u7684\u989c\u8272\uff0c\u53ef\u4ee5\u4f7f\u7528<code>marker</code>\u53c2\u6570\u6765\u5b9a\u5236\u6570\u636e\u70b9\u7684\u6807\u8bb0\uff08\u4f8b\u5982\uff1a<code>*</code>\u8868\u793a\u4e94\u89d2\u661f\uff0c<code>^</code>\u8868\u793a\u4e09\u89d2\u5f62\uff0c<code>o</code>\u8868\u793a\u5c0f\u5706\u5708\u7b49\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528<code>linestyle</code>\u53c2\u6570\u6765\u5b9a\u5236\u6298\u7ebf\u7684\u6837\u5f0f\uff08\u4f8b\u5982\uff1a<code>-</code>\u8868\u793a\u5b9e\u7ebf\uff0c<code>--</code>\u8868\u793a\u865a\u7ebf\uff0c<code>:</code>\u8868\u793a\u70b9\u7ebf\u7b49\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528<code>linewidth</code>\u53c2\u6570\u6765\u5b9a\u5236\u6298\u7ebf\u7684\u7c97\u7ec6\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u7ed8\u5236\u4e86\u4e00\u6761\u6b63\u5f26\u66f2\u7ebf\uff0c\u5176\u4e2d<code>marker='*'</code>\u4f1a\u5c06\u6570\u636e\u70b9\u7684\u6807\u8bb0\u8bbe\u7f6e\u4e3a\u4e94\u89d2\u661f\u5f62\u72b6\uff0c\u800c<code>color='red'</code>\u4f1a\u5c06\u6298\u7ebf\u7ed8\u5236\u4e3a\u7ea2\u8272\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>import numpy as np\n\nx = np.linspace(-2 * np.pi, 2 * np.pi, 120)\ny = np.sin(x)\n\n# \u521b\u5efa\u753b\u5e03\nplt.figure(figsize=(8, 4), dpi=120)\n# \u7ed8\u5236\u6298\u7ebf\u56fe\nplt.plot(x, y, linewidth=2, marker='*', color='red')\n# \u663e\u793a\u7ed8\u56fe\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u5982\u679c\u8981\u5728\u4e00\u4e2a\u5750\u6807\u7cfb\u4e0a\u540c\u65f6\u7ed8\u5236\u6b63\u5f26\u548c\u4f59\u5f26\u66f2\u7ebf\uff0c\u53ef\u4ee5\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>x = np.linspace(-2 * np.pi, 2 * np.pi, 120)\ny1, y2 = np.sin(x), np.cos(x)\n\nplt.figure(figsize=(8, 4), dpi=120)\nplt.plot(x, y1, linewidth=2, marker='*', color='red')\nplt.plot(x, y2, linewidth=2, marker='^', color='blue')\n# \u5b9a\u5236\u56fe\u8868\u4e0a\u7684\u6807\u6ce8\uff08annotate\u51fd\u6570\u7684\u53c2\u6570\u5982\u679c\u4e0d\u7406\u89e3\u53ef\u4ee5\u5148\u4e0d\u7ba1\u5b83\uff09\nplt.annotate('sin(x)', xytext=(0.5, -0.75), xy=(0, -0.25), fontsize=12, arrowprops={\n    'arrowstyle': '-&gt;', 'color': 'darkgreen', 'connectionstyle': 'angle3, angleA=90, angleB=0'\n})\nplt.annotate('cos(x)', xytext=(-3, 0.75), xy=(-1.25, 0.5), fontsize=12, arrowprops={\n    'arrowstyle': '-&gt;', 'color': 'darkgreen', 'connectionstyle': 'arc3, rad=0.35'\n})\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u5982\u679c\u8981\u4f7f\u7528\u4e24\u4e2a\u5750\u6807\u7cfb\u5206\u522b\u7ed8\u5236\u6b63\u5f26\u548c\u4f59\u5f26\uff0c\u53ef\u4ee5\u7528\u4e0a\u9762\u63d0\u5230\u7684<code>subplot</code>\u51fd\u6570\u6765\u521b\u5efa\u5750\u6807\u7cfb\uff0c\u7136\u540e\u518d\u7ed8\u56fe\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>plt.figure(figsize=(8, 4), dpi=120)\n# \u521b\u5efa\u5750\u6807\u7cfb\uff08\u7b2c1\u4e2a\u56fe\uff09\nplt.subplot(2, 1, 1)\nplt.plot(x, y1, linewidth=2, marker='*', color='red')\n# \u521b\u5efa\u5750\u6807\u7cfb\uff08\u7b2c2\u4e2a\u56fe\uff09\nplt.subplot(2, 1, 2)\nplt.plot(x, y2, linewidth=2, marker='^', color='blue')\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u5f53\u7136\u4e5f\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u4e48\u505a\uff0c\u5927\u5bb6\u53ef\u4ee5\u8fd0\u884c\u4ee3\u7801\u770b\u770b\u8ddf\u4e0a\u9762\u7684\u56fe\u6709\u4ec0\u4e48\u533a\u522b\u3002</p> <pre><code>plt.figure(figsize=(8, 4), dpi=120)\nplt.subplot(1, 2, 1)\nplt.plot(x, y1, linewidth=2, marker='*', color='red')\nplt.subplot(1, 2, 2)\nplt.plot(x, y2, linewidth=2, marker='^', color='blue')\nplt.show()\n</code></pre> <p>\u7136\u540e\uff0c\u518d\u8bd5\u4e00\u8bd5\u4e0b\u9762\u8fd9\u4e2a\u4ee3\u7801\uff0c\u770b\u770b\u8fd0\u884c\u6548\u679c\u5982\u4f55\u3002</p> <pre><code>fig = plt.figure(figsize=(10, 4), dpi=120)\nplt.plot(x, y1, linewidth=2, marker='*', color='red')\n# \u7528Figure\u5bf9\u8c61\u7684add_axes\u65b9\u6cd5\u5728\u73b0\u6709\u5750\u6807\u7cfb\u4e2d\u5d4c\u5957\u4e00\u4e2a\u65b0\u7684\u5750\u6807\u7cfb\uff0c\u8be5\u65b9\u6cd5\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u56db\u5143\u7ec4\uff0c\n# \u4ee3\u8868\u4e86\u65b0\u5750\u6807\u7cfb\u5728\u539f\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\uff0c\u524d\u4e24\u4e2a\u503c\u662f\u5de6\u4e0b\u89d2\u7684\u4f4d\u7f6e\uff0c\u540e\u4e24\u4e2a\u503c\u662f\u5750\u6807\u7cfb\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\nax = fig.add_axes((0.595, 0.6, 0.3,0.25))\nax.plot(x, y2, marker='^', color='blue')\nax = fig.add_axes((0.155, 0.2, 0.3,0.25))\nax.plot(x, y2, marker='^', color='green')\nplt.show()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/78.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/#_6","title":"\u6563\u70b9\u56fe","text":"<p>\u6563\u70b9\u56fe\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u4e86\u89e3\u4e24\u4e2a\u53d8\u91cf\u7684\u5173\u7cfb\uff0c\u5982\u679c\u9700\u8981\u4e86\u89e3\u4e09\u4e2a\u53d8\u91cf\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u5c06\u6563\u70b9\u56fe\u5347\u7ea7\u4e3a\u6c14\u6ce1\u56fe\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c<code>x</code>\u548c<code>y</code>\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u8868\u793a\u6bcf\u4e2a\u6708\u7684\u6536\u5165\u548c\u6bcf\u4e2a\u6708\u7f51\u8d2d\u7684\u652f\u51fa\uff0c\u5982\u679c\u6211\u4eec\u60f3\u4e86\u89e3<code>x</code>\u548c<code>y</code>\u662f\u5426\u5b58\u5728\u76f8\u5173\u5173\u7cfb\uff0c\u5c31\u53ef\u4ee5\u7ed8\u5236\u5982\u4e0b\u6240\u793a\u7684\u6563\u70b9\u56fe\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>x = np.array([5550, 7500, 10500, 15000, 20000, 25000, 30000, 40000])\ny = np.array([800, 1800, 1250, 2000, 1800, 2100, 2500, 3500])\n\nplt.figure(figsize=(6, 4), dpi=120)\nplt.scatter(x, y)\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/78.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/#_7","title":"\u67f1\u72b6\u56fe","text":"<p>\u5728\u5bf9\u6bd4\u6570\u636e\u7684\u5dee\u5f02\u65f6\uff0c\u67f1\u72b6\u56fe\u662f\u975e\u5e38\u68d2\u7684\u9009\u62e9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>pyplot</code>\u6a21\u5757\u7684<code>bar</code>\u51fd\u6570\u6765\u751f\u6210\u67f1\u72b6\u56fe\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>barh</code>\u51fd\u6570\u6765\u751f\u6210\u6c34\u5e73\u67f1\u72b6\u56fe\uff08\u4e5f\u79f0\u4e3a\u201c\u6761\u72b6\u56fe\u201d\uff09\u3002\u6211\u4eec\u5148\u4e3a\u67f1\u72b6\u56fe\u51c6\u5907\u4e00\u4e9b\u6570\u636e\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>x = np.arange(4)\ny1 = np.random.randint(20, 50, 4)\ny2 = np.random.randint(10, 60, 4)\n</code></pre> <p>\u7ed8\u5236\u67f1\u72b6\u56fe\u7684\u4ee3\u7801\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>plt.figure(figsize=(6, 4), dpi=120)\n# \u901a\u8fc7\u6a2a\u5750\u6807\u7684\u504f\u79fb\uff0c\u8ba9\u4e24\u7ec4\u6570\u636e\u5bf9\u5e94\u7684\u67f1\u5b50\u5206\u5f00\uff0cwidth\u53c2\u6570\u63a7\u5236\u67f1\u5b50\u7684\u7c97\u7ec6\uff0clabel\u53c2\u6570\u4e3a\u67f1\u5b50\u6dfb\u52a0\u6807\u7b7e\nplt.bar(x - 0.1, y1, width=0.2, label='\u9500\u552eA\u7ec4')\nplt.bar(x + 0.1, y2, width=0.2, label='\u9500\u552eB\u7ec4')\n# \u5b9a\u5236\u6a2a\u8f74\u7684\u523b\u5ea6\nplt.xticks(x, labels=['Q1', 'Q2', 'Q3', 'Q4'])\n# \u5b9a\u5236\u663e\u793a\u56fe\u4f8b\nplt.legend()\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u5982\u679c\u60f3\u7ed8\u5236\u5806\u53e0\u67f1\u72b6\u56fe\uff0c\u53ef\u4ee5\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>labels = ['Q1', 'Q2', 'Q3', 'Q4']\nplt.figure(figsize=(6, 4), dpi=120)\nplt.bar(labels, y1, width=0.4, label='\u9500\u552eA\u7ec4')\n# \u6ce8\u610f\uff1a\u5806\u53e0\u67f1\u72b6\u56fe\u7684\u5173\u952e\u662f\u5c06\u4e4b\u524d\u7684\u67f1\u5b50\u4f5c\u4e3a\u65b0\u67f1\u5b50\u7684\u5e95\u90e8\uff0c\u53ef\u4ee5\u901a\u8fc7bottom\u53c2\u6570\u6307\u5b9a\u5e95\u90e8\u6570\u636e\uff0c\u65b0\u67f1\u5b50\u7ed8\u5236\u5728\u5e95\u90e8\u6570\u636e\u4e4b\u4e0a\nplt.bar(labels, y2, width=0.4, bottom=y1, label='\u9500\u552eB\u7ec4')\nplt.legend(loc='lower right')\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/78.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/#_8","title":"\u997c\u72b6\u56fe","text":"<p>\u997c\u72b6\u56fe\u901a\u5e38\u7b80\u79f0\u4e3a\u997c\u56fe\uff0c\u662f\u4e00\u4e2a\u5c06\u6570\u636e\u5212\u5206\u4e3a\u51e0\u4e2a\u6247\u5f62\u533a\u57df\u7684\u7edf\u8ba1\u56fe\u8868\uff0c\u5b83\u4e3b\u8981\u7528\u4e8e\u63cf\u8ff0\u6570\u91cf\u3001\u9891\u7387\u7b49\u4e4b\u95f4\u7684\u76f8\u5bf9\u5173\u7cfb\u3002\u5728\u997c\u56fe\u4e2d\uff0c\u6bcf\u4e2a\u6247\u5f62\u533a\u57df\u7684\u5927\u5c0f\u5c31\u662f\u5176\u6240\u8868\u793a\u7684\u6570\u91cf\u7684\u6bd4\u4f8b\uff0c\u8fd9\u4e9b\u6247\u5f62\u533a\u57df\u5408\u5728\u4e00\u8d77\u521a\u597d\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u997c\u3002\u5728\u9700\u8981\u5c55\u793a\u6570\u636e\u6784\u6210\u7684\u573a\u666f\u4e0b\uff0c\u997c\u72b6\u56fe\u3001\u6811\u72b6\u56fe\u548c\u7011\u5e03\u56fe\u662f\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>pyplot</code>\u6a21\u5757\u7684<code>pie</code>\u51fd\u6570\u6765\u7ed8\u5236\u997c\u56fe\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>data = np.random.randint(100, 500, 7)\nlabels = ['\u82f9\u679c', '\u9999\u8549', '\u6843\u5b50', '\u8354\u679d', '\u77f3\u69b4', '\u5c71\u7af9', '\u69b4\u83b2']\n\nplt.figure(figsize=(5, 5), dpi=120)\nplt.pie(\n    data,\n    # \u81ea\u52a8\u663e\u793a\u767e\u5206\u6bd4\n    autopct='%.1f%%',\n    # \u997c\u56fe\u7684\u534a\u5f84\n    radius=1,\n    # \u767e\u5206\u6bd4\u5230\u5706\u5fc3\u7684\u8ddd\u79bb\n    pctdistance=0.8,\n    # \u989c\u8272\uff08\u968f\u673a\u751f\u6210\uff09\n    colors=np.random.rand(7, 3),\n    # \u5206\u79bb\u8ddd\u79bb\n    # explode=[0.05, 0, 0.1, 0, 0, 0, 0],\n    # \u9634\u5f71\u6548\u679c\n    # shadow=True,\n    # \u5b57\u4f53\u5c5e\u6027\n    textprops=dict(fontsize=8, color='black'),\n    # \u6954\u5b50\u5c5e\u6027\uff08\u751f\u6210\u73af\u72b6\u997c\u56fe\u7684\u5173\u952e\uff09\n    wedgeprops=dict(linewidth=1, width=0.35),\n    # \u6807\u7b7e\n    labels=labels\n)\n# \u5b9a\u5236\u56fe\u8868\u7684\u6807\u9898\nplt.title('\u6c34\u679c\u9500\u552e\u989d\u5360\u6bd4')\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u8bf4\u660e\uff1a\u5927\u5bb6\u53ef\u4ee5\u8bd5\u4e00\u8bd5\u5c06\u4e0a\u9762\u4ee3\u7801\u4e2d\u88ab\u6ce8\u91ca\u7684\u90e8\u5206\u6062\u590d\uff0c\u770b\u770b\u6709\u4ec0\u4e48\u6837\u7684\u6548\u679c\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/78.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/#_9","title":"\u76f4\u65b9\u56fe","text":"<p>\u5728\u7edf\u8ba1\u5b66\u4e2d\uff0c\u76f4\u65b9\u56fe\u662f\u4e00\u79cd\u5c55\u793a\u6570\u636e\u5206\u5e03\u60c5\u51b5\u7684\u56fe\u5f62\uff0c\u662f\u4e00\u79cd\u4e8c\u7ef4\u7edf\u8ba1\u56fe\u8868\uff0c\u5b83\u7684\u4e24\u4e2a\u5750\u6807\u5206\u522b\u662f\u7edf\u8ba1\u6837\u672c\u548c\u8be5\u6837\u672c\u5bf9\u5e94\u7684\u67d0\u4e2a\u5c5e\u6027\u7684\u5ea6\u91cf\u3002\u4e0b\u9762\u7684\u6570\u636e\u662f\u67d0\u5b66\u6821100\u540d\u7537\u5b66\u751f\u7684\u8eab\u9ad8\uff0c\u5982\u679c\u6211\u4eec\u60f3\u77e5\u9053\u6570\u636e\u7684\u5206\u5e03\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u76f4\u65b9\u56fe\u3002</p> <pre><code>heights = np.array([\n    170, 163, 174, 164, 159, 168, 165, 171, 171, 167, \n    165, 161, 175, 170, 174, 170, 174, 170, 173, 173, \n    167, 169, 173, 153, 165, 169, 158, 166, 164, 173, \n    162, 171, 173, 171, 165, 152, 163, 170, 171, 163, \n    165, 166, 155, 155, 171, 161, 167, 172, 164, 155, \n    168, 171, 173, 169, 165, 162, 168, 177, 174, 178, \n    161, 180, 155, 155, 166, 175, 159, 169, 165, 174, \n    175, 160, 152, 168, 164, 175, 168, 183, 166, 166, \n    182, 174, 167, 168, 176, 170, 169, 173, 177, 168, \n    172, 159, 173, 185, 161, 170, 170, 184, 171, 172\n])\n</code></pre> <p>\u53ef\u4ee5\u4f7f\u7528<code>pyplot</code>\u6a21\u5757\u7684<code>hist</code>\u51fd\u6570\u6765\u7ed8\u5236\u76f4\u65b9\u56fe\uff0c\u5176\u4e2d<code>bins</code>\u53c2\u6570\u4ee3\u8868\u4e86\u6211\u4eec\u4f7f\u7528\u7684\u5206\u7bb1\u65b9\u5f0f\uff08\u8eab\u9ad8\u4ece150\u5398\u7c73\u5230190\u5398\u7c73\uff0c\u6bcf5\u5398\u7c73\u4e3a\u4e00\u4e2a\u5206\u7bb1\uff09\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>plt.figure(figsize=(6, 4), dpi=120)\n# \u7ed8\u5236\u76f4\u65b9\u56fe\nplt.hist(heights, bins=np.arange(145, 196, 5), color='darkcyan')\n# \u5b9a\u5236\u6a2a\u8f74\u6807\u7b7e\nplt.xlabel('\u8eab\u9ad8')\n# \u5b9a\u5236\u7eb5\u8f74\u6807\u7b7e\nplt.ylabel('\u6982\u7387\u5bc6\u5ea6')\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u7ed8\u5236\u76f4\u65b9\u56fe\u65f6\uff0c\u5982\u679c\u5c06<code>hist</code>\u51fd\u6570\u7684<code>density</code>\u53c2\u6570\u4fee\u6539\u4e3a<code>True</code>\uff0c\u540c\u65f6\u5c06<code>cumulative</code>\u53c2\u6570\u4e5f\u4fee\u6539\u4e3a<code>True</code>\uff0c\u90a3\u4e48\u4e00\u65b9\u9762\u7eb5\u8f74\u4f1a\u663e\u793a\u4e3a\u6982\u7387\u5bc6\u5ea6\uff0c\u800c\u56fe\u8868\u4f1a\u7ed8\u5236\u6982\u7387\u7684\u7d2f\u8ba1\u5206\u5e03\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>plt.figure(figsize=(6, 4), dpi=120)\n# \u7ed8\u5236\u76f4\u65b9\u56fe\nplt.hist(heights, bins=np.arange(145, 196, 5), color='darkcyan', density=True, cumulative=True)\n# \u5b9a\u5236\u6a2a\u8f74\u6807\u7b7e\nplt.xlabel('\u8eab\u9ad8')\n# \u5b9a\u5236\u7eb5\u8f74\u6807\u7b7e\nplt.ylabel('\u6982\u7387')\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/78.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/#_10","title":"\u7bb1\u7ebf\u56fe","text":"<p>\u7bb1\u7ebf\u56fe\u53c8\u53eb\u7bb1\u578b\u56fe\u6216\u76d2\u987b\u56fe\uff0c\u662f\u4e00\u79cd\u7528\u4e8e\u5c55\u793a\u4e00\u7ec4\u6570\u636e\u5206\u6563\u60c5\u51b5\u7684\u7edf\u8ba1\u56fe\u8868\uff0c\u5982\u4e0b\u6240\u793a\u3002\u56e0\u56fe\u5f62\u5982\u7bb1\u5b50\uff0c\u800c\u4e14\u5728\u4e0a\u4e0b\u56db\u5206\u4f4d\u6570\u4e4b\u5916\u6709\u7ebf\u6761\u50cf\u80e1\u987b\u5ef6\u4f38\u51fa\u53bb\u800c\u5f97\u540d\u3002\u5728\u7bb1\u7ebf\u56fe\u4e2d\uff0c\u7bb1\u5b50\u7684\u4e0a\u8fb9\u754c\u662f\u4e0a\u56db\u5206\u4f4d\u6570\uff08\\(Q_3\\)\uff09\u7684\u4f4d\u7f6e\uff0c\u7bb1\u5b50\u7684\u4e0b\u8fb9\u754c\u662f\u4e0b\u56db\u5206\u4f4d\u6570\uff08\\(Q_1\\)\uff09\u7684\u4f4d\u7f6e\uff0c\u7bb1\u5b50\u4e2d\u95f4\u7684\u7ebf\u6761\u662f\u4e2d\u4f4d\u6570\uff08\\(Q_2\\)\uff09\u7684\u4f4d\u7f6e\uff0c\u800c\u7bb1\u5b50\u7684\u957f\u5ea6\u5c31\u662f\u56db\u5206\u4f4d\u8ddd\u79bb\uff08IQR\uff09\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u7bb1\u5b50\u4e0a\u65b9\u7ebf\u6761\u7684\u8fb9\u754c\u662f\u6700\u5927\u503c\uff0c\u7bb1\u5b50\u4e0b\u65b9\u7ebf\u6761\u7684\u8fb9\u754c\u662f\u6700\u5c0f\u503c\uff0c\u8fd9\u4e24\u6761\u7ebf\u4e4b\u5916\u7684\u70b9\u5c31\u662f\u79bb\u7fa4\u503c\uff08outlier\uff09\u3002\u6240\u8c13\u79bb\u7fa4\u503c\uff0c\u662f\u6307\u6570\u636e\u5c0f\u4e8e\\(Q_1 - 1.5 \\times IQR\\)\u6216\u6570\u636e\u5927\u4e8e\\(Q_3 + 1.5 \\times IQR\\)\u7684\u503c\uff0c\u516c\u5f0f\u4e2d\u7684<code>1.5</code>\u8fd8\u53ef\u4ee5\u66ff\u6362\u4e3a<code>3</code>\u6765\u53d1\u73b0\u6781\u7aef\u79bb\u7fa4\u503c\uff08extreme outlier\uff09\uff0c\u800c\u4ecb\u4e8e<code>1.5</code>\u5230<code>3</code>\u4e4b\u95f4\u7684\u79bb\u7fa4\u503c\u901a\u5e38\u79f0\u4e4b\u4e3a\u9002\u5ea6\u79bb\u7fa4\u503c\uff08mild outlier\uff09\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528<code>pyplot</code>\u6a21\u5757\u7684<code>boxplot</code>\u51fd\u6570\u6765\u7ed8\u5236\u7bb1\u7ebf\u56fe\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code># \u6570\u7ec4\u4e2d\u670947\u4e2a[0, 100)\u8303\u56f4\u7684\u968f\u673a\u6570\ndata = np.random.randint(0, 100, 47)\n# \u5411\u6570\u7ec4\u4e2d\u6dfb\u52a0\u4e09\u4e2a\u53ef\u80fd\u662f\u79bb\u7fa4\u70b9\u7684\u6570\u636e\ndata = np.append(data, 160)\ndata = np.append(data, 200)\ndata = np.append(data, -50)\n\nplt.figure(figsize=(6, 4), dpi=120)\n# whis\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\u662f1.5\uff0c\u5c06\u5176\u8bbe\u7f6e\u4e3a3\u53ef\u4ee5\u68c0\u6d4b\u6781\u7aef\u79bb\u7fa4\u503c\uff0cshowmeans=True\u8868\u793a\u5728\u56fe\u4e2d\u6807\u8bb0\u5747\u503c\u7684\u4f4d\u7f6e\nplt.boxplot(data, whis=1.5, showmeans=True, notch=True)\n# \u5b9a\u5236\u7eb5\u8f74\u7684\u53d6\u503c\u8303\u56f4\nplt.ylim([-100, 250])\n# \u5b9a\u5236\u6a2a\u8f74\u7684\u523b\u5ea6\nplt.xticks([1], labels=['data'])\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u8bf4\u660e\uff1a\u7531\u4e8e\u6570\u636e\u662f\u968f\u673a\u751f\u6210\u7684\uff0c\u5927\u5bb6\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u751f\u6210\u7684\u56fe\u8868\u53ef\u80fd\u8ddf\u6211\u8fd9\u91cc\u5e76\u4e0d\u76f8\u540c\uff0c\u4ee5\u5b9e\u9645\u8fd0\u884c\u7ed3\u679c\u4e3a\u51c6\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/78.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/#_11","title":"\u663e\u793a\u548c\u4fdd\u5b58\u56fe\u8868","text":"<p>\u53ef\u4ee5\u4f7f\u7528<code>pyplot</code>\u6a21\u5757\u7684<code>show</code>\u51fd\u6570\u6765\u663e\u793a\u7ed8\u5236\u7684\u56fe\u8868\uff0c\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u8fc7\u8fd9\u4e2a\u51fd\u6570\u3002\u5982\u679c\u5e0c\u671b\u4fdd\u5b58\u56fe\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528<code>savefig</code>\u51fd\u6570\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u8981\u540c\u65f6\u663e\u793a\u548c\u4fdd\u5b58\u56fe\u8868\uff0c\u5e94\u8be5\u5148\u6267\u884c<code>savefig</code>\u51fd\u6570\uff0c\u518d\u6267\u884c<code>show</code>\u51fd\u6570\uff0c\u56e0\u4e3a\u5728\u8c03\u7528<code>show</code>\u51fd\u6570\u65f6\uff0c\u56fe\u8868\u5df2\u7ecf\u88ab\u91ca\u653e\uff0c\u4f4d\u4e8e<code>show</code>\u51fd\u6570\u4e4b\u540e\u7684<code>savefig</code>\u4fdd\u5b58\u7684\u53ea\u662f\u4e00\u4e2a\u7a7a\u767d\u7684\u533a\u57df\u3002</p> <pre><code>plt.savefig('chart.png')\nplt.show()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/78.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/#_12","title":"\u5176\u4ed6\u56fe\u8868","text":"<p>\u4f7f\u7528 matplotlib\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u7ed8\u5236\u51fa\u5176\u4ed6\u7684\u7edf\u8ba1\u56fe\u8868\uff08\u5982\uff1a\u96f7\u8fbe\u56fe\u3001\u73ab\u7470\u56fe\u3001\u70ed\u529b\u56fe\u7b49\uff09\uff0c\u4f46\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u4f7f\u7528\u9891\u7387\u6700\u9ad8\u7684\u51e0\u7c7b\u56fe\u8868\u6211\u4eec\u5728\u4e0a\u9762\u5df2\u7ecf\u4e3a\u5927\u5bb6\u5b8c\u6574\u7684\u5c55\u793a\u51fa\u6765\u4e86\u3002\u6b64\u5916\uff0cmatplotlib \u8fd8\u6709\u5f88\u591a\u5bf9\u7edf\u8ba1\u56fe\u8868\u8fdb\u884c\u5b9a\u5236\u7684\u7ec6\u8282\uff0c\u4f8b\u5982\u5b9a\u5236\u5750\u6807\u8f74\u3001\u5b9a\u5236\u56fe\u8868\u4e0a\u7684\u6587\u5b57\u548c\u6807\u7b7e\u7b49\u3002\u5982\u679c\u60f3\u4e86\u89e3\u5982\u4f55\u7528 matplotlib \u7ed8\u5236\u548c\u5b9a\u5236\u66f4\u591a\u7684\u7edf\u8ba1\u56fe\u8868\uff0c\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b matplotlib \u5b98\u65b9\u7f51\u7ad9\u4e0a\u7684\u6587\u6863\u548c\u793a\u4f8b\uff0c\u5728\u4e0b\u4e00\u4e2a\u7ae0\u8282\u6211\u4eec\u4f1a\u4e3a\u5927\u5bb6\u505a\u4e00\u4e2a\u7b80\u8981\u7684\u4ecb\u7ecd\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/79.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-2/","title":"79.\u6570\u636e\u53ef\u89c6\u5316 2","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/79.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-2/#-2","title":"\u6570\u636e\u53ef\u89c6\u5316-2","text":"<p>\u672c\u7ae0\u6211\u4eec\u5c1d\u8bd5\u7528 matplotlib \u6765\u7ed8\u5236\u4e00\u4e9b\u9ad8\u9636\u7edf\u8ba1\u56fe\u8868\u3002\u6b63\u5982\u524d\u9762\u6240\u8bf4\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7 matplotlib \u5b98\u65b9\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u7684\u6587\u6863\u548c\u793a\u4f8b\u6765\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 matplotlib \u5e76\u7ed8\u5236\u51fa\u66f4\u52a0\u9ad8\u7ea7\u7684\u7edf\u8ba1\u56fe\u8868\uff1b\u5c24\u5176\u662f\u5728\u5b9a\u5236\u4e00\u4e9b\u6bd4\u8f83\u590d\u6742\u7684\u56fe\u8868\u65f6\uff0c\u6211\u4eec\u5efa\u8bae\u5927\u5bb6\u76f4\u63a5\u627e\u5230\u5b98\u7f51\u63d0\u4f9b\u7684\u793a\u4f8b\uff0c\u7136\u540e\u53ea\u9700\u8981\u505a\u51fa\u76f8\u5e94\u7684\u4fee\u6539\uff0c\u5c31\u53ef\u4ee5\u7ed8\u5236\u51fa\u81ea\u5df1\u60f3\u8981\u7684\u56fe\u8868\u3002\u8fd9\u79cd\u201c\u62f7\u8d1d+\u4fee\u6539\u201d\u7684\u505a\u6cd5\u5e94\u8be5\u4f1a\u5927\u5927\u63d0\u9ad8\u4f60\u7684\u5de5\u4f5c\u6548\u7387\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u65f6\u5019\uff0c\u4f60\u7684\u4ee3\u7801\u8ddf\u5b98\u7f51\u4e0a\u7684\u4ee3\u7801\u5c31\u4ec5\u4ec5\u662f\u6570\u636e\u6709\u5dee\u522b\u800c\u5df2\uff0c\u6ca1\u6709\u5fc5\u8981\u53bb\u505a\u91cd\u590d\u4e4f\u5473\u7684\u4e8b\u60c5\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/79.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-2/#_1","title":"\u6c14\u6ce1\u56fe","text":"<p>\u6c14\u6ce1\u56fe\u53ef\u4ee5\u7528\u6765\u4e86\u89e3\u4e09\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u901a\u8fc7\u6bd4\u8f83\u6c14\u6ce1\u4f4d\u7f6e\u548c\u5927\u5c0f\u6765\u5206\u6790\u6570\u636e\u7ef4\u5ea6\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u3002\u4f8b\u5982\u5728\u6211\u4eec\u4e4b\u524d\u7ed8\u5236\u7684\u6708\u6536\u5165\u548c\u7f51\u8d2d\u652f\u51fa\u7684\u6563\u70b9\u56fe\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u53d1\u73b0\u4e86\u4e8c\u8005\u7684\u6b63\u76f8\u5173\u5173\u7cfb\uff0c\u5982\u679c\u6211\u4eec\u5f15\u5165\u7b2c\u4e09\u4e2a\u53d8\u91cf\u7f51\u8d2d\u6b21\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u6c14\u6ce1\u56fe\u6765\u8fdb\u884c\u5c55\u793a\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>income = np.array([5550, 7500, 10500, 15000, 20000, 25000, 30000, 40000])\noutcome = np.array([800, 1800, 1250, 2000, 1800, 2100, 2500, 3500])\nnums = np.array([5, 3, 10, 5, 12, 20, 8, 10])\n\n# \u901a\u8fc7scatter\u51fd\u6570\u7684s\u53c2\u6570\u548cc\u53c2\u6570\u5206\u522b\u63a7\u5236\u9762\u79ef\u548c\u989c\u8272\nplt.scatter(income, outcome, s=nums * 30, c=nums, cmap='Reds')\n# \u663e\u793a\u989c\u8272\u6761\nplt.colorbar()\n# \u663e\u793a\u56fe\u8868\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/79.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-2/#_2","title":"\u9762\u79ef\u56fe","text":"<p>\u9762\u79ef\u56fe\u53c8\u53eb\u5806\u53e0\u6298\u7ebf\u56fe\uff0c\u662f\u5728\u6298\u7ebf\u56fe\u7684\u57fa\u7840\u4e0a\uff0c\u5bf9\u6298\u7ebf\u4ee5\u4e0b\u7684\u533a\u57df\u8fdb\u884c\u989c\u8272\u586b\u5145\uff08\u5c55\u793a\u9762\u79ef\uff09\uff0c\u7528\u4e8e\u5728\u8fde\u7eed\u95f4\u9694\u6216\u65f6\u95f4\u8de8\u5ea6\u4e0a\u5c55\u793a\u6570\u503c\uff0c\u4e00\u822c\u7528\u6765\u663e\u793a\u8d8b\u52bf\u548c\u5bf9\u6bd4\u6570\u503c\uff0c\u4e0d\u540c\u989c\u8272\u7684\u586b\u5145\u53ef\u4ee5\u8ba9\u591a\u4e2a\u9762\u79ef\u5757\u4e4b\u95f4\u7684\u5bf9\u6bd4\u548c\u8d8b\u52bf\u66f4\u597d\u7684\u7a81\u663e\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u7528\u9762\u79ef\u56fe\u6765\u5c55\u793a\u4ece\u5468\u4e00\u5230\u5468\u65e5\u82b1\u5728\u7761\u89c9\u3001\u5403\u996d\u3001\u5de5\u4f5c\u548c\u73a9\u800d\u4e0a\u7684\u65f6\u95f4\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>plt.figure(figsize=(8, 4))\ndays = np.arange(7)\nsleeping = [7, 8, 6, 6, 7, 8, 10]\neating = [2, 3, 2, 1, 2, 3, 2]\nworking = [7, 8, 7, 8, 6, 2, 3]\nplaying = [8, 5, 9, 9, 9, 11, 9]\n# \u7ed8\u5236\u5806\u53e0\u6298\u7ebf\u56fe\nplt.stackplot(days, sleeping, eating, working, playing)\n# \u5b9a\u5236\u6a2a\u8f74\u523b\u5ea6\nplt.xticks(days, labels=[f'\u661f\u671f{x}' for x in '\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5'])\n# \u5b9a\u5236\u56fe\u4f8b\nplt.legend(['\u7761\u89c9', '\u5403\u996d', '\u5de5\u4f5c', '\u73a9\u800d'], fontsize=10)\n# \u663e\u793a\u56fe\u8868\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/79.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-2/#_3","title":"\u96f7\u8fbe\u56fe","text":"<p>\u96f7\u8fbe\u56fe\u901a\u5e38\u7528\u6765\u6bd4\u8f83\u591a\u4e2a\u5b9a\u91cf\u6570\u636e\uff0c\u7528\u4e8e\u67e5\u770b\u54ea\u4e9b\u53d8\u91cf\u5177\u6709\u76f8\u4f3c\u7684\u503c\u3002 \u96f7\u8fbe\u56fe\u4e5f\u53ef\u7528\u4e8e\u67e5\u770b\u6570\u636e\u96c6\u4e2d\u54ea\u4e9b\u53d8\u91cf\u7684\u503c\u6bd4\u8f83\u4f4e\uff0c\u54ea\u4e9b\u53d8\u91cf\u7684\u503c\u6bd4\u8f83\u9ad8\uff0c\u662f\u663e\u793a\u6027\u80fd\u6216\u8868\u73b0\u7684\u7406\u60f3\u9009\u62e9\u3002\u7ecf\u5e38\u89c2\u770b\u7bee\u7403\u3001\u8db3\u7403\u6bd4\u8d5b\u7684\u8bfb\u8005\u5e94\u8be5\u5bf9\u96f7\u8fbe\u56fe\u975e\u5e38\u719f\u6089\uff0c\u4f8b\u5982\u5728 NBA \u7684\u8f6c\u64ad\u4e2d\u5c31\u7ecf\u5e38\u4f7f\u7528\u96f7\u8fbe\u56fe\u6765\u5c55\u793a\u7403\u5458\u7684\u5404\u9879\u6570\u636e\u3002\u96f7\u8fbe\u56fe\u7684\u672c\u8d28\u6298\u7ebf\u56fe\uff0c\u53ea\u4e0d\u8fc7\u5c06\u6298\u7ebf\u56fe\u6620\u5c04\u5230\u4e86\u6781\u5750\u6807\u7cfb\u3002\u5728\u7ed8\u5236\u96f7\u8fbe\u56fe\u65f6\uff0c\u9700\u8981\u8ba9\u6298\u7ebf\u95ed\u5408\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u9996\u5c3e\u76f8\u8fde\uff0c\u4e0b\u9762\u662f\u7ed8\u5236\u96f7\u8fbe\u56fe\u7684\u4ee3\u7801\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>labels = np.array(['\u901f\u5ea6', '\u529b\u91cf', '\u7ecf\u9a8c', '\u9632\u5b88', '\u53d1\u7403', '\u6280\u672f'])\n# \u9a6c\u9f99\u548c\u6c34\u8c37\u96bc\u7684\u6570\u636e\nmalong_values = np.array([93, 95, 98, 92, 96, 97])\nshuigu_values = np.array([30, 40, 65, 80, 45, 60])\nangles = np.linspace(0, 2 * np.pi, labels.size, endpoint=False)\n# \u591a\u52a0\u4e00\u6761\u6570\u636e\u8ba9\u56fe\u5f62\u95ed\u5408\nmalong_values = np.append(malong_values, malong_values[0])\nshuigu_values = np.append(shuigu_values, shuigu_values[0])\nangles = np.append(angles, angles[0])\n# \u521b\u5efa\u753b\u5e03\nplt.figure(figsize=(4, 4), dpi=120)\n# \u521b\u5efa\u5750\u6807\u7cfb\nax = plt.subplot(projection='polar')\n# \u7ed8\u56fe\u548c\u586b\u5145\nplt.plot(angles, malong_values, color='r', linewidth=2, label='\u9a6c\u9f99')\nplt.fill(angles, malong_values, color='r', alpha=0.3)\nplt.plot(angles, shuigu_values, color='g', linewidth=2, label='\u6c34\u8c37\u96bc')\nplt.fill(angles, shuigu_values, color='g', alpha=0.2)\n# \u663e\u793a\u56fe\u4f8b\nax.legend()\n# \u663e\u793a\u56fe\u8868\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/79.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-2/#_4","title":"\u73ab\u7470\u56fe","text":"<p>\u73ab\u7470\u56fe\u662f\u6620\u5c04\u5728\u6781\u5750\u6807\u4e0b\u7684\u67f1\u72b6\u56fe\uff0c\u7531\u5f17\u7f57\u4f26\u65af\u00b7\u5357\u4e01\u683c\u5c14\uff08Florence Nightingale\uff09\u6240\u53d1\u660e\uff0c\u5f53\u5e74\u662f\u5357\u4e01\u683c\u5c14\u7528\u6765\u5448\u73b0\u6218\u5730\u533b\u9662\u5b63\u8282\u6027\u6b7b\u4ea1\u7387\u7684\u4e00\u79cd\u56fe\u8868\u3002\u7531\u4e8e\u534a\u5f84\u548c\u9762\u79ef\u7684\u5173\u7cfb\u662f\u5e73\u65b9\u7684\u5173\u7cfb\uff0c\u5357\u4e01\u683c\u5c14\u73ab\u7470\u56fe\u4f1a\u5c06\u6570\u636e\u7684\u6bd4\u4f8b\u5927\u5c0f\u5938\u5927\uff0c\u5c24\u5176\u9002\u5408\u5bf9\u6bd4\u5927\u5c0f\u76f8\u8fd1\u7684\u6570\u503c\uff0c\u540c\u65f6\u7531\u4e8e\u5706\u5f62\u6709\u5468\u671f\u7684\u7279\u6027\uff0c\u6240\u4ee5\u5357\u4e01\u683c\u5c14\u73ab\u7470\u56fe\u4e5f\u9002\u7528\u4e8e\u8868\u793a\u4e00\u4e2a\u5468\u671f\u5185\u7684\u65f6\u95f4\u6982\u5ff5\uff0c\u6bd4\u5982\u661f\u671f\u3001\u6708\u4efd\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>group1 = np.random.randint(20, 50, 4)\ngroup2 = np.random.randint(10, 60, 4)\nx = np.array([f'A\u7ec4-Q{i}' for i in range(1, 5)] + [f'B\u7ec4-Q{i}' for i in range(1, 5)])\ny = np.array(group1.tolist() + group2.tolist())\n# \u73ab\u7470\u82b1\u74e3\u7684\u89d2\u5ea6\u548c\u5bbd\u5ea6\ntheta = np.linspace(0, 2 * np.pi, x.size, endpoint=False)\nwidth = 2 * np.pi / x.size\n# \u751f\u62108\u79cd\u968f\u673a\u989c\u8272\ncolors = np.random.rand(8, 3)\n# \u5c06\u67f1\u72b6\u56fe\u6295\u5f71\u5230\u6781\u5750\u6807\nax = plt.subplot(projection='polar')\n# \u7ed8\u5236\u67f1\u72b6\u56fe\nplt.bar(theta, y, width=width, color=colors, bottom=0)\n# \u8bbe\u7f6e\u7f51\u683c\nax.set_thetagrids(theta * 180 / np.pi, x, fontsize=10)\n# \u663e\u793a\u56fe\u8868\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/79.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-2/#3d","title":"3D\u56fe\u8868","text":"<p>matplotlib \u8fd8\u53ef\u4ee5\u7528\u4e8e\u7ed8\u52363D\u56fe\uff0c\u5177\u4f53\u7684\u5185\u5bb9\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff0c\u4e0b\u9762\u6211\u4eec\u7528\u4e00\u6bb5\u7b80\u5355\u7684\u4ee3\u7801\u4e3a\u5927\u5bb6\u5c55\u793a\u5982\u4f55\u7ed8\u52363D\u56fe\u8868\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>from mpl_toolkits.mplot3d import Axes3D\n\nfig = plt.figure(figsize=(8, 4), dpi=120)\n# \u521b\u5efa3D\u5750\u6807\u7cfb\u5e76\u6dfb\u52a0\u5230\u753b\u5e03\u4e0a\nax = Axes3D(fig, auto_add_to_figure=False)\nfig.add_axes(ax)\nx = np.arange(-2, 2, 0.1)\ny = np.arange(-2, 2, 0.1)\nx, y = np.meshgrid(x, y)\nz = (1 - y ** 5 + x ** 5) * np.exp(-x ** 2 - y ** 2)\n# \u7ed8\u52363D\u66f2\u9762\nax.plot_surface(x, y, z)\n# \u663e\u793a\u56fe\u8868\nplt.show()\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p></p> <p>\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c JupyterLab \u4e2d\u6e32\u67d3\u76843D\u56fe\u5e76\u4e0d\u662f\u771f\u6b63\u76843D\u56fe\uff0c\u56e0\u4e3a\u4f60\u6ca1\u6709\u529e\u6cd5\u8c03\u6574\u89c2\u5bdf\u8005\u7684\u89c6\u89d2\uff0c\u4e5f\u6ca1\u6709\u529e\u6cd5\u65cb\u8f6c\u6216\u8005\u7f29\u653e\u3002\u5982\u679c\u60f3\u8981\u770b\u5230\u771f\u6b63\u76843D\u6548\u679c\uff0c\u9700\u8981\u5728\u5c06\u56fe\u8868\u6e32\u67d3\u5230 Qt \u7a97\u53e3\u4e2d\uff0c\u4e3a\u6b64\u6211\u4eec\u53ef\u4ee5\u5148\u5b89\u88c5\u540d\u4e3a PyQt6 \u7684\u4e09\u65b9\u5e93\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>%pip install PyQt6\n</code></pre> <p>\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u9b54\u6cd5\u6307\u4ee4\u8ba9 JupyterLab \u5c06\u56fe\u8868\u6e32\u67d3\u5230 Qt \u7a97\u53e3\u4e2d\u3002</p> <pre><code>%matplotlib qt\n</code></pre> <p>\u5728\u5b8c\u6210\u4e0a\u9762\u7684\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u8fd0\u884c\u521a\u624d\u7ed8\u52363D\u56fe\u7684\u4ee3\u7801\uff0c\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u7a97\u53e3\u3002\u5728\u8fd9\u4e2a\u7a97\u53e3\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9f20\u6807\u5bf93D\u8fdb\u884c\u65cb\u8f6c\u3001\u7f29\u653e\uff0c\u6211\u4eec\u6709\u53ef\u4ee5\u9009\u4e2d\u56fe\u8868\u7684\u4e00\u90e8\u5206\u6570\u636e\u8fdb\u884c\u89c2\u6d4b\uff0c\u662f\u4e0d\u662f\u975e\u5e38\u7684\u9177\u3002</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/80.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-3/","title":"80.\u6570\u636e\u53ef\u89c6\u5316 3","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/80.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-3/#-3","title":"\u6570\u636e\u53ef\u89c6\u5316-3","text":"<p>\u901a\u8fc7\u524d\u9762\u7684\u5b66\u4e60\uff0c\u6211\u4eec\u5df2\u7ecf\u5bf9\u6570\u636e\u53ef\u89c6\u5316\u5de5\u5177 matplotlib \u6709\u4e00\u4e2a\u521d\u6b65\u7684\u8ba4\u77e5\u3002\u5927\u5bb6\u53ef\u80fd\u4e5f\u4f1a\u53d1\u73b0\u4e86\uff0cmatplotlib \u63d0\u4f9b\u7684\u51fd\u6570\u867d\u7136\u5f3a\u5927\uff0c\u4f46\u662f\u53c2\u6570\u592a\u591a\uff0c\u8981\u60f3\u5bf9\u56fe\u8868\u8fdb\u884c\u6df1\u5ea6\u7684\u5b9a\u5236\u5c31\u9700\u8981\u4fee\u6539\u4e00\u7cfb\u5217\u7684\u53c2\u6570\uff0c\u8fd9\u4e00\u70b9\u5bf9\u65b0\u624b\u5e76\u4e0d\u53cb\u597d\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u4f7f\u7528 matplotlib \u5b9a\u5236\u7684\u7edf\u8ba1\u56fe\u662f\u9759\u6001\u56fe\u8868\uff0c\u53ef\u80fd\u5728\u67d0\u4e9b\u9700\u8981\u4ea4\u4e92\u6548\u679c\u7684\u573a\u666f\u4e0b\u5e76\u4e0d\u5408\u9002\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u4e24\u4e2a\u65b0\u7684\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u4e00\u4e2a\u662f seaborn\uff0c\u4e00\u4e2a\u662f pyecharts\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/80.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-3/#seaborn","title":"Seaborn","text":"<p>Seaborn \u662f\u5efa\u7acb\u5728 matplotlib \u4e4b\u4e0a\u7684\u6570\u636e\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u5b83\u76f8\u5f53\u4e8e\u662f\u5bf9 matplotlib \u8fdb\u884c\u4e86\u66f4\u9ad8\u7ea7\u7684\u5c01\u88c5\uff0c\u800c\u4e14 seaborn \u4e5f\u80fd\u8ddf pandas \u65e0\u7f1d\u6574\u5408\uff0c\u8ba9\u6211\u4eec\u53ef\u4ee5\u7528\u66f4\u5c11\u7684\u4ee3\u7801\u6784\u5efa\u51fa\u66f4\u597d\u7684\u7edf\u8ba1\u56fe\u8868\uff0c\u5e2e\u52a9\u6211\u4eec\u63a2\u7d22\u548c\u7406\u89e3\u6570\u636e\u3002Seaborn \u5305\u542b\u4f46\u4e0d\u5c40\u9650\u4e8e\u4ee5\u4e0b\u63cf\u8ff0\u7684\u529f\u80fd\uff1a</p> <ol> <li>\u9762\u5411\u6570\u636e\u96c6\u7684 API\uff0c\u53ef\u7528\u4e8e\u68c0\u67e5\u591a\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</li> <li>\u652f\u6301\u4f7f\u7528\u5206\u7c7b\u53d8\u91cf\u6765\u663e\u793a\u89c2\u5bdf\u7ed3\u679c\u6216\u6c47\u603b\u7edf\u8ba1\u6570\u636e\u3002</li> <li>\u80fd\u591f\u53ef\u89c6\u5316\u5355\u53d8\u91cf\u6216\u53cc\u53d8\u91cf\u5206\u5e03\u4ee5\u53ca\u5728\u6570\u636e\u5b50\u96c6\u4e4b\u95f4\u8fdb\u884c\u6bd4\u8f83\u7684\u9009\u9879</li> <li>\u5404\u7c7b\u56e0\u53d8\u91cf\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7684\u81ea\u52a8\u4f30\u8ba1\u4e0e\u4f5c\u56fe\u3002</li> <li>\u96c6\u6210\u8c03\u8272\u677f\u548c\u4e3b\u9898\uff0c\u8f7b\u677e\u5b9a\u5236\u7edf\u8ba1\u56fe\u8868\u7684\u89c6\u89c9\u6548\u679c\u3002</li> </ol> <p>\u53ef\u4ee5\u4f7f\u7528 Python \u7684\u5305\u7ba1\u7406\u5de5\u5177 pip \u6765\u5b89\u88c5 seaborn\u3002</p> <pre><code>pip install seaborn\n</code></pre> <p>\u5728 Jupyter \u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u9b54\u6cd5\u6307\u4ee4\u8fdb\u884c\u5b89\u88c5\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>%pip install seaborn\n</code></pre> <p>\u4e0b\u9762\uff0c\u6211\u4eec\u7528 seaborn \u81ea\u5e26\u7684\u6570\u636e\u96c6\u4e3a\u4f8b\uff0c\u4e3a\u5927\u5bb6\u7b80\u5355\u7684\u5c55\u793a seaborn \u7684\u7528\u6cd5\u548c\u5f3a\u5927\u4e4b\u5904\uff0c\u60f3\u8981\u6df1\u5165\u7814\u7a76 seaborn \u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u5b98\u65b9\u6587\u6863\u548c\u5e76\u67e5\u770b\u5b98\u65b9\u4f5c\u54c1\u96c6\u4e2d\u7684\u793a\u4f8b\u3002\u6839\u636e\u5b98\u65b9\u793a\u4f8b\u6765\u7f16\u5199\u81ea\u5df1\u7684\u4ee3\u7801\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4fdd\u7559\u5b98\u65b9\u4ee3\u7801\uff0c\u5c06\u6570\u636e\u6362\u6210\u81ea\u5df1\u7684\u6570\u636e\u5373\u53ef\u3002\u4e0b\u56fe\u5c55\u793a\u4e86 seaborn \u7ed8\u5236\u56fe\u8868\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u770b\u51fa\uff0cseaborn \u7684\u8fd9\u4e9b\u51fd\u6570\u4e3b\u8981\u652f\u6301\u6211\u4eec\u901a\u8fc7\u7ed8\u5236\u56fe\u8868\u6765\u63a2\u7d22\u6570\u636e\u7684\u5173\u7cfb\u3001\u5206\u5e03\u548c\u5206\u7c7b\u3002</p> <p></p> <p>\u4f7f\u7528 seaborn\uff0c\u9996\u5148\u9700\u8981\u5bfc\u5165\u8be5\u5e93\u5e76\u8bbe\u7f6e\u4e3b\u9898\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>import seaborn as sns\n\nsns.set_theme()\n</code></pre> <p>\u5982\u679c\u9700\u8981\u5728\u56fe\u8868\u4e0a\u663e\u793a\u4e2d\u6587\uff0c\u8fd8\u9700\u8981\u7528\u4e4b\u524d\u8bb2\u8fc7\u7684\u65b9\u6cd5\u4fee\u6539 matplotlib \u7684\u914d\u7f6e\u53c2\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>import matplotlib.pyplot as plt\n\nplt.rcParams['font.sans-serif'].insert(0, 'SimHei')\nplt.rcParams['axes.unicode_minus'] = False\n</code></pre> <p>\u6ce8\u610f\uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u5fc5\u987b\u653e\u5728\u8c03\u7528 set_theme \u51fd\u6570\u4e4b\u540e\uff0c\u5426\u5219\u8c03\u7528 set_theme \u51fd\u6570\u65f6\u53c8\u4f1a\u91cd\u65b0\u4fee\u6539 matplotlib \u914d\u7f6e\u53c2\u6570\u4e2d\u7684\u5b57\u4f53\u8bbe\u7f6e\u3002</p> <p>\u52a0\u8f7d\u5b98\u65b9\u7684 Tips \u6570\u636e\u96c6\uff08\u5c31\u9910\u5c0f\u8d39\u6570\u636e\uff09\u3002</p> <pre><code>tips_df = sns.load_dataset('tips')\ntips_df.info()\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff0c\u5176\u4e2d total_bill \u8868\u793a\u8d26\u5355\u603b\u91d1\u989d\uff0ctip \u8868\u793a\u5c0f\u8d39\u7684\u91d1\u989d\uff0csex \u662f\u987e\u5ba2\u7684\u6027\u522b\uff0csmoker \u8868\u793a\u987e\u5ba2\u662f\u5426\u62bd\u6837\uff0cday \u4ee3\u8868\u661f\u671f\u51e0\uff0ctime \u4ee3\u8868\u662f\u5348\u9910\u8fd8\u662f\u665a\u9910\uff0csize \u662f\u5c31\u9910\u4eba\u6570\u3002</p> <pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 244 entries, 0 to 243\nData columns (total 7 columns):\n #   Column      Non-Null Count  Dtype   \n---  ------      --------------  -----   \n 0   total_bill  244 non-null    float64 \n 1   tip         244 non-null    float64 \n 2   sex         244 non-null    category\n 3   smoker      244 non-null    category\n 4   day         244 non-null    category\n 5   time        244 non-null    category\n 6   size        244 non-null    int64   \ndtypes: category(4), float64(2), int64(1)\nmemory usage: 7.4 KB\n</code></pre> <p>\u7531\u4e8e\u6570\u636e\u96c6\u662f\u8054\u7f51\u52a0\u8f7d\u7684\uff0c\u4e0a\u8ff0\u4ee3\u7801\u53ef\u80fd\u56e0\u4e3a SSL \u7684\u539f\u56e0\u65e0\u6cd5\u83b7\u53d6\u5230\u6570\u636e\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5148\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u7136\u540e\u518d\u52a0\u8f7d\u6570\u636e\u96c6\u3002</p> <pre><code>import ssl\n\nssl._create_default_https_context = ssl._create_unverified_context\n</code></pre> <p>\u5982\u679c\u6211\u4eec\u5e0c\u671b\u4e86\u89e3\u8d26\u5355\u91d1\u989d\u7684\u5206\u5e03\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u7ed8\u5236\u5206\u5e03\u56fe\u3002</p> <pre><code>sns.histplot(data=tips_df, x='total_bill', kde=True)\n# \u6838\u5bc6\u5ea6\u4f30\u8ba1\uff08KDE\uff09\u66f2\u7ebf\n</code></pre> <p></p> <p>\u5982\u679c\u60f3\u4e86\u89e3\u53d8\u91cf\u4e4b\u95f4\u7684\u4e24\u4e24\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed8\u5236\u70b9\u5bf9\u56fe\uff0c\u4ee3\u7801\u548c\u6548\u679c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>sns.pairplot(data=tips_df, hue='sex')\n# hue \u53c2\u6570\u6765\u6307\u5b9a\u4e00\u4e2a\u5206\u7c7b\u53d8\u91cf\n</code></pre> <p></p> <p>\u5982\u679c\u5bf9\u4e0a\u9762\u56fe\u8868\u7684\u989c\u8272\u4e0d\u6ee1\u610f\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 palette \u53c2\u6570\u9009\u62e9 seaborn \u81ea\u5e26\u7684\u201c\u8c03\u8272\u677f\u201d\u6765\u4fee\u6539\u989c\u8272\uff0c\u8fd9\u79cd\u65b9\u5f0f\u76f8\u6bd4\u4e8e\u81ea\u884c\u6307\u5b9a\u989c\u8272\u6216\u4f7f\u7528\u968f\u673a\u989c\u8272\u65b9\u4fbf\u548c\u9760\u8c31\u4e86\u5f88\u591a\uff0c\u4e0b\u56fe\u4e3a\u5927\u5bb6\u5c55\u793a\u4e86\u90e8\u5206 seaborn \u81ea\u5e26\u7684\u201c\u8c03\u8272\u677f\u201d\u3002</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\uff0c\u770b\u770b\u8fd0\u884c\u7ed3\u679c\u6709\u4ec0\u4e48\u5dee\u522b\u3002</p> <pre><code>sns.pairplot(data=tips_df, hue='sex', palette='Dark2')\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4e3a total_bill \u548c tip \u4e24\u7ec4\u6570\u636e\u7ed8\u5236\u8054\u5408\u5206\u5e03\u56fe\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>sns.jointplot(data=tips_df, x='total_bill', y='tip', hue='sex')\n</code></pre> <p></p> <p>\u4e0a\u9762\u6e05\u6670\u7684\u5c55\u793a\u4e86\uff0ctotal_bill \u548c tip \u4e4b\u95f4\u5b58\u5728\u6b63\u76f8\u5173\u5173\u7cfb\uff0c\u8fd9\u4e00\u70b9\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 DataFrame \u5bf9\u8c61\u7684 corr \u65b9\u6cd5\u8fdb\u884c\u9a8c\u8bc1\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u56de\u5f52\u6a21\u578b\u6765\u62df\u5408\u8fd9\u4e9b\u6570\u636e\u70b9\uff0c\u800c seaborn \u7684\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u56fe\u5df2\u7ecf\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86\u8fd9\u9879\u529f\u80fd\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>sns.lmplot(data=tips_df, x='total_bill', y='tip', hue='sex')\n</code></pre> <p></p> <p>\u5982\u679c\u6211\u4eec\u5e0c\u671b\u4e86\u89e3\u8d26\u5355\u91d1\u989d\u7684\u96c6\u4e2d\u548c\u79bb\u6563\u8d8b\u52bf\uff0c\u53ef\u4ee5\u7ed8\u5236\u7bb1\u7ebf\u56fe\u6216\u5c0f\u63d0\u7434\u56fe\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff0c\u6211\u4eec\u5c06\u6570\u636e\u6309\u661f\u671f\u56db\u3001\u661f\u671f\u4e94\u3001\u661f\u671f\u516d\u548c\u661f\u671f\u5929\u5206\u522b\u8fdb\u884c\u5c55\u793a\u3002</p> <pre><code>sns.boxplot(data=tips_df, x='day', y='total_bill')\n</code></pre> <p></p> <pre><code>sns.violinplot(data=tips_df, x='day', y='total_bill')\n</code></pre> <p></p> <p>\u8bf4\u660e\uff1a\u76f8\u8f83\u4e8e\u7bb1\u7ebf\u56fe\uff0c\u5c0f\u63d0\u7434\u56fe\u6ca1\u6709\u6807\u6ce8\u5f02\u5e38\u70b9\u800c\u662f\u663e\u793a\u4e86\u6570\u636e\u7684\u6574\u4e2a\u8303\u56f4\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u5c0f\u63d0\u7434\u56fe\u5f88\u597d\u7684\u5c55\u793a\u4e86\u6570\u636e\u7684\u5206\u5e03\uff08\u5bc6\u5ea6\u8f68\u8ff9\uff09\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/DataAnalysis/80.%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-3/#pyecharts","title":"Pyecharts","text":"<p>Echarts \u539f\u6765\u662f\u767e\u5ea6\u5f00\u53d1\u7684\u4e00\u4e2a\u524d\u7aef\u56fe\u8868\u5e93\uff0c2018\u5e741\u670816\u65e5\uff0cECharts \u8fdb\u5165 Apache Incubator \u8fdb\u884c\u5b75\u5316\uff0c\u76ee\u524d\u5df2\u7ecf\u662f Apache \u8f6f\u4ef6\u57fa\u91d1\u4f1a\u7684\u9876\u7ea7\u9879\u76ee\u3002\u51ed\u501f\u7740\u826f\u597d\u7684\u4ea4\u4e92\u6027\u548c\u7cbe\u5de7\u7684\u56fe\u8868\u8bbe\u8ba1\uff0cECharts \u5f97\u5230\u4e86\u4f17\u591a\u5f00\u53d1\u8005\u7684\u8ba4\u53ef\uff0c\u800c pyecharts \u5c31\u662f\u57fa\u4e8e Python \u8bed\u8a00\u5bf9 ECharts \u8fdb\u884c\u4e86\u5305\u88c5\uff0c\u8ba9 Python \u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528 ECharts \u7ed8\u5236\u5916\u89c2\u7cbe\u7f8e\u4e14\u4ea4\u4e92\u6027\u5f3a\u7684\u7edf\u8ba1\u56fe\u8868\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528 Python \u7684\u5305\u7ba1\u7406\u5de5\u5177 pip \u6765\u5b89\u88c5 pyecharts\u3002</p> <pre><code>pip install pyecharts\n</code></pre> <p>\u5728 JupyterLab \u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u9b54\u6cd5\u6307\u4ee4\u8fdb\u884c\u5b89\u88c5\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>%pip install pyecharts\n</code></pre> <p>\u5982\u679c\u60f3\u5728 JupyterLab \u4e2d\u4f7f\u7528 pyecharts \u7ed8\u56fe\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u505a\u4e00\u4e9b\u51c6\u5907\u5de5\u4f5c\uff0c\u4e3b\u8981\u662f\u4fee\u6539 pyecharts \u7684\u914d\u7f6e\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>from pyecharts.globals import CurrentConfig, NotebookType\n\nCurrentConfig.NOTEBOOK_TYPE = NotebookType.JUPYTER_LAB\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u6765\u81ea\u4e8e pyecharts \u5b98\u65b9\u7f51\u7ad9\u65b0\u624b\u6559\u7a0b\u4e2d\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6765\u8ba4\u8bc6 pyecharts\u3002\u5f53\u7136\uff0c\u6211\u4eec\u5bf9\u5b98\u7f51\u7684\u4f8b\u5b50\u8fdb\u884c\u4e00\u4e9b\u8c03\u6574\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>from pyecharts.charts import Bar\nfrom pyecharts import options as opts\n\n# \u521b\u5efa\u67f1\u72b6\u56fe\u5bf9\u8c61\u5e76\u8bbe\u7f6e\u521d\u59cb\u53c2\u6570\uff08\u5bbd\u5ea6\u3001\u9ad8\u5ea6\uff09\nbar_chart = Bar(init_opts=opts.InitOpts(width='600px', height='450px'))\n# \u8bbe\u7f6e\u6a2a\u8f74\u6570\u636e\nbar_chart.add_xaxis([\"\u886c\u886b\", \"\u7f8a\u6bdb\u886b\", \"\u96ea\u7eba\u886b\", \"\u88e4\u5b50\", \"\u9ad8\u8ddf\u978b\", \"\u889c\u5b50\"])\n# \u8bbe\u7f6e\u7eb5\u8f74\u6570\u636e\uff08\u7b2c\u4e00\u7ec4\uff09\nbar_chart.add_yaxis(\"\u5546\u5bb6A\", [25, 20, 36, 10, 75, 90])\n# \u8bbe\u7f6e\u7eb5\u8f74\u6570\u636e\uff08\u7b2c\u4e8c\u7ec4\uff09\nbar_chart.add_yaxis(\"\u5546\u5bb6B\", [15, 12, 30, 20, 45, 60])\n# \u8bbe\u7f6e\u7eb5\u8f74\u6570\u636e\uff08\u7b2c\u4e09\u7ec4\uff09\nbar_chart.add_yaxis(\"\u5546\u5bb6C\", [12, 32, 40, 52, 35, 26])\n# \u6dfb\u52a0\u5168\u5c40\u914d\u7f6e\u53c2\u6570\nbar_chart.set_global_opts(\n    # \u6a2a\u8f74\u76f8\u5173\u7684\u53c2\u6570\n    xaxis_opts=opts.AxisOpts(\n        axislabel_opts=opts.LabelOpts(color='navy')\n    ),\n    # \u7eb5\u8f74\u76f8\u5173\u7684\u53c2\u6570\uff08\u6807\u7b7e\u3001\u6700\u5c0f\u503c\u3001\u6700\u5927\u503c\u3001\u95f4\u9694\uff09\n    yaxis_opts=opts.AxisOpts(\n        axislabel_opts=opts.LabelOpts(color='navy'),\n        min_=0,\n        max_=100,\n        interval=10\n    ),\n    # \u6807\u9898\u76f8\u5173\u7684\u53c2\u6570\uff08\u5185\u5bb9\u3001\u94fe\u63a5\u3001\u4f4d\u7f6e\u3001\u6587\u672c\u6837\u5f0f\uff09\n    title_opts=opts.TitleOpts(\n        title='2022\u5e74\u9500\u552e\u6570\u636e\u5c55\u793a',\n        pos_left='2%',\n        title_textstyle_opts=opts.TextStyleOpts(\n            color='navy',\n            font_size=16,\n            font_family='\u82f9\u65b9-\u7b80',\n            font_weight='bold'\n        )\n    ),\n    # \u5de5\u5177\u7bb1\u76f8\u5173\u7684\u53c2\u6570\n    toolbox_opts=opts.ToolboxOpts(\n        orient='vertical',\n        pos_left='right'\n    )\n)\n# \u52a0\u8f7d\u7ed8\u56fe\u9700\u8981\u7684JavaScript\u6587\u4ef6\nbar_chart.load_javascript()\n</code></pre> <p>\u5728\u6267\u884c\u5b8c\u4e0a\u9762\u7684\u4ee3\u7801\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528<code>bar</code>\u5bf9\u8c61\u7684\u65b9\u6cd5\u6765\u5b8c\u6210\u5bf9\u56fe\u8868\u7684\u6e32\u67d3\u3002\u5982\u679c\u76f4\u63a5\u4f7f\u7528<code>render</code>\u65b9\u6cd5\uff0c\u90a3\u4e48\u7ed8\u5236\u597d\u7684\u7edf\u8ba1\u56fe\u8868\u5c06\u4fdd\u5b58\u5230\u4e00\u4e2a HTML \u6587\u4ef6\u4e2d\uff0c\u6253\u5f00\u8be5\u6587\u4ef6\u4e5f\u80fd\u591f\u770b\u5230\u7ed8\u5236\u597d\u7684\u7edf\u8ba1\u56fe\u8868\uff0c\u800c<code>render_notebook</code>\u65b9\u6cd5\u5219\u662f\u5c06\u56fe\u8868\u6e32\u67d3\u5230\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u3002</p> <pre><code>bar_chart.render_notebook()\n</code></pre> <p>\u4e0a\u9762\u4ee3\u7801\u7684\u8fd0\u884c\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u4e0b\u56fe\u4e2d\u7684\u6807\u9898\u3001\u56fe\u4f8b\u3001\u53f3\u4fa7\u7684\u5de5\u5177\u7bb1\u90fd\u662f\u53ef\u4ee5\u70b9\u51fb\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u70b9\u51fb\u5b83\u4eec\u770b\u770b\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u6548\u679c\uff0cECharts \u7684\u9b45\u529b\u5c31\u5728\u4e8e\u5b83\u7684\u4ea4\u4e92\u6548\u679c\uff0c\u5927\u5bb6\u4e00\u5b9a\u8981\u8bd5\u4e00\u8bd5\u3002</p> <p></p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4e5f\u662f\u901a\u8fc7\u4e00\u4e2a\u5b98\u65b9\u793a\u4f8b\uff0c\u770b\u770b\u5982\u4f55\u7ed8\u5236\u997c\u56fe\u3002</p> <pre><code>import pyecharts.options as opts\nfrom pyecharts.charts import Pie\n\n# \u51c6\u5907\u997c\u56fe\u9700\u8981\u7684\u6570\u636e\nx_data = [\"\u76f4\u63a5\u8bbf\u95ee\", \"\u90ae\u4ef6\u8425\u9500\", \"\u8054\u76df\u5e7f\u544a\", \"\u89c6\u9891\u5e7f\u544a\", \"\u641c\u7d22\u5f15\u64ce\"]\ny_data = [335, 310, 234, 135, 1548]\ndata = [(x, y) for x, y in zip(x_data, y_data)]\n\n# \u521b\u5efa\u997c\u56fe\u5bf9\u8c61\u5e76\u8bbe\u7f6e\u521d\u59cb\u5316\u53c2\u6570\npie_chart = Pie(init_opts=opts.InitOpts(width=\"800px\", height=\"400px\"))\n# \u5411\u997c\u56fe\u6dfb\u52a0\u6570\u636e\npie_chart.add(\n    '', \n    data_pair=data,\n    radius=[\"50%\", \"75%\"],\n    label_opts=opts.LabelOpts(is_show=False),\n)\n# \u8bbe\u7f6e\u5168\u5c40\u914d\u7f6e\u9879\npie_chart.set_global_opts(\n    # \u914d\u7f6e\u56fe\u4f8b\u76f8\u5173\u7684\u53c2\u6570\n    legend_opts=opts.LegendOpts(\n        pos_left=\"legft\",\n        orient=\"vertical\"\n    )\n)\n# \u8bbe\u7f6e\u6570\u636e\u7cfb\u5217\u914d\u7f6e\u53c2\u6570\npie_chart.set_series_opts(\n    # \u8bbe\u7f6e\u4e0d\u663e\u793a\u5de5\u5177\u63d0\u793a\n    tooltip_opts=opts.TooltipOpts(is_show=False),\n    # \u8bbe\u7f6e\u997c\u56fe\u6807\u7b7e\u7684\u6837\u5f0f\n    label_opts=opts.LabelOpts(formatter=\"{b}({c}): {d}%\")\n)\npie_chart.load_javascript()\n</code></pre> <pre><code>pie_chart.render_notebook()\n</code></pre> <p>\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u9700\u8981\u63d0\u9192\u5927\u5bb6\u6ce8\u610f\u7684\u662f\uff0cpyecharts \u5e76\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528 NumPy \u7684 ndarray \u548c Pandas \u7684 Series\u3001DataFrame \u4e3a\u5176\u63d0\u4f9b\u6570\u636e\uff0c\u5b83\u9700\u8981\u7684\u662f Python \u539f\u751f\u7684\u6570\u636e\u7c7b\u578b\u3002\u53ef\u80fd\u5927\u5bb6\u4e5f\u6ce8\u610f\u5230\u4e86\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u90fd\u662f\u5217\u8868\u3001\u5143\u7ec4\u8fd9\u6837\u7684\u6570\u636e\u7c7b\u578b\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u7ed8\u5236\u5730\u56fe\uff0c\u7ed8\u5236\u5730\u56fe\u9996\u5148\u9700\u8981\u5b89\u88c5\u989d\u5916\u7684\u4f9d\u8d56\u5e93\u6765\u83b7\u53d6\u5730\u56fe\u76f8\u5173\u4fe1\u606f\uff0c\u547d\u4ee4\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>pip install echarts-countries-pypkg echarts-china-provinces-pypkg echarts-china-cities-pypkg echarts-china-counties-pypkg\n</code></pre> <p>\u5728 Jupyter \u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u9b54\u6cd5\u6307\u4ee4\u8fdb\u884c\u5b89\u88c5\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>%pip install echarts-countries-pypkg\n%pip install echarts-china-provinces-pypkg\n%pip install echarts-china-cities-pypkg\n%pip install echarts-china-counties-pypkg\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u7684\u56db\u4e2a\u5e93\u5206\u522b\u5305\u542b\u4e86\u4e16\u754c\u5404\u56fd\u3001\u4e2d\u56fd\u7701\u7ea7\u884c\u653f\u533a\u57df\u3001\u4e2d\u56fd\u5e02\u7ea7\u884c\u653f\u533a\u57df\u3001\u4e2d\u56fd\u533a/\u53bf\u7ea7\u884c\u653f\u533a\u57df\u7684\u6570\u636e\u3002</p> <p>\u7136\u540e\uff0c\u6211\u4eec\u5c06\u5168\u56fd\u5404\u7701\u7684\u6570\u636e\u653e\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>data = [\n    ('\u5e7f\u4e1c', 594), ('\u6d59\u6c5f', 438), ('\u56db\u5ddd', 316), ('\u5317\u4eac', 269), ('\u5c71\u4e1c', 248),\n    ('\u6c5f\u82cf', 234), ('\u6e56\u5357', 196), ('\u798f\u5efa', 166), ('\u6cb3\u5357', 153), ('\u8fbd\u5b81', 152),\n    ('\u4e0a\u6d77', 138), ('\u6cb3\u5317', 86), ('\u5b89\u5fbd', 79), ('\u6e56\u5317', 75), ('\u9ed1\u9f99\u6c5f', 70), \n    ('\u9655\u897f', 63), ('\u5409\u6797', 59), ('\u6c5f\u897f', 56), ('\u91cd\u5e86', 46), ('\u8d35\u5dde', 39),\n    ('\u5c71\u897f', 37), ('\u4e91\u5357', 33), ('\u5e7f\u897f', 24), ('\u5929\u6d25', 22), ('\u65b0\u7586', 21),\n    ('\u6d77\u5357', 18), ('\u5185\u8499\u53e4', 14), ('\u53f0\u6e7e', 11), ('\u7518\u8083', 7), ('\u5e7f\u897f\u58ee\u65cf\u81ea\u6cbb\u533a', 4),\n    ('\u9999\u6e2f', 4), ('\u9752\u6d77', 3), ('\u65b0\u7586\u7ef4\u543e\u5c14\u81ea\u6cbb\u533a', 3), ('\u5185\u8499\u53e4\u81ea\u6cbb\u533a', 3), ('\u5b81\u590f', 1)\n]\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f7f\u7528 pyecharts \u5728\u5730\u56fe\u4e0a\u6807\u8bb0\u5404\u7701\u6296\u97f3\u5927V\u4eba\u6570\u3002</p> <pre><code>import pyecharts.options as opts\nfrom pyecharts.charts import Map\n\nmap_chart = Map(init_opts=opts.InitOpts(width='1000px', height='1000px'))\nmap_chart.add('', data, 'china', is_roam=False)\nmap_chart.load_javascript()\n</code></pre> <pre><code>map_chart.render_notebook()\n</code></pre> <p>\u4ee3\u7801\u7684\u8fd0\u884c\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5c06\u9f20\u6807\u7f6e\u4e8e\u5730\u56fe\u4e0a\u65f6\uff0c\u4f1a\u9ad8\u4eae\u5bf9\u5e94\u7684\u7701\u5e76\u770b\u5230\u76f8\u5173\u7684\u4fe1\u606f\u3002</p> <p></p> <p>\u548c seaborn \u4e00\u6837\uff0c\u6211\u4eec\u5efa\u8bae\u5927\u5bb6\u53c2\u8003\u5b98\u65b9\u63d0\u4f9b\u7684\u793a\u4f8b\u6765\u4f7f\u7528 pyecharts\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 pyecharts \u5b98\u65b9\u7f51\u7ad9\u7684\u5de6\u4fa7\u5bfc\u822a\u680f\u4e2d\u627e\u5230\u201c\u56fe\u8868\u7c7b\u578b\u201d\u9009\u9879\uff0c\u4e0b\u9762\u6bcf\u79cd\u7c7b\u578b\u7684\u56fe\u8868\u90fd\u6709\u5bf9\u5e94\u7684\u5b98\u65b9\u793a\u4f8b\uff0c\u5f88\u591a\u4ee3\u7801\u662f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7684\uff0c\u6211\u4eec\u9700\u8981\u505a\u7684\u5c31\u662f\u5c06\u6570\u636e\u6362\u6210\u81ea\u5df1\u7684\u6570\u636e\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/","title":"01.\u521d\u8bc6Python","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#python","title":"\u521d\u8bc6Python","text":"<p>\u6e29\u99a8\u63d0\u793a\uff1a\u6765\u6e90\uff1aPython-100-Days\u3002\u5982\u679c\u4f60\u6b63\u597d\u662f\u4e00\u540d\u521d\u5b66\u8005\uff0c\u5efa\u8bae\u79fb\u6b65\u5230\u53e6\u4e00\u4e2a\u4ed3\u5e93Python-for-Freshmen-2023\uff0c\u8fd9\u4e2a\u4ed3\u5e93\u5bf9\u521d\u5b66\u8005\u66f4\u52a0\u53cb\u597d\uff0c\u5bf9\u5e94\u7684\u5185\u5bb9\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u5728\u77e5\u4e4e\u4e13\u680f\u201c\u4ece\u96f6\u5f00\u59cb\u5b66Python\u201d\u4e2d\u627e\u5230\uff0c\u70b9\u51fb\u8fdb\u5165\u4f20\u9001\u95e8\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#python_1","title":"Python\u7b80\u4ecb","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#python_2","title":"Python\u7684\u5386\u53f2","text":"<ol> <li>1989\u5e74\u5723\u8bde\u8282\uff1aGuido von Rossum\u5f00\u59cb\u5199Python\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u3002</li> <li>1991\u5e742\u6708\uff1a\u7b2c\u4e00\u4e2aPython\u7f16\u8bd1\u5668\uff08\u540c\u65f6\u4e5f\u662f\u89e3\u91ca\u5668\uff09\u8bde\u751f\uff0c\u5b83\u662f\u7528C\u8bed\u8a00\u5b9e\u73b0\u7684\uff08\u540e\u9762\uff09\uff0c\u53ef\u4ee5\u8c03\u7528C\u8bed\u8a00\u7684\u5e93\u51fd\u6570\u3002\u5728\u6700\u65e9\u7684\u7248\u672c\u4e2d\uff0cPython\u5df2\u7ecf\u63d0\u4f9b\u4e86\u5bf9\u201c\u7c7b\u201d\uff0c\u201c\u51fd\u6570\u201d\uff0c\u201c\u5f02\u5e38\u5904\u7406\u201d\u7b49\u6784\u9020\u5757\u7684\u652f\u6301\uff0c\u8fd8\u6709\u5bf9\u5217\u8868\u3001\u5b57\u5178\u7b49\u6838\u5fc3\u6570\u636e\u7c7b\u578b\uff0c\u540c\u65f6\u652f\u6301\u4ee5\u6a21\u5757\u4e3a\u57fa\u7840\u6765\u6784\u9020\u5e94\u7528\u7a0b\u5e8f\u3002</li> <li>1994\u5e741\u6708\uff1aPython 1.0\u6b63\u5f0f\u53d1\u5e03\u3002</li> <li>2000\u5e7410\u670816\u65e5\uff1aPython 2.0\u53d1\u5e03\uff0c\u589e\u52a0\u4e86\u5b8c\u6574\u7684\u5783\u573e\u56de\u6536\uff0c\u63d0\u4f9b\u4e86\u5bf9Unicode\u7684\u652f\u6301\u3002\u4e0e\u6b64\u540c\u65f6\uff0cPython\u7684\u6574\u4e2a\u5f00\u53d1\u8fc7\u7a0b\u66f4\u52a0\u900f\u660e\uff0c\u793e\u533a\u5bf9\u5f00\u53d1\u8fdb\u5ea6\u7684\u5f71\u54cd\u9010\u6e10\u6269\u5927\uff0c\u751f\u6001\u5708\u5f00\u59cb\u6162\u6162\u5f62\u6210\u3002</li> <li>2008\u5e7412\u67083\u65e5\uff1aPython 3.0\u53d1\u5e03\uff0c\u5b83\u5e76\u4e0d\u5b8c\u5168\u517c\u5bb9\u4e4b\u524d\u7684Python\u4ee3\u7801\uff0c\u4e0d\u8fc7\u56e0\u4e3a\u76ee\u524d\u8fd8\u6709\u4e0d\u5c11\u516c\u53f8\u5728\u9879\u76ee\u548c\u8fd0\u7ef4\u4e2d\u4f7f\u7528Python 2.x\u7248\u672c\uff0c\u6240\u4ee5Python 3.x\u7684\u5f88\u591a\u65b0\u7279\u6027\u540e\u6765\u4e5f\u88ab\u79fb\u690d\u5230Python 2.6/2.7\u7248\u672c\u4e2d\u3002</li> </ol> <p>\u76ee\u524d\u6211\u4f7f\u7528\u7684Python 3.7.x\u7684\u7248\u672c\u662f\u57282018\u5e74\u53d1\u5e03\u7684\uff0cPython\u7684\u7248\u672c\u53f7\u5206\u4e3a\u4e09\u6bb5\uff0c\u5f62\u5982A.B.C\u3002\u5176\u4e2dA\u8868\u793a\u5927\u7248\u672c\u53f7\uff0c\u4e00\u822c\u5f53\u6574\u4f53\u91cd\u5199\uff0c\u6216\u51fa\u73b0\u4e0d\u5411\u540e\u517c\u5bb9\u7684\u6539\u53d8\u65f6\uff0c\u589e\u52a0A\uff1bB\u8868\u793a\u529f\u80fd\u66f4\u65b0\uff0c\u51fa\u73b0\u65b0\u529f\u80fd\u65f6\u589e\u52a0B\uff1bC\u8868\u793a\u5c0f\u7684\u6539\u52a8\uff08\u4f8b\u5982\uff1a\u4fee\u590d\u4e86\u67d0\u4e2aBug\uff09\uff0c\u53ea\u8981\u6709\u4fee\u6539\u5c31\u589e\u52a0C\u3002\u5982\u679c\u5bf9Python\u7684\u5386\u53f2\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u9605\u8bfb\u540d\u4e3a\u300aPython\u7b80\u53f2\u300b\u7684\u7f51\u7edc\u6587\u7ae0\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#python_3","title":"Python\u7684\u4f18\u7f3a\u70b9","text":"<p>Python\u7684\u4f18\u70b9\u5f88\u591a\uff0c\u7b80\u5355\u7684\u53ef\u4ee5\u603b\u7ed3\u4e3a\u4ee5\u4e0b\u51e0\u70b9\u3002</p> <ol> <li>\u7b80\u5355\u660e\u4e86\uff0c\u5b66\u4e60\u66f2\u7ebf\u4f4e\uff0c\u6bd4\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u5bb9\u6613\u4e0a\u624b\u3002</li> <li>\u5f00\u653e\u6e90\u4ee3\u7801\uff0c\u62e5\u6709\u5f3a\u5927\u7684\u793e\u533a\u548c\u751f\u6001\u5708\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u5206\u6790\u548c\u673a\u5668\u5b66\u4e60\u9886\u57df\u3002</li> <li>\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u5929\u751f\u5177\u6709\u5e73\u53f0\u53ef\u79fb\u690d\u6027\uff0c\u4ee3\u7801\u53ef\u4ee5\u5de5\u4f5c\u4e8e\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002</li> <li>\u5bf9\u4e24\u79cd\u4e3b\u6d41\u7684\u7f16\u7a0b\u8303\u5f0f\uff08\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\uff09\u90fd\u63d0\u4f9b\u4e86\u652f\u6301\u3002</li> <li>\u4ee3\u7801\u89c4\u8303\u7a0b\u5ea6\u9ad8\uff0c\u53ef\u8bfb\u6027\u5f3a\uff0c\u9002\u5408\u6709\u4ee3\u7801\u6d01\u7656\u548c\u5f3a\u8feb\u75c7\u7684\u4eba\u7fa4\u3002</li> </ol> <p>Python\u7684\u7f3a\u70b9\u4e3b\u8981\u96c6\u4e2d\u5728\u4ee5\u4e0b\u51e0\u70b9\u3002</p> <ol> <li>\u6267\u884c\u6548\u7387\u7a0d\u4f4e\uff0c\u5bf9\u6267\u884c\u6548\u7387\u8981\u6c42\u9ad8\u7684\u90e8\u5206\u53ef\u4ee5\u7531\u5176\u4ed6\u8bed\u8a00\uff08\u5982\uff1aC\u3001C++\uff09\u7f16\u5199\u3002</li> <li>\u4ee3\u7801\u65e0\u6cd5\u52a0\u5bc6\uff0c\u4f46\u662f\u73b0\u5728\u5f88\u591a\u516c\u53f8\u90fd\u4e0d\u9500\u552e\u5356\u8f6f\u4ef6\u800c\u662f\u9500\u552e\u670d\u52a1\uff0c\u8fd9\u4e2a\u95ee\u9898\u4f1a\u88ab\u5f31\u5316\u3002</li> <li>\u5728\u5f00\u53d1\u65f6\u53ef\u4ee5\u9009\u62e9\u7684\u6846\u67b6\u592a\u591a\uff08\u5982Web\u6846\u67b6\u5c31\u6709100\u591a\u4e2a\uff09\uff0c\u6709\u9009\u62e9\u7684\u5730\u65b9\u5c31\u6709\u9519\u8bef\u3002</li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#python_4","title":"Python\u7684\u5e94\u7528\u9886\u57df","text":"<p>\u76ee\u524dPython\u5728Web\u5e94\u7528\u540e\u7aef\u5f00\u53d1\u3001\u4e91\u57fa\u7840\u8bbe\u65bd\u5efa\u8bbe\u3001DevOps\u3001\u7f51\u7edc\u6570\u636e\u91c7\u96c6\uff08\u722c\u866b\uff09\u3001\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u6570\u636e\u5206\u6790\u3001\u673a\u5668\u5b66\u4e60\u7b49\u9886\u57df\u90fd\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#python_5","title":"\u5b89\u88c5Python\u89e3\u91ca\u5668","text":"<p>\u60f3\u8981\u5f00\u59cbPython\u7f16\u7a0b\u4e4b\u65c5\uff0c\u9996\u5148\u5f97\u5728\u81ea\u5df1\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5Python\u89e3\u91ca\u5668\u73af\u5883\uff0c\u4e0b\u9762\u5c06\u4ee5\u5b89\u88c5\u5b98\u65b9\u7684Python\u89e3\u91ca\u5668\u4e3a\u4f8b\uff0c\u8bb2\u89e3\u5982\u4f55\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u5b89\u88c5Python\u73af\u5883\u3002\u5b98\u65b9\u7684Python\u89e3\u91ca\u5668\u662f\u7528C\u8bed\u8a00\u5b9e\u73b0\u7684\uff0c\u4e5f\u662f\u4f7f\u7528\u6700\u4e3a\u5e7f\u6cdb\u7684Python\u89e3\u91ca\u5668\uff0c\u901a\u5e38\u79f0\u4e4b\u4e3aCPython\u3002\u9664\u6b64\u4e4b\u5916\uff0cPython\u89e3\u91ca\u5668\u8fd8\u6709Java\u8bed\u8a00\u5b9e\u73b0\u7684Jython\u3001C#\u8bed\u8a00\u5b9e\u73b0\u7684IronPython\u4ee5\u53caPyPy\u3001Brython\u3001Pyston\u7b49\u7248\u672c\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#windows","title":"Windows\u73af\u5883","text":"<p>\u53ef\u4ee5\u5728Python\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d\u5230Python\u7684Windows\u5b89\u88c5\u7a0b\u5e8f\uff08exe\u6587\u4ef6\uff09\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u5728Windows 7\u73af\u5883\u4e0b\u5b89\u88c5Python 3.x\uff0c\u9700\u8981\u5148\u5b89\u88c5Service Pack 1\u8865\u4e01\u5305\uff08\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u5de5\u5177\u8f6f\u4ef6\u81ea\u52a8\u5b89\u88c5\u7cfb\u7edf\u8865\u4e01\u7684\u529f\u80fd\u6765\u5b89\u88c5\uff09\uff0c\u5b89\u88c5\u8fc7\u7a0b\u5efa\u8bae\u52fe\u9009\u201cAdd Python 3.x to PATH\u201d\uff08\u5c06Python 3.x\u6dfb\u52a0\u5230PATH\u73af\u5883\u53d8\u91cf\uff09\u5e76\u9009\u62e9\u81ea\u5b9a\u4e49\u5b89\u88c5\uff0c\u5728\u8bbe\u7f6e\u201cOptional Features\u201d\u754c\u9762\u6700\u597d\u5c06\u201cpip\u201d\u3001\u201ctcl/tk\u201d\u3001\u201cPython test suite\u201d\u7b49\u9879\u5168\u90e8\u52fe\u9009\u4e0a\u3002\u5f3a\u70c8\u5efa\u8bae\u9009\u62e9\u81ea\u5b9a\u4e49\u7684\u5b89\u88c5\u8def\u5f84\u5e76\u4fdd\u8bc1\u8def\u5f84\u4e2d\u6ca1\u6709\u4e2d\u6587\u3002\u5b89\u88c5\u5b8c\u6210\u4f1a\u770b\u5230\u201cSetup was successful\u201d\u7684\u63d0\u793a\u3002\u5982\u679c\u7a0d\u540e\u8fd0\u884cPython\u7a0b\u5e8f\u65f6\uff0c\u51fa\u73b0\u56e0\u4e3a\u7f3a\u5931\u4e00\u4e9b\u52a8\u6001\u94fe\u63a5\u5e93\u6587\u4ef6\u800c\u5bfc\u81f4Python\u89e3\u91ca\u5668\u65e0\u6cd5\u5de5\u4f5c\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u65b9\u6cd5\u52a0\u4ee5\u89e3\u51b3\u3002</p> <p>\u5982\u679c\u7cfb\u7edf\u663e\u793aapi-ms-win-crt*.dll\u6587\u4ef6\u7f3a\u5931\uff0c\u53ef\u4ee5\u53c2\u7167\u300aapi-ms-win-crt*.dll\u7f3a\u5931\u539f\u56e0\u5206\u6790\u548c\u89e3\u51b3\u65b9\u6cd5\u300b\u4e00\u6587\u8bb2\u89e3\u7684\u65b9\u6cd5\u8fdb\u884c\u5904\u7406\u6216\u8005\u76f4\u63a5\u5728\u5fae\u8f6f\u5b98\u7f51\u4e0b\u8f7dVisual C++ Redistributable for Visual Studio 2015\u6587\u4ef6\u8fdb\u884c\u4fee\u590d\uff1b\u5982\u679c\u662f\u56e0\u4e3a\u66f4\u65b0Windows\u7684DirectX\u4e4b\u540e\u5bfc\u81f4\u67d0\u4e9b\u52a8\u6001\u94fe\u63a5\u5e93\u6587\u4ef6\u7f3a\u5931\u95ee\u9898\uff0c\u53ef\u4ee5\u4e0b\u8f7d\u4e00\u4e2aDirectX\u4fee\u590d\u5de5\u5177\u8fdb\u884c\u4fee\u590d\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#linux","title":"Linux\u73af\u5883","text":"<p>Linux\u73af\u5883\u81ea\u5e26\u4e86Python 2.x\u7248\u672c\uff0c\u4f46\u662f\u5982\u679c\u8981\u66f4\u65b0\u52303.x\u7684\u7248\u672c\uff0c\u53ef\u4ee5\u5728Python\u7684\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7dPython\u7684\u6e90\u4ee3\u7801\u5e76\u901a\u8fc7\u6e90\u4ee3\u7801\u6784\u5efa\u5b89\u88c5\u7684\u65b9\u5f0f\u8fdb\u884c\u5b89\u88c5\uff0c\u5177\u4f53\u7684\u6b65\u9aa4\u5982\u4e0b\u6240\u793a\uff08\u4ee5CentOS\u4e3a\u4f8b\uff09\u3002</p> <ol> <li>\u5b89\u88c5\u4f9d\u8d56\u5e93\uff08\u56e0\u4e3a\u6ca1\u6709\u8fd9\u4e9b\u4f9d\u8d56\u5e93\u53ef\u80fd\u5728\u6e90\u4ee3\u7801\u6784\u4ef6\u5b89\u88c5\u65f6\u56e0\u4e3a\u7f3a\u5931\u5e95\u5c42\u4f9d\u8d56\u5e93\u800c\u5931\u8d25\uff09\u3002</li> </ol> <pre><code>yum -y install wget gcc zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel\n</code></pre> <ol> <li>\u4e0b\u8f7dPython\u6e90\u4ee3\u7801\u5e76\u89e3\u538b\u7f29\u5230\u6307\u5b9a\u76ee\u5f55\u3002</li> </ol> <pre><code>wget https://www.python.org/ftp/python/3.7.6/Python-3.7.6.tar.xz\nxz -d Python-3.7.6.tar.xz\ntar -xvf Python-3.7.6.tar\n</code></pre> <ol> <li>\u5207\u6362\u81f3Python\u6e90\u4ee3\u7801\u76ee\u5f55\u5e76\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u8fdb\u884c\u914d\u7f6e\u548c\u5b89\u88c5\u3002</li> </ol> <pre><code>cd Python-3.7.6\n./configure --prefix=/usr/local/python37 --enable-optimizations\nmake &amp;&amp; make install\n</code></pre> <ol> <li>\u4fee\u6539\u7528\u6237\u4e3b\u76ee\u5f55\u4e0b\u540d\u4e3a.bash_profile\u7684\u6587\u4ef6\uff0c\u914d\u7f6ePATH\u73af\u5883\u53d8\u91cf\u5e76\u4f7f\u5176\u751f\u6548\u3002</li> </ol> <pre><code>cd ~\nvim .bash_profile\n</code></pre> <pre><code># ... \u6b64\u5904\u7701\u7565\u4e0a\u9762\u7684\u4ee3\u7801 ...\n\nexport PATH=$PATH:/usr/local/python37/bin\n\n# ... \u6b64\u5904\u7701\u7565\u4e0b\u9762\u7684\u4ee3\u7801 ...\n</code></pre> <ol> <li>\u6fc0\u6d3b\u73af\u5883\u53d8\u91cf\u3002</li> </ol> <pre><code>source .bash_profile\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#macos","title":"macOS\u73af\u5883","text":"<p>macOS\u4e5f\u81ea\u5e26\u4e86Python 2.x\u7248\u672c\uff0c\u53ef\u4ee5\u901a\u8fc7Python\u7684\u5b98\u65b9\u7f51\u7ad9\u63d0\u4f9b\u7684\u5b89\u88c5\u6587\u4ef6\uff08pkg\u6587\u4ef6\uff09\u5b89\u88c5Python 3.x\u7684\u7248\u672c\u3002\u9ed8\u8ba4\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u7ec8\u7aef\u6267\u884c<code>python</code>\u547d\u4ee4\u6765\u542f\u52a82.x\u7248\u672c\u7684Python\u89e3\u91ca\u5668\uff0c\u542f\u52a83.x\u7248\u672c\u7684Python\u89e3\u91ca\u5668\u9700\u8981\u6267\u884c<code>python3</code>\u547d\u4ee4\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#python_6","title":"\u8fd0\u884cPython\u7a0b\u5e8f","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#python_7","title":"\u786e\u8ba4Python\u7684\u7248\u672c","text":"<p>\u53ef\u4ee5Windows\u7684\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u4e2d\u952e\u5165\u4e0b\u9762\u7684\u547d\u4ee4\u3002</p> <p><pre><code>python --version\n</code></pre> \u5728Linux\u6216macOS\u7cfb\u7edf\u7684\u7ec8\u7aef\u4e2d\u952e\u5165\u4e0b\u9762\u7684\u547d\u4ee4\u3002</p> <pre><code>python3 --version\n</code></pre> <p>\u5f53\u7136\u4e5f\u53ef\u4ee5\u5148\u8f93\u5165<code>python</code>\u6216<code>python3</code>\u8fdb\u5165\u4ea4\u4e92\u5f0f\u73af\u5883\uff0c\u518d\u6267\u884c\u4ee5\u4e0b\u7684\u4ee3\u7801\u68c0\u67e5Python\u7684\u7248\u672c\u3002</p> <pre><code>import sys\n\nprint(sys.version_info)\nprint(sys.version)\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#python_8","title":"\u7f16\u5199Python\u6e90\u4ee3\u7801","text":"<p>\u53ef\u4ee5\u7528\u6587\u672c\u7f16\u8f91\u5de5\u5177\uff08\u63a8\u8350\u4f7f\u7528Sublime\u3001Visual Studio Code\u7b49\u9ad8\u7ea7\u6587\u672c\u7f16\u8f91\u5de5\u5177\uff09\u7f16\u5199Python\u6e90\u4ee3\u7801\u5e76\u7528py\u4f5c\u4e3a\u540e\u7f00\u540d\u4fdd\u5b58\u8be5\u6587\u4ef6\uff0c\u4ee3\u7801\u5185\u5bb9\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>print('hello, world!')\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#_1","title":"\u8fd0\u884c\u7a0b\u5e8f","text":"<p>\u5207\u6362\u5230\u6e90\u4ee3\u7801\u6240\u5728\u7684\u76ee\u5f55\u5e76\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u770b\u770b\u5c4f\u5e55\u4e0a\u662f\u5426\u8f93\u51fa\u4e86\"hello, world!\"\u3002</p> <pre><code>python hello.py\n</code></pre> <p>\u6216</p> <pre><code>python3 hello.py\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#_2","title":"\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca","text":"<p>\u6ce8\u91ca\u662f\u7f16\u7a0b\u8bed\u8a00\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u7528\u4e8e\u5728\u6e90\u4ee3\u7801\u4e2d\u89e3\u91ca\u4ee3\u7801\u7684\u4f5c\u7528\u4ece\u800c\u589e\u5f3a\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5c06\u6e90\u4ee3\u7801\u4e2d\u4e0d\u9700\u8981\u53c2\u4e0e\u8fd0\u884c\u7684\u4ee3\u7801\u6bb5\u901a\u8fc7\u6ce8\u91ca\u6765\u53bb\u6389\uff0c\u8fd9\u4e00\u70b9\u5728\u8c03\u8bd5\u7a0b\u5e8f\u7684\u65f6\u5019\u7ecf\u5e38\u7528\u5230\u3002\u6ce8\u91ca\u5728\u968f\u6e90\u4ee3\u7801\u8fdb\u5165\u9884\u5904\u7406\u5668\u6216\u7f16\u8bd1\u65f6\u4f1a\u88ab\u79fb\u9664\uff0c\u4e0d\u4f1a\u5728\u76ee\u6807\u4ee3\u7801\u4e2d\u4fdd\u7559\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u3002</p> <ol> <li>\u5355\u884c\u6ce8\u91ca - \u4ee5#\u548c\u7a7a\u683c\u5f00\u5934\u7684\u90e8\u5206</li> <li>\u591a\u884c\u6ce8\u91ca - \u4e09\u4e2a\u5f15\u53f7\u5f00\u5934\uff0c\u4e09\u4e2a\u5f15\u53f7\u7ed3\u5c3e</li> </ol> <pre><code>\"\"\"\n\u7b2c\u4e00\u4e2aPython\u7a0b\u5e8f - hello, world!\n\u5411\u4f1f\u5927\u7684Dennis M. Ritchie\u5148\u751f\u81f4\u656c\n\"\"\"\nprint('hello, world!')\n# print(\"\u4f60\u597d, \u4e16\u754c\uff01\")\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#python_9","title":"Python\u5f00\u53d1\u5de5\u5177","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#idle-","title":"IDLE - \u81ea\u5e26\u7684\u96c6\u6210\u5f00\u53d1\u5de5\u5177","text":"<p>IDLE\u662f\u5b89\u88c5Python\u73af\u5883\u65f6\u81ea\u5e26\u7684\u96c6\u6210\u5f00\u53d1\u5de5\u5177\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u4f46\u662f\u7531\u4e8eIDLE\u7684\u7528\u6237\u4f53\u9a8c\u5e76\u4e0d\u662f\u90a3\u4e48\u597d\u6240\u4ee5\u5f88\u5c11\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u88ab\u91c7\u7528\u3002</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#ipython-","title":"IPython - \u66f4\u597d\u7684\u4ea4\u4e92\u5f0f\u7f16\u7a0b\u5de5\u5177","text":"<p>IPython\u662f\u4e00\u79cd\u57fa\u4e8ePython\u7684\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\u3002\u76f8\u8f83\u4e8e\u539f\u751f\u7684Python\u4ea4\u4e92\u5f0f\u73af\u5883\uff0cIPython\u63d0\u4f9b\u4e86\u66f4\u4e3a\u5f3a\u5927\u7684\u7f16\u8f91\u548c\u4ea4\u4e92\u529f\u80fd\u3002\u53ef\u4ee5\u901a\u8fc7Python\u7684\u5305\u7ba1\u7406\u5de5\u5177pip\u5b89\u88c5IPython\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>pip install ipython\n</code></pre> <p>\u6216</p> <pre><code>pip3 install ipython\n</code></pre> <p>\u5b89\u88c5\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684ipython\u547d\u4ee4\u542f\u52a8IPython\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#sublime-text-","title":"Sublime Text - \u9ad8\u7ea7\u6587\u672c\u7f16\u8f91\u5668","text":"<ul> <li> <p>\u9996\u5148\u53ef\u4ee5\u901a\u8fc7\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d\u5b89\u88c5\u7a0b\u5e8f\u5b89\u88c5Sublime Text 3\u6216Sublime Text 2\u3002</p> </li> <li> <p>\u5b89\u88c5\u5305\u7ba1\u7406\u5de5\u5177\u3002</p> </li> <li> <p>\u901a\u8fc7\u5feb\u6377\u952eCtrl+`\u6216\u8005\u5728View\u83dc\u5355\u4e2d\u9009\u62e9Show Console\u6253\u5f00\u63a7\u5236\u53f0\uff0c\u8f93\u5165\u4e0b\u9762\u7684\u4ee3\u7801\u3002</p> </li> <li> <p>Sublime 3</p> </li> </ul> <p><pre><code>import  urllib.request,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));open(os.path.join(ipp,pf),'wb').write(urllib.request.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read())\n</code></pre>   - Sublime 2</p> <p><pre><code>import  urllib2,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();os.makedirs(ipp)ifnotos.path.exists(ipp)elseNone;urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler()));open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read());print('Please restart Sublime Text to finish installation')\n</code></pre>   2. \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165  https://sublime.wbond.net/Package%20Control.sublime-package \u4e0b\u8f7d\u5305\u7ba1\u7406\u5de5\u5177\u7684\u5b89\u88c5\u5305\uff0c\u5e76\u627e\u5230\u5b89\u88c5Sublime\u76ee\u5f55\u4e0b\u540d\u4e3a\"Installed Packages\"\u7684\u76ee\u5f55\uff0c\u628a\u521a\u624d\u4e0b\u8f7d\u7684\u6587\u4ef6\u653e\u5230\u8fd9\u4e2a\u6587\u4ef6\u52a0\u4e0b\uff0c\u7136\u540e\u91cd\u542fSublime Text\u5c31\u641e\u5b9a\u4e86\u3002</p> <ul> <li> <p>\u5b89\u88c5\u63d2\u4ef6\u3002\u901a\u8fc7Preference\u83dc\u5355\u7684Package Control\u6216\u5feb\u6377\u952eCtrl+Shift+P\u6253\u5f00\u547d\u4ee4\u9762\u677f\uff0c\u5728\u9762\u677f\u4e2d\u8f93\u5165Install Package\u5c31\u53ef\u4ee5\u627e\u5230\u5b89\u88c5\u63d2\u4ef6\u7684\u5de5\u5177\uff0c\u7136\u540e\u518d\u67e5\u627e\u9700\u8981\u7684\u63d2\u4ef6\u3002\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u5b89\u88c5\u4ee5\u4e0b\u51e0\u4e2a\u63d2\u4ef6\uff1a</p> </li> <li> <p>SublimeCodeIntel - \u4ee3\u7801\u81ea\u52a8\u8865\u5168\u5de5\u5177\u63d2\u4ef6\u3002</p> </li> <li>Emmet - \u524d\u7aef\u5f00\u53d1\u4ee3\u7801\u6a21\u677f\u63d2\u4ef6\u3002</li> <li>Git - \u7248\u672c\u63a7\u5236\u5de5\u5177\u63d2\u4ef6\u3002</li> <li>Python PEP8 Autoformat - PEP8\u89c4\u8303\u81ea\u52a8\u683c\u5f0f\u5316\u63d2\u4ef6\u3002</li> <li>ConvertToUTF8 - \u5c06\u672c\u5730\u7f16\u7801\u8f6c\u6362\u4e3aUTF-8\u3002</li> </ul> <p>\u8bf4\u660e\uff1a\u4e8b\u5b9e\u4e0aVisual Studio Code\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9\uff0c\u5b83\u4e0d\u7528\u82b1\u94b1\u5e76\u63d0\u4f9b\u4e86\u66f4\u4e3a\u5b8c\u6574\u548c\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#pycharm-python","title":"PyCharm - Python\u5f00\u53d1\u795e\u5668","text":"<p>PyCharm\u7684\u5b89\u88c5\u3001\u914d\u7f6e\u548c\u4f7f\u7528\u5728\u300a\u73a9\u8f6cPyCharm\u300b\u8fdb\u884c\u4e86\u4ecb\u7ecd\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u9009\u62e9\u9605\u8bfb\u3002</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/01.%E5%88%9D%E8%AF%86Python/#_3","title":"\u7ec3\u4e60","text":"<ol> <li> <p>\u5728Python\u4ea4\u4e92\u5f0f\u73af\u5883\u4e2d\u8f93\u5165\u4e0b\u9762\u7684\u4ee3\u7801\u5e76\u67e5\u770b\u7ed3\u679c\uff0c\u8bf7\u5c1d\u8bd5\u5c06\u770b\u5230\u7684\u5185\u5bb9\u7ffb\u8bd1\u6210\u4e2d\u6587\u3002</p> <pre><code>import this\n</code></pre> <p>\u8bf4\u660e\uff1a\u8f93\u5165\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5728Python\u7684\u4ea4\u4e92\u5f0f\u73af\u5883\u4e2d\u53ef\u4ee5\u770b\u5230Tim Peter\u64b0\u5199\u7684\u201cPython\u4e4b\u7985\u201d\uff0c\u91cc\u9762\u8bb2\u8ff0\u7684\u9053\u7406\u4e0d\u4ec5\u4ec5\u9002\u7528\u4e8ePython\uff0c\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u3002</p> </li> <li> <p>\u5b66\u4e60\u4f7f\u7528turtle\u5728\u5c4f\u5e55\u4e0a\u7ed8\u5236\u56fe\u5f62\u3002</p> <p>\u8bf4\u660e\uff1aturtle\u662fPython\u5185\u7f6e\u7684\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u6a21\u5757\uff0c\u7279\u522b\u9002\u5408\u5bf9\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8fdb\u884c\u521d\u4f53\u9a8c\u7684\u5c0f\u4f19\u4f34\uff0c\u5b83\u6700\u65e9\u662fLogo\u8bed\u8a00\u7684\u4e00\u90e8\u5206\uff0cLogo\u8bed\u8a00\u662fWally Feurzig\u548cSeymour Papert\u57281966\u53d1\u660e\u7684\u7f16\u7a0b\u8bed\u8a00\u3002</p> <pre><code>import turtle\n\nturtle.pensize(4)\nturtle.pencolor('red')\n\nturtle.forward(100)\nturtle.right(90)\nturtle.forward(100)\nturtle.right(90)\nturtle.forward(100)\nturtle.right(90)\nturtle.forward(100)\n\nturtle.mainloop()\n</code></pre> <p>\u63d0\u793a\uff1a\u672c\u7ae0\u63d0\u4f9b\u7684\u4ee3\u7801\u4e2d\u8fd8\u6709\u753b\u56fd\u65d7\u548c\u753b\u5c0f\u732a\u4f69\u5947\u7684\u4ee3\u7801\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u8bf7\u81ea\u884c\u7814\u7a76\u3002</p> </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/","title":"02.\u8bed\u8a00\u5143\u7d20","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#_1","title":"\u8bed\u8a00\u5143\u7d20","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#_2","title":"\u6307\u4ee4\u548c\u7a0b\u5e8f","text":"<p>\u8ba1\u7b97\u673a\u7684\u786c\u4ef6\u7cfb\u7edf\u901a\u5e38\u7531\u4e94\u5927\u90e8\u4ef6\u6784\u6210\uff0c\u5305\u62ec\uff1a\u8fd0\u7b97\u5668\u3001\u63a7\u5236\u5668\u3001\u5b58\u50a8\u5668\u3001\u8f93\u5165\u8bbe\u5907\u548c\u8f93\u51fa\u8bbe\u5907\u3002\u5176\u4e2d\uff0c\u8fd0\u7b97\u5668\u548c\u63a7\u5236\u5668\u653e\u5728\u4e00\u8d77\u5c31\u662f\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u7684\u4e2d\u592e\u5904\u7406\u5668\uff0c\u5b83\u7684\u529f\u80fd\u662f\u6267\u884c\u5404\u79cd\u8fd0\u7b97\u548c\u63a7\u5236\u6307\u4ee4\u4ee5\u53ca\u5904\u7406\u8ba1\u7b97\u673a\u8f6f\u4ef6\u4e2d\u7684\u6570\u636e\u3002\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u7684\u7a0b\u5e8f\u5b9e\u9645\u4e0a\u5c31\u662f\u6307\u4ee4\u7684\u96c6\u5408\uff0c\u6211\u4eec\u7a0b\u5e8f\u5c31\u662f\u5c06\u4e00\u7cfb\u5217\u7684\u6307\u4ee4\u6309\u7167\u67d0\u79cd\u65b9\u5f0f\u7ec4\u7ec7\u5230\u4e00\u8d77\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e9b\u6307\u4ee4\u53bb\u63a7\u5236\u8ba1\u7b97\u673a\u505a\u6211\u4eec\u60f3\u8ba9\u5b83\u505a\u7684\u4e8b\u60c5\u3002\u4eca\u5929\u6211\u4eec\u5927\u591a\u6570\u65f6\u5019\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\uff0c\u867d\u7136\u5b83\u4eec\u7684\u5143\u5668\u4ef6\u505a\u5de5\u8d8a\u6765\u8d8a\u7cbe\u5bc6\uff0c\u5904\u7406\u80fd\u529b\u8d8a\u6765\u8d8a\u5f3a\u5927\uff0c\u4f46\u7a76\u5176\u672c\u8d28\u6765\u8bf4\u4ecd\u7136\u5c5e\u4e8e\u201c\u51af\u00b7\u8bfa\u4f9d\u66fc\u7ed3\u6784\u201d\u7684\u8ba1\u7b97\u673a\u3002\u201c\u51af\u00b7\u8bfa\u4f9d\u66fc\u7ed3\u6784\u201d\u6709\u4e24\u4e2a\u5173\u952e\u70b9\uff0c\u4e00\u662f\u6307\u51fa\u8981\u5c06\u5b58\u50a8\u8bbe\u5907\u4e0e\u4e2d\u592e\u5904\u7406\u5668\u5206\u5f00\uff0c\u4e8c\u662f\u63d0\u51fa\u4e86\u5c06\u6570\u636e\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u7f16\u7801\u3002\u4e8c\u8fdb\u5236\u662f\u4e00\u79cd\u201c\u9022\u4e8c\u8fdb\u4e00\u201d\u7684\u8ba1\u6570\u6cd5\uff0c\u8ddf\u6211\u4eec\u4eba\u7c7b\u4f7f\u7528\u7684\u201c\u9022\u5341\u8fdb\u4e00\u201d\u7684\u8ba1\u6570\u6cd5\u6ca1\u6709\u5b9e\u8d28\u6027\u7684\u533a\u522b\uff0c\u4eba\u7c7b\u56e0\u4e3a\u6709\u5341\u6839\u624b\u6307\u6240\u4ee5\u4f7f\u7528\u4e86\u5341\u8fdb\u5236\uff08\u56e0\u4e3a\u5728\u6570\u6570\u65f6\u5341\u6839\u624b\u6307\u7528\u5b8c\u4e4b\u540e\u5c31\u53ea\u80fd\u8fdb\u4f4d\u4e86\uff0c\u5f53\u7136\u51e1\u4e8b\u90fd\u6709\u4f8b\u5916\uff0c\u739b\u96c5\u4eba\u53ef\u80fd\u662f\u56e0\u4e3a\u957f\u5e74\u5149\u7740\u811a\u7684\u539f\u56e0\u628a\u811a\u8dbe\u5934\u4e5f\u7b97\u4e0a\u4e86\uff0c\u4e8e\u662f\u4ed6\u4eec\u4f7f\u7528\u4e86\u4e8c\u5341\u8fdb\u5236\u7684\u8ba1\u6570\u6cd5\uff0c\u5728\u8fd9\u79cd\u8ba1\u6570\u6cd5\u7684\u6307\u5bfc\u4e0b\u739b\u96c5\u4eba\u7684\u5386\u6cd5\u5c31\u4e0e\u6211\u4eec\u5e73\u5e38\u4f7f\u7528\u7684\u5386\u6cd5\u4e0d\u4e00\u6837\uff0c\u800c\u6309\u7167\u739b\u96c5\u4eba\u7684\u5386\u6cd5\uff0c2012\u5e74\u662f\u4e0a\u4e00\u4e2a\u6240\u8c13\u7684\u201c\u592a\u9633\u7eaa\u201d\u7684\u6700\u540e\u4e00\u5e74\uff0c\u800c2013\u5e74\u5219\u662f\u65b0\u7684\u201c\u592a\u9633\u7eaa\u201d\u7684\u5f00\u59cb\uff0c\u540e\u6765\u8fd9\u4ef6\u4e8b\u60c5\u88ab\u4ee5\u8bb9\u4f20\u8bb9\u7684\u65b9\u5f0f\u8bef\u4f20\u4e3a\u201d2012\u5e74\u662f\u739b\u96c5\u4eba\u9884\u8a00\u7684\u4e16\u754c\u672b\u65e5\u201c\u8fd9\u79cd\u8352\u8bde\u7684\u8bf4\u6cd5\uff0c\u4eca\u5929\u6211\u4eec\u53ef\u4ee5\u5927\u80c6\u7684\u731c\u6d4b\uff0c\u739b\u96c5\u6587\u660e\u4e4b\u6240\u4ee5\u53d1\u5c55\u7f13\u6162\u4f30\u8ba1\u4e5f\u4e0e\u4f7f\u7528\u4e86\u4e8c\u5341\u8fdb\u5236\u6709\u5173\uff09\u3002\u5bf9\u4e8e\u8ba1\u7b97\u673a\u6765\u8bf4\uff0c\u4e8c\u8fdb\u5236\u5728\u7269\u7406\u5668\u4ef6\u4e0a\u6765\u8bf4\u662f\u6700\u5bb9\u6613\u5b9e\u73b0\u7684\uff08\u9ad8\u7535\u538b\u8868\u793a1\uff0c\u4f4e\u7535\u538b\u8868\u793a0\uff09\uff0c\u4e8e\u662f\u5728\u201c\u51af\u00b7\u8bfa\u4f9d\u66fc\u7ed3\u6784\u201d\u7684\u8ba1\u7b97\u673a\u90fd\u4f7f\u7528\u4e86\u4e8c\u8fdb\u5236\u3002\u867d\u7136\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u80fd\u591f\u4f7f\u7528\u4e8c\u8fdb\u5236\u7684\u601d\u7ef4\u65b9\u5f0f\u6765\u5de5\u4f5c\uff0c\u4f46\u662f\u4e86\u89e3\u4e8c\u8fdb\u5236\u4ee5\u53ca\u5b83\u4e0e\u6211\u4eec\u751f\u6d3b\u4e2d\u7684\u5341\u8fdb\u5236\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\uff0c\u4ee5\u53ca\u4e8c\u8fdb\u5236\u4e0e\u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362\u5173\u7cfb\u8fd8\u662f\u6709\u5fc5\u8981\u7684\u3002\u5982\u679c\u4f60\u5bf9\u8fd9\u4e00\u70b9\u4e0d\u719f\u6089\uff0c\u53ef\u4ee5\u81ea\u884c\u4f7f\u7528\u7ef4\u57fa\u767e\u79d1\u6216\u8005\u767e\u5ea6\u767e\u79d1\u79d1\u666e\u4e00\u4e0b\u3002</p> <p>\u8bf4\u660e\uff1a\u8fd1\u671f\u5173\u4e8e\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u7814\u7a76\u5df2\u7ecf\u88ab\u63a8\u5012\u4e86\u98ce\u53e3\u6d6a\u5c16\uff0c\u91cf\u5b50\u8ba1\u7b97\u673a\u57fa\u4e8e\u91cf\u5b50\u529b\u5b66\u8fdb\u884c\u8fd0\u7b97\uff0c\u4f7f\u7528\u91cf\u5b50\u77ac\u79fb\u7684\u65b9\u5f0f\u6765\u4f20\u9012\u4fe1\u606f\u30022018\u5e746\u6708\uff0cIntel\u5ba3\u5e03\u5f00\u53d1\u51fa\u65b0\u6b3e\u91cf\u5b50\u82af\u7247\u5e76\u901a\u8fc7\u4e86\u5728\u63a5\u8fd1\u7edd\u5bf9\u96f6\u5ea6\u73af\u5883\u4e0b\u7684\u6d4b\u8bd5\uff1b2019\u5e74\uff0cIBM\u548cGoogle\u90fd\u63a8\u51fa\u4e86\u81ea\u5df1\u7684\u91cf\u5b50\u8ba1\u7b97\u673a\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#_3","title":"\u53d8\u91cf\u548c\u7c7b\u578b","text":"<p>\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\uff0c\u53d8\u91cf\u662f\u4e00\u79cd\u5b58\u50a8\u6570\u636e\u7684\u8f7d\u4f53\u3002\u8ba1\u7b97\u673a\u4e2d\u7684\u53d8\u91cf\u662f\u5b9e\u9645\u5b58\u5728\u7684\u6570\u636e\u6216\u8005\u8bf4\u662f\u5b58\u50a8\u5668\u4e2d\u5b58\u50a8\u6570\u636e\u7684\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u53d8\u91cf\u7684\u503c\u53ef\u4ee5\u88ab\u8bfb\u53d6\u548c\u4fee\u6539\uff0c\u8fd9\u662f\u6240\u6709\u8ba1\u7b97\u548c\u63a7\u5236\u7684\u57fa\u7840\u3002\u8ba1\u7b97\u673a\u80fd\u5904\u7406\u7684\u6570\u636e\u6709\u5f88\u591a\u79cd\u7c7b\u578b\uff0c\u9664\u4e86\u6570\u503c\u4e4b\u5916\u8fd8\u53ef\u4ee5\u5904\u7406\u6587\u672c\u3001\u56fe\u5f62\u3001\u97f3\u9891\u3001\u89c6\u9891\u7b49\u5404\u79cd\u5404\u6837\u7684\u6570\u636e\uff0c\u90a3\u4e48\u4e0d\u540c\u7684\u6570\u636e\u5c31\u9700\u8981\u5b9a\u4e49\u4e0d\u540c\u7684\u5b58\u50a8\u7c7b\u578b\u3002Python\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u5f88\u591a\uff0c\u800c\u4e14\u4e5f\u5141\u8bb8\u6211\u4eec\u81ea\u5b9a\u4e49\u65b0\u7684\u6570\u636e\u7c7b\u578b\uff08\u8fd9\u4e00\u70b9\u5728\u540e\u9762\u4f1a\u8bb2\u5230\uff09\uff0c\u6211\u4eec\u5148\u4ecb\u7ecd\u51e0\u79cd\u5e38\u7528\u7684\u6570\u636e\u7c7b\u578b\u3002</p> <ul> <li>\u6574\u578b\uff1aPython\u4e2d\u53ef\u4ee5\u5904\u7406\u4efb\u610f\u5927\u5c0f\u7684\u6574\u6570\uff08Python 2.x\u4e2d\u6709<code>int</code>\u548c<code>long</code>\u4e24\u79cd\u7c7b\u578b\u7684\u6574\u6570\uff0c\u4f46\u8fd9\u79cd\u533a\u5206\u5bf9Python\u6765\u8bf4\u610f\u4e49\u4e0d\u5927\uff0c\u56e0\u6b64\u5728Python 3.x\u4e2d\u6574\u6570\u53ea\u6709int\u8fd9\u4e00\u79cd\u4e86\uff09\uff0c\u800c\u4e14\u652f\u6301\u4e8c\u8fdb\u5236\uff08\u5982<code>0b100</code>\uff0c\u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f4\uff09\u3001\u516b\u8fdb\u5236\uff08\u5982<code>0o100</code>\uff0c\u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f64\uff09\u3001\u5341\u8fdb\u5236\uff08<code>100</code>\uff09\u548c\u5341\u516d\u8fdb\u5236\uff08<code>0x100</code>\uff0c\u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f256\uff09\u7684\u8868\u793a\u6cd5\u3002</li> <li>\u6d6e\u70b9\u578b\uff1a\u6d6e\u70b9\u6570\u4e5f\u5c31\u662f\u5c0f\u6570\uff0c\u4e4b\u6240\u4ee5\u79f0\u4e3a\u6d6e\u70b9\u6570\uff0c\u662f\u56e0\u4e3a\u6309\u7167\u79d1\u5b66\u8bb0\u6570\u6cd5\u8868\u793a\u65f6\uff0c\u4e00\u4e2a\u6d6e\u70b9\u6570\u7684\u5c0f\u6570\u70b9\u4f4d\u7f6e\u662f\u53ef\u53d8\u7684\uff0c\u6d6e\u70b9\u6570\u9664\u4e86\u6570\u5b66\u5199\u6cd5\uff08\u5982<code>123.456</code>\uff09\u4e4b\u5916\u8fd8\u652f\u6301\u79d1\u5b66\u8ba1\u6570\u6cd5\uff08\u5982<code>1.23456e2</code>\uff09\u3002</li> <li>\u5b57\u7b26\u4e32\u578b\uff1a\u5b57\u7b26\u4e32\u662f\u4ee5\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u4efb\u610f\u6587\u672c\uff0c\u6bd4\u5982<code>'hello'</code>\u548c<code>\"hello\"</code>,\u5b57\u7b26\u4e32\u8fd8\u6709\u539f\u59cb\u5b57\u7b26\u4e32\u8868\u793a\u6cd5\u3001\u5b57\u8282\u5b57\u7b26\u4e32\u8868\u793a\u6cd5\u3001Unicode\u5b57\u7b26\u4e32\u8868\u793a\u6cd5\uff0c\u800c\u4e14\u53ef\u4ee5\u4e66\u5199\u6210\u591a\u884c\u7684\u5f62\u5f0f\uff08\u7528\u4e09\u4e2a\u5355\u5f15\u53f7\u6216\u4e09\u4e2a\u53cc\u5f15\u53f7\u5f00\u5934\uff0c\u4e09\u4e2a\u5355\u5f15\u53f7\u6216\u4e09\u4e2a\u53cc\u5f15\u53f7\u7ed3\u5c3e\uff09\u3002</li> <li>\u5e03\u5c14\u578b\uff1a\u5e03\u5c14\u503c\u53ea\u6709<code>True</code>\u3001<code>False</code>\u4e24\u79cd\u503c\uff0c\u8981\u4e48\u662f<code>True</code>\uff0c\u8981\u4e48\u662f<code>False</code>\uff0c\u5728Python\u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528<code>True</code>\u3001<code>False</code>\u8868\u793a\u5e03\u5c14\u503c\uff08\u8bf7\u6ce8\u610f\u5927\u5c0f\u5199\uff09\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5e03\u5c14\u8fd0\u7b97\u8ba1\u7b97\u51fa\u6765\uff08\u4f8b\u5982<code>3 &lt; 5</code>\u4f1a\u4ea7\u751f\u5e03\u5c14\u503c<code>True</code>\uff0c\u800c<code>2 == 1</code>\u4f1a\u4ea7\u751f\u5e03\u5c14\u503c<code>False</code>\uff09\u3002</li> <li>\u590d\u6570\u578b\uff1a\u5f62\u5982<code>3+5j</code>\uff0c\u8ddf\u6570\u5b66\u4e0a\u7684\u590d\u6570\u8868\u793a\u4e00\u6837\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\u865a\u90e8\u7684<code>i</code>\u6362\u6210\u4e86<code>j</code>\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u7c7b\u578b\u5e76\u4e0d\u5e38\u7528\uff0c\u5927\u5bb6\u4e86\u89e3\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002</li> </ul>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#_4","title":"\u53d8\u91cf\u547d\u540d","text":"<p>\u5bf9\u4e8e\u6bcf\u4e2a\u53d8\u91cf\u6211\u4eec\u9700\u8981\u7ed9\u5b83\u53d6\u4e00\u4e2a\u540d\u5b57\uff0c\u5c31\u5982\u540c\u6211\u4eec\u6bcf\u4e2a\u4eba\u90fd\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684\u54cd\u4eae\u7684\u540d\u5b57\u4e00\u6837\u3002\u5728Python\u4e2d\uff0c\u53d8\u91cf\u547d\u540d\u9700\u8981\u9075\u5faa\u4ee5\u4e0b\u8fd9\u4e9b\u5fc5\u987b\u9075\u5b88\u786c\u6027\u89c4\u5219\u548c\u5f3a\u70c8\u5efa\u8bae\u9075\u5b88\u7684\u975e\u786c\u6027\u89c4\u5219\u3002</p> <ul> <li>\u786c\u6027\u89c4\u5219\uff1a<ul> <li>\u53d8\u91cf\u540d\u7531\u5b57\u6bcd\uff08\u5e7f\u4e49\u7684Unicode\u5b57\u7b26\uff0c\u4e0d\u5305\u62ec\u7279\u6b8a\u5b57\u7b26\uff09\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u6784\u6210\uff0c\u6570\u5b57\u4e0d\u80fd\u5f00\u5934\u3002</li> <li>\u5927\u5c0f\u5199\u654f\u611f\uff08\u5927\u5199\u7684<code>a</code>\u548c\u5c0f\u5199\u7684<code>A</code>\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf\uff09\u3002</li> <li>\u4e0d\u8981\u8ddf\u5173\u952e\u5b57\uff08\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\uff0c\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u548c\u7cfb\u7edf\u4fdd\u7559\u5b57\uff08\u5982\u51fd\u6570\u3001\u6a21\u5757\u7b49\u7684\u540d\u5b57\uff09\u51b2\u7a81\u3002</li> </ul> </li> <li>PEP 8\u8981\u6c42\uff1a<ul> <li>\u7528\u5c0f\u5199\u5b57\u6bcd\u62fc\u5199\uff0c\u591a\u4e2a\u5355\u8bcd\u7528\u4e0b\u5212\u7ebf\u8fde\u63a5\u3002</li> <li>\u53d7\u4fdd\u62a4\u7684\u5b9e\u4f8b\u5c5e\u6027\u7528\u5355\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\u3002</li> <li>\u79c1\u6709\u7684\u5b9e\u4f8b\u5c5e\u6027\u7528\u4e24\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\u3002</li> </ul> </li> </ul> <p>\u5f53\u7136\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u4e13\u4e1a\u7684\u7a0b\u5e8f\u5458\uff0c\u7ed9\u53d8\u91cf\uff08\u4e8b\u5b9e\u4e0a\u5e94\u8be5\u662f\u6240\u6709\u7684\u6807\u8bc6\u7b26\uff09\u547d\u540d\u65f6\u505a\u5230\u89c1\u540d\u77e5\u610f\u4e5f\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#_5","title":"\u53d8\u91cf\u7684\u4f7f\u7528","text":"<p>\u4e0b\u9762\u901a\u8fc7\u51e0\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u53d8\u91cf\u7684\u7c7b\u578b\u548c\u53d8\u91cf\u4f7f\u7528\u3002</p> <pre><code>\"\"\"\n\u4f7f\u7528\u53d8\u91cf\u4fdd\u5b58\u6570\u636e\u5e76\u8fdb\u884c\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97\n\"\"\"\na = 321\nb = 12\nprint(a + b)    # 333\nprint(a - b)    # 309\nprint(a * b)    # 3852\nprint(a / b)    # 26.75\n</code></pre> <p>\u5728Python\u4e2d\u53ef\u4ee5\u4f7f\u7528<code>type</code>\u51fd\u6570\u5bf9\u53d8\u91cf\u7684\u7c7b\u578b\u8fdb\u884c\u68c0\u67e5\u3002\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u51fd\u6570\u7684\u6982\u5ff5\u8ddf\u6570\u5b66\u4e0a\u51fd\u6570\u7684\u6982\u5ff5\u662f\u4e00\u81f4\u7684\uff0c\u6570\u5b66\u4e0a\u7684\u51fd\u6570\u76f8\u4fe1\u5927\u5bb6\u5e76\u4e0d\u964c\u751f\uff0c\u5b83\u5305\u62ec\u4e86\u51fd\u6570\u540d\u3001\u81ea\u53d8\u91cf\u548c\u56e0\u53d8\u91cf\u3002\u5982\u679c\u6682\u65f6\u4e0d\u7406\u89e3\u8fd9\u4e2a\u6982\u5ff5\u4e5f\u4e0d\u8981\u7d27\uff0c\u6211\u4eec\u4f1a\u5728\u540e\u7eed\u7684\u7ae0\u8282\u4e2d\u4e13\u95e8\u8bb2\u89e3\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u4f7f\u7528\u3002</p> <pre><code>\"\"\"\n\u4f7f\u7528type()\u68c0\u67e5\u53d8\u91cf\u7684\u7c7b\u578b\n\"\"\"\na = 100\nb = 12.345\nc = 1 + 5j\nd = 'hello, world'\ne = True\nprint(type(a))    # &lt;class 'int'&gt;\nprint(type(b))    # &lt;class 'float'&gt;\nprint(type(c))    # &lt;class 'complex'&gt;\nprint(type(d))    # &lt;class 'str'&gt;\nprint(type(e))    # &lt;class 'bool'&gt;\n</code></pre> <p>\u53ef\u4ee5\u4f7f\u7528Python\u4e2d\u5185\u7f6e\u7684\u51fd\u6570\u5bf9\u53d8\u91cf\u7c7b\u578b\u8fdb\u884c\u8f6c\u6362\u3002</p> <ul> <li><code>int()</code>\uff1a\u5c06\u4e00\u4e2a\u6570\u503c\u6216\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\uff0c\u53ef\u4ee5\u6307\u5b9a\u8fdb\u5236\u3002</li> <li><code>float()</code>\uff1a\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6d6e\u70b9\u6570\u3002</li> <li><code>str()</code>\uff1a\u5c06\u6307\u5b9a\u7684\u5bf9\u8c61\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u5f62\u5f0f\uff0c\u53ef\u4ee5\u6307\u5b9a\u7f16\u7801\u3002</li> <li><code>chr()</code>\uff1a\u5c06\u6574\u6570\u8f6c\u6362\u6210\u8be5\u7f16\u7801\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff08\u4e00\u4e2a\u5b57\u7b26\uff09\u3002</li> <li><code>ord()</code>\uff1a\u5c06\u5b57\u7b26\u4e32\uff08\u4e00\u4e2a\u5b57\u7b26\uff09\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u7f16\u7801\uff08\u6574\u6570\uff09\u3002</li> </ul> <p>\u4e0b\u9762\u7684\u4ee3\u7801\u901a\u8fc7\u952e\u76d8\u8f93\u5165\u4e24\u4e2a\u6574\u6570\u6765\u5b9e\u73b0\u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u7b97\u672f\u8fd0\u7b97\u3002</p> <pre><code>\"\"\"\n\u4f7f\u7528input()\u51fd\u6570\u83b7\u53d6\u952e\u76d8\u8f93\u5165(\u5b57\u7b26\u4e32)\n\u4f7f\u7528int()\u51fd\u6570\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\n\u4f7f\u7528print()\u51fd\u6570\u8f93\u51fa\u5e26\u5360\u4f4d\u7b26\u7684\u5b57\u7b26\u4e32\n\"\"\"\na = int(input('a = '))\nb = int(input('b = '))\nprint('%d + %d = %d' % (a, b, a + b))\nprint('%d - %d = %d' % (a, b, a - b))\nprint('%d * %d = %d' % (a, b, a * b))\nprint('%d / %d = %f' % (a, b, a / b))\nprint('%d // %d = %d' % (a, b, a // b))\nprint('%d %% %d = %d' % (a, b, a % b))\nprint('%d ** %d = %d' % (a, b, a ** b))\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u7684print\u51fd\u6570\u4e2d\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u4f7f\u7528\u4e86\u5360\u4f4d\u7b26\u8bed\u6cd5\uff0c\u5176\u4e2d<code>%d</code>\u662f\u6574\u6570\u7684\u5360\u4f4d\u7b26\uff0c<code>%f</code>\u662f\u5c0f\u6570\u7684\u5360\u4f4d\u7b26\uff0c<code>%%</code>\u8868\u793a\u767e\u5206\u53f7\uff08\u56e0\u4e3a\u767e\u5206\u53f7\u4ee3\u8868\u4e86\u5360\u4f4d\u7b26\uff0c\u6240\u4ee5\u5e26\u5360\u4f4d\u7b26\u7684\u5b57\u7b26\u4e32\u4e2d\u8981\u8868\u793a\u767e\u5206\u53f7\u5fc5\u987b\u5199\u6210<code>%%</code>\uff09\uff0c\u5b57\u7b26\u4e32\u4e4b\u540e\u7684<code>%</code>\u540e\u9762\u8ddf\u7684\u53d8\u91cf\u503c\u4f1a\u66ff\u6362\u6389\u5360\u4f4d\u7b26\u7136\u540e\u8f93\u51fa\u5230\u7ec8\u7aef\u4e2d\uff0c\u8fd0\u884c\u4e0a\u9762\u7684\u7a0b\u5e8f\uff0c\u770b\u770b\u7a0b\u5e8f\u6267\u884c\u7ed3\u679c\u5c31\u660e\u767d\u5566\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#_6","title":"\u8fd0\u7b97\u7b26","text":"<p>Python\u652f\u6301\u591a\u79cd\u8fd0\u7b97\u7b26\uff0c\u4e0b\u8868\u5927\u81f4\u6309\u7167\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u7684\u987a\u5e8f\u5217\u51fa\u4e86\u6240\u6709\u7684\u8fd0\u7b97\u7b26\uff0c\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u6307\u7684\u662f\u591a\u4e2a\u8fd0\u7b97\u7b26\u540c\u65f6\u51fa\u73b0\u65f6\uff0c\u5148\u505a\u4ec0\u4e48\u8fd0\u7b97\u7136\u540e\u518d\u505a\u4ec0\u4e48\u8fd0\u7b97\u3002\u9664\u4e86\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u7528\u8fc7\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u548c\u7b97\u672f\u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u7a0d\u540e\u4f1a\u9646\u7eed\u8bb2\u5230\u5176\u4ed6\u8fd0\u7b97\u7b26\u7684\u4f7f\u7528\u3002</p> \u8fd0\u7b97\u7b26 \u63cf\u8ff0 <code>[]</code> <code>[:]</code> \u4e0b\u6807\uff0c\u5207\u7247 <code>**</code> \u6307\u6570 <code>~</code> <code>+</code> <code>-</code> \u6309\u4f4d\u53d6\u53cd, \u6b63\u8d1f\u53f7 <code>*</code> <code>/</code> <code>%</code> <code>//</code> \u4e58\uff0c\u9664\uff0c\u6a21\uff0c\u6574\u9664 <code>+</code> <code>-</code> \u52a0\uff0c\u51cf <code>&gt;&gt;</code> <code>&lt;&lt;</code> \u53f3\u79fb\uff0c\u5de6\u79fb <code>&amp;</code> \u6309\u4f4d\u4e0e <code>^</code> <code>\\|</code> \u6309\u4f4d\u5f02\u6216\uff0c\u6309\u4f4d\u6216 <code>&lt;=</code> <code>&lt;</code> <code>&gt;</code> <code>&gt;=</code> \u5c0f\u4e8e\u7b49\u4e8e\uff0c\u5c0f\u4e8e\uff0c\u5927\u4e8e\uff0c\u5927\u4e8e\u7b49\u4e8e <code>==</code> <code>!=</code> \u7b49\u4e8e\uff0c\u4e0d\u7b49\u4e8e <code>is</code> <code>is not</code> \u8eab\u4efd\u8fd0\u7b97\u7b26 <code>in</code> <code>not in</code> \u6210\u5458\u8fd0\u7b97\u7b26 <code>not</code> <code>or</code> <code>and</code> \u903b\u8f91\u8fd0\u7b97\u7b26 <code>=</code> <code>+=</code> <code>-=</code> <code>*=</code> <code>/=</code> <code>%=</code> <code>//=</code> <code>**=</code> <code>&amp;=</code> <code>|=</code> <code>^=</code> <code>&gt;&gt;=</code> <code>&lt;&lt;=</code> \uff08\u590d\u5408\uff09\u8d4b\u503c\u8fd0\u7b97\u7b26 <p>\u8bf4\u660e\uff1a \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u641e\u4e0d\u6e05\u695a\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff0c\u53ef\u4ee5\u4f7f\u7528\u62ec\u53f7\u6765\u786e\u4fdd\u8fd0\u7b97\u7684\u6267\u884c\u987a\u5e8f\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#_7","title":"\u8d4b\u503c\u8fd0\u7b97\u7b26","text":"<p>\u8d4b\u503c\u8fd0\u7b97\u7b26\u5e94\u8be5\u662f\u6700\u4e3a\u5e38\u89c1\u7684\u8fd0\u7b97\u7b26\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5c06\u53f3\u8fb9\u7684\u503c\u8d4b\u7ed9\u5de6\u8fb9\u7684\u53d8\u91cf\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u8d4b\u503c\u8fd0\u7b97\u7b26\u548c\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u4f7f\u7528\u3002</p> <pre><code>\"\"\"\n\u8d4b\u503c\u8fd0\u7b97\u7b26\u548c\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26\n\"\"\"\na = 10\nb = 3\na += b        # \u76f8\u5f53\u4e8e\uff1aa = a + b\na *= a + 2    # \u76f8\u5f53\u4e8e\uff1aa = a * (a + 2)\nprint(a)      # \u7b97\u4e00\u4e0b\u8fd9\u91cc\u4f1a\u8f93\u51fa\u4ec0\u4e48\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#_8","title":"\u6bd4\u8f83\u8fd0\u7b97\u7b26\u548c\u903b\u8f91\u8fd0\u7b97\u7b26","text":"<p>\u6bd4\u8f83\u8fd0\u7b97\u7b26\u6709\u7684\u5730\u65b9\u4e5f\u79f0\u4e3a\u5173\u7cfb\u8fd0\u7b97\u7b26\uff0c\u5305\u62ec<code>==</code>\u3001<code>!=</code>\u3001<code>&lt;</code>\u3001<code>&gt;</code>\u3001<code>&lt;=</code>\u3001<code>&gt;=</code>\uff0c\u6211\u76f8\u4fe1\u6ca1\u6709\u4ec0\u4e48\u597d\u89e3\u91ca\u7684\uff0c\u5927\u5bb6\u4e00\u770b\u5c31\u80fd\u61c2\uff0c\u552f\u4e00\u9700\u8981\u63d0\u9192\u7684\u662f\u6bd4\u8f83\u76f8\u7b49\u7528\u7684\u662f<code>==</code>\uff0c\u8bf7\u6ce8\u610f\u8fd9\u4e2a\u5730\u65b9\u662f\u4e24\u4e2a\u7b49\u53f7\uff0c\u56e0\u4e3a<code>=</code>\u662f\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u5728\u4e0a\u9762\u521a\u521a\u8bb2\u5230\u8fc7\uff0c<code>==</code>\u624d\u662f\u6bd4\u8f83\u76f8\u7b49\u7684\u6bd4\u8f83\u8fd0\u7b97\u7b26\u3002\u6bd4\u8f83\u8fd0\u7b97\u7b26\u4f1a\u4ea7\u751f\u5e03\u5c14\u503c\uff0c\u8981\u4e48\u662f<code>True</code>\u8981\u4e48\u662f<code>False</code>\u3002</p> <p>\u903b\u8f91\u8fd0\u7b97\u7b26\u6709\u4e09\u4e2a\uff0c\u5206\u522b\u662f<code>and</code>\u3001<code>or</code>\u548c<code>not</code>\u3002<code>and</code>\u5b57\u9762\u610f\u601d\u662f\u201c\u800c\u4e14\u201d\uff0c\u6240\u4ee5<code>and</code>\u8fd0\u7b97\u7b26\u4f1a\u8fde\u63a5\u4e24\u4e2a\u5e03\u5c14\u503c\uff0c\u5982\u679c\u4e24\u4e2a\u5e03\u5c14\u503c\u90fd\u662f<code>True</code>\uff0c\u90a3\u4e48\u8fd0\u7b97\u7684\u7ed3\u679c\u5c31\u662f<code>True</code>\uff1b\u5de6\u53f3\u4e24\u8fb9\u7684\u5e03\u5c14\u503c\u6709\u4e00\u4e2a\u662f<code>False</code>\uff0c\u6700\u7ec8\u7684\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f<code>False</code>\u3002\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u60f3\u5230\u4e86\uff0c\u5982\u679c<code>and</code>\u5de6\u8fb9\u7684\u5e03\u5c14\u503c\u662f<code>False</code>\uff0c\u4e0d\u7ba1\u53f3\u8fb9\u7684\u5e03\u5c14\u503c\u662f\u4ec0\u4e48\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u90fd\u662f<code>False</code>\uff0c\u6240\u4ee5\u5728\u505a\u8fd0\u7b97\u7684\u65f6\u5019\u53f3\u8fb9\u7684\u503c\u4f1a\u88ab\u8df3\u8fc7\uff08\u77ed\u8def\u5904\u7406\uff09\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u5728<code>and</code>\u8fd0\u7b97\u7b26\u5de6\u8fb9\u4e3a<code>False</code>\u7684\u60c5\u51b5\u4e0b\uff0c\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u6839\u672c\u4e0d\u4f1a\u6267\u884c\u3002<code>or</code>\u5b57\u9762\u610f\u601d\u662f\u201c\u6216\u8005\u201d\uff0c\u6240\u4ee5<code>or</code>\u8fd0\u7b97\u7b26\u4e5f\u4f1a\u8fde\u63a5\u4e24\u4e2a\u5e03\u5c14\u503c\uff0c\u5982\u679c\u4e24\u4e2a\u5e03\u5c14\u503c\u6709\u4efb\u610f\u4e00\u4e2a\u662f<code>True</code>\uff0c\u90a3\u4e48\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u662f<code>True</code>\u3002\u5f53\u7136\uff0c<code>or</code>\u8fd0\u7b97\u7b26\u4e5f\u662f\u6709\u77ed\u8def\u529f\u80fd\u7684\uff0c\u5728\u5b83\u5de6\u8fb9\u7684\u5e03\u5c14\u503c\u4e3a<code>True</code>\u7684\u60c5\u51b5\u4e0b\uff0c\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u6839\u672c\u4e0d\u4f1a\u6267\u884c\u3002<code>not</code>\u8fd0\u7b97\u7b26\u7684\u540e\u9762\u4f1a\u8ddf\u4e0a\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5f97\u5230\u4e0e\u8be5\u5e03\u5c14\u503c\u76f8\u53cd\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u540e\u9762\u7684\u5e03\u5c14\u503c\u5982\u679c\u662f<code>True</code>\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f<code>False</code>\uff0c\u800c\u540e\u9762\u7684\u5e03\u5c14\u503c\u5982\u679c\u662f<code>False</code>\u5219\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f<code>True</code>\u3002</p> <pre><code>\"\"\"\n\u6bd4\u8f83\u8fd0\u7b97\u7b26\u548c\u903b\u8f91\u8fd0\u7b97\u7b26\u7684\u4f7f\u7528\n\"\"\"\nflag0 = 1 == 1\nflag1 = 3 &gt; 2\nflag2 = 2 &lt; 1\nflag3 = flag1 and flag2\nflag4 = flag1 or flag2\nflag5 = not (1 != 2)\nprint('flag0 =', flag0)    # flag0 = True\nprint('flag1 =', flag1)    # flag1 = True\nprint('flag2 =', flag2)    # flag2 = False\nprint('flag3 =', flag3)    # flag3 = False\nprint('flag4 =', flag4)    # flag4 = True\nprint('flag5 =', flag5)    # flag5 = False\n</code></pre> <p>\u8bf4\u660e\uff1a\u6bd4\u8f83\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5<code>flag0 = 1 == 1</code>\u5148\u505a<code>1 == 1</code>\u4ea7\u751f\u5e03\u5c14\u503c<code>True</code>\uff0c\u518d\u5c06\u8fd9\u4e2a\u503c\u8d4b\u503c\u7ed9\u53d8\u91cf<code>flag0</code>\u3002<code>print</code>\u51fd\u6570\u53ef\u4ee5\u8f93\u51fa\u591a\u4e2a\u503c\uff0c\u591a\u4e2a\u503c\u4e4b\u95f4\u53ef\u4ee5\u7528<code>,</code>\u8fdb\u884c\u5206\u9694\uff0c\u8f93\u51fa\u7684\u5185\u5bb9\u4e4b\u95f4\u9ed8\u8ba4\u4ee5\u7a7a\u683c\u5206\u5f00\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#_9","title":"\u7ec3\u4e60","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#1","title":"\u7ec3\u4e601\uff1a\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u4e3a\u6444\u6c0f\u6e29\u5ea6\u3002","text":"<p>\u63d0\u793a\uff1a\u534e\u6c0f\u6e29\u5ea6\u5230\u6444\u6c0f\u6e29\u5ea6\u7684\u8f6c\u6362\u516c\u5f0f\u4e3a\uff1a\\(C=(F - 32) \\div 1.8\\)\u3002</p> <p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>\"\"\"\n\u5c06\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u4e3a\u6444\u6c0f\u6e29\u5ea6\n\"\"\"\nf = float(input('\u8bf7\u8f93\u5165\u534e\u6c0f\u6e29\u5ea6: '))\nc = (f - 32) / 1.8\nprint('%.1f\u534e\u6c0f\u5ea6 = %.1f\u6444\u6c0f\u5ea6' % (f, c))\n</code></pre> <p>\u8bf4\u660e\uff1a\u5728\u4f7f\u7528<code>print</code>\u51fd\u6570\u8f93\u51fa\u65f6\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u5b57\u7b26\u4e32\u5185\u5bb9\u8fdb\u884c\u683c\u5f0f\u5316\u5904\u7406\uff0c\u4e0a\u9762<code>print</code>\u51fd\u6570\u4e2d\u7684\u5b57\u7b26\u4e32<code>%.1f</code>\u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u7a0d\u540e\u4f1a\u7531\u4e00\u4e2a<code>float</code>\u7c7b\u578b\u7684\u53d8\u91cf\u503c\u66ff\u6362\u6389\u5b83\u3002\u540c\u7406\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u6709<code>%d</code>\uff0c\u540e\u9762\u53ef\u4ee5\u7528\u4e00\u4e2a<code>int</code>\u7c7b\u578b\u7684\u53d8\u91cf\u503c\u66ff\u6362\u6389\u5b83\uff0c\u800c<code>%s</code>\u4f1a\u88ab\u5b57\u7b26\u4e32\u7684\u503c\u66ff\u6362\u6389\u3002\u9664\u4e86\u8fd9\u79cd\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d<code>{f:.1f}</code>\u548c<code>{c:.1f}</code>\u53ef\u4ee5\u5148\u770b\u6210\u662f<code>{f}</code>\u548c<code>{c}</code>\uff0c\u8868\u793a\u8f93\u51fa\u65f6\u4f1a\u7528\u53d8\u91cf<code>f</code>\u548c\u53d8\u91cf<code>c</code>\u7684\u503c\u66ff\u6362\u6389\u8fd9\u4e24\u4e2a\u5360\u4f4d\u7b26\uff0c\u540e\u9762\u7684<code>:.1f</code>\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u6d6e\u70b9\u6570\uff0c\u5c0f\u6570\u70b9\u540e\u4fdd\u75591\u4f4d\u6709\u6548\u6570\u5b57\u3002</p> <pre><code>print(f'{f:.1f}\u534e\u6c0f\u5ea6 = {c:.1f}\u6444\u6c0f\u5ea6')\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#2","title":"\u7ec3\u4e602\uff1a\u8f93\u5165\u5706\u7684\u534a\u5f84\u8ba1\u7b97\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>\"\"\"\n\u8f93\u5165\u534a\u5f84\u8ba1\u7b97\u5706\u7684\u5468\u957f\u548c\u9762\u79ef\n\"\"\"\nradius = float(input('\u8bf7\u8f93\u5165\u5706\u7684\u534a\u5f84: '))\nperimeter = 2 * 3.1416 * radius\narea = 3.1416 * radius * radius\nprint('\u5468\u957f: %.2f' % perimeter)\nprint('\u9762\u79ef: %.2f' % area)\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/#3","title":"\u7ec3\u4e603\uff1a\u8f93\u5165\u5e74\u4efd\u5224\u65ad\u662f\u4e0d\u662f\u95f0\u5e74\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>\"\"\"\n\u8f93\u5165\u5e74\u4efd \u5982\u679c\u662f\u95f0\u5e74\u8f93\u51faTrue \u5426\u5219\u8f93\u51faFalse\n\"\"\"\nyear = int(input('\u8bf7\u8f93\u5165\u5e74\u4efd: '))\n\nis_leap = year % 4 == 0 and year % 100 != 0 or \\\n          year % 400 == 0\nprint(is_leap)\n</code></pre> <p>\u8bf4\u660e\uff1a1. \u6bd4\u8f83\u8fd0\u7b97\u7b26\u4f1a\u4ea7\u751f\u5e03\u5c14\u503c\uff0c\u800c\u903b\u8f91\u8fd0\u7b97\u7b26<code>and</code>\u548c<code>or</code>\u4f1a\u5bf9\u8fd9\u4e9b\u5e03\u5c14\u503c\u8fdb\u884c\u7ec4\u5408\uff0c\u6700\u7ec8\u4e5f\u662f\u5f97\u5230\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u95f0\u5e74\u8f93\u51fa<code>True</code>\uff0c\u5e73\u5e74\u8f93\u51fa<code>False</code>\u30022. \u5982\u679c\u4ee3\u7801\u592a\u957f\u5199\u6210\u4e00\u884c\u4e0d\u4fbf\u4e8e\u9605\u8bfb\uff0c\u53ef\u4ee5\u4f7f\u7528<code>\\</code>\u5bf9\u4ee3\u7801\u8fdb\u884c\u6298\u884c\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/03.%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/","title":"03.\u5206\u652f\u7ed3\u6784","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/03.%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#_1","title":"\u5206\u652f\u7ed3\u6784","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/03.%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#_2","title":"\u5e94\u7528\u573a\u666f","text":"<p>\u8fc4\u4eca\u4e3a\u6b62\uff0c\u6211\u4eec\u5199\u7684Python\u4ee3\u7801\u90fd\u662f\u4e00\u6761\u4e00\u6761\u8bed\u53e5\u987a\u5e8f\u6267\u884c\uff0c\u8fd9\u79cd\u4ee3\u7801\u7ed3\u6784\u901a\u5e38\u79f0\u4e4b\u4e3a\u987a\u5e8f\u7ed3\u6784\u3002\u7136\u800c\u4ec5\u6709\u987a\u5e8f\u7ed3\u6784\u5e76\u4e0d\u80fd\u89e3\u51b3\u6240\u6709\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u6211\u4eec\u8bbe\u8ba1\u4e00\u4e2a\u6e38\u620f\uff0c\u6e38\u620f\u7b2c\u4e00\u5173\u7684\u901a\u5173\u6761\u4ef6\u662f\u73a9\u5bb6\u83b7\u5f971000\u5206\uff0c\u90a3\u4e48\u5728\u5b8c\u6210\u672c\u5c40\u6e38\u620f\u540e\uff0c\u6211\u4eec\u8981\u6839\u636e\u73a9\u5bb6\u5f97\u5230\u5206\u6570\u6765\u51b3\u5b9a\u7a76\u7adf\u662f\u8fdb\u5165\u7b2c\u4e8c\u5173\uff0c\u8fd8\u662f\u544a\u8bc9\u73a9\u5bb6\u201cGame Over\u201d\uff0c\u8fd9\u91cc\u5c31\u4f1a\u4ea7\u751f\u4e24\u4e2a\u5206\u652f\uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a\u5206\u652f\u53ea\u6709\u4e00\u4e2a\u4f1a\u88ab\u6267\u884c\u3002\u7c7b\u4f3c\u7684\u573a\u666f\u8fd8\u6709\u5f88\u591a\uff0c\u6211\u4eec\u5c06\u8fd9\u79cd\u7ed3\u6784\u79f0\u4e4b\u4e3a\u201c\u5206\u652f\u7ed3\u6784\u201d\u6216\u201c\u9009\u62e9\u7ed3\u6784\u201d\u3002\u7ed9\u5927\u5bb6\u4e00\u5206\u949f\u7684\u65f6\u95f4\uff0c\u4f60\u5e94\u8be5\u53ef\u4ee5\u60f3\u5230\u81f3\u5c115\u4e2a\u4ee5\u4e0a\u8fd9\u6837\u7684\u4f8b\u5b50\uff0c\u8d76\u7d27\u8bd5\u4e00\u8bd5\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/03.%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#if","title":"if\u8bed\u53e5\u7684\u4f7f\u7528","text":"<p>\u5728Python\u4e2d\uff0c\u8981\u6784\u9020\u5206\u652f\u7ed3\u6784\u53ef\u4ee5\u4f7f\u7528<code>if</code>\u3001<code>elif</code>\u548c<code>else</code>\u5173\u952e\u5b57\u3002\u6240\u8c13\u5173\u952e\u5b57\u5c31\u662f\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\uff0c\u50cf<code>if</code>\u548c<code>else</code>\u5c31\u662f\u4e13\u95e8\u7528\u4e8e\u6784\u9020\u5206\u652f\u7ed3\u6784\u7684\u5173\u952e\u5b57\uff0c\u5f88\u663e\u7136\u4f60\u4e0d\u80fd\u591f\u4f7f\u7528\u5b83\u4f5c\u4e3a\u53d8\u91cf\u540d\uff08\u4e8b\u5b9e\u4e0a\uff0c\u7528\u4f5c\u5176\u4ed6\u7684\u6807\u8bc6\u7b26\u4e5f\u662f\u4e0d\u53ef\u4ee5\uff09\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u6f14\u793a\u4e86\u5982\u4f55\u6784\u9020\u4e00\u4e2a\u5206\u652f\u7ed3\u6784\u3002</p> <pre><code>\"\"\"\n\u7528\u6237\u8eab\u4efd\u9a8c\u8bc1\n\"\"\"\nusername = input('\u8bf7\u8f93\u5165\u7528\u6237\u540d: ')\npassword = input('\u8bf7\u8f93\u5165\u53e3\u4ee4: ')\n\nif username == 'admin' and password == '123456':\n    print('\u8eab\u4efd\u9a8c\u8bc1\u6210\u529f!')\nelse:\n    print('\u8eab\u4efd\u9a8c\u8bc1\u5931\u8d25!')\n</code></pre> <p>\u9700\u8981\u8bf4\u660e\u7684\u662f\u548cC/C++\u3001Java\u7b49\u8bed\u8a00\u4e0d\u540c\uff0cPython\u4e2d\u6ca1\u6709\u7528\u82b1\u62ec\u53f7\u6765\u6784\u9020\u4ee3\u7801\u5757\u800c\u662f\u4f7f\u7528\u4e86\u7f29\u8fdb\u7684\u65b9\u5f0f\u6765\u8868\u793a\u4ee3\u7801\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u5982\u679c<code>if</code>\u6761\u4ef6\u6210\u7acb\u7684\u60c5\u51b5\u4e0b\u9700\u8981\u6267\u884c\u591a\u6761\u8bed\u53e5\uff0c\u53ea\u8981\u4fdd\u6301\u591a\u6761\u8bed\u53e5\u5177\u6709\u76f8\u540c\u7684\u7f29\u8fdb\u5c31\u53ef\u4ee5\u4e86\u3002\u6362\u53e5\u8bdd\u8bf4\u8fde\u7eed\u7684\u4ee3\u7801\u5982\u679c\u53c8\u4fdd\u6301\u4e86\u76f8\u540c\u7684\u7f29\u8fdb\u90a3\u4e48\u5b83\u4eec\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u6267\u884c\u7684\u6574\u4f53\u3002\u7f29\u8fdb\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u6570\u91cf\u7684\u7a7a\u683c\uff0c\u4f46\u901a\u5e38\u4f7f\u75284\u4e2a\u7a7a\u683c\uff0c\u5efa\u8bae\u5927\u5bb6\u4e0d\u8981\u4f7f\u7528\u5236\u8868\u952e\u6216\u8005\u8bbe\u7f6e\u4f60\u7684\u4ee3\u7801\u7f16\u8f91\u5de5\u5177\u81ea\u52a8\u5c06\u5236\u8868\u952e\u53d8\u62104\u4e2a\u7a7a\u683c\u3002</p> <p>\u5f53\u7136\u5982\u679c\u8981\u6784\u9020\u51fa\u66f4\u591a\u7684\u5206\u652f\uff0c\u53ef\u4ee5\u4f7f\u7528<code>if...elif...else...</code>\u7ed3\u6784\u6216\u8005\u5d4c\u5957\u7684<code>if...else...</code>\u7ed3\u6784\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5229\u7528\u591a\u5206\u652f\u7ed3\u6784\u5b9e\u73b0\u5206\u6bb5\u51fd\u6570\u6c42\u503c\u3002</p> \\[f(x)=\\begin{cases} 3x-5&amp;\\text{(x&gt;1)}\\\\x+2&amp;\\text{(-1}\\leq\\text{x}\\leq\\text{1)}\\\\5x+3&amp;\\text {(x&lt;-1)}\\end{cases}\\] <pre><code>\"\"\"\n\u5206\u6bb5\u51fd\u6570\u6c42\u503c\n\n        3x - 5  (x &gt; 1)\nf(x) =  x + 2   (-1 &lt;= x &lt;= 1)\n        5x + 3  (x &lt; -1)\n\"\"\"\n\nx = float(input('x = '))\nif x &gt; 1:\n    y = 3 * x - 5\nelif x &gt;= -1:\n    y = x + 2\nelse:\n    y = 5 * x + 3\nprint('f(%.2f) = %.2f' % (x, y))\n</code></pre> <p>\u5f53\u7136\u6839\u636e\u5b9e\u9645\u5f00\u53d1\u7684\u9700\u8981\uff0c\u5206\u652f\u7ed3\u6784\u662f\u53ef\u4ee5\u5d4c\u5957\u7684\uff0c\u4f8b\u5982\u5224\u65ad\u662f\u5426\u901a\u5173\u4ee5\u540e\u8fd8\u8981\u6839\u636e\u4f60\u83b7\u5f97\u7684\u5b9d\u7269\u6216\u8005\u9053\u5177\u7684\u6570\u91cf\u5bf9\u4f60\u7684\u8868\u73b0\u7ed9\u51fa\u7b49\u7ea7\uff08\u6bd4\u5982\u70b9\u4eae\u4e24\u9897\u6216\u4e09\u9897\u661f\u661f\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5728<code>if</code>\u7684\u5185\u90e8\u6784\u9020\u51fa\u4e00\u4e2a\u65b0\u7684\u5206\u652f\u7ed3\u6784\uff0c\u540c\u7406<code>elif</code>\u548c<code>else</code>\u4e2d\u4e5f\u53ef\u4ee5\u518d\u6784\u9020\u65b0\u7684\u5206\u652f\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5d4c\u5957\u7684\u5206\u652f\u7ed3\u6784\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0a\u9762\u7684\u4ee3\u7801\u4e5f\u53ef\u4ee5\u5199\u6210\u4e0b\u9762\u7684\u6837\u5b50\u3002</p> <pre><code>\"\"\"\n\u5206\u6bb5\u51fd\u6570\u6c42\u503c\n        3x - 5  (x &gt; 1)\nf(x) =  x + 2   (-1 &lt;= x &lt;= 1)\n        5x + 3  (x &lt; -1)\n\"\"\"\n\nx = float(input('x = '))\nif x &gt; 1:\n    y = 3 * x - 5\nelse:\n    if x &gt;= -1:\n        y = x + 2\n    else:\n        y = 5 * x + 3\nprint('f(%.2f) = %.2f' % (x, y))\n</code></pre> <p>\u8bf4\u660e\uff1a \u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u611f\u53d7\u4e00\u4e0b\u8fd9\u4e24\u79cd\u5199\u6cd5\u5230\u5e95\u662f\u54ea\u4e00\u79cd\u66f4\u597d\u3002\u5728\u4e4b\u524d\u6211\u4eec\u63d0\u5230\u7684Python\u4e4b\u7985\u4e2d\u6709\u8fd9\u4e48\u4e00\u53e5\u8bdd\u201cFlat is better than nested.\u201d\uff0c\u4e4b\u6240\u4ee5\u63d0\u5021\u4ee3\u7801\u201c\u6241\u5e73\u5316\u201d\u662f\u56e0\u4e3a\u5d4c\u5957\u7ed3\u6784\u7684\u5d4c\u5957\u5c42\u6b21\u591a\u4e86\u4e4b\u540e\u4f1a\u4e25\u91cd\u7684\u5f71\u54cd\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u6240\u4ee5\u80fd\u4f7f\u7528\u6241\u5e73\u5316\u7684\u7ed3\u6784\u65f6\u5c31\u4e0d\u8981\u4f7f\u7528\u5d4c\u5957\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/03.%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#_3","title":"\u7ec3\u4e60","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/03.%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#1","title":"\u7ec3\u4e601\uff1a\u82f1\u5236\u5355\u4f4d\u82f1\u5bf8\u4e0e\u516c\u5236\u5355\u4f4d\u5398\u7c73\u4e92\u6362\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>\"\"\"\n\u82f1\u5236\u5355\u4f4d\u82f1\u5bf8\u548c\u516c\u5236\u5355\u4f4d\u5398\u7c73\u4e92\u6362\n\"\"\"\nvalue = float(input('\u8bf7\u8f93\u5165\u957f\u5ea6: '))\nunit = input('\u8bf7\u8f93\u5165\u5355\u4f4d: ')\nif unit == 'in' or unit == '\u82f1\u5bf8':\n    print('%f\u82f1\u5bf8 = %f\u5398\u7c73' % (value, value * 2.54))\nelif unit == 'cm' or unit == '\u5398\u7c73':\n    print('%f\u5398\u7c73 = %f\u82f1\u5bf8' % (value, value / 2.54))\nelse:\n    print('\u8bf7\u8f93\u5165\u6709\u6548\u7684\u5355\u4f4d')\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/03.%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#2","title":"\u7ec3\u4e602\uff1a\u767e\u5206\u5236\u6210\u7ee9\u8f6c\u6362\u4e3a\u7b49\u7ea7\u5236\u6210\u7ee9\u3002","text":"<p>\u8981\u6c42\uff1a\u5982\u679c\u8f93\u5165\u7684\u6210\u7ee9\u572890\u5206\u4ee5\u4e0a\uff08\u542b90\u5206\uff09\u8f93\u51faA\uff1b80\u5206-90\u5206\uff08\u4e0d\u542b90\u5206\uff09\u8f93\u51faB\uff1b70\u5206-80\u5206\uff08\u4e0d\u542b80\u5206\uff09\u8f93\u51faC\uff1b60\u5206-70\u5206\uff08\u4e0d\u542b70\u5206\uff09\u8f93\u51faD\uff1b60\u5206\u4ee5\u4e0b\u8f93\u51faE\u3002</p> <p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>\"\"\"\n\u767e\u5206\u5236\u6210\u7ee9\u8f6c\u6362\u4e3a\u7b49\u7ea7\u5236\u6210\u7ee9\n\"\"\"\nscore = float(input('\u8bf7\u8f93\u5165\u6210\u7ee9: '))\nif score &gt;= 90:\n    grade = 'A'\nelif score &gt;= 80:\n    grade = 'B'\nelif score &gt;= 70:\n    grade = 'C'\nelif score &gt;= 60:\n    grade = 'D'\nelse:\n    grade = 'E'\nprint('\u5bf9\u5e94\u7684\u7b49\u7ea7\u662f:', grade)\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/03.%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#3","title":"\u7ec3\u4e603\uff1a\u8f93\u5165\u4e09\u6761\u8fb9\u957f\uff0c\u5982\u679c\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u5c31\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>\"\"\"\n\u5224\u65ad\u8f93\u5165\u7684\u8fb9\u957f\u80fd\u5426\u6784\u6210\u4e09\u89d2\u5f62\uff0c\u5982\u679c\u80fd\u5219\u8ba1\u7b97\u51fa\u4e09\u89d2\u5f62\u7684\u5468\u957f\u548c\u9762\u79ef\n\"\"\"\na = float(input('a = '))\nb = float(input('b = '))\nc = float(input('c = '))\nif a + b &gt; c and a + c &gt; b and b + c &gt; a:\n    print('\u5468\u957f: %f' % (a + b + c))\n    p = (a + b + c) / 2\n    area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n    print('\u9762\u79ef: %f' % (area))\nelse:\n    print('\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62')\n</code></pre> <p>\u8bf4\u660e\uff1a \u4e0a\u9762\u4f7f\u7528\u7684\u901a\u8fc7\u8fb9\u957f\u8ba1\u7b97\u4e09\u89d2\u5f62\u9762\u79ef\u7684\u516c\u5f0f\u53eb\u505a\u6d77\u4f26\u516c\u5f0f\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/04.%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/","title":"04.\u5faa\u73af\u7ed3\u6784","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/04.%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#_1","title":"\u5faa\u73af\u7ed3\u6784","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/04.%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#_2","title":"\u5e94\u7528\u573a\u666f","text":"<p>\u6211\u4eec\u5728\u5199\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u4f1a\u9047\u5230\u9700\u8981\u91cd\u590d\u6267\u884c\u67d0\u6761\u6216\u67d0\u4e9b\u6307\u4ee4\u7684\u573a\u666f\u3002\u4f8b\u5982\u7528\u7a0b\u5e8f\u63a7\u5236\u673a\u5668\u4eba\u8e22\u8db3\u7403\uff0c\u5982\u679c\u673a\u5668\u4eba\u6301\u7403\u800c\u4e14\u8fd8\u6ca1\u6709\u8fdb\u5165\u5c04\u95e8\u8303\u56f4\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u4e00\u76f4\u53d1\u51fa\u8ba9\u673a\u5668\u4eba\u5411\u7403\u95e8\u65b9\u5411\u79fb\u52a8\u7684\u6307\u4ee4\u3002\u5728\u8fd9\u4e2a\u573a\u666f\u4e2d\uff0c\u8ba9\u673a\u5668\u4eba\u5411\u7403\u95e8\u65b9\u5411\u79fb\u52a8\u5c31\u662f\u4e00\u4e2a\u9700\u8981\u91cd\u590d\u7684\u52a8\u4f5c\uff0c\u5f53\u7136\u8fd9\u91cc\u8fd8\u4f1a\u7528\u5230\u4e0a\u4e00\u8bfe\u8bb2\u7684\u5206\u652f\u7ed3\u6784\u6765\u5224\u65ad\u673a\u5668\u4eba\u662f\u5426\u6301\u7403\u4ee5\u53ca\u662f\u5426\u8fdb\u5165\u5c04\u95e8\u8303\u56f4\u3002\u518d\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5982\u679c\u8981\u5b9e\u73b0\u6bcf\u96941\u79d2\u4e2d\u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u4e00\u6b21\u201chello, world\u201d\u5e76\u6301\u7eed\u6253\u5370\u4e00\u4e2a\u5c0f\u65f6\uff0c\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u591f\u76f4\u63a5\u628a<code>print('hello, world')</code>\u8fd9\u53e5\u4ee3\u7801\u51993600\u904d\uff0c\u8fd9\u91cc\u540c\u6837\u9700\u8981\u5faa\u73af\u7ed3\u6784\u3002</p> <p>\u5faa\u73af\u7ed3\u6784\u5c31\u662f\u7a0b\u5e8f\u4e2d\u63a7\u5236\u67d0\u6761\u6216\u67d0\u4e9b\u6307\u4ee4\u91cd\u590d\u6267\u884c\u7684\u7ed3\u6784\u3002\u5728Python\u4e2d\u6784\u9020\u5faa\u73af\u7ed3\u6784\u6709\u4e24\u79cd\u505a\u6cd5\uff0c\u4e00\u79cd\u662f<code>for-in</code>\u5faa\u73af\uff0c\u4e00\u79cd\u662f<code>while</code>\u5faa\u73af\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/04.%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#for-in","title":"for-in\u5faa\u73af","text":"<p>\u5982\u679c\u660e\u786e\u7684\u77e5\u9053\u5faa\u73af\u6267\u884c\u7684\u6b21\u6570\u6216\u8005\u8981\u5bf9\u4e00\u4e2a\u5bb9\u5668\u8fdb\u884c\u8fed\u4ee3\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u63a8\u8350\u4f7f\u7528<code>for-in</code>\u5faa\u73af\uff0c\u4f8b\u5982\u4e0b\u9762\u4ee3\u7801\u4e2d\u8ba1\u7b971~100\u6c42\u548c\u7684\u7ed3\u679c\uff08\\(\\displaystyle \\sum \\limits_{n=1}^{100}n\\)\uff09\u3002 </p> <pre><code>\"\"\"\n\u7528for\u5faa\u73af\u5b9e\u73b01~100\u6c42\u548c\n\"\"\"\n\nsum = 0\nfor x in range(101):\n    sum += x\nprint(sum)\n</code></pre> <p>\u9700\u8981\u8bf4\u660e\u7684\u662f\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684<code>range(1, 101)</code>\u53ef\u4ee5\u7528\u6765\u6784\u9020\u4e00\u4e2a\u4ece1\u5230100\u7684\u8303\u56f4\uff0c\u5f53\u6211\u4eec\u628a\u8fd9\u6837\u4e00\u4e2a\u8303\u56f4\u653e\u5230<code>for-in</code>\u5faa\u73af\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u524d\u9762\u7684\u5faa\u73af\u53d8\u91cf<code>x</code>\u4f9d\u6b21\u53d6\u51fa\u4ece1\u5230100\u7684\u6574\u6570\u3002\u5f53\u7136\uff0c<code>range</code>\u7684\u7528\u6cd5\u975e\u5e38\u7075\u6d3b\uff0c\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <ul> <li><code>range(101)</code>\uff1a\u53ef\u4ee5\u7528\u6765\u4ea7\u751f0\u5230100\u8303\u56f4\u7684\u6574\u6570\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u53d6\u4e0d\u5230101\u3002</li> <li><code>range(1, 101)</code>\uff1a\u53ef\u4ee5\u7528\u6765\u4ea7\u751f1\u5230100\u8303\u56f4\u7684\u6574\u6570\uff0c\u76f8\u5f53\u4e8e\u524d\u9762\u662f\u95ed\u533a\u95f4\u540e\u9762\u662f\u5f00\u533a\u95f4\u3002</li> <li><code>range(1, 101, 2)</code>\uff1a\u53ef\u4ee5\u7528\u6765\u4ea7\u751f1\u5230100\u7684\u5947\u6570\uff0c\u5176\u4e2d2\u662f\u6b65\u957f\uff0c\u5373\u6bcf\u6b21\u6570\u503c\u9012\u589e\u7684\u503c\u3002</li> <li><code>range(100, 0, -2)</code>\uff1a\u53ef\u4ee5\u7528\u6765\u4ea7\u751f100\u52301\u7684\u5076\u6570\uff0c\u5176\u4e2d-2\u662f\u6b65\u957f\uff0c\u5373\u6bcf\u6b21\u6570\u5b57\u9012\u51cf\u7684\u503c\u3002</li> </ul> <p>\u77e5\u9053\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u5b9e\u73b01~100\u4e4b\u95f4\u7684\u5076\u6570\u6c42\u548c\u3002</p> <pre><code>\"\"\"\n\u7528for\u5faa\u73af\u5b9e\u73b01~100\u4e4b\u95f4\u7684\u5076\u6570\u6c42\u548c\n\"\"\"\n\nsum = 0\nfor x in range(2, 101, 2):\n    sum += x\nprint(sum)\n</code></pre> <p>\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728\u5faa\u73af\u4e2d\u4f7f\u7528\u5206\u652f\u7ed3\u6784\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>\"\"\"\n\u7528for\u5faa\u73af\u5b9e\u73b01~100\u4e4b\u95f4\u7684\u5076\u6570\u6c42\u548c\n\"\"\"\n\nsum = 0\nfor x in range(1, 101):\n    if x % 2 == 0:\n        sum += x\nprint(sum)\n</code></pre> <p>\u8bf4\u660e\uff1a\u76f8\u8f83\u4e8e\u4e0a\u9762\u76f4\u63a5\u8df3\u8fc7\u5947\u6570\u7684\u505a\u6cd5\uff0c\u4e0b\u9762\u8fd9\u79cd\u505a\u6cd5\u5f88\u660e\u663e\u5e76\u4e0d\u662f\u5f88\u597d\u7684\u9009\u62e9\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/04.%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#while","title":"while\u5faa\u73af","text":"<p>\u5982\u679c\u8981\u6784\u9020\u4e0d\u77e5\u9053\u5177\u4f53\u5faa\u73af\u6b21\u6570\u7684\u5faa\u73af\u7ed3\u6784\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528<code>while</code>\u5faa\u73af\u3002<code>while</code>\u5faa\u73af\u901a\u8fc7\u4e00\u4e2a\u80fd\u591f\u4ea7\u751f\u6216\u8f6c\u6362\u51fa<code>bool</code>\u503c\u7684\u8868\u8fbe\u5f0f\u6765\u63a7\u5236\u5faa\u73af\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a<code>True</code>\u5219\u7ee7\u7eed\u5faa\u73af\uff1b\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a<code>False</code>\u5219\u7ed3\u675f\u5faa\u73af\u3002</p> <p>\u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u201c\u731c\u6570\u5b57\u201d\u7684\u5c0f\u6e38\u620f\u6765\u770b\u770b\u5982\u4f55\u4f7f\u7528<code>while</code>\u5faa\u73af\u3002\u731c\u6570\u5b57\u6e38\u620f\u7684\u89c4\u5219\u662f\uff1a\u8ba1\u7b97\u673a\u51fa\u4e00\u4e2a1\u5230100\u4e4b\u95f4\u7684\u968f\u673a\u6570\uff0c\u73a9\u5bb6\u8f93\u5165\u81ea\u5df1\u731c\u7684\u6570\u5b57\uff0c\u8ba1\u7b97\u673a\u7ed9\u51fa\u5bf9\u5e94\u7684\u63d0\u793a\u4fe1\u606f\uff08\u5927\u4e00\u70b9\u3001\u5c0f\u4e00\u70b9\u6216\u731c\u5bf9\u4e86\uff09\uff0c\u5982\u679c\u73a9\u5bb6\u731c\u4e2d\u4e86\u6570\u5b57\uff0c\u8ba1\u7b97\u673a\u63d0\u793a\u7528\u6237\u4e00\u5171\u731c\u4e86\u591a\u5c11\u6b21\uff0c\u6e38\u620f\u7ed3\u675f\uff0c\u5426\u5219\u6e38\u620f\u7ee7\u7eed\u3002</p> <pre><code>\"\"\"\n\u731c\u6570\u5b57\u6e38\u620f\n\"\"\"\nimport random\n\nanswer = random.randint(1, 100)\ncounter = 0\nwhile True:\n    counter += 1\n    number = int(input('\u8bf7\u8f93\u5165: '))\n    if number &lt; answer:\n        print('\u5927\u4e00\u70b9')\n    elif number &gt; answer:\n        print('\u5c0f\u4e00\u70b9')\n    else:\n        print('\u606d\u559c\u4f60\u731c\u5bf9\u4e86!')\n        break\nprint('\u4f60\u603b\u5171\u731c\u4e86%d\u6b21' % counter)\nif counter &gt; 7:\n    print('\u4f60\u7684\u667a\u5546\u4f59\u989d\u660e\u663e\u4e0d\u8db3')\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86<code>break</code>\u5173\u952e\u5b57\u6765\u63d0\u524d\u7ec8\u6b62\u5faa\u73af\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f<code>break</code>\u53ea\u80fd\u7ec8\u6b62\u5b83\u6240\u5728\u7684\u90a3\u4e2a\u5faa\u73af\uff0c\u8fd9\u4e00\u70b9\u5728\u4f7f\u7528\u5d4c\u5957\u7684\u5faa\u73af\u7ed3\u6784\uff08\u4e0b\u9762\u4f1a\u8bb2\u5230\uff09\u9700\u8981\u5f15\u8d77\u6ce8\u610f\u3002\u9664\u4e86<code>break</code>\u4e4b\u5916\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u5173\u952e\u5b57\u662f<code>continue</code>\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u653e\u5f03\u672c\u6b21\u5faa\u73af\u540e\u7eed\u7684\u4ee3\u7801\u76f4\u63a5\u8ba9\u5faa\u73af\u8fdb\u5165\u4e0b\u4e00\u8f6e\u3002</p> <p>\u548c\u5206\u652f\u7ed3\u6784\u4e00\u6837\uff0c\u5faa\u73af\u7ed3\u6784\u4e5f\u662f\u53ef\u4ee5\u5d4c\u5957\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u5faa\u73af\u4e2d\u8fd8\u53ef\u4ee5\u6784\u9020\u5faa\u73af\u7ed3\u6784\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u5d4c\u5957\u7684\u5faa\u73af\u6765\u8f93\u51fa\u4e00\u4e2a\u4e5d\u4e5d\u4e58\u6cd5\u8868\u3002</p> <pre><code>\"\"\"\n\u8f93\u51fa\u4e58\u6cd5\u53e3\u8bc0\u8868(\u4e5d\u4e5d\u8868)\n\"\"\"\n\nfor i in range(1, 10):\n    for j in range(1, i + 1):\n        print('%d*%d=%d' % (i, j, i * j), end='\\t')\n    print()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/04.%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#_3","title":"\u7ec3\u4e60","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/04.%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#1","title":"\u7ec3\u4e601\uff1a\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570\u5224\u65ad\u662f\u4e0d\u662f\u7d20\u6570\u3002","text":"<p>\u63d0\u793a\uff1a\u7d20\u6570\u6307\u7684\u662f\u53ea\u80fd\u88ab1\u548c\u81ea\u8eab\u6574\u9664\u7684\u5927\u4e8e1\u7684\u6574\u6570\u3002</p> <p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>\"\"\"\n\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u7d20\u6570\n\"\"\"\nfrom math import sqrt\n\nnum = int(input('\u8bf7\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570: '))\nend = int(sqrt(num))\nis_prime = True\nfor x in range(2, end + 1):\n    if num % x == 0:\n        is_prime = False\n        break\nif is_prime and num != 1:\n    print('%d\u662f\u7d20\u6570' % num)\nelse:\n    print('%d\u4e0d\u662f\u7d20\u6570' % num)\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/04.%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#2","title":"\u7ec3\u4e602\uff1a\u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570\uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\u3002","text":"<p>\u63d0\u793a\uff1a\u4e24\u4e2a\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u662f\u4e24\u4e2a\u6570\u7684\u516c\u5171\u56e0\u5b50\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\u6570\uff1b\u4e24\u4e2a\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u5219\u662f\u80fd\u591f\u540c\u65f6\u88ab\u4e24\u4e2a\u6570\u6574\u9664\u7684\u6700\u5c0f\u7684\u90a3\u4e2a\u6570\u3002</p> <p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>\"\"\"\n\u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570\u8ba1\u7b97\u5b83\u4eec\u7684\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\n\"\"\"\n\nx = int(input('x = '))\ny = int(input('y = '))\n\nif x &gt; y:\n    x, y = y, x\n\nfor factor in range(x, 0, -1):\n    if x % factor == 0 and y % factor == 0:\n        print('%d\u548c%d\u7684\u6700\u5927\u516c\u7ea6\u6570\u662f%d' % (x, y, factor))\n        print('%d\u548c%d\u7684\u6700\u5c0f\u516c\u500d\u6570\u662f%d' % (x, y, x * y // factor))\n        break\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/04.%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#3","title":"\u7ec3\u4e603\uff1a\u6253\u5370\u5982\u4e0b\u6240\u793a\u7684\u4e09\u89d2\u5f62\u56fe\u6848\u3002","text":"<pre><code>*\n**\n***\n****\n*****\n</code></pre> <pre><code>    *\n   **\n  ***\n ****\n*****\n</code></pre> <pre><code>    *\n   ***\n  *****\n *******\n*********\n</code></pre> <p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>\"\"\"\n\u6253\u5370\u4e09\u89d2\u5f62\u56fe\u6848\n\"\"\"\n\nrow = int(input('\u8bf7\u8f93\u5165\u884c\u6570: '))\nfor i in range(row):\n    for _ in range(i + 1):\n        print('*', end='')\n    print()\n\n\nfor i in range(row):\n    for j in range(row):\n        if j &lt; row - i - 1:\n            print(' ', end='')\n        else:\n            print('*', end='')\n    print()\n\nfor i in range(row):\n    for _ in range(row - i - 1):\n        print(' ', end='')\n    for _ in range(2 * i + 1):\n        print('*', end='')\n    print()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/05.%E6%9E%84%E9%80%A0%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91/","title":"05.\u6784\u9020\u7a0b\u5e8f\u903b\u8f91","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/05.%E6%9E%84%E9%80%A0%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91/#_1","title":"\u6784\u9020\u7a0b\u5e8f\u903b\u8f91","text":"<p>\u5b66\u5b8c\u524d\u9762\u7684\u51e0\u4e2a\u7ae0\u8282\u540e\uff0c\u6211\u89c9\u5f97\u6709\u5fc5\u8981\u5728\u8fd9\u91cc\u5e26\u5927\u5bb6\u505a\u4e00\u4e9b\u7ec3\u4e60\u6765\u5de9\u56fa\u4e4b\u524d\u6240\u5b66\u7684\u77e5\u8bc6\uff0c\u867d\u7136\u8fc4\u4eca\u4e3a\u6b62\u6211\u4eec\u5b66\u4e60\u7684\u5185\u5bb9\u53ea\u662fPython\u7684\u51b0\u5c71\u4e00\u89d2\uff0c\u4f46\u662f\u8fd9\u4e9b\u5185\u5bb9\u5df2\u7ecf\u8db3\u591f\u6211\u4eec\u6765\u6784\u5efa\u7a0b\u5e8f\u4e2d\u7684\u903b\u8f91\u3002\u5bf9\u4e8e\u7f16\u7a0b\u8bed\u8a00\u7684\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u5728\u5b66\u4e60\u4e86Python\u7684\u6838\u5fc3\u8bed\u8a00\u5143\u7d20\uff08\u53d8\u91cf\u3001\u7c7b\u578b\u3001\u8fd0\u7b97\u7b26\u3001\u8868\u8fbe\u5f0f\u3001\u5206\u652f\u7ed3\u6784\u3001\u5faa\u73af\u7ed3\u6784\u7b49\uff09\u4e4b\u540e\uff0c\u5fc5\u987b\u505a\u7684\u4e00\u4ef6\u4e8b\u60c5\u5c31\u662f\u5c1d\u8bd5\u7528\u6240\u5b66\u77e5\u8bc6\u53bb\u89e3\u51b3\u73b0\u5b9e\u4e2d\u7684\u95ee\u9898\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u953b\u70bc\u81ea\u5df1\u628a\u7528\u4eba\u7c7b\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u7684\u7b97\u6cd5\uff08\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u548c\u6b65\u9aa4\uff09\u7ffb\u8bd1\u6210Python\u4ee3\u7801\u7684\u80fd\u529b\uff0c\u800c\u8fd9\u4ef6\u4e8b\u60c5\u5fc5\u987b\u901a\u8fc7\u5927\u91cf\u7684\u7ec3\u4e60\u624d\u80fd\u8fbe\u6210\u3002</p> <p>\u6211\u4eec\u5728\u672c\u7ae0\u4e3a\u5927\u5bb6\u6574\u7406\u4e86\u4e00\u4e9b\u7ecf\u5178\u7684\u6848\u4f8b\u548c\u4e60\u9898\uff0c\u5e0c\u671b\u901a\u8fc7\u8fd9\u4e9b\u4f8b\u5b50\uff0c\u4e00\u65b9\u9762\u5e2e\u52a9\u5927\u5bb6\u5de9\u56fa\u4e4b\u524d\u6240\u5b66\u7684Python\u77e5\u8bc6\uff0c\u53e6\u4e00\u65b9\u9762\u5e2e\u52a9\u5927\u5bb6\u4e86\u89e3\u5982\u4f55\u5efa\u7acb\u7a0b\u5e8f\u4e2d\u7684\u903b\u8f91\u4ee5\u53ca\u5982\u4f55\u8fd0\u7528\u4e00\u4e9b\u7b80\u5355\u7684\u7b97\u6cd5\u89e3\u51b3\u73b0\u5b9e\u4e2d\u7684\u95ee\u9898\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/05.%E6%9E%84%E9%80%A0%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91/#_2","title":"\u7ecf\u5178\u7684\u4f8b\u5b50","text":"<ol> <li> <p>\u5bfb\u627e\u6c34\u4ed9\u82b1\u6570\u3002</p> <p>\u8bf4\u660e\uff1a\u6c34\u4ed9\u82b1\u6570\u4e5f\u88ab\u79f0\u4e3a\u8d85\u5b8c\u5168\u6570\u5b57\u3001\u4e0d\u53d8\u6570\u3001\u81ea\u604b\u6570\u3001\u81ea\u5e42\u6570\u3001\u963f\u59c6\u65af\u7279\u6717\u6570\uff0c\u5b83\u662f\u4e00\u4e2a3\u4f4d\u6570\uff0c\u8be5\u6570\u5b57\u6bcf\u4e2a\u4f4d\u4e0a\u6570\u5b57\u7684\u7acb\u65b9\u4e4b\u548c\u6b63\u597d\u7b49\u4e8e\u5b83\u672c\u8eab\uff0c\u4f8b\u5982\uff1a\\(1^3 + 5^3+ 3^3=153\\)\u3002</p> <pre><code>\"\"\"\n\u627e\u51fa\u6240\u6709\u6c34\u4ed9\u82b1\u6570\n\"\"\"\n\nfor num in range(100, 1000):\n    low = num % 10\n    mid = num // 10 % 10\n    high = num // 100\n    if num == low ** 3 + mid ** 3 + high ** 3:\n        print(num)\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u6574\u9664\u548c\u6c42\u6a21\u8fd0\u7b97\u5206\u522b\u627e\u51fa\u4e86\u4e00\u4e2a\u4e09\u4f4d\u6570\u7684\u4e2a\u4f4d\u3001\u5341\u4f4d\u548c\u767e\u4f4d\uff0c\u8fd9\u79cd\u5c0f\u6280\u5de7\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u8fd8\u662f\u5e38\u7528\u7684\u3002\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u5c06\u4e00\u4e2a\u6b63\u6574\u6570\u53cd\u8f6c\uff0c\u4f8b\u5982\uff1a\u5c0612345\u53d8\u621054321\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>\"\"\"\n\u6b63\u6574\u6570\u7684\u53cd\u8f6c\n\"\"\"\n\nnum = int(input('num = '))\nreversed_num = 0\nwhile num &gt; 0:\n    reversed_num = reversed_num * 10 + num % 10\n    num //= 10\nprint(reversed_num)\n</code></pre> </li> <li> <p>\u767e\u94b1\u767e\u9e21\u95ee\u9898\u3002</p> <p>\u8bf4\u660e\uff1a\u767e\u94b1\u767e\u9e21\u662f\u6211\u56fd\u53e4\u4ee3\u6570\u5b66\u5bb6\u5f20\u4e18\u5efa\u5728\u300a\u7b97\u7ecf\u300b\u4e00\u4e66\u4e2d\u63d0\u51fa\u7684\u6570\u5b66\u95ee\u9898\uff1a\u9e21\u7fc1\u4e00\u503c\u94b1\u4e94\uff0c\u9e21\u6bcd\u4e00\u503c\u94b1\u4e09\uff0c\u9e21\u96cf\u4e09\u503c\u94b1\u4e00\u3002\u767e\u94b1\u4e70\u767e\u9e21\uff0c\u95ee\u9e21\u7fc1\u3001\u9e21\u6bcd\u3001\u9e21\u96cf\u5404\u51e0\u4f55\uff1f\u7ffb\u8bd1\u6210\u73b0\u4ee3\u6587\u662f\uff1a\u516c\u9e215\u5143\u4e00\u53ea\uff0c\u6bcd\u9e213\u5143\u4e00\u53ea\uff0c\u5c0f\u9e211\u5143\u4e09\u53ea\uff0c\u7528100\u5757\u94b1\u4e70\u4e00\u767e\u53ea\u9e21\uff0c\u95ee\u516c\u9e21\u3001\u6bcd\u9e21\u3001\u5c0f\u9e21\u5404\u6709\u591a\u5c11\u53ea\uff1f</p> <pre><code>\"\"\"\n\u300a\u767e\u94b1\u767e\u9e21\u300b\u95ee\u9898\n\"\"\"\n\nfor x in range(0, 20):\n    for y in range(0, 33):\n        z = 100 - x - y\n        if 5 * x + 3 * y + z / 3 == 100:\n            print('\u516c\u9e21: %d\u53ea, \u6bcd\u9e21: %d\u53ea, \u5c0f\u9e21: %d\u53ea' % (x, y, z))\n</code></pre> <p>\u4e0a\u9762\u4f7f\u7528\u7684\u65b9\u6cd5\u53eb\u505a\u7a77\u4e3e\u6cd5\uff0c\u4e5f\u79f0\u4e3a\u66b4\u529b\u641c\u7d22\u6cd5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u901a\u8fc7\u4e00\u9879\u4e00\u9879\u7684\u5217\u4e3e\u5907\u9009\u89e3\u51b3\u65b9\u6848\u4e2d\u6240\u6709\u53ef\u80fd\u7684\u5019\u9009\u9879\u5e76\u68c0\u67e5\u6bcf\u4e2a\u5019\u9009\u9879\u662f\u5426\u7b26\u5408\u95ee\u9898\u7684\u63cf\u8ff0\uff0c\u6700\u7ec8\u5f97\u5230\u95ee\u9898\u7684\u89e3\u3002\u8fd9\u79cd\u65b9\u6cd5\u770b\u8d77\u6765\u6bd4\u8f83\u7b28\u62d9\uff0c\u4f46\u5bf9\u4e8e\u8fd0\u7b97\u80fd\u529b\u975e\u5e38\u5f3a\u5927\u7684\u8ba1\u7b97\u673a\u6765\u8bf4\uff0c\u901a\u5e38\u90fd\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u751a\u81f3\u662f\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u800c\u4e14\u95ee\u9898\u7684\u89e3\u5982\u679c\u5b58\u5728\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e00\u5b9a\u80fd\u591f\u627e\u5230\u5b83\u3002</p> </li> <li> <p>CRAPS\u8d4c\u535a\u6e38\u620f\u3002</p> <p>\u8bf4\u660e\uff1aCRAPS\u53c8\u79f0\u82b1\u65d7\u9ab0\uff0c\u662f\u7f8e\u56fd\u62c9\u65af\u7ef4\u52a0\u65af\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u4e00\u79cd\u7684\u684c\u4e0a\u8d4c\u535a\u6e38\u620f\u3002\u8be5\u6e38\u620f\u4f7f\u7528\u4e24\u7c92\u9ab0\u5b50\uff0c\u73a9\u5bb6\u901a\u8fc7\u6447\u4e24\u7c92\u9ab0\u5b50\u83b7\u5f97\u70b9\u6570\u8fdb\u884c\u6e38\u620f\u3002\u7b80\u5355\u7684\u89c4\u5219\u662f\uff1a\u73a9\u5bb6\u7b2c\u4e00\u6b21\u6447\u9ab0\u5b50\u5982\u679c\u6447\u51fa\u4e867\u70b9\u621611\u70b9\uff0c\u73a9\u5bb6\u80dc\uff1b\u73a9\u5bb6\u7b2c\u4e00\u6b21\u5982\u679c\u6447\u51fa2\u70b9\u30013\u70b9\u621612\u70b9\uff0c\u5e84\u5bb6\u80dc\uff1b\u5176\u4ed6\u70b9\u6570\u73a9\u5bb6\u7ee7\u7eed\u6447\u9ab0\u5b50\uff0c\u5982\u679c\u73a9\u5bb6\u6447\u51fa\u4e867\u70b9\uff0c\u5e84\u5bb6\u80dc\uff1b\u5982\u679c\u73a9\u5bb6\u6447\u51fa\u4e86\u7b2c\u4e00\u6b21\u6447\u7684\u70b9\u6570\uff0c\u73a9\u5bb6\u80dc\uff1b\u5176\u4ed6\u70b9\u6570\uff0c\u73a9\u5bb6\u7ee7\u7eed\u8981\u9ab0\u5b50\uff0c\u76f4\u5230\u5206\u51fa\u80dc\u8d1f\u3002</p> <pre><code>\"\"\"\nCraps\u8d4c\u535a\u6e38\u620f\n\u6211\u4eec\u8bbe\u5b9a\u73a9\u5bb6\u5f00\u59cb\u6e38\u620f\u65f6\u67091000\u5143\u7684\u8d4c\u6ce8\n\u6e38\u620f\u7ed3\u675f\u7684\u6761\u4ef6\u662f\u73a9\u5bb6\u8f93\u5149\u6240\u6709\u7684\u8d4c\u6ce8\n\"\"\"\nfrom random import randint\n\nmoney = 1000\nwhile money &gt; 0:\n    print('\u4f60\u7684\u603b\u8d44\u4ea7\u4e3a:', money)\n    needs_go_on = False\n    while True:\n        debt = int(input('\u8bf7\u4e0b\u6ce8: '))\n        if 0 &lt; debt &lt;= money:\n            break\n    first = randint(1, 6) + randint(1, 6)\n    print('\u73a9\u5bb6\u6447\u51fa\u4e86%d\u70b9' % first)\n    if first == 7 or first == 11:\n        print('\u73a9\u5bb6\u80dc!')\n        money += debt\n    elif first == 2 or first == 3 or first == 12:\n        print('\u5e84\u5bb6\u80dc!')\n        money -= debt\n    else:\n        needs_go_on = True\n    while needs_go_on:\n        needs_go_on = False\n        current = randint(1, 6) + randint(1, 6)\n        print('\u73a9\u5bb6\u6447\u51fa\u4e86%d\u70b9' % current)\n        if current == 7:\n            print('\u5e84\u5bb6\u80dc')\n            money -= debt\n        elif current == first:\n            print('\u73a9\u5bb6\u80dc')\n            money += debt\n        else:\n            needs_go_on = True\nprint('\u4f60\u7834\u4ea7\u4e86, \u6e38\u620f\u7ed3\u675f!')\n</code></pre> </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/05.%E6%9E%84%E9%80%A0%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91/#_3","title":"\u6709\u7528\u7684\u7ec3\u4e60","text":"<ol> <li> <p>\u751f\u6210\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u524d20\u4e2a\u6570\u3002</p> <p>\u8bf4\u660e\uff1a\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff08Fibonacci sequence\uff09\uff0c\u53c8\u79f0\u9ec4\u91d1\u5206\u5272\u6570\u5217\uff0c\u662f\u610f\u5927\u5229\u6570\u5b66\u5bb6\u83b1\u6602\u7eb3\u591a\u00b7\u6590\u6ce2\u90a3\u5951\uff08Leonardoda Fibonacci\uff09\u5728\u300a\u8ba1\u7b97\u4e4b\u4e66\u300b\u4e2d\u63d0\u51fa\u4e00\u4e2a\u5728\u7406\u60f3\u5047\u8bbe\u6761\u4ef6\u4e0b\u5154\u5b50\u6210\u957f\u7387\u7684\u95ee\u9898\u800c\u5f15\u5165\u7684\u6570\u5217\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6570\u5217\u4e5f\u88ab\u620f\u79f0\u4e3a\"\u5154\u5b50\u6570\u5217\"\u3002\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u7279\u70b9\u662f\u6570\u5217\u7684\u524d\u4e24\u4e2a\u6570\u90fd\u662f1\uff0c\u4ece\u7b2c\u4e09\u4e2a\u6570\u5f00\u59cb\uff0c\u6bcf\u4e2a\u6570\u90fd\u662f\u5b83\u524d\u9762\u4e24\u4e2a\u6570\u7684\u548c\uff0c\u5f62\u5982\uff1a1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...\u3002\u6590\u6ce2\u90a3\u5951\u6570\u5217\u5728\u73b0\u4ee3\u7269\u7406\u3001\u51c6\u6676\u4f53\u7ed3\u6784\u3001\u5316\u5b66\u7b49\u9886\u57df\u90fd\u6709\u76f4\u63a5\u7684\u5e94\u7528\u3002</p> </li> <li> <p>\u627e\u51fa10000\u4ee5\u5185\u7684\u5b8c\u7f8e\u6570\u3002</p> <p>\u8bf4\u660e\uff1a\u5b8c\u7f8e\u6570\u53c8\u79f0\u4e3a\u5b8c\u5168\u6570\u6216\u5b8c\u5907\u6570\uff0c\u5b83\u7684\u6240\u6709\u7684\u771f\u56e0\u5b50\uff08\u5373\u9664\u4e86\u81ea\u8eab\u4ee5\u5916\u7684\u56e0\u5b50\uff09\u7684\u548c\uff08\u5373\u56e0\u5b50\u51fd\u6570\uff09\u6070\u597d\u7b49\u4e8e\u5b83\u672c\u8eab\u3002\u4f8b\u5982\uff1a6\uff08\\(6=1+2+3\\)\uff09\u548c28\uff08\\(28=1+2+4+7+14\\)\uff09\u5c31\u662f\u5b8c\u7f8e\u6570\u3002\u5b8c\u7f8e\u6570\u6709\u5f88\u591a\u795e\u5947\u7684\u7279\u6027\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u3002</p> </li> <li> <p>\u8f93\u51fa100\u4ee5\u5185\u6240\u6709\u7684\u7d20\u6570\u3002</p> <p>\u8bf4\u660e\uff1a\u7d20\u6570\u6307\u7684\u662f\u53ea\u80fd\u88ab1\u548c\u81ea\u8eab\u6574\u9664\u7684\u6b63\u6574\u6570\uff08\u4e0d\u5305\u62ec1\uff09\u3002</p> </li> </ol> <p>\u4e0a\u9762\u7ec3\u4e60\u7684\u53c2\u8003\u7b54\u6848\u5728\u672c\u7ae0\u5bf9\u5e94\u7684\u4ee3\u7801\u76ee\u5f55\u4e2d\uff0c\u5982\u679c\u9700\u8981\u5e2e\u52a9\u8bf7\u8bfb\u8005\u81ea\u884c\u67e5\u770b\u53c2\u8003\u7b54\u6848\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/06.%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/","title":"06.\u51fd\u6570\u548c\u6a21\u5757\u7684\u4f7f\u7528","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/06.%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#_1","title":"\u51fd\u6570\u548c\u6a21\u5757\u7684\u4f7f\u7528","text":"<p>\u5728\u8bb2\u89e3\u672c\u7ae0\u8282\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u7814\u7a76\u4e00\u9053\u6570\u5b66\u9898\uff0c\u8bf7\u8bf4\u51fa\u4e0b\u9762\u7684\u65b9\u7a0b\u6709\u591a\u5c11\u7ec4\u6b63\u6574\u6570\u89e3\u3002</p> \\[x_1 + x_2 + x_3 + x_4 = 8\\] <p>\u4e8b\u5b9e\u4e0a\uff0c\u4e0a\u9762\u7684\u95ee\u9898\u7b49\u540c\u4e8e\u5c068\u4e2a\u82f9\u679c\u5206\u6210\u56db\u7ec4\u6bcf\u7ec4\u81f3\u5c11\u4e00\u4e2a\u82f9\u679c\u6709\u591a\u5c11\u79cd\u65b9\u6848\u3002\u60f3\u5230\u8fd9\u4e00\u70b9\u95ee\u9898\u7684\u7b54\u6848\u5c31\u547c\u4e4b\u6b32\u51fa\u4e86\u3002</p> \\[C_M^N =\\frac{M!}{N!(M-N)!}, \\text{(M=7, N=3)} \\] <p>\u53ef\u4ee5\u7528Python\u7684\u7a0b\u5e8f\u6765\u8ba1\u7b97\u51fa\u8fd9\u4e2a\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>\"\"\"\n\u8f93\u5165M\u548cN\u8ba1\u7b97C(M,N)\n\"\"\"\nm = int(input('m = '))\nn = int(input('n = '))\nfm = 1\nfor num in range(1, m + 1):\n    fm *= num\nfn = 1\nfor num in range(1, n + 1):\n    fn *= num\nfm_n = 1\nfor num in range(1, m - n + 1):\n    fm_n *= num\nprint(fm // fn // fm_n)\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/06.%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#_2","title":"\u51fd\u6570\u7684\u4f5c\u7528","text":"<p>\u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u6ce8\u610f\u5230\uff0c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u505a\u4e863\u6b21\u6c42\u9636\u4e58\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u5b9e\u9645\u4e0a\u5c31\u662f\u91cd\u590d\u4ee3\u7801\u3002\u7f16\u7a0b\u5927\u5e08Martin Fowler\u5148\u751f\u66fe\u7ecf\u8bf4\u8fc7\uff1a\u201c\u4ee3\u7801\u6709\u5f88\u591a\u79cd\u574f\u5473\u9053\uff0c\u91cd\u590d\u662f\u6700\u574f\u7684\u4e00\u79cd\uff01\u201d\uff0c\u8981\u5199\u51fa\u9ad8\u8d28\u91cf\u7684\u4ee3\u7801\u9996\u5148\u8981\u89e3\u51b3\u7684\u5c31\u662f\u91cd\u590d\u4ee3\u7801\u7684\u95ee\u9898\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684\u4ee3\u7801\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8ba1\u7b97\u9636\u4e58\u7684\u529f\u80fd\u5c01\u88c5\u5230\u4e00\u4e2a\u79f0\u4e4b\u4e3a\u201c\u51fd\u6570\u201d\u7684\u529f\u80fd\u6a21\u5757\u4e2d\uff0c\u5728\u9700\u8981\u8ba1\u7b97\u9636\u4e58\u7684\u5730\u65b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u201c\u8c03\u7528\u201d\u8fd9\u4e2a\u201c\u51fd\u6570\u201d\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/06.%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#_3","title":"\u5b9a\u4e49\u51fd\u6570","text":"<p>\u5728Python\u4e2d\u53ef\u4ee5\u4f7f\u7528<code>def</code>\u5173\u952e\u5b57\u6765\u5b9a\u4e49\u51fd\u6570\uff0c\u548c\u53d8\u91cf\u4e00\u6837\u6bcf\u4e2a\u51fd\u6570\u4e5f\u6709\u4e00\u4e2a\u54cd\u4eae\u7684\u540d\u5b57\uff0c\u800c\u4e14\u547d\u540d\u89c4\u5219\u8ddf\u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219\u662f\u4e00\u81f4\u7684\u3002\u5728\u51fd\u6570\u540d\u540e\u9762\u7684\u5706\u62ec\u53f7\u4e2d\u53ef\u4ee5\u653e\u7f6e\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u53c2\u6570\uff0c\u8fd9\u4e00\u70b9\u548c\u6570\u5b66\u4e0a\u7684\u51fd\u6570\u975e\u5e38\u76f8\u4f3c\uff0c\u7a0b\u5e8f\u4e2d\u51fd\u6570\u7684\u53c2\u6570\u5c31\u76f8\u5f53\u4e8e\u662f\u6570\u5b66\u4e0a\u8bf4\u7684\u51fd\u6570\u7684\u81ea\u53d8\u91cf\uff0c\u800c\u51fd\u6570\u6267\u884c\u5b8c\u6210\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>return</code>\u5173\u952e\u5b57\u6765\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u8fd9\u76f8\u5f53\u4e8e\u6570\u5b66\u4e0a\u8bf4\u7684\u51fd\u6570\u7684\u56e0\u53d8\u91cf\u3002</p> <p>\u5728\u4e86\u89e3\u4e86\u5982\u4f55\u5b9a\u4e49\u51fd\u6570\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u91cd\u6784\uff0c\u6240\u8c13\u91cd\u6784\u5c31\u662f\u5728\u4e0d\u5f71\u54cd\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u7684\u524d\u63d0\u4e0b\u5bf9\u4ee3\u7801\u7684\u7ed3\u6784\u8fdb\u884c\u8c03\u6574\uff0c\u91cd\u6784\u4e4b\u540e\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>\"\"\"\n\u8f93\u5165M\u548cN\u8ba1\u7b97C(M,N)\n\"\"\"\ndef fac(num):\n    \"\"\"\u6c42\u9636\u4e58\"\"\"\n    result = 1\n    for n in range(1, num + 1):\n        result *= n\n    return result\n\n\nm = int(input('m = '))\nn = int(input('n = '))\n\nprint(fac(m) // fac(n) // fac(m - n))\n</code></pre> <p>\u8bf4\u660e\uff1a Python\u7684<code>math</code>\u6a21\u5757\u4e2d\u5176\u5b9e\u5df2\u7ecf\u6709\u4e00\u4e2a\u540d\u4e3a<code>factorial</code>\u51fd\u6570\u5b9e\u73b0\u4e86\u9636\u4e58\u8fd0\u7b97\uff0c\u4e8b\u5b9e\u4e0a\u6c42\u9636\u4e58\u5e76\u4e0d\u7528\u81ea\u5df1\u5b9a\u4e49\u51fd\u6570\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u8bb2\u7684\u51fd\u6570\u5728Python\u6807\u51c6\u5e93\u5df2\u7ecf\u5b9e\u73b0\u8fc7\u4e86\uff0c\u6211\u4eec\u8fd9\u91cc\u662f\u4e3a\u4e86\u8bb2\u89e3\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u4f7f\u7528\u624d\u628a\u5b83\u4eec\u53c8\u5b9e\u73b0\u4e86\u4e00\u904d\uff0c\u5b9e\u9645\u5f00\u53d1\u4e2d\u5e76\u4e0d\u5efa\u8bae\u505a\u8fd9\u79cd\u4f4e\u7ea7\u7684\u91cd\u590d\u52b3\u52a8\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/06.%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#_4","title":"\u51fd\u6570\u7684\u53c2\u6570","text":"<p>\u51fd\u6570\u662f\u7edd\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u4e2d\u90fd\u652f\u6301\u7684\u4e00\u4e2a\u4ee3\u7801\u7684\"\u6784\u5efa\u5757\"\uff0c\u4f46\u662fPython\u4e2d\u7684\u51fd\u6570\u4e0e\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u8fd8\u662f\u6709\u5f88\u591a\u4e0d\u592a\u76f8\u540c\u7684\u5730\u65b9\uff0c\u5176\u4e2d\u4e00\u4e2a\u663e\u8457\u7684\u533a\u522b\u5c31\u662fPython\u5bf9\u51fd\u6570\u53c2\u6570\u7684\u5904\u7406\u3002\u5728Python\u4e2d\uff0c\u51fd\u6570\u7684\u53c2\u6570\u53ef\u4ee5\u6709\u9ed8\u8ba4\u503c\uff0c\u4e5f\u652f\u6301\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\uff0c\u6240\u4ee5Python\u5e76\u4e0d\u9700\u8981\u50cf\u5176\u4ed6\u8bed\u8a00\u4e00\u6837\u652f\u6301\u51fd\u6570\u7684\u91cd\u8f7d\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u7684\u65f6\u5019\u53ef\u4ee5\u8ba9\u5b83\u6709\u591a\u79cd\u4e0d\u540c\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u4e0b\u9762\u662f\u4e24\u4e2a\u5c0f\u4f8b\u5b50\u3002</p> <pre><code>from random import randint\n\ndef roll_dice(n=2):\n    \"\"\"\u6447\u8272\u5b50\"\"\"\n    total = 0\n    for _ in range(n):\n        total += randint(1, 6)\n    return total\n\ndef add(a=0, b=0, c=0):\n    \"\"\"\u4e09\u4e2a\u6570\u76f8\u52a0\"\"\"\n    return a + b + c\n\n# \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\u90a3\u4e48\u4f7f\u7528\u9ed8\u8ba4\u503c\u6447\u4e24\u9897\u8272\u5b50\nprint(roll_dice())\n# \u6447\u4e09\u9897\u8272\u5b50\nprint(roll_dice(3))\nprint(add())\nprint(add(1))\nprint(add(1, 2))\nprint(add(1, 2, 3))\n# \u4f20\u9012\u53c2\u6570\u65f6\u53ef\u4ee5\u4e0d\u6309\u7167\u8bbe\u5b9a\u7684\u987a\u5e8f\u8fdb\u884c\u4f20\u9012\nprint(add(c=50, a=100, b=200))\n</code></pre> <p>\u6211\u4eec\u7ed9\u4e0a\u9762\u4e24\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u90fd\u8bbe\u5b9a\u4e86\u9ed8\u8ba4\u503c\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u5982\u679c\u5728\u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u5982\u679c\u6ca1\u6709\u4f20\u5165\u5bf9\u5e94\u53c2\u6570\u7684\u503c\u65f6\u5c06\u4f7f\u7528\u8be5\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\uff0c\u6240\u4ee5\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u53ef\u4ee5\u7528\u5404\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u53bb\u8c03\u7528<code>add</code>\u51fd\u6570\uff0c\u8fd9\u8ddf\u5176\u4ed6\u5f88\u591a\u8bed\u8a00\u4e2d\u51fd\u6570\u91cd\u8f7d\u7684\u6548\u679c\u662f\u4e00\u81f4\u7684\u3002</p> <p>\u5176\u5b9e\u4e0a\u9762\u7684<code>add</code>\u51fd\u6570\u8fd8\u6709\u66f4\u597d\u7684\u5b9e\u73b0\u65b9\u6848\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u4f1a\u5bf90\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\uff0c\u800c\u5177\u4f53\u6709\u591a\u5c11\u4e2a\u53c2\u6570\u662f\u7531\u8c03\u7528\u8005\u6765\u51b3\u5b9a\uff0c\u6211\u4eec\u4f5c\u4e3a\u51fd\u6570\u7684\u8bbe\u8ba1\u8005\u5bf9\u8fd9\u4e00\u70b9\u662f\u4e00\u65e0\u6240\u77e5\u7684\uff0c\u56e0\u6b64\u5728\u4e0d\u786e\u5b9a\u53c2\u6570\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code># \u5728\u53c2\u6570\u540d\u524d\u9762\u7684*\u8868\u793aargs\u662f\u4e00\u4e2a\u53ef\u53d8\u53c2\u6570\ndef add(*args):\n    total = 0\n    for val in args:\n        total += val\n    return total\n\n\n# \u5728\u8c03\u7528add\u51fd\u6570\u65f6\u53ef\u4ee5\u4f20\u51650\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\nprint(add())\nprint(add(1))\nprint(add(1, 2))\nprint(add(1, 2, 3))\nprint(add(1, 3, 5, 7, 9))\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/06.%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#_5","title":"\u7528\u6a21\u5757\u7ba1\u7406\u51fd\u6570","text":"<p>\u5bf9\u4e8e\u4efb\u4f55\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u6765\u8bf4\uff0c\u7ed9\u53d8\u91cf\u3001\u51fd\u6570\u8fd9\u6837\u7684\u6807\u8bc6\u7b26\u8d77\u540d\u5b57\u90fd\u662f\u4e00\u4e2a\u8ba9\u4eba\u5934\u75bc\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u4eec\u4f1a\u9047\u5230\u547d\u540d\u51b2\u7a81\u8fd9\u79cd\u5c34\u5c2c\u7684\u60c5\u51b5\u3002\u6700\u7b80\u5355\u7684\u573a\u666f\u5c31\u662f\u5728\u540c\u4e00\u4e2a.py\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u4e24\u4e2a\u540c\u540d\u51fd\u6570\uff0c\u7531\u4e8ePython\u6ca1\u6709\u51fd\u6570\u91cd\u8f7d\u7684\u6982\u5ff5\uff0c\u90a3\u4e48\u540e\u9762\u7684\u5b9a\u4e49\u4f1a\u8986\u76d6\u4e4b\u524d\u7684\u5b9a\u4e49\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u4e24\u4e2a\u51fd\u6570\u540c\u540d\u51fd\u6570\u5b9e\u9645\u4e0a\u53ea\u6709\u4e00\u4e2a\u662f\u5b58\u5728\u7684\u3002</p> <pre><code>def foo():\n    print('hello, world!')\n\n\ndef foo():\n    print('goodbye, world!')\n\n\n# \u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u8f93\u51fa\u4ec0\u4e48\u5462\uff1f\nfoo()\n</code></pre> <p>\u5f53\u7136\u4e0a\u9762\u7684\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u80fd\u907f\u514d\uff0c\u4f46\u662f\u5982\u679c\u9879\u76ee\u662f\u7531\u591a\u4eba\u534f\u4f5c\u8fdb\u884c\u56e2\u961f\u5f00\u53d1\u7684\u65f6\u5019\uff0c\u56e2\u961f\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5b9a\u4e49\u4e86\u540d\u4e3a<code>foo</code>\u7684\u51fd\u6570\uff0c\u90a3\u4e48\u600e\u4e48\u89e3\u51b3\u8fd9\u79cd\u547d\u540d\u51b2\u7a81\u5462\uff1f\u7b54\u6848\u5176\u5b9e\u5f88\u7b80\u5355\uff0cPython\u4e2d\u6bcf\u4e2a\u6587\u4ef6\u5c31\u4ee3\u8868\u4e86\u4e00\u4e2a\u6a21\u5757\uff08module\uff09\uff0c\u6211\u4eec\u5728\u4e0d\u540c\u7684\u6a21\u5757\u4e2d\u53ef\u4ee5\u6709\u540c\u540d\u7684\u51fd\u6570\uff0c\u5728\u4f7f\u7528\u51fd\u6570\u7684\u65f6\u5019\u6211\u4eec\u901a\u8fc7<code>import</code>\u5173\u952e\u5b57\u5bfc\u5165\u6307\u5b9a\u7684\u6a21\u5757\u5c31\u53ef\u4ee5\u533a\u5206\u5230\u5e95\u8981\u4f7f\u7528\u7684\u662f\u54ea\u4e2a\u6a21\u5757\u4e2d\u7684<code>foo</code>\u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <p><code>module1.py</code></p> <pre><code>def foo():\n    print('hello, world!')\n</code></pre> <p><code>module2.py</code></p> <pre><code>def foo():\n    print('goodbye, world!')\n</code></pre> <p><code>test.py</code></p> <pre><code>from module1 import foo\n\n# \u8f93\u51fahello, world!\nfoo()\n\nfrom module2 import foo\n\n# \u8f93\u51fagoodbye, world!\nfoo()\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u6765\u533a\u5206\u5230\u5e95\u8981\u4f7f\u7528\u54ea\u4e00\u4e2a<code>foo</code>\u51fd\u6570\u3002</p> <p><code>test.py</code></p> <pre><code>import module1 as m1\nimport module2 as m2\n\nm1.foo()\nm2.foo()\n</code></pre> <p>\u4f46\u662f\u5982\u679c\u5c06\u4ee3\u7801\u5199\u6210\u4e86\u4e0b\u9762\u7684\u6837\u5b50\uff0c\u90a3\u4e48\u7a0b\u5e8f\u4e2d\u8c03\u7528\u7684\u662f\u6700\u540e\u5bfc\u5165\u7684\u90a3\u4e2a<code>foo</code>\uff0c\u56e0\u4e3a\u540e\u5bfc\u5165\u7684foo\u8986\u76d6\u4e86\u4e4b\u524d\u5bfc\u5165\u7684<code>foo</code>\u3002</p> <p><code>test.py</code></p> <pre><code>from module1 import foo\nfrom module2 import foo\n\n# \u8f93\u51fagoodbye, world!\nfoo()\n</code></pre> <p><code>test.py</code></p> <pre><code>from module2 import foo\nfrom module1 import foo\n\n# \u8f93\u51fahello, world!\nfoo()\n</code></pre> <p>\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5982\u679c\u6211\u4eec\u5bfc\u5165\u7684\u6a21\u5757\u9664\u4e86\u5b9a\u4e49\u51fd\u6570\u4e4b\u5916\u8fd8\u6709\u53ef\u4ee5\u6267\u884c\u4ee3\u7801\uff0c\u90a3\u4e48Python\u89e3\u91ca\u5668\u5728\u5bfc\u5165\u8fd9\u4e2a\u6a21\u5757\u65f6\u5c31\u4f1a\u6267\u884c\u8fd9\u4e9b\u4ee3\u7801\uff0c\u4e8b\u5b9e\u4e0a\u6211\u4eec\u53ef\u80fd\u5e76\u4e0d\u5e0c\u671b\u5982\u6b64\uff0c\u56e0\u6b64\u5982\u679c\u6211\u4eec\u5728\u6a21\u5757\u4e2d\u7f16\u5199\u4e86\u6267\u884c\u4ee3\u7801\uff0c\u6700\u597d\u662f\u5c06\u8fd9\u4e9b\u6267\u884c\u4ee3\u7801\u653e\u5165\u5982\u4e0b\u6240\u793a\u7684\u6761\u4ef6\u4e2d\uff0c\u8fd9\u6837\u7684\u8bdd\u9664\u975e\u76f4\u63a5\u8fd0\u884c\u8be5\u6a21\u5757\uff0cif\u6761\u4ef6\u4e0b\u7684\u8fd9\u4e9b\u4ee3\u7801\u662f\u4e0d\u4f1a\u6267\u884c\u7684\uff0c\u56e0\u4e3a\u53ea\u6709\u76f4\u63a5\u6267\u884c\u7684\u6a21\u5757\u7684\u540d\u5b57\u624d\u662f\"__main__\"\u3002</p> <p><code>module3.py</code></p> <pre><code>def foo():\n    pass\n\n\ndef bar():\n    pass\n\n\n# __name__\u662fPython\u4e2d\u4e00\u4e2a\u9690\u542b\u7684\u53d8\u91cf\u5b83\u4ee3\u8868\u4e86\u6a21\u5757\u7684\u540d\u5b57\n# \u53ea\u6709\u88abPython\u89e3\u91ca\u5668\u76f4\u63a5\u6267\u884c\u7684\u6a21\u5757\u7684\u540d\u5b57\u624d\u662f__main__\nif __name__ == '__main__':\n    print('call foo()')\n    foo()\n    print('call bar()')\n    bar()\n</code></pre> <p><code>test.py</code></p> <pre><code>import module3\n\n# \u5bfc\u5165module3\u65f6 \u4e0d\u4f1a\u6267\u884c\u6a21\u5757\u4e2dif\u6761\u4ef6\u6210\u7acb\u65f6\u7684\u4ee3\u7801 \u56e0\u4e3a\u6a21\u5757\u7684\u540d\u5b57\u662fmodule3\u800c\u4e0d\u662f__main__\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/06.%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#_6","title":"\u7ec3\u4e60","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/06.%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#1","title":"\u7ec3\u4e601\uff1a\u5b9e\u73b0\u8ba1\u7b97\u6c42\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\u7684\u51fd\u6570\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>def gcd(x, y):\n    \"\"\"\u6c42\u6700\u5927\u516c\u7ea6\u6570\"\"\"\n    (x, y) = (y, x) if x &gt; y else (x, y)\n    for factor in range(x, 0, -1):\n        if x % factor == 0 and y % factor == 0:\n            return factor\n\n\ndef lcm(x, y):\n    \"\"\"\u6c42\u6700\u5c0f\u516c\u500d\u6570\"\"\"\n    return x * y // gcd(x, y)\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/06.%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#2","title":"\u7ec3\u4e602\uff1a\u5b9e\u73b0\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u56de\u6587\u6570\u7684\u51fd\u6570\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>def is_palindrome(num):\n    \"\"\"\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u56de\u6587\u6570\"\"\"\n    temp = num\n    total = 0\n    while temp &gt; 0:\n        total = total * 10 + temp % 10\n        temp //= 10\n    return total == num\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/06.%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#3","title":"\u7ec3\u4e603\uff1a\u5b9e\u73b0\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u7d20\u6570\u7684\u51fd\u6570\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>def is_prime(num):\n    \"\"\"\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u7d20\u6570\"\"\"\n    for factor in range(2, int(num ** 0.5) + 1):\n        if num % factor == 0:\n            return False\n    return True if num != 1 else False\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/06.%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#4","title":"\u7ec3\u4e604\uff1a\u5199\u4e00\u4e2a\u7a0b\u5e8f\u5224\u65ad\u8f93\u5165\u7684\u6b63\u6574\u6570\u662f\u4e0d\u662f\u56de\u6587\u7d20\u6570\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>if __name__ == '__main__':\n    num = int(input('\u8bf7\u8f93\u5165\u6b63\u6574\u6570: '))\n    if is_palindrome(num) and is_prime(num):\n        print('%d\u662f\u56de\u6587\u7d20\u6570' % num)\n</code></pre> <p>\u6ce8\u610f\uff1a\u901a\u8fc7\u4e0a\u9762\u7684\u7a0b\u5e8f\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u6211\u4eec\u5c06\u4ee3\u7801\u4e2d\u91cd\u590d\u51fa\u73b0\u7684\u548c\u76f8\u5bf9\u72ec\u7acb\u7684\u529f\u80fd\u62bd\u53d6\u6210\u51fd\u6570\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u6765\u89e3\u51b3\u66f4\u4e3a\u590d\u6742\u7684\u95ee\u9898\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u5b9a\u4e49\u548c\u4f7f\u7528\u51fd\u6570\u7684\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u539f\u56e0\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/06.%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/#_7","title":"\u53d8\u91cf\u7684\u4f5c\u7528\u57df","text":"<p>\u6700\u540e\uff0c\u6211\u4eec\u6765\u8ba8\u8bba\u4e00\u4e0bPython\u4e2d\u6709\u5173\u53d8\u91cf\u4f5c\u7528\u57df\u7684\u95ee\u9898\u3002</p> <pre><code>def foo():\n    b = 'hello' # -&gt; \u5c40\u90e8\u4f5c\u7528\u57df\uff0c\u5bf9\u4e8e bar \u51fd\u6570\u6765\u8bf4\uff0cb \u5c5e\u4e8e\u5d4c\u5957\u4f5c\u7528\u57df\n\n    # Python\u4e2d\u53ef\u4ee5\u5728\u51fd\u6570\u5185\u90e8\u518d\u5b9a\u4e49\u51fd\u6570\n    def bar():\n        c = True\n        print(a)\n        print(b)\n        print(c)\n\n    bar()\n    # print(c)  # NameError: name 'c' is not defined\n\n\nif __name__ == '__main__':\n    a = 100     # -&gt; \u5168\u5c40\u4f5c\u7528\u57df\n    # print(b)  # NameError: name 'b' is not defined\n    foo()\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u80fd\u591f\u987a\u5229\u7684\u6267\u884c\u5e76\u4e14\u6253\u5370\u51fa100\u3001hello\u548cTrue\uff0c\u4f46\u6211\u4eec\u6ce8\u610f\u5230\u4e86\uff0c\u5728<code>bar</code>\u51fd\u6570\u7684\u5185\u90e8\u5e76\u6ca1\u6709\u5b9a\u4e49<code>a</code>\u548c<code>b</code>\u4e24\u4e2a\u53d8\u91cf\uff0c\u90a3\u4e48<code>a</code>\u548c<code>b</code>\u662f\u4ece\u54ea\u91cc\u6765\u7684\u3002\u6211\u4eec\u5728\u4e0a\u9762\u4ee3\u7801\u7684<code>if</code>\u5206\u652f\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf<code>a</code>\uff0c\u8fd9\u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff08global variable\uff09\uff0c\u5c5e\u4e8e\u5168\u5c40\u4f5c\u7528\u57df\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u5b9a\u4e49\u5728\u4efb\u4f55\u4e00\u4e2a\u51fd\u6570\u4e2d\u3002\u5728\u4e0a\u9762\u7684<code>foo</code>\u51fd\u6570\u4e2d\u6211\u4eec\u5b9a\u4e49\u4e86\u53d8\u91cf<code>b</code>\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b9a\u4e49\u5728\u51fd\u6570\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\uff08local variable\uff09\uff0c\u5c5e\u4e8e\u5c40\u90e8\u4f5c\u7528\u57df\uff0c\u5728<code>foo</code>\u51fd\u6570\u7684\u5916\u90e8\u5e76\u4e0d\u80fd\u8bbf\u95ee\u5230\u5b83\uff1b\u4f46\u5bf9\u4e8e<code>foo</code>\u51fd\u6570\u5185\u90e8\u7684<code>bar</code>\u51fd\u6570\u6765\u8bf4\uff0c\u53d8\u91cf<code>b</code>\u5c5e\u4e8e\u5d4c\u5957\u4f5c\u7528\u57df\uff0c\u5728<code>bar</code>\u51fd\u6570\u4e2d\u6211\u4eec\u662f\u53ef\u4ee5\u8bbf\u95ee\u5230\u5b83\u7684\u3002<code>bar</code>\u51fd\u6570\u4e2d\u7684\u53d8\u91cf<code>c</code>\u5c5e\u4e8e\u5c40\u90e8\u4f5c\u7528\u57df\uff0c\u5728<code>bar</code>\u51fd\u6570\u4e4b\u5916\u662f\u65e0\u6cd5\u8bbf\u95ee\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0cPython\u67e5\u627e\u4e00\u4e2a\u53d8\u91cf\u65f6\u4f1a\u6309\u7167\u201c\u5c40\u90e8\u4f5c\u7528\u57df\u201d\u3001\u201c\u5d4c\u5957\u4f5c\u7528\u57df\u201d\u3001\u201c\u5168\u5c40\u4f5c\u7528\u57df\u201d\u548c\u201c\u5185\u7f6e\u4f5c\u7528\u57df\u201d\u7684\u987a\u5e8f\u8fdb\u884c\u641c\u7d22\uff0c\u524d\u4e09\u8005\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u5df2\u7ecf\u770b\u5230\u4e86\uff0c\u6240\u8c13\u7684\u201c\u5185\u7f6e\u4f5c\u7528\u57df\u201d\u5c31\u662fPython\u5185\u7f6e\u7684\u90a3\u4e9b\u6807\u8bc6\u7b26\uff0c\u6211\u4eec\u4e4b\u524d\u7528\u8fc7\u7684<code>input</code>\u3001<code>print</code>\u3001<code>int</code>\u7b49\u90fd\u5c5e\u4e8e\u5185\u7f6e\u4f5c\u7528\u57df\u3002</p> <p>\u518d\u770b\u770b\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u4fee\u6539\u5168\u5c40\u53d8\u91cf<code>a</code>\u7684\u503c\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u505a\u4e0d\u5230\u7684\u3002</p> <pre><code>def foo():\n    a = 200\n    print(a)  # 200\n\n\nif __name__ == '__main__':\n    a = 100\n    foo()\n    print(a)  # 100\n</code></pre> <p>\u5728\u8c03\u7528<code>foo</code>\u51fd\u6570\u540e\uff0c\u6211\u4eec\u53d1\u73b0<code>a</code>\u7684\u503c\u4ecd\u7136\u662f100\uff0c\u8fd9\u662f\u56e0\u4e3a\u5f53\u6211\u4eec\u5728\u51fd\u6570<code>foo</code>\u4e2d\u5199<code>a = 200</code>\u7684\u65f6\u5019\uff0c\u662f\u91cd\u65b0\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u5b57\u4e3a<code>a</code>\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5b83\u8ddf\u5168\u5c40\u4f5c\u7528\u57df\u7684<code>a</code>\u5e76\u4e0d\u662f\u540c\u4e00\u4e2a\u53d8\u91cf\uff0c\u56e0\u4e3a\u5c40\u90e8\u4f5c\u7528\u57df\u4e2d\u6709\u4e86\u81ea\u5df1\u7684\u53d8\u91cf<code>a</code>\uff0c\u56e0\u6b64<code>foo</code>\u51fd\u6570\u4e0d\u518d\u641c\u7d22\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u7684<code>a</code>\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5728<code>foo</code>\u51fd\u6570\u4e2d\u4fee\u6539\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u7684<code>a</code>\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>def foo():\n    global a\n    a = 200\n    print(a)  # 200\n\n\nif __name__ == '__main__':\n    a = 100\n    foo()\n    print(a)  # 200\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>global</code>\u5173\u952e\u5b57\u6765\u6307\u793a<code>foo</code>\u51fd\u6570\u4e2d\u7684\u53d8\u91cf<code>a</code>\u6765\u81ea\u4e8e\u5168\u5c40\u4f5c\u7528\u57df\uff0c\u5982\u679c\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u6ca1\u6709<code>a</code>\uff0c\u90a3\u4e48\u4e0b\u9762\u4e00\u884c\u7684\u4ee3\u7801\u5c31\u4f1a\u5b9a\u4e49\u53d8\u91cf<code>a</code>\u5e76\u5c06\u5176\u7f6e\u4e8e\u5168\u5c40\u4f5c\u7528\u57df\u3002\u540c\u7406\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u51fd\u6570\u5185\u90e8\u7684\u51fd\u6570\u80fd\u591f\u4fee\u6539\u5d4c\u5957\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u4f7f\u7528<code>nonlocal</code>\u5173\u952e\u5b57\u6765\u6307\u793a\u53d8\u91cf\u6765\u81ea\u4e8e\u5d4c\u5957\u4f5c\u7528\u57df\uff1a</p> <pre><code>def outer_function():\n    x = \"outer\"  # \u5916\u5c42\u51fd\u6570\u7684\u53d8\u91cf\n\n    def inner_function():\n        nonlocal x   # \u4f7f\u7528nonlocal\u5173\u952e\u5b57\u5f15\u7528\u5916\u5c42\u51fd\u6570\u7684\u53d8\u91cf\n        x = \"inner\"  # \u4fee\u6539\u5916\u5c42\u51fd\u6570\u7684\u53d8\u91cf\n        print(\"inner_function:\", x)\n\n    inner_function()\n    print(\"outer_function:\", x)\n\nouter_function()\n\n# output:\n# inner_function: inner\n# outer_function: inner\n</code></pre> <p>\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u51cf\u5c11\u5bf9\u5168\u5c40\u53d8\u91cf\u7684\u4f7f\u7528\uff0c\u56e0\u4e3a\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u548c\u5f71\u54cd\u8fc7\u4e8e\u5e7f\u6cdb\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u610f\u6599\u4e4b\u5916\u7684\u4fee\u6539\u548c\u4f7f\u7528\uff0c\u9664\u6b64\u4e4b\u5916\u5168\u5c40\u53d8\u91cf\u6bd4\u5c40\u90e8\u53d8\u91cf\u62e5\u6709\u66f4\u957f\u7684\u751f\u547d\u5468\u671f\uff0c\u53ef\u80fd\u5bfc\u81f4\u5bf9\u8c61\u5360\u7528\u7684\u5185\u5b58\u957f\u65f6\u95f4\u65e0\u6cd5\u88ab\u5783\u573e\u56de\u6536\u3002\u4e8b\u5b9e\u4e0a\uff0c\u51cf\u5c11\u5bf9\u5168\u5c40\u53d8\u91cf\u7684\u4f7f\u7528\uff0c\u4e5f\u662f\u964d\u4f4e\u4ee3\u7801\u4e4b\u95f4\u8026\u5408\u5ea6\u7684\u4e00\u4e2a\u91cd\u8981\u4e3e\u63aa\uff0c\u540c\u65f6\u4e5f\u662f\u5bf9\u8fea\u7c73\u7279\u6cd5\u5219\u7684\u8df5\u884c\u3002\u51cf\u5c11\u5168\u5c40\u53d8\u91cf\u7684\u4f7f\u7528\u5c31\u610f\u5473\u7740\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u8ba9\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5728\u51fd\u6570\u7684\u5185\u90e8\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5c06\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u5ef6\u957f\uff0c\u4f7f\u5176\u5728\u5b9a\u4e49\u5b83\u7684\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u5b83\u7684\u503c\uff0c\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u4f7f\u7528\u95ed\u5305\uff0c\u8fd9\u4e2a\u6211\u4eec\u5728\u540e\u7eed\u7684\u5185\u5bb9\u4e2d\u8fdb\u884c\u8bb2\u89e3\u3002</p> <p>\u8bf4\u660e\uff1a \u5f88\u591a\u4eba\u7ecf\u5e38\u4f1a\u5c06\u201c\u95ed\u5305\u201d\u548c\u201c\u533f\u540d\u51fd\u6570\u201d\u6df7\u4e3a\u4e00\u8c08\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u4eec\u5e76\u4e0d\u662f\u4e00\u56de\u4e8b\uff0c\u5982\u679c\u60f3\u4e86\u89e3\u8fd9\u4e2a\u6982\u5ff5\uff0c\u53ef\u4ee5\u770b\u770b\u7ef4\u57fa\u767e\u79d1\u7684\u89e3\u91ca\u6216\u8005\u77e5\u4e4e\u4e0a\u5bf9\u8fd9\u4e2a\u6982\u5ff5\u7684\u8ba8\u8bba\u3002</p> <p>\u8bf4\u4e86\u90a3\u4e48\u591a\uff0c\u5176\u5b9e\u7ed3\u8bba\u5f88\u7b80\u5355\uff0c\u4ece\u73b0\u5728\u5f00\u59cb\u6211\u4eec\u53ef\u4ee5\u5c06Python\u4ee3\u7801\u6309\u7167\u4e0b\u9762\u7684\u683c\u5f0f\u8fdb\u884c\u4e66\u5199\uff0c\u8fd9\u4e00\u70b9\u70b9\u7684\u6539\u8fdb\u5176\u5b9e\u5c31\u662f\u5728\u6211\u4eec\u7406\u89e3\u4e86\u51fd\u6570\u548c\u4f5c\u7528\u57df\u7684\u57fa\u7840\u4e0a\u8de8\u51fa\u7684\u5de8\u5927\u7684\u4e00\u6b65\u3002</p> <pre><code>def main():\n    # Todo: Add your code here\n    pass\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","title":"07.\u5b57\u7b26\u4e32\u548c\u5e38\u7528\u6570\u636e\u7ed3\u6784","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_1","title":"\u5b57\u7b26\u4e32\u548c\u5e38\u7528\u6570\u636e\u7ed3\u6784","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_2","title":"\u4f7f\u7528\u5b57\u7b26\u4e32","text":"<p>\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u4fc3\u4f7f\u4e86\u73b0\u4ee3\u7535\u5b50\u8ba1\u7b97\u673a\u7684\u8bde\u751f\uff0c\u6700\u521d\u8ba1\u7b97\u673a\u88ab\u5e94\u7528\u4e8e\u5bfc\u5f39\u5f39\u9053\u7684\u8ba1\u7b97\uff0c\u800c\u5728\u8ba1\u7b97\u673a\u8bde\u751f\u540e\u7684\u5f88\u591a\u5e74\u65f6\u95f4\u91cc\uff0c\u8ba1\u7b97\u673a\u5904\u7406\u7684\u4fe1\u606f\u57fa\u672c\u4e0a\u90fd\u662f\u6570\u503c\u578b\u7684\u4fe1\u606f\u3002\u4e16\u754c\u4e0a\u7684\u7b2c\u4e00\u53f0\u7535\u5b50\u8ba1\u7b97\u673a\u53ebENIAC\uff08\u7535\u5b50\u6570\u503c\u79ef\u5206\u8ba1\u7b97\u673a\uff09\uff0c\u8bde\u751f\u4e8e\u7f8e\u56fd\u7684\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\uff0c\u6bcf\u79d2\u949f\u80fd\u591f\u5b8c\u6210\u7ea65000\u6b21\u6d6e\u70b9\u8fd0\u7b97\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u867d\u7136\u6570\u503c\u8fd0\u7b97\u4ecd\u7136\u662f\u8ba1\u7b97\u673a\u65e5\u5e38\u5de5\u4f5c\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u4e8b\u60c5\u4e4b\u4e00\uff0c\u4f46\u662f\u4eca\u5929\u7684\u8ba1\u7b97\u673a\u5904\u7406\u5f97\u66f4\u591a\u7684\u6570\u636e\u53ef\u80fd\u90fd\u662f\u4ee5\u6587\u672c\u7684\u65b9\u5f0f\u5b58\u5728\u7684\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u901a\u8fc7Python\u7a0b\u5e8f\u64cd\u4f5c\u8fd9\u4e9b\u6587\u672c\u4fe1\u606f\uff0c\u5c31\u5fc5\u987b\u8981\u5148\u4e86\u89e3\u5b57\u7b26\u4e32\u7c7b\u578b\u4ee5\u53ca\u4e0e\u5b83\u76f8\u5173\u7684\u77e5\u8bc6\u3002</p> <p>\u6240\u8c13\u5b57\u7b26\u4e32\uff0c\u5c31\u662f\u7531\u96f6\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u6709\u9650\u5e8f\u5217\uff0c\u4e00\u822c\u8bb0\u4e3a\\({\\displaystyle s=a_{1}a_{2}\\dots a_{n}(0\\leq n \\leq \\infty)}\\)\u3002\u5728Python\u7a0b\u5e8f\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u628a\u5355\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u7528\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7\u5305\u56f4\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002</p> <pre><code>s1 = 'hello, world!'\ns2 = \"hello, world!\"\n# \u4ee5\u4e09\u4e2a\u53cc\u5f15\u53f7\u6216\u5355\u5f15\u53f7\u5f00\u5934\u7684\u5b57\u7b26\u4e32\u53ef\u4ee5\u6298\u884c\ns3 = \"\"\"\nhello, \nworld!\n\"\"\"\nprint(s1, s2, s3, end='')\n</code></pre> <p>\u53ef\u4ee5\u5728\u5b57\u7b26\u4e32\u4e2d\u4f7f\u7528<code>\\</code>\uff08\u53cd\u659c\u6760\uff09\u6765\u8868\u793a\u8f6c\u4e49\uff0c\u4e5f\u5c31\u662f\u8bf4<code>\\</code>\u540e\u9762\u7684\u5b57\u7b26\u4e0d\u518d\u662f\u5b83\u539f\u6765\u7684\u610f\u4e49\uff0c\u4f8b\u5982\uff1a<code>\\n</code>\u4e0d\u662f\u4ee3\u8868\u53cd\u659c\u6760\u548c\u5b57\u7b26n\uff0c\u800c\u662f\u8868\u793a\u6362\u884c\uff1b\u800c<code>\\t</code>\u4e5f\u4e0d\u662f\u4ee3\u8868\u53cd\u659c\u6760\u548c\u5b57\u7b26t\uff0c\u800c\u662f\u8868\u793a\u5236\u8868\u7b26\u3002\u6240\u4ee5\u5982\u679c\u60f3\u5728\u5b57\u7b26\u4e32\u4e2d\u8868\u793a<code>'</code>\u8981\u5199\u6210<code>\\'</code>\uff0c\u540c\u7406\u60f3\u8868\u793a<code>\\</code>\u8981\u5199\u6210<code>\\\\</code>\u3002\u53ef\u4ee5\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\u770b\u770b\u4f1a\u8f93\u51fa\u4ec0\u4e48\u3002</p> <pre><code>s1 = '\\'hello, world!\\''\ns2 = '\\n\\\\hello, world!\\\\\\n'\nprint(s1, s2, end='')\n\n# output:\n# 'hello, world!' \n# \\hello, world!\\\n</code></pre> <p>\u5728<code>\\</code>\u540e\u9762\u8fd8\u53ef\u4ee5\u8ddf\u4e00\u4e2a\u516b\u8fdb\u5236\u6216\u8005\u5341\u516d\u8fdb\u5236\u6570\u6765\u8868\u793a\u5b57\u7b26\uff0c\u4f8b\u5982<code>\\141</code>\u548c<code>\\x61</code>\u90fd\u4ee3\u8868\u5c0f\u5199\u5b57\u6bcd<code>a</code>\uff0c\u524d\u8005\u662f\u516b\u8fdb\u5236\u7684\u8868\u793a\u6cd5\uff0c\u540e\u8005\u662f\u5341\u516d\u8fdb\u5236\u7684\u8868\u793a\u6cd5\u3002\u4e5f\u53ef\u4ee5\u5728<code>\\</code>\u540e\u9762\u8ddfUnicode\u5b57\u7b26\u7f16\u7801\u6765\u8868\u793a\u5b57\u7b26\uff0c\u4f8b\u5982<code>\\u9a86\\u660a</code>\u4ee3\u8868\u7684\u662f\u4e2d\u6587\u201c\u9a86\u660a\u201d\u3002\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u8f93\u51fa\u4e86\u4ec0\u4e48\u3002</p> <pre><code>s1 = '\\141\\142\\143\\x61\\x62\\x63'\ns2 = '\\u9a86\\u660a'\nprint(s1, s2)\n\n# output:\n# abcabc \u9a86\u660a\n</code></pre> <p>\u5982\u679c\u4e0d\u5e0c\u671b\u5b57\u7b26\u4e32\u4e2d\u7684<code>\\</code>\u8868\u793a\u8f6c\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u5b57\u7b26\u4e32\u7684\u6700\u524d\u9762\u52a0\u4e0a\u5b57\u6bcd<code>r</code>\u6765\u52a0\u4ee5\u8bf4\u660e\uff0c\u518d\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u53c8\u4f1a\u8f93\u51fa\u4ec0\u4e48\u3002</p> <pre><code>s1 = r'\\'hello, world!\\''\ns2 = r'\\n\\\\hello, world!\\\\\\n'\nprint(s1, s2, end='')\n\n# output:\n# \\'hello, world!\\' \\n\\\\hello, world!\\\\\\n\n</code></pre> <p>Python\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>+</code>\u8fd0\u7b97\u7b26\u6765\u5b9e\u73b0\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\uff0c\u53ef\u4ee5\u4f7f\u7528<code>*</code>\u8fd0\u7b97\u7b26\u6765\u91cd\u590d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u4f7f\u7528<code>in</code>\u548c<code>not in</code>\u6765\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u53e6\u5916\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u6210\u5458\u8fd0\u7b97\uff09\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528<code>[]</code>\u548c<code>[:]</code>\u8fd0\u7b97\u7b26\u4ece\u5b57\u7b26\u4e32\u53d6\u51fa\u67d0\u4e2a\u5b57\u7b26\u6216\u67d0\u4e9b\u5b57\u7b26\uff08\u5207\u7247\u8fd0\u7b97\uff09\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>s1 = 'hello ' * 3\nprint(s1) # hello hello hello \ns2 = 'world'\ns1 += s2\nprint(s1) # hello hello hello world\nprint('ll' in s1) # True\nprint('good' in s1) # False\nstr2 = 'abc123456'\n# \u4ece\u5b57\u7b26\u4e32\u4e2d\u53d6\u51fa\u6307\u5b9a\u4f4d\u7f6e\u7684\u5b57\u7b26(\u4e0b\u6807\u8fd0\u7b97)\nprint(str2[2]) # c\n# \u5b57\u7b26\u4e32\u5207\u7247(\u4ece\u6307\u5b9a\u7684\u5f00\u59cb\u7d22\u5f15\u5230\u6307\u5b9a\u7684\u7ed3\u675f\u7d22\u5f15)\nprint(str2[2:5]) # c12\nprint(str2[2:]) # c123456\nprint(str2[2::2]) # c246\nprint(str2[::2]) # ac246\nprint(str2[::-1]) # 654321cba\nprint(str2[-3:-1]) # 45\n</code></pre> <p>\u5728Python\u4e2d\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u65b9\u6cd5\u6765\u5b8c\u6210\u5bf9\u5b57\u7b26\u4e32\u7684\u5904\u7406\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>str1 = 'hello, world!'\n# \u901a\u8fc7\u5185\u7f6e\u51fd\u6570len\u8ba1\u7b97\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\nprint(len(str1)) # 13\n# \u83b7\u5f97\u5b57\u7b26\u4e32\u9996\u5b57\u6bcd\u5927\u5199\u7684\u62f7\u8d1d\nprint(str1.capitalize()) # Hello, world!\n# \u83b7\u5f97\u5b57\u7b26\u4e32\u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199\u7684\u62f7\u8d1d\nprint(str1.title()) # Hello, World!\n# \u83b7\u5f97\u5b57\u7b26\u4e32\u53d8\u5927\u5199\u540e\u7684\u62f7\u8d1d\nprint(str1.upper()) # HELLO, WORLD!\n# \u4ece\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u5b50\u4e32\u6240\u5728\u4f4d\u7f6e\nprint(str1.find('or')) # 8\nprint(str1.find('shit')) # -1\n# \u4e0efind\u7c7b\u4f3c\u4f46\u627e\u4e0d\u5230\u5b50\u4e32\u65f6\u4f1a\u5f15\u53d1\u5f02\u5e38\n# print(str1.index('or'))\n# print(str1.index('shit'))\n# \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u5f00\u5934\nprint(str1.startswith('He')) # False\nprint(str1.startswith('hel')) # True\n# \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u7ed3\u5c3e\nprint(str1.endswith('!')) # True\n# \u5c06\u5b57\u7b26\u4e32\u4ee5\u6307\u5b9a\u7684\u5bbd\u5ea6\u5c45\u4e2d\u5e76\u5728\u4e24\u4fa7\u586b\u5145\u6307\u5b9a\u7684\u5b57\u7b26\nprint(str1.center(50, '*'))\n# \u5c06\u5b57\u7b26\u4e32\u4ee5\u6307\u5b9a\u7684\u5bbd\u5ea6\u9760\u53f3\u653e\u7f6e\u5de6\u4fa7\u586b\u5145\u6307\u5b9a\u7684\u5b57\u7b26\nprint(str1.rjust(50, ' '))\nstr2 = 'abc123456'\n# \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u7531\u6570\u5b57\u6784\u6210\nprint(str2.isdigit())  # False\n# \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u5b57\u6bcd\u6784\u6210\nprint(str2.isalpha())  # False\n# \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6570\u5b57\u548c\u5b57\u6bcd\u6784\u6210\nprint(str2.isalnum())  # True\nstr3 = '  jackfrued@126.com '\nprint(str3)\n# \u83b7\u5f97\u5b57\u7b26\u4e32\u4fee\u526a\u5de6\u53f3\u4e24\u4fa7\u7a7a\u683c\u4e4b\u540e\u7684\u62f7\u8d1d\nprint(str3.strip())\n</code></pre> <p>\u6211\u4eec\u4e4b\u524d\u8bb2\u8fc7\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u683c\u5f0f\u5316\u8f93\u51fa\u5b57\u7b26\u4e32\u3002</p> <pre><code>a, b = 5, 10\nprint('%d * %d = %d' % (a, b, a * b))\n</code></pre> <p>\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u5b57\u7b26\u4e32\u63d0\u4f9b\u7684\u65b9\u6cd5\u6765\u5b8c\u6210\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>a, b = 5, 10\nprint('{0} * {1} = {2}'.format(a, b, a * b))\n</code></pre> <p>Python 3.6\u4ee5\u540e\uff0c\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u8fd8\u6709\u66f4\u4e3a\u7b80\u6d01\u7684\u4e66\u5199\u65b9\u5f0f\uff0c\u5c31\u662f\u5728\u5b57\u7b26\u4e32\u524d\u52a0\u4e0a\u5b57\u6bcd<code>f</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8bed\u6cd5\u7cd6\u6765\u7b80\u5316\u4e0a\u9762\u7684\u4ee3\u7801\u3002</p> <pre><code>a, b = 5, 10\nprint(f'{a} * {b} = {a * b}')\n</code></pre> <p>\u9664\u4e86\u5b57\u7b26\u4e32\uff0cPython\u8fd8\u5185\u7f6e\u4e86\u591a\u79cd\u7c7b\u578b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5982\u679c\u8981\u5728\u7a0b\u5e8f\u4e2d\u4fdd\u5b58\u548c\u64cd\u4f5c\u6570\u636e\uff0c\u7edd\u5927\u591a\u6570\u65f6\u5019\u53ef\u4ee5\u5229\u7528\u73b0\u6709\u7684\u6570\u636e\u7ed3\u6784\u6765\u5b9e\u73b0\uff0c\u6700\u5e38\u7528\u7684\u5305\u62ec\u5217\u8868\u3001\u5143\u7ec4\u3001\u96c6\u5408\u548c\u5b57\u5178\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_3","title":"\u4f7f\u7528\u5217\u8868","text":"<p>\u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u6ce8\u610f\u5230\uff0c\u521a\u624d\u6211\u4eec\u8bb2\u5230\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\uff08<code>str</code>\uff09\u548c\u4e4b\u524d\u6211\u4eec\u8bb2\u5230\u7684\u6570\u503c\u7c7b\u578b\uff08<code>int</code>\u548c<code>float</code>\uff09\u6709\u4e00\u4e9b\u533a\u522b\u3002\u6570\u503c\u7c7b\u578b\u662f\u6807\u91cf\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\u6ca1\u6709\u53ef\u4ee5\u8bbf\u95ee\u7684\u5185\u90e8\u7ed3\u6784\uff1b\u800c\u5b57\u7b26\u4e32\u7c7b\u578b\u662f\u4e00\u79cd\u7ed3\u6784\u5316\u7684\u3001\u975e\u6807\u91cf\u7c7b\u578b\uff0c\u6240\u4ee5\u624d\u4f1a\u6709\u4e00\u7cfb\u5217\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u4ecb\u7ecd\u7684\u5217\u8868\uff08<code>list</code>\uff09\uff0c\u4e5f\u662f\u4e00\u79cd\u7ed3\u6784\u5316\u7684\u3001\u975e\u6807\u91cf\u7c7b\u578b\uff0c\u5b83\u662f\u503c\u7684\u6709\u5e8f\u5e8f\u5217\uff0c\u6bcf\u4e2a\u503c\u90fd\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u8fdb\u884c\u6807\u8bc6\uff0c\u5b9a\u4e49\u5217\u8868\u53ef\u4ee5\u5c06\u5217\u8868\u7684\u5143\u7d20\u653e\u5728<code>[]</code>\u4e2d\uff0c\u591a\u4e2a\u5143\u7d20\u7528<code>,</code>\u8fdb\u884c\u5206\u9694\uff0c\u53ef\u4ee5\u4f7f\u7528<code>for</code>\u5faa\u73af\u5bf9\u5217\u8868\u5143\u7d20\u8fdb\u884c\u904d\u5386\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>[]</code>\u6216<code>[:]</code>\u8fd0\u7b97\u7b26\u53d6\u51fa\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\u3002</p> <p>\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5b9a\u4e49\u5217\u8868\u3001\u5982\u4f55\u904d\u5386\u5217\u8868\u4ee5\u53ca\u5217\u8868\u7684\u4e0b\u6807\u8fd0\u7b97\u3002</p> <pre><code>list1 = [1, 3, 5, 7, 100]\nprint(list1) # [1, 3, 5, 7, 100]\n# \u4e58\u53f7\u8868\u793a\u5217\u8868\u5143\u7d20\u7684\u91cd\u590d\nlist2 = ['hello'] * 3\nprint(list2) # ['hello', 'hello', 'hello']\n# \u8ba1\u7b97\u5217\u8868\u957f\u5ea6(\u5143\u7d20\u4e2a\u6570)\nprint(len(list1)) # 5\n# \u4e0b\u6807(\u7d22\u5f15)\u8fd0\u7b97\nprint(list1[0]) # 1\nprint(list1[4]) # 100\n# print(list1[5])  # IndexError: list index out of range\nprint(list1[-1]) # 100\nprint(list1[-3]) # 5\nlist1[2] = 300\nprint(list1) # [1, 3, 300, 7, 100]\n# \u901a\u8fc7\u5faa\u73af\u7528\u4e0b\u6807\u904d\u5386\u5217\u8868\u5143\u7d20\nfor index in range(len(list1)):\n    print(list1[index])\n# \u901a\u8fc7for\u5faa\u73af\u904d\u5386\u5217\u8868\u5143\u7d20\nfor elem in list1:\n    print(elem)\n# \u901a\u8fc7enumerate\u51fd\u6570\u5904\u7406\u5217\u8868\u4e4b\u540e\u518d\u904d\u5386\u53ef\u4ee5\u540c\u65f6\u83b7\u5f97\u5143\u7d20\u7d22\u5f15\u548c\u503c\nfor index, elem in enumerate(list1):\n    print(index, elem)\n</code></pre> <p>\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5411\u5217\u8868\u4e2d\u6dfb\u52a0\u5143\u7d20\u4ee5\u53ca\u5982\u4f55\u4ece\u5217\u8868\u4e2d\u79fb\u9664\u5143\u7d20\u3002</p> <pre><code>list1 = [1, 3, 5, 7, 100]\n# \u6dfb\u52a0\u5143\u7d20\nlist1.append(200)\nlist1.insert(1, 400)\n# \u5408\u5e76\u4e24\u4e2a\u5217\u8868\n# list1.extend([1000, 2000])\nlist1 += [1000, 2000]\nprint(list1) # [1, 400, 3, 5, 7, 100, 200, 1000, 2000]\nprint(len(list1)) # 9\n# \u5148\u901a\u8fc7\u6210\u5458\u8fd0\u7b97\u5224\u65ad\u5143\u7d20\u662f\u5426\u5728\u5217\u8868\u4e2d\uff0c\u5982\u679c\u5b58\u5728\u5c31\u5220\u9664\u8be5\u5143\u7d20\nif 3 in list1:\n    list1.remove(3)\nif 1234 in list1:\n    list1.remove(1234)\nprint(list1) # [1, 400, 5, 7, 100, 200, 1000, 2000]\n# \u4ece\u6307\u5b9a\u7684\u4f4d\u7f6e\u5220\u9664\u5143\u7d20\nlist1.pop(0)\nlist1.pop(len(list1) - 1)\nprint(list1) # [400, 5, 7, 100, 200, 1000]\n# \u6e05\u7a7a\u5217\u8868\u5143\u7d20\nlist1.clear()\nprint(list1) # []\n</code></pre> <p>\u548c\u5b57\u7b26\u4e32\u4e00\u6837\uff0c\u5217\u8868\u4e5f\u53ef\u4ee5\u505a\u5207\u7247\u64cd\u4f5c\uff0c\u901a\u8fc7\u5207\u7247\u64cd\u4f5c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u5217\u8868\u7684\u590d\u5236\u6216\u8005\u5c06\u5217\u8868\u4e2d\u7684\u4e00\u90e8\u5206\u53d6\u51fa\u6765\u521b\u5efa\u51fa\u65b0\u7684\u5217\u8868\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>fruits = ['grape', 'apple', 'strawberry', 'waxberry']\nfruits += ['pitaya', 'pear', 'mango']\n# \u5217\u8868\u5207\u7247\nfruits2 = fruits[1:4]\nprint(fruits2) # apple strawberry waxberry\n# \u53ef\u4ee5\u901a\u8fc7\u5b8c\u6574\u5207\u7247\u64cd\u4f5c\u6765\u590d\u5236\u5217\u8868\nfruits3 = fruits[:]\nprint(fruits3) # ['grape', 'apple', 'strawberry', 'waxberry', 'pitaya', 'pear', 'mango']\nfruits4 = fruits[-3:-1]\nprint(fruits4) # ['pitaya', 'pear']\n# \u53ef\u4ee5\u901a\u8fc7\u53cd\u5411\u5207\u7247\u64cd\u4f5c\u6765\u83b7\u5f97\u5012\u8f6c\u540e\u7684\u5217\u8868\u7684\u62f7\u8d1d\nfruits5 = fruits[::-1]\nprint(fruits5) # ['mango', 'pear', 'pitaya', 'waxberry', 'strawberry', 'apple', 'grape']\n</code></pre> <p>\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u5bf9\u5217\u8868\u7684\u6392\u5e8f\u64cd\u4f5c\u3002</p> <pre><code>list1 = ['orange', 'apple', 'zoo', 'internationalization', 'blueberry']\nlist2 = sorted(list1)\n# sorted\u51fd\u6570\u8fd4\u56de\u5217\u8868\u6392\u5e8f\u540e\u7684\u62f7\u8d1d\u4e0d\u4f1a\u4fee\u6539\u4f20\u5165\u7684\u5217\u8868\n# \u51fd\u6570\u7684\u8bbe\u8ba1\u5c31\u5e94\u8be5\u50cfsorted\u51fd\u6570\u4e00\u6837\u5c3d\u53ef\u80fd\u4e0d\u4ea7\u751f\u526f\u4f5c\u7528\nlist3 = sorted(list1, reverse=True)\n# \u901a\u8fc7key\u5173\u952e\u5b57\u53c2\u6570\u6307\u5b9a\u6839\u636e\u5b57\u7b26\u4e32\u957f\u5ea6\u8fdb\u884c\u6392\u5e8f\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684\u5b57\u6bcd\u8868\u987a\u5e8f\nlist4 = sorted(list1, key=len)\nprint(list1) # ['orange', 'apple', 'zoo', 'internationalization', 'blueberry']\nprint(list2) # ['apple', 'blueberry', 'internationalization', 'orange', 'zoo']\nprint(list3) # ['zoo', 'orange', 'internationalization', 'blueberry', 'apple']\nprint(list4) # ['zoo', 'apple', 'orange', 'blueberry', 'internationalization']\n# \u7ed9\u5217\u8868\u5bf9\u8c61\u53d1\u51fa\u6392\u5e8f\u6d88\u606f\u76f4\u63a5\u5728\u5217\u8868\u5bf9\u8c61\u4e0a\u8fdb\u884c\u6392\u5e8f\nlist1.sort(reverse=True)\nprint(list1) # ['zoo', 'orange', 'internationalization', 'blueberry', 'apple']\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_4","title":"\u751f\u6210\u5f0f\u548c\u751f\u6210\u5668","text":"<p>\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u7684\u751f\u6210\u5f0f\u8bed\u6cd5\u6765\u521b\u5efa\u5217\u8868\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>f = [x for x in range(1, 10)]\nprint(f)\nf = [x + y for x in 'ABCDE' for y in '1234567']\nprint(f)\n# \u7528\u5217\u8868\u7684\u751f\u6210\u8868\u8fbe\u5f0f\u8bed\u6cd5\u521b\u5efa\u5217\u8868\u5bb9\u5668\n# \u7528\u8fd9\u79cd\u8bed\u6cd5\u521b\u5efa\u5217\u8868\u4e4b\u540e\u5143\u7d20\u5df2\u7ecf\u51c6\u5907\u5c31\u7eea\u6240\u4ee5\u9700\u8981\u8017\u8d39\u8f83\u591a\u7684\u5185\u5b58\u7a7a\u95f4\nf = [x ** 2 for x in range(1, 1000)]\nprint(sys.getsizeof(f))  # \u67e5\u770b\u5bf9\u8c61\u5360\u7528\u5185\u5b58\u7684\u5b57\u8282\u6570: 8856\nprint(f)\n# \u8bf7\u6ce8\u610f\u4e0b\u9762\u7684\u4ee3\u7801\u521b\u5efa\u7684\u4e0d\u662f\u4e00\u4e2a\u5217\u8868\u800c\u662f\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61\n# \u901a\u8fc7\u751f\u6210\u5668\u53ef\u4ee5\u83b7\u53d6\u5230\u6570\u636e\u4f46\u5b83\u4e0d\u5360\u7528\u989d\u5916\u7684\u7a7a\u95f4\u5b58\u50a8\u6570\u636e\n# \u6bcf\u6b21\u9700\u8981\u6570\u636e\u7684\u65f6\u5019\u5c31\u901a\u8fc7\u5185\u90e8\u7684\u8fd0\u7b97\u5f97\u5230\u6570\u636e(\u9700\u8981\u82b1\u8d39\u989d\u5916\u7684\u65f6\u95f4)\nf = (x ** 2 for x in range(1, 1000))\nprint(sys.getsizeof(f))  # \u76f8\u6bd4\u751f\u6210\u5f0f\u751f\u6210\u5668\u4e0d\u5360\u7528\u5b58\u50a8\u6570\u636e\u7684\u7a7a\u95f4: 104\nprint(f)\nfor val in f:\n    print(val)\n</code></pre> <p>\u9664\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u751f\u6210\u5668\u8bed\u6cd5\uff0cPython\u4e2d\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u5b9a\u4e49\u751f\u6210\u5668\u7684\u65b9\u5f0f\uff0c\u5c31\u662f\u901a\u8fc7<code>yield</code>\u5173\u952e\u5b57\u5c06\u4e00\u4e2a\u666e\u901a\u51fd\u6570\u6539\u9020\u6210\u751f\u6210\u5668\u51fd\u6570\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u751f\u6210\u6590\u6ce2\u62c9\u5207\u6570\u5217\u7684\u751f\u6210\u5668\u3002\u6240\u8c13\u6590\u6ce2\u62c9\u5207\u6570\u5217\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u9012\u5f52\u7684\u65b9\u6cd5\u6765\u8fdb\u884c\u5b9a\u4e49\uff1a</p> \\[{\\displaystyle F_{0}=0}\\] \\[{\\displaystyle F_{1}=1}\\] \\[{\\displaystyle F_{n}=F_{n-1}+F_{n-2}}({n}\\geq{2})\\] <p></p> <pre><code>def fib(n):\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n        yield a\n\n\ndef main():\n    for val in fib(20):\n        print(val)\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_5","title":"\u4f7f\u7528\u5143\u7ec4","text":"<p>Python\u4e2d\u7684\u5143\u7ec4\u4e0e\u5217\u8868\u7c7b\u4f3c\u4e5f\u662f\u4e00\u79cd\u5bb9\u5668\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf\uff08\u5bf9\u8c61\uff09\u6765\u5b58\u50a8\u591a\u4e2a\u6570\u636e\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5143\u7ec4\u7684\u5143\u7d20\u4e0d\u80fd\u4fee\u6539\uff0c\u5728\u524d\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u5df2\u7ecf\u4e0d\u6b62\u4e00\u6b21\u4f7f\u7528\u8fc7\u5143\u7ec4\u4e86\u3002\u987e\u540d\u601d\u4e49\uff0c\u6211\u4eec\u628a\u591a\u4e2a\u5143\u7d20\u7ec4\u5408\u5230\u4e00\u8d77\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u5143\u7ec4\uff0c\u6240\u4ee5\u5b83\u548c\u5217\u8868\u4e00\u6837\u53ef\u4ee5\u4fdd\u5b58\u591a\u6761\u6570\u636e\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5b9a\u4e49\u548c\u4f7f\u7528\u5143\u7ec4\u3002</p> <pre><code># \u5b9a\u4e49\u5143\u7ec4\nt = ('\u9a86\u660a', 38, True, '\u56db\u5ddd\u6210\u90fd')\nprint(t)\n# \u83b7\u53d6\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\nprint(t[0])\nprint(t[3])\n# \u904d\u5386\u5143\u7ec4\u4e2d\u7684\u503c\nfor member in t:\n    print(member)\n# \u91cd\u65b0\u7ed9\u5143\u7ec4\u8d4b\u503c\n# t[0] = '\u738b\u5927\u9524'  # TypeError\n# \u53d8\u91cft\u91cd\u65b0\u5f15\u7528\u4e86\u65b0\u7684\u5143\u7ec4\u539f\u6765\u7684\u5143\u7ec4\u5c06\u88ab\u5783\u573e\u56de\u6536\nt = ('\u738b\u5927\u9524', 20, True, '\u4e91\u5357\u6606\u660e')\nprint(t)\n# \u5c06\u5143\u7ec4\u8f6c\u6362\u6210\u5217\u8868\nperson = list(t)\nprint(person)\n# \u5217\u8868\u662f\u53ef\u4ee5\u4fee\u6539\u5b83\u7684\u5143\u7d20\u7684\nperson[0] = '\u674e\u5c0f\u9f99'\nperson[1] = 25\nprint(person)\n# \u5c06\u5217\u8868\u8f6c\u6362\u6210\u5143\u7ec4\nfruits_list = ['apple', 'banana', 'orange']\nfruits_tuple = tuple(fruits_list)\nprint(fruits_tuple)\n</code></pre> <p>\u8fd9\u91cc\u6709\u4e00\u4e2a\u975e\u5e38\u503c\u5f97\u63a2\u8ba8\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u5217\u8868\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981\u5143\u7ec4\u8fd9\u6837\u7684\u7c7b\u578b\u5462\uff1f</p> <ol> <li>\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u662f\u65e0\u6cd5\u4fee\u6539\u7684\uff0c\u4e8b\u5b9e\u4e0a\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u5c24\u5176\u662f\u591a\u7ebf\u7a0b\u73af\u5883\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u4e2d\u53ef\u80fd\u66f4\u559c\u6b22\u4f7f\u7528\u7684\u662f\u90a3\u4e9b\u4e0d\u53d8\u5bf9\u8c61\uff08\u4e00\u65b9\u9762\u56e0\u4e3a\u5bf9\u8c61\u72b6\u6001\u4e0d\u80fd\u4fee\u6539\uff0c\u6240\u4ee5\u53ef\u4ee5\u907f\u514d\u7531\u6b64\u5f15\u8d77\u7684\u4e0d\u5fc5\u8981\u7684\u7a0b\u5e8f\u9519\u8bef\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e00\u4e2a\u4e0d\u53d8\u7684\u5bf9\u8c61\u8981\u6bd4\u53ef\u53d8\u7684\u5bf9\u8c61\u66f4\u52a0\u5bb9\u6613\u7ef4\u62a4\uff1b\u53e6\u4e00\u65b9\u9762\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u591f\u4fee\u6539\u4e0d\u53d8\u5bf9\u8c61\u7684\u5185\u90e8\u72b6\u6001\uff0c\u4e00\u4e2a\u4e0d\u53d8\u5bf9\u8c61\u81ea\u52a8\u5c31\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7701\u6389\u5904\u7406\u540c\u6b65\u5316\u7684\u5f00\u9500\u3002\u4e00\u4e2a\u4e0d\u53d8\u5bf9\u8c61\u53ef\u4ee5\u65b9\u4fbf\u7684\u88ab\u5171\u4eab\u8bbf\u95ee\uff09\u3002\u6240\u4ee5\u7ed3\u8bba\u5c31\u662f\uff1a\u5982\u679c\u4e0d\u9700\u8981\u5bf9\u5143\u7d20\u8fdb\u884c\u6dfb\u52a0\u3001\u5220\u9664\u3001\u4fee\u6539\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5143\u7ec4\uff0c\u5f53\u7136\u5982\u679c\u4e00\u4e2a\u65b9\u6cd5\u8981\u8fd4\u56de\u591a\u4e2a\u503c\uff0c\u4f7f\u7528\u5143\u7ec4\u4e5f\u662f\u4e0d\u9519\u7684\u9009\u62e9\u3002</li> <li>\u5143\u7ec4\u5728\u521b\u5efa\u65f6\u95f4\u548c\u5360\u7528\u7684\u7a7a\u95f4\u4e0a\u9762\u90fd\u4f18\u4e8e\u5217\u8868\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528sys\u6a21\u5757\u7684getsizeof\u51fd\u6570\u6765\u68c0\u67e5\u5b58\u50a8\u540c\u6837\u7684\u5143\u7d20\u7684\u5143\u7ec4\u548c\u5217\u8868\u5404\u81ea\u5360\u7528\u4e86\u591a\u5c11\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u6613\u505a\u5230\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728ipython\u4e2d\u4f7f\u7528\u9b54\u6cd5\u6307\u4ee4%timeit\u6765\u5206\u6790\u521b\u5efa\u540c\u6837\u5185\u5bb9\u7684\u5143\u7ec4\u548c\u5217\u8868\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u4e0b\u56fe\u662f\u6211\u7684macOS\u7cfb\u7edf\u4e0a\u6d4b\u8bd5\u7684\u7ed3\u679c\u3002</li> </ol> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_6","title":"\u4f7f\u7528\u96c6\u5408","text":"<p>Python\u4e2d\u7684\u96c6\u5408\u8ddf\u6570\u5b66\u4e0a\u7684\u96c6\u5408\u662f\u4e00\u81f4\u7684\uff0c\u4e0d\u5141\u8bb8\u6709\u91cd\u590d\u5143\u7d20\uff0c\u800c\u4e14\u53ef\u4ee5\u8fdb\u884c\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u7b49\u8fd0\u7b97\u3002</p> <p></p> <p>\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u4ee3\u7801\u6240\u793a\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u548c\u4f7f\u7528\u96c6\u5408\u3002</p> <pre><code># \u521b\u5efa\u96c6\u5408\u7684\u5b57\u9762\u91cf\u8bed\u6cd5\nset1 = {1, 2, 3, 3, 3, 2}\nprint(set1)\nprint('Length =', len(set1))\n# \u521b\u5efa\u96c6\u5408\u7684\u6784\u9020\u5668\u8bed\u6cd5(\u9762\u5411\u5bf9\u8c61\u90e8\u5206\u4f1a\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3)\nset2 = set(range(1, 10))\nset3 = set((1, 2, 3, 3, 2, 1))\nprint(set2, set3)\n# \u521b\u5efa\u96c6\u5408\u7684\u63a8\u5bfc\u5f0f\u8bed\u6cd5(\u63a8\u5bfc\u5f0f\u4e5f\u53ef\u4ee5\u7528\u4e8e\u63a8\u5bfc\u96c6\u5408)\nset4 = {num for num in range(1, 100) if num % 3 == 0 or num % 5 == 0}\nprint(set4)\n</code></pre> <p>\u5411\u96c6\u5408\u6dfb\u52a0\u5143\u7d20\u548c\u4ece\u96c6\u5408\u5220\u9664\u5143\u7d20\u3002</p> <pre><code>set1.add(4)\nset1.add(5)\nset2.update([11, 12])\nset2.discard(5)    # discard\u548cremove\u7684\u533a\u522b\u662f\uff1adiscard\u5982\u679c\u5143\u7d20\u4e0d\u5b58\u5728\uff0c\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u96c6\u5408\u4fdd\u6301\u4e0d\u53d8\u3002\nif 4 in set2:\n    set2.remove(4) # remove \u5982\u679c\u5143\u7d20\u4e0d\u5b58\u5728\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\nprint(set1, set2)\nprint(set3.pop())\nprint(set3)\n</code></pre> <p>\u96c6\u5408\u7684\u6210\u5458\u3001\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u7b49\u8fd0\u7b97\u3002</p> <pre><code># \u96c6\u5408\u7684\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u3001\u5bf9\u79f0\u5dee\u8fd0\u7b97\nprint(set1 &amp; set2)\n# print(set1.intersection(set2))\nprint(set1 | set2)\n# print(set1.union(set2))\nprint(set1 - set2)\n# print(set1.difference(set2))\nprint(set1 ^ set2)\n# print(set1.symmetric_difference(set2))\n# \u5224\u65ad\u5b50\u96c6\u548c\u8d85\u96c6\nprint(set2 &lt;= set1)\n# print(set2.issubset(set1))\nprint(set3 &lt;= set1)\n# print(set3.issubset(set1))\nprint(set1 &gt;= set2)\n# print(set1.issuperset(set2))\nprint(set1 &gt;= set3)\n# print(set1.issuperset(set3))\n</code></pre> <p>\u8bf4\u660e\uff1a Python\u4e2d\u5141\u8bb8\u901a\u8fc7\u4e00\u4e9b\u7279\u6b8a\u7684\u65b9\u6cd5\u6765\u4e3a\u67d0\u79cd\u7c7b\u578b\u6216\u6570\u636e\u7ed3\u6784\u81ea\u5b9a\u4e49\u8fd0\u7b97\u7b26\uff08\u540e\u9762\u7684\u7ae0\u8282\u4e2d\u4f1a\u8bb2\u5230\uff09\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u5bf9\u96c6\u5408\u8fdb\u884c\u8fd0\u7b97\u7684\u65f6\u5019\u53ef\u4ee5\u8c03\u7528\u96c6\u5408\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5bf9\u5e94\u7684\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982<code>&amp;</code>\u8fd0\u7b97\u7b26\u8ddfintersection\u65b9\u6cd5\u7684\u4f5c\u7528\u5c31\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u4f7f\u7528\u8fd0\u7b97\u7b26\u8ba9\u4ee3\u7801\u66f4\u52a0\u76f4\u89c2\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_7","title":"\u4f7f\u7528\u5b57\u5178","text":"<p>\u5b57\u5178\u662f\u53e6\u4e00\u79cd\u53ef\u53d8\u5bb9\u5668\u6a21\u578b\uff0cPython\u4e2d\u7684\u5b57\u5178\u8ddf\u6211\u4eec\u751f\u6d3b\u4e2d\u4f7f\u7528\u7684\u5b57\u5178\u662f\u4e00\u6837\u4e00\u6837\u7684\uff0c\u5b83\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u5bf9\u8c61\uff0c\u4e0e\u5217\u8868\u3001\u96c6\u5408\u4e0d\u540c\u7684\u662f\uff0c\u5b57\u5178\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u7531\u4e00\u4e2a\u952e\u548c\u4e00\u4e2a\u503c\u7ec4\u6210\u7684\u201c\u952e\u503c\u5bf9\u201d\uff0c\u952e\u548c\u503c\u901a\u8fc7\u5192\u53f7\u5206\u5f00\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5b9a\u4e49\u548c\u4f7f\u7528\u5b57\u5178\u3002</p> <pre><code># \u521b\u5efa\u5b57\u5178\u7684\u5b57\u9762\u91cf\u8bed\u6cd5\nscores = {'\u9a86\u660a': 95, '\u767d\u5143\u82b3': 78, '\u72c4\u4ec1\u6770': 82}\nprint(scores)\n# \u521b\u5efa\u5b57\u5178\u7684\u6784\u9020\u5668\u8bed\u6cd5\nitems1 = dict(one=1, two=2, three=3, four=4) # {'one': 1, 'two': 2, 'three': 3, 'four': 4}\n# \u901a\u8fc7zip\u51fd\u6570\u5c06\u4e24\u4e2a\u5e8f\u5217\u538b\u6210\u5b57\u5178\nitems2 = dict(zip(['a', 'b', 'c'], '123'))   # {'a': '1', 'b': '2', 'c': '3'}\n# \u521b\u5efa\u5b57\u5178\u7684\u63a8\u5bfc\u5f0f\u8bed\u6cd5\nitems3 = {num: num ** 2 for num in range(1, 10)}\nprint(items1, items2, items3)\n# \u901a\u8fc7\u952e\u53ef\u4ee5\u83b7\u53d6\u5b57\u5178\u4e2d\u5bf9\u5e94\u7684\u503c\nprint(scores['\u9a86\u660a'])\nprint(scores['\u72c4\u4ec1\u6770'])\n# \u5bf9\u5b57\u5178\u4e2d\u6240\u6709\u952e\u503c\u5bf9\u8fdb\u884c\u904d\u5386\nfor key in scores:\n    print(f'{key}: {scores[key]}')\n# \u66f4\u65b0\u5b57\u5178\u4e2d\u7684\u5143\u7d20\nscores['\u767d\u5143\u82b3'] = 65\nscores['\u8bf8\u845b\u738b\u6717'] = 71\nscores.update(\u51b7\u9762=67, \u65b9\u542f\u9e64=85)\nprint(scores)\nif '\u6b66\u5219\u5929' in scores:\n    print(scores['\u6b66\u5219\u5929'])\nprint(scores.get('\u6b66\u5219\u5929'))     # None\n# get\u65b9\u6cd5\u4e5f\u662f\u901a\u8fc7\u952e\u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u4f46\u662f\u53ef\u4ee5\u8bbe\u7f6e\u9ed8\u8ba4\u503c\nprint(scores.get('\u6b66\u5219\u5929', 60)) # 60\n# \u5220\u9664\u5b57\u5178\u4e2d\u7684\u5143\u7d20\nprint(scores.popitem())\nprint(scores.popitem())\nprint(scores.pop('\u9a86\u660a', 100))\n# \u6e05\u7a7a\u5b57\u5178\nscores.clear()\nprint(scores)\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_8","title":"\u7ec3\u4e60","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#1","title":"\u7ec3\u4e601\uff1a\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u8dd1\u9a6c\u706f\u6587\u5b57\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>import os\nimport time\n\n\ndef main():\n    content = '\u5317\u4eac\u6b22\u8fce\u4f60\u4e3a\u4f60\u5f00\u5929\u8f9f\u5730\u2026\u2026\u2026\u2026'\n    while True:\n        # \u6e05\u7406\u5c4f\u5e55\u4e0a\u7684\u8f93\u51fa\n        os.system('cls')  # os.system('clear')\n        print(content)\n        # \u4f11\u7720200\u6beb\u79d2\n        time.sleep(0.2)\n        content = content[1:] + content[0]\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#2","title":"\u7ec3\u4e602\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\u4ea7\u751f\u6307\u5b9a\u957f\u5ea6\u7684\u9a8c\u8bc1\u7801\uff0c\u9a8c\u8bc1\u7801\u7531\u5927\u5c0f\u5199\u5b57\u6bcd\u548c\u6570\u5b57\u6784\u6210\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>import random\n\n\ndef generate_code(code_len=4):\n    \"\"\"\n    \u751f\u6210\u6307\u5b9a\u957f\u5ea6\u7684\u9a8c\u8bc1\u7801\n\n    :param code_len: \u9a8c\u8bc1\u7801\u7684\u957f\u5ea6(\u9ed8\u8ba44\u4e2a\u5b57\u7b26)\n\n    :return: \u7531\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u548c\u6570\u5b57\u6784\u6210\u7684\u968f\u673a\u9a8c\u8bc1\u7801\n    \"\"\"\n    all_chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    last_pos = len(all_chars) - 1\n    code = ''\n    for _ in range(code_len):\n        index = random.randint(0, last_pos) # \u6ce8\u610f randint \u662f\u5de6\u95ed\u53f3\u95ed\u7684\n        code += all_chars[index]\n    return code\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#3","title":"\u7ec3\u4e603\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u7ed9\u5b9a\u6587\u4ef6\u540d\u7684\u540e\u7f00\u540d\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>def get_suffix(filename, has_dot=False):\n    \"\"\"\n    \u83b7\u53d6\u6587\u4ef6\u540d\u7684\u540e\u7f00\u540d\n\n    :param filename: \u6587\u4ef6\u540d\n    :param has_dot: \u8fd4\u56de\u7684\u540e\u7f00\u540d\u662f\u5426\u9700\u8981\u5e26\u70b9\n    :return: \u6587\u4ef6\u7684\u540e\u7f00\u540d\n    \"\"\"\n    pos = filename.rfind('.')\n    if 0 &lt; pos &lt; len(filename) - 1:\n        index = pos if has_dot else pos + 1\n        return filename[index:]\n    else:\n        return ''\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#4","title":"\u7ec3\u4e604\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u4f20\u5165\u7684\u5217\u8868\u4e2d\u6700\u5927\u548c\u7b2c\u4e8c\u5927\u7684\u5143\u7d20\u7684\u503c\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>def max2(x):\n    m1, m2 = (x[0], x[1]) if x[0] &gt; x[1] else (x[1], x[0])\n    for index in range(2, len(x)):\n        if x[index] &gt; m1:\n            m2 = m1\n            m1 = x[index]\n        elif x[index] &gt; m2:\n            m2 = x[index]\n    return m1, m2\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#5","title":"\u7ec3\u4e605\uff1a\u8ba1\u7b97\u6307\u5b9a\u7684\u5e74\u6708\u65e5\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>def is_leap_year(year):\n    \"\"\"\n    \u5224\u65ad\u6307\u5b9a\u7684\u5e74\u4efd\u662f\u4e0d\u662f\u95f0\u5e74\n\n    :param year: \u5e74\u4efd\n    :return: \u95f0\u5e74\u8fd4\u56deTrue\u5e73\u5e74\u8fd4\u56deFalse\n    \"\"\"\n    return year % 4 == 0 and year % 100 != 0 or year % 400 == 0\n\n\ndef which_day(year, month, date):\n    \"\"\"\n    \u8ba1\u7b97\u4f20\u5165\u7684\u65e5\u671f\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929\n\n    :param year: \u5e74\n    :param month: \u6708\n    :param date: \u65e5\n    :return: \u7b2c\u51e0\u5929\n    \"\"\"\n    days_of_month = [\n        [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n        [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    ][is_leap_year(year)]\n    total = 0\n    for index in range(month - 1):\n        total += days_of_month[index]\n    return total + date\n\n\ndef main():\n    print(which_day(1980, 11, 28))\n    print(which_day(1981, 12, 31))\n    print(which_day(2018, 1, 1))\n    print(which_day(2016, 3, 1))\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#6","title":"\u7ec3\u4e606\uff1a\u6253\u5370\u6768\u8f89\u4e09\u89d2\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>def main():\n    num = int(input('Number of rows: '))\n    yh = [[]] * num\n    for row in range(len(yh)):\n        yh[row] = [None] * (row + 1)\n        for col in range(len(yh[row])):\n            if col == 0 or col == row:\n                yh[row][col] = 1\n            else:\n                yh[row][col] = yh[row - 1][col] + yh[row - 1][col - 1]\n            print(yh[row][col], end='\\t')\n        print()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_9","title":"\u7efc\u5408\u6848\u4f8b","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#1_1","title":"\u6848\u4f8b1\uff1a\u53cc\u8272\u7403\u9009\u53f7\u3002","text":"<pre><code>from random import randrange, randint, sample\n\n\ndef display(balls):\n    \"\"\"\n    \u8f93\u51fa\u5217\u8868\u4e2d\u7684\u53cc\u8272\u7403\u53f7\u7801\n    \"\"\"\n    for index, ball in enumerate(balls):\n        if index == len(balls) - 1:\n            print('|', end=' ')\n        print('%02d' % ball, end=' ')\n    print()\n\n\ndef random_select():\n    \"\"\"\n    \u968f\u673a\u9009\u62e9\u4e00\u7ec4\u53f7\u7801\n    \"\"\"\n    red_balls = [x for x in range(1, 34)]\n    selected_balls = []\n    selected_balls = sample(red_balls, 6)\n    selected_balls.sort()\n    selected_balls.append(randint(1, 16))\n    return selected_balls\n\n\ndef main():\n    n = int(input('\u673a\u9009\u51e0\u6ce8: '))\n    for _ in range(n):\n        display(random_select())\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u8bf4\u660e\uff1a \u4e0a\u9762\u4f7f\u7528random\u6a21\u5757\u7684sample\u51fd\u6570\u6765\u5b9e\u73b0\u4ece\u5217\u8868\u4e2d\u9009\u62e9\u4e0d\u91cd\u590d\u7684n\u4e2a\u5143\u7d20\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#2_1","title":"\u7efc\u5408\u6848\u4f8b2\uff1a\u7ea6\u745f\u592b\u73af\u95ee\u9898\u3002","text":"<pre><code>\"\"\"\n\u300a\u5e78\u8fd0\u7684\u57fa\u7763\u5f92\u300b\n\u670915\u4e2a\u57fa\u7763\u5f92\u548c15\u4e2a\u975e\u57fa\u7763\u5f92\u5728\u6d77\u4e0a\u9047\u9669\uff0c\u4e3a\u4e86\u80fd\u8ba9\u4e00\u90e8\u5206\u4eba\u6d3b\u4e0b\u6765\u4e0d\u5f97\u4e0d\u5c06\u5176\u4e2d15\u4e2a\u4eba\u6254\u5230\u6d77\u91cc\u9762\u53bb\uff0c\u6709\u4e2a\u4eba\u60f3\u4e86\u4e2a\u529e\u6cd5\u5c31\u662f\u5927\u5bb6\u56f4\u6210\u4e00\u4e2a\u5708\uff0c\u7531\u67d0\u4e2a\u4eba\u5f00\u59cb\u4ece1\u62a5\u6570\uff0c\u62a5\u52309\u7684\u4eba\u5c31\u6254\u5230\u6d77\u91cc\u9762\uff0c\u4ed6\u540e\u9762\u7684\u4eba\u63a5\u7740\u4ece1\u5f00\u59cb\u62a5\u6570\uff0c\u62a5\u52309\u7684\u4eba\u7ee7\u7eed\u6254\u5230\u6d77\u91cc\u9762\uff0c\u76f4\u5230\u6254\u638915\u4e2a\u4eba\u3002\u7531\u4e8e\u4e0a\u5e1d\u7684\u4fdd\u4f51\uff0c15\u4e2a\u57fa\u7763\u5f92\u90fd\u5e78\u514d\u4e8e\u96be\uff0c\u95ee\u8fd9\u4e9b\u4eba\u6700\u5f00\u59cb\u662f\u600e\u4e48\u7ad9\u7684\uff0c\u54ea\u4e9b\u4f4d\u7f6e\u662f\u57fa\u7763\u5f92\u54ea\u4e9b\u4f4d\u7f6e\u662f\u975e\u57fa\u7763\u5f92\u3002\n\"\"\"\n\n\ndef main():\n    persons = [True] * 30\n    counter, index, number = 0, 0, 0\n    while counter &lt; 15:\n        if persons[index]:\n            number += 1\n            if number == 9:\n                persons[index] = False\n                counter += 1\n                number = 0\n        index += 1\n        index %= 30\n    for person in persons:\n        print('\u57fa' if person else '\u975e', end='')\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#3_1","title":"\u7efc\u5408\u6848\u4f8b3\uff1a\u4e95\u5b57\u68cb\u6e38\u620f\u3002","text":"<pre><code>import os\n\n\ndef print_board(board):\n    print(board['TL'] + '|' + board['TM'] + '|' + board['TR'])\n    print('-+-+-')\n    print(board['ML'] + '|' + board['MM'] + '|' + board['MR'])\n    print('-+-+-')\n    print(board['BL'] + '|' + board['BM'] + '|' + board['BR'])\n\n\ndef main():\n    init_board = {\n        'TL': ' ', 'TM': ' ', 'TR': ' ',\n        'ML': ' ', 'MM': ' ', 'MR': ' ',\n        'BL': ' ', 'BM': ' ', 'BR': ' '\n    }\n    begin = True\n    while begin:\n        curr_board = init_board.copy()\n        begin = False\n        turn = 'x'\n        counter = 0\n        os.system('clear')\n        print_board(curr_board)\n        while counter &lt; 9:\n            move = input('\u8f6e\u5230%s\u8d70\u68cb, \u8bf7\u8f93\u5165\u4f4d\u7f6e: ' % turn)\n            if curr_board[move] == ' ':\n                counter += 1\n                curr_board[move] = turn\n                if turn == 'x':\n                    turn = 'o'\n                else:\n                    turn = 'x'\n            os.system('clear')\n            print_board(curr_board)\n        choice = input('\u518d\u73a9\u4e00\u5c40?(yes|no)')\n        begin = choice == 'yes'\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u8bf4\u660e\uff1a \u6700\u540e\u8fd9\u4e2a\u6848\u4f8b\u6765\u81ea\u300aPython\u7f16\u7a0b\u5feb\u901f\u4e0a\u624b:\u8ba9\u7e41\u7410\u5de5\u4f5c\u81ea\u52a8\u5316\u300b\u4e00\u4e66\uff08\u8fd9\u672c\u4e66\u5bf9\u6709\u7f16\u7a0b\u57fa\u7840\u60f3\u8fc5\u901f\u4f7f\u7528Python\u5c06\u65e5\u5e38\u5de5\u4f5c\u81ea\u52a8\u5316\u7684\u4eba\u6765\u8bf4\u8fd8\u662f\u4e0d\u9519\u7684\u9009\u62e9\uff09\uff0c\u5bf9\u4ee3\u7801\u505a\u4e86\u4e00\u70b9\u70b9\u7684\u8c03\u6574\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/08.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/","title":"08.\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u57fa\u7840","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/08.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#_1","title":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u57fa\u7840","text":"<p>\u6d3b\u5728\u5f53\u4e0b\u7684\u7a0b\u5e8f\u5458\u5e94\u8be5\u90fd\u542c\u8fc7\"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\"\u4e00\u8bcd\uff0c\u4e5f\u7ecf\u5e38\u6709\u4eba\u95ee\u80fd\u4e0d\u80fd\u7528\u4e00\u53e5\u8bdd\u89e3\u91ca\u4e0b\u4ec0\u4e48\u662f\"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\"\uff0c\u6211\u4eec\u5148\u6765\u770b\u770b\u6bd4\u8f83\u6b63\u5f0f\u7684\u8bf4\u6cd5\u3002</p> <p>\"\u628a\u4e00\u7ec4\u6570\u636e\u7ed3\u6784\u548c\u5904\u7406\u5b83\u4eec\u7684\u65b9\u6cd5\u7ec4\u6210\u5bf9\u8c61\uff08object\uff09\uff0c\u628a\u76f8\u540c\u884c\u4e3a\u7684\u5bf9\u8c61\u5f52\u7eb3\u4e3a\u7c7b\uff08class\uff09\uff0c\u901a\u8fc7\u7c7b\u7684\u5c01\u88c5\uff08encapsulation\uff09\u9690\u85cf\u5185\u90e8\u7ec6\u8282\uff0c\u901a\u8fc7\u7ee7\u627f\uff08inheritance\uff09\u5b9e\u73b0\u7c7b\u7684\u7279\u5316\uff08specialization\uff09\u548c\u6cdb\u5316\uff08generalization\uff09\uff0c\u901a\u8fc7\u591a\u6001\uff08polymorphism\uff09\u5b9e\u73b0\u57fa\u4e8e\u5bf9\u8c61\u7c7b\u578b\u7684\u52a8\u6001\u5206\u6d3e\u3002\"</p> <p>\u8fd9\u6837\u4e00\u8bf4\u662f\u4e0d\u662f\u66f4\u4e0d\u660e\u767d\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u770b\u770b\u66f4\u901a\u4fd7\u6613\u61c2\u7684\u8bf4\u6cd5\uff0c\u4e0b\u9762\u8fd9\u6bb5\u5185\u5bb9\u6765\u81ea\u4e8e\u77e5\u4e4e\u3002</p> <p></p> <p>\u8bf4\u660e\uff1a \u4ee5\u4e0a\u7684\u5185\u5bb9\u6765\u81ea\u4e8e\u7f51\u7edc\uff0c\u4e0d\u4ee3\u8868\u4f5c\u8005\u672c\u4eba\u7684\u89c2\u70b9\u548c\u770b\u6cd5\uff0c\u4e0e\u4f5c\u8005\u672c\u4eba\u7acb\u573a\u65e0\u5173\uff0c\u76f8\u5173\u8d23\u4efb\u4e0d\u7531\u4f5c\u8005\u627f\u62c5\u3002</p> <p>\u4e4b\u524d\u6211\u4eec\u8bf4\u8fc7\"\u7a0b\u5e8f\u662f\u6307\u4ee4\u7684\u96c6\u5408\"\uff0c\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u4e66\u5199\u7684\u8bed\u53e5\u5728\u6267\u884c\u65f6\u4f1a\u53d8\u6210\u4e00\u6761\u6216\u591a\u6761\u6307\u4ee4\u7136\u540e\u7531CPU\u53bb\u6267\u884c\u3002\u5f53\u7136\u4e3a\u4e86\u7b80\u5316\u7a0b\u5e8f\u7684\u8bbe\u8ba1\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u51fd\u6570\u7684\u6982\u5ff5\uff0c\u628a\u76f8\u5bf9\u72ec\u7acb\u4e14\u7ecf\u5e38\u91cd\u590d\u4f7f\u7528\u7684\u4ee3\u7801\u653e\u7f6e\u5230\u51fd\u6570\u4e2d\uff0c\u5728\u9700\u8981\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u7684\u65f6\u5019\u53ea\u8981\u8c03\u7528\u51fd\u6570\u5373\u53ef\uff1b\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u8fc7\u4e8e\u590d\u6742\u548c\u81c3\u80bf\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5c06\u51fd\u6570\u7ee7\u7eed\u5207\u5206\u4e3a\u5b50\u51fd\u6570\u6765\u964d\u4f4e\u7cfb\u7edf\u7684\u590d\u6742\u6027\u3002\u4f46\u662f\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u53d1\u73b0\uff0c\u6240\u8c13\u7f16\u7a0b\u5c31\u662f\u7a0b\u5e8f\u5458\u6309\u7167\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\u65b9\u5f0f\u63a7\u5236\u8ba1\u7b97\u673a\u5b8c\u6210\u5404\u79cd\u4efb\u52a1\u3002\u4f46\u662f\uff0c\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u6b63\u5e38\u4eba\u7c7b\u7684\u601d\u7ef4\u6a21\u5f0f\u662f\u4e0d\u540c\u7684\uff0c\u5982\u679c\u7f16\u7a0b\u5c31\u5fc5\u987b\u5f97\u629b\u5f03\u4eba\u7c7b\u6b63\u5e38\u7684\u601d\u7ef4\u65b9\u5f0f\u53bb\u8fce\u5408\u8ba1\u7b97\u673a\uff0c\u7f16\u7a0b\u7684\u4e50\u8da3\u5c31\u5c11\u4e86\u5f88\u591a\uff0c\"\u6bcf\u4e2a\u4eba\u90fd\u5e94\u8be5\u5b66\u4e60\u7f16\u7a0b\"\u8fd9\u6837\u7684\u8c6a\u8a00\u58ee\u8bed\u5c31\u53ea\u80fd\u8bf4\u8bf4\u800c\u5df2\u3002\u5f53\u7136\uff0c\u8fd9\u4e9b\u8fd8\u4e0d\u662f\u6700\u91cd\u8981\u7684\uff0c\u6700\u91cd\u8981\u7684\u662f\u5f53\u6211\u4eec\u9700\u8981\u5f00\u53d1\u4e00\u4e2a\u590d\u6742\u7684\u7cfb\u7edf\u65f6\uff0c\u4ee3\u7801\u7684\u590d\u6742\u6027\u4f1a\u8ba9\u5f00\u53d1\u548c\u7ef4\u62a4\u5de5\u4f5c\u90fd\u53d8\u5f97\u4e3e\u6b65\u7ef4\u8270\uff0c\u6240\u4ee5\u5728\u4e0a\u4e16\u7eaa60\u5e74\u4ee3\u672b\u671f\uff0c\"\u8f6f\u4ef6\u5371\u673a\"\u3001\"\u8f6f\u4ef6\u5de5\u7a0b\"\u7b49\u4e00\u7cfb\u5217\u7684\u6982\u5ff5\u5f00\u59cb\u5728\u884c\u4e1a\u4e2d\u51fa\u73b0\u3002</p> <p>\u5f53\u7136\uff0c\u7a0b\u5e8f\u5458\u5708\u5b50\u5185\u7684\u4eba\u90fd\u77e5\u9053\uff0c\u73b0\u5b9e\u4e2d\u5e76\u6ca1\u6709\u89e3\u51b3\u4e0a\u9762\u6240\u8bf4\u7684\u8fd9\u4e9b\u95ee\u9898\u7684\"\u94f6\u5f39\"\uff0c\u771f\u6b63\u8ba9\u8f6f\u4ef6\u5f00\u53d1\u8005\u770b\u5230\u5e0c\u671b\u7684\u662f\u4e0a\u4e16\u7eaa70\u5e74\u4ee3\u8bde\u751f\u7684Smalltalk\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5f15\u5165\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u601d\u60f3\uff08\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u96cf\u5f62\u53ef\u4ee5\u8ffd\u6eaf\u5230\u66f4\u65e9\u671f\u7684Simula\u8bed\u8a00\uff09\u3002\u6309\u7167\u8fd9\u79cd\u7f16\u7a0b\u7406\u5ff5\uff0c\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u548c\u64cd\u4f5c\u6570\u636e\u7684\u51fd\u6570\u662f\u4e00\u4e2a\u903b\u8f91\u4e0a\u7684\u6574\u4f53\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c\u5bf9\u8c61\u201d\uff0c\u800c\u6211\u4eec\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u5f0f\u5c31\u662f\u521b\u5efa\u51fa\u9700\u8981\u7684\u5bf9\u8c61\u5e76\u5411\u5bf9\u8c61\u53d1\u51fa\u5404\u79cd\u5404\u6837\u7684\u6d88\u606f\uff0c\u591a\u4e2a\u5bf9\u8c61\u7684\u534f\u540c\u5de5\u4f5c\u6700\u7ec8\u53ef\u4ee5\u8ba9\u6211\u4eec\u6784\u9020\u51fa\u590d\u6742\u7684\u7cfb\u7edf\u6765\u89e3\u51b3\u73b0\u5b9e\u4e2d\u7684\u95ee\u9898\u3002</p> <p>\u8bf4\u660e\uff1a \u5f53\u7136\u9762\u5411\u5bf9\u8c61\u4e5f\u4e0d\u662f\u89e3\u51b3\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u6240\u6709\u95ee\u9898\u7684\u6700\u540e\u7684\u201c\u94f6\u5f39\u201d\uff0c\u6240\u4ee5\u4eca\u5929\u7684\u9ad8\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u51e0\u4e4e\u90fd\u63d0\u4f9b\u4e86\u5bf9\u591a\u79cd\u7f16\u7a0b\u8303\u5f0f\u7684\u652f\u6301\uff0cPython\u4e5f\u4e0d\u4f8b\u5916\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/08.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#_2","title":"\u7c7b\u548c\u5bf9\u8c61","text":"<p>\u7b80\u5355\u7684\u8bf4\uff0c\u7c7b\u662f\u5bf9\u8c61\u7684\u84dd\u56fe\u548c\u6a21\u677f\uff0c\u800c\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b\u3002\u8fd9\u4e2a\u89e3\u91ca\u867d\u7136\u6709\u70b9\u50cf\u7528\u6982\u5ff5\u5728\u89e3\u91ca\u6982\u5ff5\uff0c\u4f46\u662f\u4ece\u8fd9\u53e5\u8bdd\u6211\u4eec\u81f3\u5c11\u53ef\u4ee5\u770b\u51fa\uff0c\u7c7b\u662f\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u800c\u5bf9\u8c61\u662f\u5177\u4f53\u7684\u4e1c\u897f\u3002\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e16\u754c\u4e2d\uff0c\u4e00\u5207\u7686\u4e3a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u90fd\u6709\u5c5e\u6027\u548c\u884c\u4e3a\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u800c\u4e14\u5bf9\u8c61\u4e00\u5b9a\u5c5e\u4e8e\u67d0\u4e2a\u7c7b\uff08\u578b\uff09\u3002\u5f53\u6211\u4eec\u628a\u4e00\u5927\u5806\u62e5\u6709\u5171\u540c\u7279\u5f81\u7684\u5bf9\u8c61\u7684\u9759\u6001\u7279\u5f81\uff08\u5c5e\u6027\uff09\u548c\u52a8\u6001\u7279\u5f81\uff08\u884c\u4e3a\uff09\u90fd\u62bd\u53d6\u51fa\u6765\u540e\uff0c\u5c31\u53ef\u4ee5\u5b9a\u4e49\u51fa\u4e00\u4e2a\u53eb\u505a\u201c\u7c7b\u201d\u7684\u4e1c\u897f\u3002</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/08.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#_3","title":"\u5b9a\u4e49\u7c7b","text":"<p>\u5728Python\u4e2d\u53ef\u4ee5\u4f7f\u7528<code>class</code>\u5173\u952e\u5b57\u5b9a\u4e49\u7c7b\uff0c\u7136\u540e\u5728\u7c7b\u4e2d\u901a\u8fc7\u4e4b\u524d\u5b66\u4e60\u8fc7\u7684\u51fd\u6570\u6765\u5b9a\u4e49\u65b9\u6cd5\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u5bf9\u8c61\u7684\u52a8\u6001\u7279\u5f81\u63cf\u8ff0\u51fa\u6765\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>class Student(object):\n\n    # __init__\u662f\u4e00\u4e2a\u7279\u6b8a\u65b9\u6cd5\u7528\u4e8e\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c\n    # \u901a\u8fc7\u8fd9\u4e2a\u65b9\u6cd5\u6211\u4eec\u53ef\u4ee5\u4e3a\u5b66\u751f\u5bf9\u8c61\u7ed1\u5b9aname\u548cage\u4e24\u4e2a\u5c5e\u6027\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    def study(self, course_name):\n        print('%s\u6b63\u5728\u5b66\u4e60%s.' % (self.name, course_name))\n\n    # PEP 8\u8981\u6c42\u6807\u8bc6\u7b26\u7684\u540d\u5b57\u7528\u5168\u5c0f\u5199\u591a\u4e2a\u5355\u8bcd\u7528\u4e0b\u5212\u7ebf\u8fde\u63a5\n    # \u4f46\u662f\u90e8\u5206\u7a0b\u5e8f\u5458\u548c\u516c\u53f8\u66f4\u503e\u5411\u4e8e\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5(\u9a7c\u5cf0\u6807\u8bc6)\n    def watch_movie(self):\n        if self.age &lt; 18:\n            print('%s\u53ea\u80fd\u89c2\u770b\u300a\u718a\u51fa\u6ca1\u300b.' % self.name)\n        else:\n            print('%s\u6b63\u5728\u89c2\u770b\u5c9b\u56fd\u7231\u60c5\u5927\u7535\u5f71.' % self.name)\n</code></pre> <p>\u8bf4\u660e\uff1a \u5199\u5728\u7c7b\u4e2d\u7684\u51fd\u6570\uff0c\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\uff08\u5bf9\u8c61\u7684\uff09\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5c31\u662f\u5bf9\u8c61\u53ef\u4ee5\u63a5\u6536\u7684\u6d88\u606f\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/08.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#_4","title":"\u521b\u5efa\u548c\u4f7f\u7528\u5bf9\u8c61","text":"<p>\u5f53\u6211\u4eec\u5b9a\u4e49\u597d\u4e00\u4e2a\u7c7b\u4e4b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u5bf9\u8c61\u5e76\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\u3002</p> <pre><code>def main():\n    # \u521b\u5efa\u5b66\u751f\u5bf9\u8c61\u5e76\u6307\u5b9a\u59d3\u540d\u548c\u5e74\u9f84\n    stu1 = Student('\u9a86\u660a', 38)\n    # \u7ed9\u5bf9\u8c61\u53d1study\u6d88\u606f\n    stu1.study('Python\u7a0b\u5e8f\u8bbe\u8ba1')\n    # \u7ed9\u5bf9\u8c61\u53d1watch_av\u6d88\u606f\n    stu1.watch_movie()\n    stu2 = Student('\u738b\u5927\u9524', 15)\n    stu2.study('\u601d\u60f3\u54c1\u5fb7')\n    stu2.watch_movie()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/08.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#_5","title":"\u8bbf\u95ee\u53ef\u89c1\u6027\u95ee\u9898","text":"<p>\u5bf9\u4e8e\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6709C++\u3001Java\u3001C#\u7b49\u7f16\u7a0b\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u53ef\u80fd\u4f1a\u95ee\uff0c\u6211\u4eec\u7ed9<code>Student</code>\u5bf9\u8c61\u7ed1\u5b9a\u7684<code>name</code>\u548c<code>age</code>\u5c5e\u6027\u5230\u5e95\u5177\u6709\u600e\u6837\u7684\u8bbf\u95ee\u6743\u9650\uff08\u4e5f\u79f0\u4e3a\u53ef\u89c1\u6027\uff09\u3002\u56e0\u4e3a\u5728\u5f88\u591a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u5c06\u5bf9\u8c61\u7684\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u79c1\u6709\u7684\uff08private\uff09\u6216\u53d7\u4fdd\u62a4\u7684\uff08protected\uff09\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e0d\u5141\u8bb8\u5916\u754c\u8bbf\u95ee\uff0c\u800c\u5bf9\u8c61\u7684\u65b9\u6cd5\u901a\u5e38\u90fd\u662f\u516c\u5f00\u7684\uff08public\uff09\uff0c\u56e0\u4e3a\u516c\u5f00\u7684\u65b9\u6cd5\u5c31\u662f\u5bf9\u8c61\u80fd\u591f\u63a5\u53d7\u7684\u6d88\u606f\u3002\u5728Python\u4e2d\uff0c\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650\u53ea\u6709\u4e24\u79cd\uff0c\u4e5f\u5c31\u662f\u516c\u5f00\u7684\u548c\u79c1\u6709\u7684\uff0c\u5982\u679c\u5e0c\u671b\u5c5e\u6027\u662f\u79c1\u6709\u7684\uff0c\u5728\u7ed9\u5c5e\u6027\u547d\u540d\u65f6\u53ef\u4ee5\u7528\u4e24\u4e2a\u4e0b\u5212\u7ebf\u4f5c\u4e3a\u5f00\u5934\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u9a8c\u8bc1\u8fd9\u4e00\u70b9\u3002</p> <pre><code>class Test:\n\n    def __init__(self, foo):\n        self.__foo = foo\n\n    def __bar(self):\n        print(self.__foo)\n        print('__bar')\n\n\ndef main():\n    test = Test('hello')\n    # AttributeError: 'Test' object has no attribute '__bar'\n    test.__bar()\n    # AttributeError: 'Test' object has no attribute '__foo'\n    print(test.__foo)\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <p>\u4f46\u662f\uff0cPython\u5e76\u6ca1\u6709\u4ece\u8bed\u6cd5\u4e0a\u4e25\u683c\u4fdd\u8bc1\u79c1\u6709\u5c5e\u6027\u6216\u65b9\u6cd5\u7684\u79c1\u5bc6\u6027\uff0c\u5b83\u53ea\u662f\u7ed9\u79c1\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u6362\u4e86\u4e00\u4e2a\u540d\u5b57\u6765\u59a8\u788d\u5bf9\u5b83\u4eec\u7684\u8bbf\u95ee\uff0c\u4e8b\u5b9e\u4e0a\u5982\u679c\u4f60\u77e5\u9053\u66f4\u6362\u540d\u5b57\u7684\u89c4\u5219\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u5230\u5b83\u4eec\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u9a8c\u8bc1\u8fd9\u4e00\u70b9\u3002\u4e4b\u6240\u4ee5\u8fd9\u6837\u8bbe\u5b9a\uff0c\u53ef\u4ee5\u7528\u8fd9\u6837\u4e00\u53e5\u540d\u8a00\u52a0\u4ee5\u89e3\u91ca\uff0c\u5c31\u662f\"We are all consenting adults here\"\u3002\u56e0\u4e3a\u7edd\u5927\u591a\u6570\u7a0b\u5e8f\u5458\u90fd\u8ba4\u4e3a\u5f00\u653e\u6bd4\u5c01\u95ed\u8981\u597d\uff0c\u800c\u4e14\u7a0b\u5e8f\u5458\u8981\u81ea\u5df1\u4e3a\u81ea\u5df1\u7684\u884c\u4e3a\u8d1f\u8d23\u3002</p> <pre><code>class Test:\n\n    def __init__(self, foo):\n        self.__foo = foo\n\n    def __bar(self):\n        print(self.__foo)\n        print('__bar')\n\n\ndef main():\n    test = Test('hello')\n    test._Test__bar()\n    print(test._Test__foo)\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <p>\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u5e76\u4e0d\u5efa\u8bae\u5c06\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u79c1\u6709\u7684\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u5bfc\u81f4\u5b50\u7c7b\u65e0\u6cd5\u8bbf\u95ee\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u3002\u6240\u4ee5\u5927\u591a\u6570Python\u7a0b\u5e8f\u5458\u4f1a\u9075\u5faa\u4e00\u79cd\u547d\u540d\u60ef\u4f8b\u5c31\u662f\u8ba9\u5c5e\u6027\u540d\u4ee5\u5355\u4e0b\u5212\u7ebf\u5f00\u5934\u6765\u8868\u793a\u5c5e\u6027\u662f\u53d7\u4fdd\u62a4\u7684\uff0c\u672c\u7c7b\u4e4b\u5916\u7684\u4ee3\u7801\u5728\u8bbf\u95ee\u8fd9\u6837\u7684\u5c5e\u6027\u65f6\u5e94\u8be5\u8981\u4fdd\u6301\u614e\u91cd\u3002\u8fd9\u79cd\u505a\u6cd5\u5e76\u4e0d\u662f\u8bed\u6cd5\u4e0a\u7684\u89c4\u5219\uff0c\u5355\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u5916\u754c\u4ecd\u7136\u662f\u53ef\u4ee5\u8bbf\u95ee\u7684\uff0c\u6240\u4ee5\u66f4\u591a\u7684\u65f6\u5019\u5b83\u662f\u4e00\u79cd\u6697\u793a\u6216\u9690\u55bb\uff0c\u5173\u4e8e\u8fd9\u4e00\u70b9\u53ef\u4ee5\u770b\u770b\u300aPython - \u90a3\u4e9b\u5e74\u6211\u4eec\u8e29\u8fc7\u7684\u90a3\u4e9b\u5751\u300b\u6587\u7ae0\u4e2d\u7684\u8bb2\u89e3\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/08.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#_6","title":"\u9762\u5411\u5bf9\u8c61\u7684\u652f\u67f1","text":"<p>\u9762\u5411\u5bf9\u8c61\u6709\u4e09\u5927\u652f\u67f1\uff1a\u5c01\u88c5\u3001\u7ee7\u627f\u548c\u591a\u6001\u3002\u540e\u9762\u4e24\u4e2a\u6982\u5ff5\u5728\u4e0b\u4e00\u4e2a\u7ae0\u8282\u4e2d\u8fdb\u884c\u8be6\u7ec6\u7684\u8bf4\u660e\uff0c\u8fd9\u91cc\u6211\u4eec\u5148\u8bf4\u4e00\u4e0b\u4ec0\u4e48\u662f\u5c01\u88c5\u3002\u6211\u81ea\u5df1\u5bf9\u5c01\u88c5\u7684\u7406\u89e3\u662f\"\u9690\u85cf\u4e00\u5207\u53ef\u4ee5\u9690\u85cf\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ea\u5411\u5916\u754c\u66b4\u9732\uff08\u63d0\u4f9b\uff09\u7b80\u5355\u7684\u7f16\u7a0b\u63a5\u53e3\"\u3002\u6211\u4eec\u5728\u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u5176\u5b9e\u5c31\u662f\u628a\u6570\u636e\u548c\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\u5c01\u88c5\u8d77\u6765\u4e86\uff0c\u5728\u6211\u4eec\u521b\u5efa\u4e86\u5bf9\u8c61\u4e4b\u540e\uff0c\u53ea\u9700\u8981\u7ed9\u5bf9\u8c61\u53d1\u9001\u4e00\u4e2a\u6d88\u606f\uff08\u8c03\u7528\u65b9\u6cd5\uff09\u5c31\u53ef\u4ee5\u6267\u884c\u65b9\u6cd5\u4e2d\u7684\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u65b9\u6cd5\u7684\u540d\u5b57\u548c\u4f20\u5165\u7684\u53c2\u6570\uff08\u65b9\u6cd5\u7684\u5916\u90e8\u89c6\u56fe\uff09\uff0c\u800c\u4e0d\u9700\u8981\u77e5\u9053\u65b9\u6cd5\u5185\u90e8\u7684\u5b9e\u73b0\u7ec6\u8282\uff08\u65b9\u6cd5\u7684\u5185\u90e8\u89c6\u56fe\uff09\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/08.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#_7","title":"\u7ec3\u4e60","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/08.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#1","title":"\u7ec3\u4e601\uff1a\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u63cf\u8ff0\u6570\u5b57\u65f6\u949f\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>from time import sleep\n\n\nclass Clock(object):\n    \"\"\"\u6570\u5b57\u65f6\u949f\"\"\"\n\n    def __init__(self, hour=0, minute=0, second=0):\n        \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5\n\n        :param hour: \u65f6\n        :param minute: \u5206\n        :param second: \u79d2\n        \"\"\"\n        self._hour = hour\n        self._minute = minute\n        self._second = second\n\n    def run(self):\n        \"\"\"\u8d70\u5b57\"\"\"\n        self._second += 1\n        if self._second == 60:\n            self._second = 0\n            self._minute += 1\n            if self._minute == 60:\n                self._minute = 0\n                self._hour += 1\n                if self._hour == 24:\n                    self._hour = 0\n\n    def show(self):\n        \"\"\"\u663e\u793a\u65f6\u95f4\"\"\"\n        return '%02d:%02d:%02d' % \\\n               (self._hour, self._minute, self._second)\n\n\ndef main():\n    clock = Clock(23, 59, 58)\n    while True:\n        print(clock.show())\n        sleep(1)\n        clock.run()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/08.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/#2","title":"\u7ec3\u4e602\uff1a\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u63cf\u8ff0\u5e73\u9762\u4e0a\u7684\u70b9\u5e76\u63d0\u4f9b\u79fb\u52a8\u70b9\u548c\u8ba1\u7b97\u5230\u53e6\u4e00\u4e2a\u70b9\u8ddd\u79bb\u7684\u65b9\u6cd5\u3002","text":"<p>\u53c2\u8003\u7b54\u6848\uff1a</p> <pre><code>from math import sqrt\n\n\nclass Point(object):\n\n    def __init__(self, x=0, y=0):\n        \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5\n\n        :param x: \u6a2a\u5750\u6807\n        :param y: \u7eb5\u5750\u6807\n        \"\"\"\n        self.x = x\n        self.y = y\n\n    def move_to(self, x, y):\n        \"\"\"\u79fb\u52a8\u5230\u6307\u5b9a\u4f4d\u7f6e\n\n        :param x: \u65b0\u7684\u6a2a\u5750\u6807\n        \"param y: \u65b0\u7684\u7eb5\u5750\u6807\n        \"\"\"\n        self.x = x\n        self.y = y\n\n    def move_by(self, dx, dy):\n        \"\"\"\u79fb\u52a8\u6307\u5b9a\u7684\u589e\u91cf\n\n        :param dx: \u6a2a\u5750\u6807\u7684\u589e\u91cf\n        \"param dy: \u7eb5\u5750\u6807\u7684\u589e\u91cf\n        \"\"\"\n        self.x += dx\n        self.y += dy\n\n    def distance_to(self, other):\n        \"\"\"\u8ba1\u7b97\u4e0e\u53e6\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\n\n        :param other: \u53e6\u4e00\u4e2a\u70b9\n        \"\"\"\n        dx = self.x - other.x\n        dy = self.y - other.y\n        return sqrt(dx ** 2 + dy ** 2)\n\n    def __str__(self):\n        return '(%s, %s)' % (str(self.x), str(self.y))\n\n\ndef main():\n    p1 = Point(3, 5)\n    p2 = Point()\n    print(p1)\n    print(p2)\n    p2.move_by(-1, 2)\n    print(p2)\n    print(p1.distance_to(p2))\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u8bf4\u660e\uff1a \u672c\u7ae0\u4e2d\u7684\u63d2\u56fe\u6765\u81ea\u4e8eGrady Booch\u7b49\u8457\u4f5c\u7684\u300a\u9762\u5411\u5bf9\u8c61\u5206\u6790\u4e0e\u8bbe\u8ba1\u300b\u4e00\u4e66\uff0c\u8be5\u4e66\u662f\u8bb2\u89e3\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u7ecf\u5178\u8457\u4f5c\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u8d2d\u4e70\u548c\u9605\u8bfb\u8fd9\u672c\u4e66\u6765\u4e86\u89e3\u66f4\u591a\u7684\u9762\u5411\u5bf9\u8c61\u7684\u76f8\u5173\u77e5\u8bc6\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/09.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/","title":"09.\u9762\u5411\u5bf9\u8c61\u8fdb\u9636","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/09.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#_1","title":"\u9762\u5411\u5bf9\u8c61\u8fdb\u9636","text":"<p>\u5728\u524d\u9762\u7684\u7ae0\u8282\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86\u9762\u5411\u5bf9\u8c61\u7684\u5165\u95e8\u77e5\u8bc6\uff0c\u77e5\u9053\u4e86\u5982\u4f55\u5b9a\u4e49\u7c7b\uff0c\u5982\u4f55\u521b\u5efa\u5bf9\u8c61\u4ee5\u53ca\u5982\u4f55\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\u3002\u4e3a\u4e86\u80fd\u591f\u66f4\u597d\u7684\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u601d\u60f3\u8fdb\u884c\u7a0b\u5e8f\u5f00\u53d1\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5bf9Python\u4e2d\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8fdb\u884c\u66f4\u4e3a\u6df1\u5165\u7684\u4e86\u89e3\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/09.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#property","title":"@property\u88c5\u9970\u5668","text":"<p>\u4e4b\u524d\u6211\u4eec\u8ba8\u8bba\u8fc7Python\u4e2d\u5c5e\u6027\u548c\u65b9\u6cd5\u8bbf\u95ee\u6743\u9650\u7684\u95ee\u9898\uff0c\u867d\u7136\u6211\u4eec\u4e0d\u5efa\u8bae\u5c06\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u79c1\u6709\u7684\uff0c\u4f46\u662f\u5982\u679c\u76f4\u63a5\u5c06\u5c5e\u6027\u66b4\u9732\u7ed9\u5916\u754c\u4e5f\u662f\u6709\u95ee\u9898\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u68c0\u67e5\u8d4b\u7ed9\u5c5e\u6027\u7684\u503c\u662f\u5426\u6709\u6548\u3002\u6211\u4eec\u4e4b\u524d\u7684\u5efa\u8bae\u662f\u5c06\u5c5e\u6027\u547d\u540d\u4ee5\u5355\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u6765\u6697\u793a\u5c5e\u6027\u662f\u53d7\u4fdd\u62a4\u7684\uff0c\u4e0d\u5efa\u8bae\u5916\u754c\u76f4\u63a5\u8bbf\u95ee\uff0c\u90a3\u4e48\u5982\u679c\u60f3\u8bbf\u95ee\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027\u7684getter\uff08\u8bbf\u95ee\u5668\uff09\u548csetter\uff08\u4fee\u6539\u5668\uff09\u65b9\u6cd5\u8fdb\u884c\u5bf9\u5e94\u7684\u64cd\u4f5c\u3002\u5982\u679c\u8981\u505a\u5230\u8fd9\u70b9\uff0c\u5c31\u53ef\u4ee5\u8003\u8651\u4f7f\u7528@property\u5305\u88c5\u5668\u6765\u5305\u88c5getter\u548csetter\u65b9\u6cd5\uff0c\u4f7f\u5f97\u5bf9\u5c5e\u6027\u7684\u8bbf\u95ee\u65e2\u5b89\u5168\u53c8\u65b9\u4fbf\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>class Person(object):\n\n    def __init__(self, name, age):\n        self._name = name\n        self._age = age\n\n    # \u8bbf\u95ee\u5668 - getter\u65b9\u6cd5\n    @property\n    def name(self):\n        return self._name\n\n    # \u8bbf\u95ee\u5668 - getter\u65b9\u6cd5\n    @property\n    def age(self):\n        return self._age\n\n    # \u4fee\u6539\u5668 - setter\u65b9\u6cd5\n    @age.setter\n    def age(self, age):\n        self._age = age\n\n    def play(self):\n        if self._age &lt;= 16:\n            print('%s\u6b63\u5728\u73a9\u98de\u884c\u68cb.' % self._name)\n        else:\n            print('%s\u6b63\u5728\u73a9\u6597\u5730\u4e3b.' % self._name)\n\n\ndef main():\n    person = Person('\u738b\u5927\u9524', 12)\n    person.play()\n    person.age = 22\n    person.play()\n    # person.name = '\u767d\u5143\u82b3'  # AttributeError: can't set attribute\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/09.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#__slots__","title":"__slots__\u9b54\u6cd5","text":"<p>\u6211\u4eec\u8bb2\u5230\u8fd9\u91cc\uff0c\u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u5df2\u7ecf\u610f\u8bc6\u5230\uff0cPython\u662f\u4e00\u95e8\u52a8\u6001\u8bed\u8a00\u3002\u901a\u5e38\uff0c\u52a8\u6001\u8bed\u8a00\u5141\u8bb8\u6211\u4eec\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7ed9\u5bf9\u8c61\u7ed1\u5b9a\u65b0\u7684\u5c5e\u6027\u6216\u65b9\u6cd5\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5bf9\u5df2\u7ecf\u7ed1\u5b9a\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u8fdb\u884c\u89e3\u7ed1\u5b9a\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u9700\u8981\u9650\u5b9a\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u5bf9\u8c61\u53ea\u80fd\u7ed1\u5b9a\u67d0\u4e9b\u5c5e\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u7c7b\u4e2d\u5b9a\u4e49__slots__\u53d8\u91cf\u6765\u8fdb\u884c\u9650\u5b9a\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f__slots__\u7684\u9650\u5b9a\u53ea\u5bf9\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u751f\u6548\uff0c\u5bf9\u5b50\u7c7b\u5e76\u4e0d\u8d77\u4efb\u4f55\u4f5c\u7528\u3002</p> <pre><code>class Person(object):\n\n    # \u9650\u5b9aPerson\u5bf9\u8c61\u53ea\u80fd\u7ed1\u5b9a_name, _age\u548c_gender\u5c5e\u6027\n    __slots__ = ('_name', '_age', '_gender')\n\n    def __init__(self, name, age):\n        self._name = name\n        self._age = age\n\n    @property\n    def name(self):\n        return self._name\n\n    @property\n    def age(self):\n        return self._age\n\n    @age.setter\n    def age(self, age):\n        self._age = age\n\n    def play(self):\n        if self._age &lt;= 16:\n            print('%s\u6b63\u5728\u73a9\u98de\u884c\u68cb.' % self._name)\n        else:\n            print('%s\u6b63\u5728\u73a9\u6597\u5730\u4e3b.' % self._name)\n\n\ndef main():\n    person = Person('\u738b\u5927\u9524', 22)\n    person.play()\n    person._gender = '\u7537'\n    # AttributeError: 'Person' object has no attribute '_is_gay'\n    # person._is_gay = True\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/09.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#_2","title":"\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5","text":"<p>\u4e4b\u524d\uff0c\u6211\u4eec\u5728\u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u90fd\u662f\u5bf9\u8c61\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u662f\u53d1\u9001\u7ed9\u5bf9\u8c61\u7684\u6d88\u606f\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5199\u5728\u7c7b\u4e2d\u7684\u65b9\u6cd5\u5e76\u4e0d\u9700\u8981\u90fd\u662f\u5bf9\u8c61\u65b9\u6cd5\uff0c\u4f8b\u5982\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u201c\u4e09\u89d2\u5f62\u201d\u7c7b\uff0c\u901a\u8fc7\u4f20\u5165\u4e09\u6761\u8fb9\u957f\u6765\u6784\u9020\u4e09\u89d2\u5f62\uff0c\u5e76\u63d0\u4f9b\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u4f20\u5165\u7684\u4e09\u6761\u8fb9\u957f\u672a\u5fc5\u80fd\u6784\u9020\u51fa\u4e09\u89d2\u5f62\u5bf9\u8c61\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5148\u5199\u4e00\u4e2a\u65b9\u6cd5\u6765\u9a8c\u8bc1\u4e09\u6761\u8fb9\u957f\u662f\u5426\u53ef\u4ee5\u6784\u6210\u4e09\u89d2\u5f62\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5f88\u663e\u7136\u5c31\u4e0d\u662f\u5bf9\u8c61\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5728\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u65f6\u4e09\u89d2\u5f62\u5bf9\u8c61\u5c1a\u672a\u521b\u5efa\u51fa\u6765\uff08\u56e0\u4e3a\u90fd\u4e0d\u77e5\u9053\u4e09\u6761\u8fb9\u80fd\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62\uff09\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5c5e\u4e8e\u4e09\u89d2\u5f62\u7c7b\u800c\u5e76\u4e0d\u5c5e\u4e8e\u4e09\u89d2\u5f62\u5bf9\u8c61\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9759\u6001\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>from math import sqrt\n\n\nclass Triangle(object):\n\n    def __init__(self, a, b, c):\n        self._a = a\n        self._b = b\n        self._c = c\n\n    @staticmethod\n    def is_valid(a, b, c):\n        return a + b &gt; c and b + c &gt; a and a + c &gt; b\n\n    def perimeter(self):\n        return self._a + self._b + self._c\n\n    def area(self):\n        half = self.perimeter() / 2\n        return sqrt(half * (half - self._a) *\n                    (half - self._b) * (half - self._c))\n\n\ndef main():\n    a, b, c = 3, 4, 5\n    # \u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\u90fd\u662f\u901a\u8fc7\u7ed9\u7c7b\u53d1\u6d88\u606f\u6765\u8c03\u7528\u7684\n    if Triangle.is_valid(a, b, c):\n        t = Triangle(a, b, c)\n        print(t.perimeter())\n        # \u4e5f\u53ef\u4ee5\u901a\u8fc7\u7ed9\u7c7b\u53d1\u6d88\u606f\u6765\u8c03\u7528\u5bf9\u8c61\u65b9\u6cd5\u4f46\u662f\u8981\u4f20\u5165\u63a5\u6536\u6d88\u606f\u7684\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\n        # print(Triangle.perimeter(t))\n        print(t.area())\n        # print(Triangle.area(t))\n    else:\n        print('\u65e0\u6cd5\u6784\u6210\u4e09\u89d2\u5f62.')\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u548c\u9759\u6001\u65b9\u6cd5\u6bd4\u8f83\u7c7b\u4f3c\uff0cPython\u8fd8\u53ef\u4ee5\u5728\u7c7b\u4e2d\u5b9a\u4e49\u7c7b\u65b9\u6cd5\uff0c\u7c7b\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u7ea6\u5b9a\u540d\u4e3acls\uff0c\u5b83\u4ee3\u8868\u7684\u662f\u5f53\u524d\u7c7b\u76f8\u5173\u7684\u4fe1\u606f\u7684\u5bf9\u8c61\uff08\u7c7b\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6709\u7684\u5730\u65b9\u4e5f\u79f0\u4e4b\u4e3a\u7c7b\u7684\u5143\u6570\u636e\u5bf9\u8c61\uff09\uff0c\u901a\u8fc7\u8fd9\u4e2a\u53c2\u6570\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u548c\u7c7b\u76f8\u5173\u7684\u4fe1\u606f\u5e76\u4e14\u53ef\u4ee5\u521b\u5efa\u51fa\u7c7b\u7684\u5bf9\u8c61\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>from time import time, localtime, sleep\n\n\nclass Clock(object):\n    \"\"\"\u6570\u5b57\u65f6\u949f\"\"\"\n\n    def __init__(self, hour=0, minute=0, second=0):\n        self._hour = hour\n        self._minute = minute\n        self._second = second\n\n    @classmethod\n    def now(cls):\n        ctime = localtime(time())\n        return cls(ctime.tm_hour, ctime.tm_min, ctime.tm_sec)\n    # cls \u4ee3\u8868\u7c7b\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u7c7b\u7684\u5b9e\u4f8b\u3002\u7c7b\u65b9\u6cd5\u662f\u7ed1\u5b9a\u5230\u7c7b\u800c\u4e0d\u662f\u5b9e\u4f8b\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\n    # \u901a\u8fc7\u7c7b\u540d\u76f4\u63a5\u8c03\u7528\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u7684\u5b9e\u4f8b\u8c03\u7528\u3002cls \u5c31\u597d\u4f3c\u5b9e\u4f8b\u4e2d\u7684 self\u3002\n\n    def run(self):\n        \"\"\"\u8d70\u5b57\"\"\"\n        self._second += 1\n        if self._second == 60:\n            self._second = 0\n            self._minute += 1\n            if self._minute == 60:\n                self._minute = 0\n                self._hour += 1\n                if self._hour == 24:\n                    self._hour = 0\n\n    def show(self):\n        \"\"\"\u663e\u793a\u65f6\u95f4\"\"\"\n        return '%02d:%02d:%02d' % \\\n               (self._hour, self._minute, self._second)\n\n\ndef main():\n    # \u901a\u8fc7\u7c7b\u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61\u5e76\u83b7\u53d6\u7cfb\u7edf\u65f6\u95f4\n    clock = Clock.now()\n    while True:\n        print(clock.show())\n        sleep(1)\n        clock.run()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/09.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#_3","title":"\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb","text":"<p>\u7b80\u5355\u7684\u8bf4\uff0c\u7c7b\u548c\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\u6709\u4e09\u79cd\uff1ais-a\u3001has-a\u548cuse-a\u5173\u7cfb\u3002</p> <ul> <li>is-a\u5173\u7cfb\u4e5f\u53eb\u7ee7\u627f\u6216\u6cdb\u5316\uff0c\u6bd4\u5982\u5b66\u751f\u548c\u4eba\u7684\u5173\u7cfb\u3001\u624b\u673a\u548c\u7535\u5b50\u4ea7\u54c1\u7684\u5173\u7cfb\u90fd\u5c5e\u4e8e\u7ee7\u627f\u5173\u7cfb\u3002</li> <li>has-a\u5173\u7cfb\u901a\u5e38\u79f0\u4e4b\u4e3a\u5173\u8054\uff0c\u6bd4\u5982\u90e8\u95e8\u548c\u5458\u5de5\u7684\u5173\u7cfb\uff0c\u6c7d\u8f66\u548c\u5f15\u64ce\u7684\u5173\u7cfb\u90fd\u5c5e\u4e8e\u5173\u8054\u5173\u7cfb\uff1b\u5173\u8054\u5173\u7cfb\u5982\u679c\u662f\u6574\u4f53\u548c\u90e8\u5206\u7684\u5173\u8054\uff0c\u90a3\u4e48\u6211\u4eec\u79f0\u4e4b\u4e3a\u805a\u5408\u5173\u7cfb\uff1b\u5982\u679c\u6574\u4f53\u8fdb\u4e00\u6b65\u8d1f\u8d23\u4e86\u90e8\u5206\u7684\u751f\u547d\u5468\u671f\uff08\u6574\u4f53\u548c\u90e8\u5206\u662f\u4e0d\u53ef\u5206\u5272\u7684\uff0c\u540c\u65f6\u540c\u5728\u4e5f\u540c\u65f6\u6d88\u4ea1\uff09\uff0c\u90a3\u4e48\u8fd9\u79cd\u5c31\u662f\u6700\u5f3a\u7684\u5173\u8054\u5173\u7cfb\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5408\u6210\u5173\u7cfb\u3002</li> <li>use-a\u5173\u7cfb\u901a\u5e38\u79f0\u4e4b\u4e3a\u4f9d\u8d56\uff0c\u6bd4\u5982\u53f8\u673a\u6709\u4e00\u4e2a\u9a7e\u9a76\u7684\u884c\u4e3a\uff08\u65b9\u6cd5\uff09\uff0c\u5176\u4e2d\uff08\u7684\u53c2\u6570\uff09\u4f7f\u7528\u5230\u4e86\u6c7d\u8f66\uff0c\u90a3\u4e48\u53f8\u673a\u548c\u6c7d\u8f66\u7684\u5173\u7cfb\u5c31\u662f\u4f9d\u8d56\u5173\u7cfb\u3002</li> </ul> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u53eb\u505aUML\uff08\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff09\u7684\u4e1c\u897f\u6765\u8fdb\u884c\u9762\u5411\u5bf9\u8c61\u5efa\u6a21\uff0c\u5176\u4e2d\u4e00\u9879\u91cd\u8981\u7684\u5de5\u4f5c\u5c31\u662f\u628a\u7c7b\u548c\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\u7528\u6807\u51c6\u5316\u7684\u56fe\u5f62\u7b26\u53f7\u63cf\u8ff0\u51fa\u6765\u3002\u5173\u4e8eUML\u6211\u4eec\u5728\u8fd9\u91cc\u4e0d\u505a\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u300aUML\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u57fa\u7840\u300b\u4e00\u4e66\u3002</p> <p></p> <p></p> <p>\u5229\u7528\u7c7b\u4e4b\u95f4\u7684\u8fd9\u4e9b\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5df2\u6709\u7c7b\u7684\u57fa\u7840\u4e0a\u6765\u5b8c\u6210\u67d0\u4e9b\u64cd\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u5728\u5df2\u6709\u7c7b\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u65b0\u7684\u7c7b\uff0c\u8fd9\u4e9b\u90fd\u662f\u5b9e\u73b0\u4ee3\u7801\u590d\u7528\u7684\u91cd\u8981\u624b\u6bb5\u3002\u590d\u7528\u73b0\u6709\u7684\u4ee3\u7801\u4e0d\u4ec5\u53ef\u4ee5\u51cf\u5c11\u5f00\u53d1\u7684\u5de5\u4f5c\u91cf\uff0c\u4e5f\u6709\u5229\u4e8e\u4ee3\u7801\u7684\u7ba1\u7406\u548c\u7ef4\u62a4\uff0c\u8fd9\u662f\u6211\u4eec\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u90fd\u4f1a\u4f7f\u7528\u5230\u7684\u6280\u672f\u624b\u6bb5\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/09.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#_4","title":"\u7ee7\u627f\u548c\u591a\u6001","text":"<p>\u521a\u624d\u6211\u4eec\u63d0\u5230\u4e86\uff0c\u53ef\u4ee5\u5728\u5df2\u6709\u7c7b\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u65b0\u7c7b\uff0c\u8fd9\u5176\u4e2d\u7684\u4e00\u79cd\u505a\u6cd5\u5c31\u662f\u8ba9\u4e00\u4e2a\u7c7b\u4ece\u53e6\u4e00\u4e2a\u7c7b\u90a3\u91cc\u5c06\u5c5e\u6027\u548c\u65b9\u6cd5\u76f4\u63a5\u7ee7\u627f\u4e0b\u6765\uff0c\u4ece\u800c\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u7684\u7f16\u5199\u3002\u63d0\u4f9b\u7ee7\u627f\u4fe1\u606f\u7684\u6211\u4eec\u79f0\u4e4b\u4e3a\u7236\u7c7b\uff0c\u4e5f\u53eb\u8d85\u7c7b\u6216\u57fa\u7c7b\uff1b\u5f97\u5230\u7ee7\u627f\u4fe1\u606f\u7684\u6211\u4eec\u79f0\u4e4b\u4e3a\u5b50\u7c7b\uff0c\u4e5f\u53eb\u6d3e\u751f\u7c7b\u6216\u884d\u751f\u7c7b\u3002\u5b50\u7c7b\u9664\u4e86\u7ee7\u627f\u7236\u7c7b\u63d0\u4f9b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7279\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u6240\u4ee5\u5b50\u7c7b\u6bd4\u7236\u7c7b\u62e5\u6709\u7684\u66f4\u591a\u7684\u80fd\u529b\uff0c\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u7528\u5b50\u7c7b\u5bf9\u8c61\u53bb\u66ff\u6362\u6389\u4e00\u4e2a\u7236\u7c7b\u5bf9\u8c61\uff0c\u8fd9\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u4e00\u4e2a\u5e38\u89c1\u7684\u884c\u4e3a\uff0c\u5bf9\u5e94\u7684\u539f\u5219\u79f0\u4e4b\u4e3a\u91cc\u6c0f\u66ff\u6362\u539f\u5219\u3002\u4e0b\u9762\u6211\u4eec\u5148\u770b\u4e00\u4e2a\u7ee7\u627f\u7684\u4f8b\u5b50\u3002</p> <pre><code>class Person(object):\n    \"\"\"\u4eba\"\"\"\n\n    def __init__(self, name, age):\n        self._name = name\n        self._age = age\n\n    @property\n    def name(self):\n        return self._name\n\n    @property\n    def age(self):\n        return self._age\n\n    @age.setter\n    def age(self, age):\n        self._age = age\n\n    def play(self):\n        print('%s\u6b63\u5728\u6109\u5feb\u7684\u73a9\u800d.' % self._name)\n\n    def watch_av(self):\n        if self._age &gt;= 18:\n            print('%s\u6b63\u5728\u89c2\u770b\u7231\u60c5\u52a8\u4f5c\u7247.' % self._name)\n        else:\n            print('%s\u53ea\u80fd\u89c2\u770b\u300a\u718a\u51fa\u6ca1\u300b.' % self._name)\n\n\nclass Student(Person):\n    \"\"\"\u5b66\u751f\"\"\"\n\n    def __init__(self, name, age, grade):\n        super().__init__(name, age)\n        self._grade = grade\n\n    @property\n    def grade(self):\n        return self._grade\n\n    @grade.setter\n    def grade(self, grade):\n        self._grade = grade\n\n    def study(self, course):\n        print('%s\u7684%s\u6b63\u5728\u5b66\u4e60%s.' % (self._grade, self._name, course))\n\n\nclass Teacher(Person):\n    \"\"\"\u8001\u5e08\"\"\"\n\n    def __init__(self, name, age, title):\n        super().__init__(name, age)\n        self._title = title\n\n    @property\n    def title(self):\n        return self._title\n\n    @title.setter\n    def title(self, title):\n        self._title = title\n\n    def teach(self, course):\n        print('%s%s\u6b63\u5728\u8bb2%s.' % (self._name, self._title, course))\n\n\ndef main():\n    stu = Student('\u738b\u5927\u9524', 15, '\u521d\u4e09')\n    stu.study('\u6570\u5b66')\n    stu.watch_av()\n    t = Teacher('\u9a86\u660a', 38, '\u7816\u5bb6')\n    t.teach('Python\u7a0b\u5e8f\u8bbe\u8ba1')\n    t.watch_av()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u5b50\u7c7b\u5728\u7ee7\u627f\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\u540e\uff0c\u53ef\u4ee5\u5bf9\u7236\u7c7b\u5df2\u6709\u7684\u65b9\u6cd5\u7ed9\u51fa\u65b0\u7684\u5b9e\u73b0\u7248\u672c\uff0c\u8fd9\u4e2a\u52a8\u4f5c\u79f0\u4e4b\u4e3a\u65b9\u6cd5\u91cd\u5199\uff08override\uff09\u3002\u901a\u8fc7\u65b9\u6cd5\u91cd\u5199\u6211\u4eec\u53ef\u4ee5\u8ba9\u7236\u7c7b\u7684\u540c\u4e00\u4e2a\u884c\u4e3a\u5728\u5b50\u7c7b\u4e2d\u62e5\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u7248\u672c\uff0c\u5f53\u6211\u4eec\u8c03\u7528\u8fd9\u4e2a\u7ecf\u8fc7\u5b50\u7c7b\u91cd\u5199\u7684\u65b9\u6cd5\u65f6\uff0c\u4e0d\u540c\u7684\u5b50\u7c7b\u5bf9\u8c61\u4f1a\u8868\u73b0\u51fa\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u8fd9\u4e2a\u5c31\u662f\u591a\u6001\uff08poly-morphism\uff09\u3002</p> <pre><code>from abc import ABCMeta, abstractmethod\n\n\nclass Pet(object, metaclass=ABCMeta):\n    \"\"\"\u5ba0\u7269\"\"\"\n\n    def __init__(self, nickname):\n        self._nickname = nickname\n\n    @abstractmethod\n    def make_voice(self):\n        \"\"\"\u53d1\u51fa\u58f0\u97f3\"\"\"\n        pass\n\n\nclass Dog(Pet):\n    \"\"\"\u72d7\"\"\"\n\n    def make_voice(self):\n        print('%s: \u6c6a\u6c6a\u6c6a...' % self._nickname)\n\n\nclass Cat(Pet):\n    \"\"\"\u732b\"\"\"\n\n    def make_voice(self):\n        print('%s: \u55b5...\u55b5...' % self._nickname)\n\n\ndef main():\n    pets = [Dog('\u65fa\u8d22'), Cat('\u51ef\u8482'), Dog('\u5927\u9ec4')]\n    for pet in pets:\n        pet.make_voice()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06<code>Pet</code>\u7c7b\u5904\u7406\u6210\u4e86\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u6240\u8c13\u62bd\u8c61\u7c7b\u5c31\u662f\u4e0d\u80fd\u591f\u521b\u5efa\u5bf9\u8c61\u7684\u7c7b\uff0c\u8fd9\u79cd\u7c7b\u7684\u5b58\u5728\u5c31\u662f\u4e13\u95e8\u4e3a\u4e86\u8ba9\u5176\u4ed6\u7c7b\u53bb\u7ee7\u627f\u5b83\u3002Python\u4ece\u8bed\u6cd5\u5c42\u9762\u5e76\u6ca1\u6709\u50cfJava\u6216C#\u90a3\u6837\u63d0\u4f9b\u5bf9\u62bd\u8c61\u7c7b\u7684\u652f\u6301\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>abc</code>\u6a21\u5757\u7684<code>ABCMeta</code>\u5143\u7c7b\u548c<code>abstractmethod</code>\u5305\u88c5\u5668\u6765\u8fbe\u5230\u62bd\u8c61\u7c7b\u7684\u6548\u679c\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u5b58\u5728\u62bd\u8c61\u65b9\u6cd5\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u5c31\u4e0d\u80fd\u591f\u5b9e\u4f8b\u5316\uff08\u521b\u5efa\u5bf9\u8c61\uff09\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c<code>Dog</code>\u548c<code>Cat</code>\u4e24\u4e2a\u5b50\u7c7b\u5206\u522b\u5bf9<code>Pet</code>\u7c7b\u4e2d\u7684<code>make_voice</code>\u62bd\u8c61\u65b9\u6cd5\u8fdb\u884c\u4e86\u91cd\u5199\u5e76\u7ed9\u51fa\u4e86\u4e0d\u540c\u7684\u5b9e\u73b0\u7248\u672c\uff0c\u5f53\u6211\u4eec\u5728<code>main</code>\u51fd\u6570\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\u65f6\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u8868\u73b0\u51fa\u4e86\u591a\u6001\u884c\u4e3a\uff08\u540c\u6837\u7684\u65b9\u6cd5\u505a\u4e86\u4e0d\u540c\u7684\u4e8b\u60c5\uff09\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/09.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#_5","title":"\u7efc\u5408\u6848\u4f8b","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/09.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#1","title":"\u6848\u4f8b1\uff1a\u5965\u7279\u66fc\u6253\u5c0f\u602a\u517d\u3002","text":"<pre><code>from abc import ABCMeta, abstractmethod\nfrom random import randint, randrange\n\n\nclass Fighter(object, metaclass=ABCMeta):\n    \"\"\"\u6218\u6597\u8005\"\"\"\n\n    # \u901a\u8fc7__slots__\u9b54\u6cd5\u9650\u5b9a\u5bf9\u8c61\u53ef\u4ee5\u7ed1\u5b9a\u7684\u6210\u5458\u53d8\u91cf\n    __slots__ = ('_name', '_hp')\n\n    def __init__(self, name, hp):\n        \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5\n\n        :param name: \u540d\u5b57\n        :param hp: \u751f\u547d\u503c\n        \"\"\"\n        self._name = name\n        self._hp = hp\n\n    @property\n    def name(self):\n        return self._name\n\n    @property\n    def hp(self):\n        return self._hp\n\n    @hp.setter\n    def hp(self, hp):\n        self._hp = hp if hp &gt;= 0 else 0\n\n    @property\n    def alive(self):\n        return self._hp &gt; 0\n\n    @abstractmethod\n    def attack(self, other):\n        \"\"\"\u653b\u51fb\n\n        :param other: \u88ab\u653b\u51fb\u7684\u5bf9\u8c61\n        \"\"\"\n        pass\n\n\nclass Ultraman(Fighter):\n    \"\"\"\u5965\u7279\u66fc\"\"\"\n\n    __slots__ = ('_name', '_hp', '_mp')\n\n    def __init__(self, name, hp, mp):\n        \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5\n\n        :param name: \u540d\u5b57\n        :param hp: \u751f\u547d\u503c\n        :param mp: \u9b54\u6cd5\u503c\n        \"\"\"\n        super().__init__(name, hp)\n        self._mp = mp\n\n    def attack(self, other):\n        other.hp -= randint(15, 25)\n\n    def huge_attack(self, other):\n        \"\"\"\u7a76\u6781\u5fc5\u6740\u6280(\u6253\u6389\u5bf9\u65b9\u81f3\u5c1150\u70b9\u6216\u56db\u5206\u4e4b\u4e09\u7684\u8840)\n\n        :param other: \u88ab\u653b\u51fb\u7684\u5bf9\u8c61\n\n        :return: \u4f7f\u7528\u6210\u529f\u8fd4\u56deTrue\u5426\u5219\u8fd4\u56deFalse\n        \"\"\"\n        if self._mp &gt;= 50:\n            self._mp -= 50\n            injury = other.hp * 3 // 4\n            injury = injury if injury &gt;= 50 else 50\n            other.hp -= injury\n            return True\n        else:\n            self.attack(other)\n            return False\n\n    def magic_attack(self, others):\n        \"\"\"\u9b54\u6cd5\u653b\u51fb\n\n        :param others: \u88ab\u653b\u51fb\u7684\u7fa4\u4f53\n\n        :return: \u4f7f\u7528\u9b54\u6cd5\u6210\u529f\u8fd4\u56deTrue\u5426\u5219\u8fd4\u56deFalse\n        \"\"\"\n        if self._mp &gt;= 20:\n            self._mp -= 20\n            for temp in others:\n                if temp.alive:\n                    temp.hp -= randint(10, 15)\n            return True\n        else:\n            return False\n\n    def resume(self):\n        \"\"\"\u6062\u590d\u9b54\u6cd5\u503c\"\"\"\n        incr_point = randint(1, 10)\n        self._mp += incr_point\n        return incr_point\n\n    def __str__(self):\n        return '~~~%s\u5965\u7279\u66fc~~~\\n' % self._name + \\\n            '\u751f\u547d\u503c: %d\\n' % self._hp + \\\n            '\u9b54\u6cd5\u503c: %d\\n' % self._mp\n\n\nclass Monster(Fighter):\n    \"\"\"\u5c0f\u602a\u517d\"\"\"\n\n    __slots__ = ('_name', '_hp')\n\n    def attack(self, other):\n        other.hp -= randint(10, 20)\n\n    def __str__(self):\n        return '~~~%s\u5c0f\u602a\u517d~~~\\n' % self._name + \\\n            '\u751f\u547d\u503c: %d\\n' % self._hp\n\n\ndef is_any_alive(monsters):\n    \"\"\"\u5224\u65ad\u6709\u6ca1\u6709\u5c0f\u602a\u517d\u662f\u6d3b\u7740\u7684\"\"\"\n    for monster in monsters:\n        if monster.alive &gt; 0:\n            return True\n    return False\n\n\ndef select_alive_one(monsters):\n    \"\"\"\u9009\u4e2d\u4e00\u53ea\u6d3b\u7740\u7684\u5c0f\u602a\u517d\"\"\"\n    monsters_len = len(monsters)\n    while True:\n        index = randrange(monsters_len)\n        monster = monsters[index]\n        if monster.alive &gt; 0:\n            return monster\n\n\ndef display_info(ultraman, monsters):\n    \"\"\"\u663e\u793a\u5965\u7279\u66fc\u548c\u5c0f\u602a\u517d\u7684\u4fe1\u606f\"\"\"\n    print(ultraman)\n    for monster in monsters:\n        print(monster, end='')\n\n\ndef main():\n    u = Ultraman('\u9a86\u660a', 1000, 120)\n    m1 = Monster('\u72c4\u4ec1\u6770', 250)\n    m2 = Monster('\u767d\u5143\u82b3', 500)\n    m3 = Monster('\u738b\u5927\u9524', 750)\n    ms = [m1, m2, m3]\n    fight_round = 1\n    while u.alive and is_any_alive(ms):\n        print('========\u7b2c%02d\u56de\u5408========' % fight_round)\n        m = select_alive_one(ms)  # \u9009\u4e2d\u4e00\u53ea\u5c0f\u602a\u517d\n        skill = randint(1, 10)   # \u901a\u8fc7\u968f\u673a\u6570\u9009\u62e9\u4f7f\u7528\u54ea\u79cd\u6280\u80fd\n        if skill &lt;= 6:  # 60%\u7684\u6982\u7387\u4f7f\u7528\u666e\u901a\u653b\u51fb\n            print('%s\u4f7f\u7528\u666e\u901a\u653b\u51fb\u6253\u4e86%s.' % (u.name, m.name))\n            u.attack(m)\n            print('%s\u7684\u9b54\u6cd5\u503c\u6062\u590d\u4e86%d\u70b9.' % (u.name, u.resume()))\n        elif skill &lt;= 9:  # 30%\u7684\u6982\u7387\u4f7f\u7528\u9b54\u6cd5\u653b\u51fb(\u53ef\u80fd\u56e0\u9b54\u6cd5\u503c\u4e0d\u8db3\u800c\u5931\u8d25)\n            if u.magic_attack(ms):\n                print('%s\u4f7f\u7528\u4e86\u9b54\u6cd5\u653b\u51fb.' % u.name)\n            else:\n                print('%s\u4f7f\u7528\u9b54\u6cd5\u5931\u8d25.' % u.name)\n        else:  # 10%\u7684\u6982\u7387\u4f7f\u7528\u7a76\u6781\u5fc5\u6740\u6280(\u5982\u679c\u9b54\u6cd5\u503c\u4e0d\u8db3\u5219\u4f7f\u7528\u666e\u901a\u653b\u51fb)\n            if u.huge_attack(m):\n                print('%s\u4f7f\u7528\u7a76\u6781\u5fc5\u6740\u6280\u8650\u4e86%s.' % (u.name, m.name))\n            else:\n                print('%s\u4f7f\u7528\u666e\u901a\u653b\u51fb\u6253\u4e86%s.' % (u.name, m.name))\n                print('%s\u7684\u9b54\u6cd5\u503c\u6062\u590d\u4e86%d\u70b9.' % (u.name, u.resume()))\n        if m.alive &gt; 0:  # \u5982\u679c\u9009\u4e2d\u7684\u5c0f\u602a\u517d\u6ca1\u6709\u6b7b\u5c31\u56de\u51fb\u5965\u7279\u66fc\n            print('%s\u56de\u51fb\u4e86%s.' % (m.name, u.name))\n            m.attack(u)\n        display_info(u, ms)  # \u6bcf\u4e2a\u56de\u5408\u7ed3\u675f\u540e\u663e\u793a\u5965\u7279\u66fc\u548c\u5c0f\u602a\u517d\u7684\u4fe1\u606f\n        fight_round += 1\n    print('\\n========\u6218\u6597\u7ed3\u675f!========\\n')\n    if u.alive &gt; 0:\n        print('%s\u5965\u7279\u66fc\u80dc\u5229!' % u.name)\n    else:\n        print('\u5c0f\u602a\u517d\u80dc\u5229!')\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/09.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#2","title":"\u6848\u4f8b2\uff1a\u6251\u514b\u6e38\u620f\u3002","text":"<pre><code>import random\n\n\nclass Card(object):\n    \"\"\"\u4e00\u5f20\u724c\"\"\"\n\n    def __init__(self, suite, face):\n        self._suite = suite\n        self._face = face\n\n    @property\n    def face(self):\n        return self._face\n\n    @property\n    def suite(self):\n        return self._suite\n\n    def __str__(self):\n        if self._face == 1:\n            face_str = 'A'\n        elif self._face == 11:\n            face_str = 'J'\n        elif self._face == 12:\n            face_str = 'Q'\n        elif self._face == 13:\n            face_str = 'K'\n        else:\n            face_str = str(self._face)\n        return '%s%s' % (self._suite, face_str)\n\n    def __repr__(self):\n        return self.__str__()\n\n\nclass Poker(object):\n    \"\"\"\u4e00\u526f\u724c\"\"\"\n\n    def __init__(self):\n        self._cards = [Card(suite, face) \n                       for suite in '\u2660\u2665\u2663\u2666'\n                       for face in range(1, 14)]\n        self._current = 0\n\n    @property\n    def cards(self):\n        return self._cards\n\n    def shuffle(self):\n        \"\"\"\u6d17\u724c(\u968f\u673a\u4e71\u5e8f)\"\"\"\n        self._current = 0\n        random.shuffle(self._cards)\n\n    @property\n    def next(self):\n        \"\"\"\u53d1\u724c\"\"\"\n        card = self._cards[self._current]\n        self._current += 1\n        return card\n\n    @property\n    def has_next(self):\n        \"\"\"\u8fd8\u6709\u6ca1\u6709\u724c\"\"\"\n        return self._current &lt; len(self._cards)\n\n\nclass Player(object):\n    \"\"\"\u73a9\u5bb6\"\"\"\n\n    def __init__(self, name):\n        self._name = name\n        self._cards_on_hand = []\n\n    @property\n    def name(self):\n        return self._name\n\n    @property\n    def cards_on_hand(self):\n        return self._cards_on_hand\n\n    def get(self, card):\n        \"\"\"\u6478\u724c\"\"\"\n        self._cards_on_hand.append(card)\n\n    def arrange(self, card_key):\n        \"\"\"\u73a9\u5bb6\u6574\u7406\u624b\u4e0a\u7684\u724c\"\"\"\n        self._cards_on_hand.sort(key=card_key)\n\n\n# \u6392\u5e8f\u89c4\u5219-\u5148\u6839\u636e\u82b1\u8272\u518d\u6839\u636e\u70b9\u6570\u6392\u5e8f\ndef get_key(card):\n    return (card.suite, card.face)\n\n\ndef main():\n    p = Poker()\n    p.shuffle()\n    players = [Player('\u4e1c\u90aa'), Player('\u897f\u6bd2'), Player('\u5357\u5e1d'), Player('\u5317\u4e10')]\n    for _ in range(13):\n        for player in players:\n            player.get(p.next)\n    for player in players:\n        print(player.name + ':', end=' ')\n        player.arrange(get_key)\n        print(player.cards_on_hand)\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u8bf4\u660e\uff1a \u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u5728\u4e0a\u9762\u4ee3\u7801\u7684\u57fa\u7840\u4e0a\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u6251\u514b\u6e38\u620f\uff0c\u4f8b\u598221\u70b9(Black Jack)\uff0c\u6e38\u620f\u7684\u89c4\u5219\u53ef\u4ee5\u81ea\u5df1\u5728\u7f51\u4e0a\u627e\u4e00\u627e\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/09.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/#3","title":"\u6848\u4f8b3\uff1a\u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf\u3002","text":"<pre><code>\"\"\"\n\u67d0\u516c\u53f8\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u5458\u5de5 \u5206\u522b\u662f\u90e8\u95e8\u7ecf\u7406\u3001\u7a0b\u5e8f\u5458\u548c\u9500\u552e\u5458\n\u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf \u6839\u636e\u63d0\u4f9b\u7684\u5458\u5de5\u4fe1\u606f\u6765\u8ba1\u7b97\u6708\u85aa\n\u90e8\u95e8\u7ecf\u7406\u7684\u6708\u85aa\u662f\u6bcf\u6708\u56fa\u5b9a15000\u5143\n\u7a0b\u5e8f\u5458\u7684\u6708\u85aa\u6309\u672c\u6708\u5de5\u4f5c\u65f6\u95f4\u8ba1\u7b97 \u6bcf\u5c0f\u65f6150\u5143\n\u9500\u552e\u5458\u7684\u6708\u85aa\u662f1200\u5143\u7684\u5e95\u85aa\u52a0\u4e0a\u9500\u552e\u989d5%\u7684\u63d0\u6210\n\"\"\"\nfrom abc import ABCMeta, abstractmethod\n\n\nclass Employee(object, metaclass=ABCMeta):\n    \"\"\"\u5458\u5de5\"\"\"\n\n    def __init__(self, name):\n        \"\"\"\n        \u521d\u59cb\u5316\u65b9\u6cd5\n\n        :param name: \u59d3\u540d\n        \"\"\"\n        self._name = name\n\n    @property\n    def name(self):\n        return self._name\n\n    @abstractmethod\n    def get_salary(self):\n        \"\"\"\n        \u83b7\u5f97\u6708\u85aa\n\n        :return: \u6708\u85aa\n        \"\"\"\n        pass\n\n\nclass Manager(Employee):\n    \"\"\"\u90e8\u95e8\u7ecf\u7406\"\"\"\n\n    def get_salary(self):\n        return 15000.0\n\n\nclass Programmer(Employee):\n    \"\"\"\u7a0b\u5e8f\u5458\"\"\"\n\n    def __init__(self, name, working_hour=0):\n        super().__init__(name)\n        self._working_hour = working_hour\n\n    @property\n    def working_hour(self):\n        return self._working_hour\n\n    @working_hour.setter\n    def working_hour(self, working_hour):\n        self._working_hour = working_hour if working_hour &gt; 0 else 0\n\n    def get_salary(self):\n        return 150.0 * self._working_hour\n\n\nclass Salesman(Employee):\n    \"\"\"\u9500\u552e\u5458\"\"\"\n\n    def __init__(self, name, sales=0):\n        super().__init__(name)\n        self._sales = sales\n\n    @property\n    def sales(self):\n        return self._sales\n\n    @sales.setter\n    def sales(self, sales):\n        self._sales = sales if sales &gt; 0 else 0\n\n    def get_salary(self):\n        return 1200.0 + self._sales * 0.05\n\n\ndef main():\n    emps = [\n        Manager('\u5218\u5907'), Programmer('\u8bf8\u845b\u4eae'),\n        Manager('\u66f9\u64cd'), Salesman('\u8340\u5f67'),\n        Salesman('\u5415\u5e03'), Programmer('\u5f20\u8fbd'),\n        Programmer('\u8d75\u4e91')\n    ]\n    for emp in emps:\n        if isinstance(emp, Programmer):\n            emp.working_hour = int(input('\u8bf7\u8f93\u5165%s\u672c\u6708\u5de5\u4f5c\u65f6\u95f4: ' % emp.name))\n        elif isinstance(emp, Salesman):\n            emp.sales = float(input('\u8bf7\u8f93\u5165%s\u672c\u6708\u9500\u552e\u989d: ' % emp.name))\n        # \u540c\u6837\u662f\u63a5\u6536get_salary\u8fd9\u4e2a\u6d88\u606f\u4f46\u662f\u4e0d\u540c\u7684\u5458\u5de5\u8868\u73b0\u51fa\u4e86\u4e0d\u540c\u7684\u884c\u4e3a(\u591a\u6001)\n        print('%s\u672c\u6708\u5de5\u8d44\u4e3a: \uffe5%s\u5143' %\n              (emp.name, emp.get_salary()))\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/10.%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/","title":"10.\u56fe\u5f62\u7528\u6237\u754c\u9762\u548c\u6e38\u620f\u5f00\u53d1","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/10.%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#_1","title":"\u56fe\u5f62\u7528\u6237\u754c\u9762\u548c\u6e38\u620f\u5f00\u53d1","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/10.%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#tkintergui","title":"\u57fa\u4e8etkinter\u6a21\u5757\u7684GUI","text":"<p>GUI\u662f\u56fe\u5f62\u7528\u6237\u754c\u9762\u7684\u7f29\u5199\uff0c\u56fe\u5f62\u5316\u7684\u7528\u6237\u754c\u9762\u5bf9\u4f7f\u7528\u8fc7\u8ba1\u7b97\u673a\u7684\u4eba\u6765\u8bf4\u5e94\u8be5\u90fd\u4e0d\u964c\u751f\uff0c\u5728\u6b64\u4e5f\u65e0\u9700\u8fdb\u884c\u8d58\u8ff0\u3002Python\u9ed8\u8ba4\u7684GUI\u5f00\u53d1\u6a21\u5757\u662ftkinter\uff08\u5728Python 3\u4ee5\u524d\u7684\u7248\u672c\u4e2d\u540d\u4e3aTkinter\uff09\uff0c\u4ece\u8fd9\u4e2a\u540d\u5b57\u5c31\u53ef\u4ee5\u770b\u51fa\u5b83\u662f\u57fa\u4e8eTk\u7684\uff0cTk\u662f\u4e00\u4e2a\u5de5\u5177\u5305\uff0c\u6700\u521d\u662f\u4e3aTcl\u8bbe\u8ba1\u7684\uff0c\u540e\u6765\u88ab\u79fb\u690d\u5230\u5f88\u591a\u5176\u4ed6\u7684\u811a\u672c\u8bed\u8a00\u4e2d\uff0c\u5b83\u63d0\u4f9b\u4e86\u8de8\u5e73\u53f0\u7684GUI\u63a7\u4ef6\u3002\u5f53\u7136Tk\u5e76\u4e0d\u662f\u6700\u65b0\u548c\u6700\u597d\u7684\u9009\u62e9\uff0c\u4e5f\u6ca1\u6709\u529f\u80fd\u7279\u522b\u5f3a\u5927\u7684GUI\u63a7\u4ef6\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5f00\u53d1GUI\u5e94\u7528\u5e76\u4e0d\u662fPython\u6700\u64c5\u957f\u7684\u5de5\u4f5c\uff0c\u5982\u679c\u771f\u7684\u9700\u8981\u4f7f\u7528Python\u5f00\u53d1GUI\u5e94\u7528\uff0cwxPython\u3001PyQt\u3001PyGTK\u7b49\u6a21\u5757\u90fd\u662f\u4e0d\u9519\u7684\u9009\u62e9\u3002</p> <p>\u57fa\u672c\u4e0a\u4f7f\u7528tkinter\u6765\u5f00\u53d1GUI\u5e94\u7528\u9700\u8981\u4ee5\u4e0b5\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u5bfc\u5165tkinter\u6a21\u5757\u4e2d\u6211\u4eec\u9700\u8981\u7684\u4e1c\u897f\u3002</li> <li>\u521b\u5efa\u4e00\u4e2a\u9876\u5c42\u7a97\u53e3\u5bf9\u8c61\u5e76\u7528\u5b83\u6765\u627f\u8f7d\u6574\u4e2aGUI\u5e94\u7528\u3002</li> <li>\u5728\u9876\u5c42\u7a97\u53e3\u5bf9\u8c61\u4e0a\u6dfb\u52a0GUI\u7ec4\u4ef6\u3002</li> <li>\u901a\u8fc7\u4ee3\u7801\u5c06\u8fd9\u4e9bGUI\u7ec4\u4ef6\u7684\u529f\u80fd\u7ec4\u7ec7\u8d77\u6765\u3002</li> <li>\u8fdb\u5165\u4e3b\u4e8b\u4ef6\u5faa\u73af(main loop)\u3002</li> </ol> <p>\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528tkinter\u505a\u4e00\u4e2a\u7b80\u5355\u7684GUI\u5e94\u7528\u3002</p> <pre><code>import tkinter\nimport tkinter.messagebox\n\n\ndef main():\n    flag = True\n\n    # \u4fee\u6539\u6807\u7b7e\u4e0a\u7684\u6587\u5b57\n    def change_label_text():\n        nonlocal flag\n        flag = not flag\n        color, msg = ('red', 'Hello, world!')\\\n            if flag else ('blue', 'Goodbye, world!')\n        label.config(text=msg, fg=color)\n\n    # \u786e\u8ba4\u9000\u51fa\n    def confirm_to_quit():\n        if tkinter.messagebox.askokcancel('\u6e29\u99a8\u63d0\u793a', '\u786e\u5b9a\u8981\u9000\u51fa\u5417?'):\n            top.quit()\n\n    # \u521b\u5efa\u9876\u5c42\u7a97\u53e3\n    top = tkinter.Tk()\n    # \u8bbe\u7f6e\u7a97\u53e3\u5927\u5c0f\n    top.geometry('240x160')\n    # \u8bbe\u7f6e\u7a97\u53e3\u6807\u9898\n    top.title('\u5c0f\u6e38\u620f')\n    # \u521b\u5efa\u6807\u7b7e\u5bf9\u8c61\u5e76\u6dfb\u52a0\u5230\u9876\u5c42\u7a97\u53e3\n    label = tkinter.Label(top, text='Hello, world!', font='Arial -32', fg='red')\n    label.pack(expand=1)\n    # \u521b\u5efa\u4e00\u4e2a\u88c5\u6309\u94ae\u7684\u5bb9\u5668\n    panel = tkinter.Frame(top)\n    # \u521b\u5efa\u6309\u94ae\u5bf9\u8c61 \u6307\u5b9a\u6dfb\u52a0\u5230\u54ea\u4e2a\u5bb9\u5668\u4e2d \u901a\u8fc7command\u53c2\u6570\u7ed1\u5b9a\u4e8b\u4ef6\u56de\u8c03\u51fd\u6570\n    button1 = tkinter.Button(panel, text='\u4fee\u6539', command=change_label_text)\n    button1.pack(side='left')\n    button2 = tkinter.Button(panel, text='\u9000\u51fa', command=confirm_to_quit)\n    button2.pack(side='right')\n    panel.pack(side='bottom')\n    # \u5f00\u542f\u4e3b\u4e8b\u4ef6\u5faa\u73af\n    tkinter.mainloop()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0cGUI\u5e94\u7528\u901a\u5e38\u662f\u4e8b\u4ef6\u9a71\u52a8\u5f0f\u7684\uff0c\u4e4b\u6240\u4ee5\u8981\u8fdb\u5165\u4e3b\u4e8b\u4ef6\u5faa\u73af\u5c31\u662f\u8981\u76d1\u542c\u9f20\u6807\u3001\u952e\u76d8\u7b49\u5404\u79cd\u4e8b\u4ef6\u7684\u53d1\u751f\u5e76\u6267\u884c\u5bf9\u5e94\u7684\u4ee3\u7801\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u4e3a\u4e8b\u4ef6\u4f1a\u6301\u7eed\u7684\u53d1\u751f\uff0c\u6240\u4ee5\u9700\u8981\u8fd9\u6837\u7684\u4e00\u4e2a\u5faa\u73af\u4e00\u76f4\u8fd0\u884c\u7740\u7b49\u5f85\u4e0b\u4e00\u4e2a\u4e8b\u4ef6\u7684\u53d1\u751f\u3002\u53e6\u4e00\u65b9\u9762\uff0cTk\u4e3a\u63a7\u4ef6\u7684\u6446\u653e\u63d0\u4f9b\u4e86\u4e09\u79cd\u5e03\u5c40\u7ba1\u7406\u5668\uff0c\u901a\u8fc7\u5e03\u5c40\u7ba1\u7406\u5668\u53ef\u4ee5\u5bf9\u63a7\u4ef6\u8fdb\u884c\u5b9a\u4f4d\uff0c\u8fd9\u4e09\u79cd\u5e03\u5c40\u7ba1\u7406\u5668\u5206\u522b\u662f\uff1aPlacer\uff08\u5f00\u53d1\u8005\u63d0\u4f9b\u63a7\u4ef6\u7684\u5927\u5c0f\u548c\u6446\u653e\u4f4d\u7f6e\uff09\u3001Packer\uff08\u81ea\u52a8\u5c06\u63a7\u4ef6\u586b\u5145\u5230\u5408\u9002\u7684\u4f4d\u7f6e\uff09\u548cGrid\uff08\u57fa\u4e8e\u7f51\u683c\u5750\u6807\u6765\u6446\u653e\u63a7\u4ef6\uff09\uff0c\u6b64\u5904\u4e0d\u8fdb\u884c\u8d58\u8ff0\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/10.%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#pygame","title":"\u4f7f\u7528Pygame\u8fdb\u884c\u6e38\u620f\u5f00\u53d1","text":"<p>Pygame\u662f\u4e00\u4e2a\u5f00\u6e90\u7684Python\u6a21\u5757\uff0c\u4e13\u95e8\u7528\u4e8e\u591a\u5a92\u4f53\u5e94\u7528\uff08\u5982\u7535\u5b50\u6e38\u620f\uff09\u7684\u5f00\u53d1\uff0c\u5176\u4e2d\u5305\u542b\u5bf9\u56fe\u50cf\u3001\u58f0\u97f3\u3001\u89c6\u9891\u3001\u4e8b\u4ef6\u3001\u78b0\u649e\u7b49\u7684\u652f\u6301\u3002Pygame\u5efa\u7acb\u5728SDL\u7684\u57fa\u7840\u4e0a\uff0cSDL\u662f\u4e00\u5957\u8de8\u5e73\u53f0\u7684\u591a\u5a92\u4f53\u5f00\u53d1\u5e93\uff0c\u7528C\u8bed\u8a00\u5b9e\u73b0\uff0c\u88ab\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u6e38\u620f\u3001\u6a21\u62df\u5668\u3001\u64ad\u653e\u5668\u7b49\u7684\u5f00\u53d1\u3002\u800cPygame\u8ba9\u6e38\u620f\u5f00\u53d1\u8005\u4e0d\u518d\u88ab\u5e95\u5c42\u8bed\u8a00\u675f\u7f1a\uff0c\u53ef\u4ee5\u66f4\u591a\u7684\u5173\u6ce8\u6e38\u620f\u7684\u529f\u80fd\u548c\u903b\u8f91\u3002</p> <p>\u4e0b\u9762\u6211\u4eec\u6765\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u5c0f\u6e38\u620f\uff0c\u6e38\u620f\u7684\u540d\u5b57\u53eb\u201c\u5927\u7403\u5403\u5c0f\u7403\u201d\uff0c\u5f53\u7136\u5b8c\u6210\u8fd9\u4e2a\u6e38\u620f\u5e76\u4e0d\u662f\u91cd\u70b9\uff0c\u5b66\u4f1a\u4f7f\u7528Pygame\u4e5f\u4e0d\u662f\u91cd\u70b9\uff0c\u6700\u91cd\u8981\u7684\u6211\u4eec\u8981\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4f53\u4f1a\u5982\u4f55\u4f7f\u7528\u524d\u9762\u8bb2\u89e3\u7684\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u5b66\u4f1a\u7528\u8fd9\u79cd\u7f16\u7a0b\u601d\u60f3\u53bb\u89e3\u51b3\u73b0\u5b9e\u4e2d\u7684\u95ee\u9898\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/10.%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#_2","title":"\u5236\u4f5c\u6e38\u620f\u7a97\u53e3","text":"<pre><code>import pygame\n\n\ndef main():\n    # \u521d\u59cb\u5316\u5bfc\u5165\u7684pygame\u4e2d\u7684\u6a21\u5757\n    pygame.init()\n    # \u521d\u59cb\u5316\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u5e76\u8bbe\u7f6e\u7a97\u53e3\u5c3a\u5bf8\n    screen = pygame.display.set_mode((800, 600))\n    # \u8bbe\u7f6e\u5f53\u524d\u7a97\u53e3\u7684\u6807\u9898\n    pygame.display.set_caption('\u5927\u7403\u5403\u5c0f\u7403')\n    running = True\n    # \u5f00\u542f\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u53d1\u751f\u7684\u4e8b\u4ef6\n    while running:\n        # \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u4e8b\u4ef6\u5e76\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                running = False\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/10.%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#_3","title":"\u5728\u7a97\u53e3\u4e2d\u7ed8\u56fe","text":"<p>\u53ef\u4ee5\u901a\u8fc7pygame\u4e2ddraw\u6a21\u5757\u7684\u51fd\u6570\u5728\u7a97\u53e3\u4e0a\u7ed8\u56fe\uff0c\u53ef\u4ee5\u7ed8\u5236\u7684\u56fe\u5f62\u5305\u62ec\uff1a\u7ebf\u6761\u3001\u77e9\u5f62\u3001\u591a\u8fb9\u5f62\u3001\u5706\u3001\u692d\u5706\u3001\u5706\u5f27\u7b49\u3002\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5c4f\u5e55\u5750\u6807\u7cfb\u662f\u5c06\u5c4f\u5e55\u5de6\u4e0a\u89d2\u8bbe\u7f6e\u4e3a\u5750\u6807\u539f\u70b9<code>(0, 0)</code>\uff0c\u5411\u53f3\u662fx\u8f74\u7684\u6b63\u5411\uff0c\u5411\u4e0b\u662fy\u8f74\u7684\u6b63\u5411\uff0c\u5728\u8868\u793a\u4f4d\u7f6e\u6216\u8005\u8bbe\u7f6e\u5c3a\u5bf8\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9ed8\u8ba4\u7684\u5355\u4f4d\u90fd\u662f\u50cf\u7d20\u3002\u6240\u8c13\u50cf\u7d20\u5c31\u662f\u5c4f\u5e55\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u4f60\u53ef\u4ee5\u7528\u6d4f\u89c8\u56fe\u7247\u7684\u8f6f\u4ef6\u8bd5\u7740\u5c06\u4e00\u5f20\u56fe\u7247\u653e\u5927\u82e5\u5e72\u500d\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u70b9\u3002pygame\u4e2d\u8868\u793a\u989c\u8272\u7528\u7684\u662f\u8272\u5149\u4e09\u539f\u8272\u8868\u793a\u6cd5\uff0c\u5373\u901a\u8fc7\u4e00\u4e2a\u5143\u7ec4\u6216\u5217\u8868\u6765\u6307\u5b9a\u989c\u8272\u7684RGB\u503c\uff0c\u6bcf\u4e2a\u503c\u90fd\u57280~255\u4e4b\u95f4\uff0c\u56e0\u4e3a\u662f\u6bcf\u79cd\u539f\u8272\u90fd\u7528\u4e00\u4e2a8\u4f4d\uff08bit\uff09\u7684\u503c\u6765\u8868\u793a\uff0c\u4e09\u79cd\u989c\u8272\u76f8\u5f53\u4e8e\u4e00\u5171\u753124\u4f4d\u6784\u6210\uff0c\u8fd9\u4e5f\u5c31\u662f\u5e38\u8bf4\u7684\u201c24\u4f4d\u989c\u8272\u8868\u793a\u6cd5\u201d\u3002</p> <pre><code>import pygame\n\n\ndef main():\n    # \u521d\u59cb\u5316\u5bfc\u5165\u7684pygame\u4e2d\u7684\u6a21\u5757\n    pygame.init()\n    # \u521d\u59cb\u5316\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u5e76\u8bbe\u7f6e\u7a97\u53e3\u5c3a\u5bf8\n    screen = pygame.display.set_mode((800, 600))\n    # \u8bbe\u7f6e\u5f53\u524d\u7a97\u53e3\u7684\u6807\u9898\n    pygame.display.set_caption('\u5927\u7403\u5403\u5c0f\u7403')\n    # \u8bbe\u7f6e\u7a97\u53e3\u7684\u80cc\u666f\u8272(\u989c\u8272\u662f\u7531\u7ea2\u7eff\u84dd\u4e09\u539f\u8272\u6784\u6210\u7684\u5143\u7ec4)\n    screen.fill((242, 242, 242))\n    # \u7ed8\u5236\u4e00\u4e2a\u5706(\u53c2\u6570\u5206\u522b\u662f: \u5c4f\u5e55, \u989c\u8272, \u5706\u5fc3\u4f4d\u7f6e, \u534a\u5f84, 0\u8868\u793a\u586b\u5145\u5706)\n    pygame.draw.circle(screen, (255, 0, 0,), (100, 100), 30, 0)\n    # \u5237\u65b0\u5f53\u524d\u7a97\u53e3(\u6e32\u67d3\u7a97\u53e3\u5c06\u7ed8\u5236\u7684\u56fe\u50cf\u5448\u73b0\u51fa\u6765)\n    pygame.display.flip()\n    running = True\n    # \u5f00\u542f\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u53d1\u751f\u7684\u4e8b\u4ef6\n    while running:\n        # \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u4e8b\u4ef6\u5e76\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                running = False\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/10.%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#_4","title":"\u52a0\u8f7d\u56fe\u50cf","text":"<p>\u5982\u679c\u9700\u8981\u76f4\u63a5\u52a0\u8f7d\u56fe\u50cf\u5230\u7a97\u53e3\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528pygame\u4e2dimage\u6a21\u5757\u7684\u51fd\u6570\u6765\u52a0\u8f7d\u56fe\u50cf\uff0c\u518d\u901a\u8fc7\u4e4b\u524d\u83b7\u5f97\u7684\u7a97\u53e3\u5bf9\u8c61\u7684<code>blit</code>\u65b9\u6cd5\u6e32\u67d3\u56fe\u50cf\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>import pygame\n\n\ndef main():\n    # \u521d\u59cb\u5316\u5bfc\u5165\u7684pygame\u4e2d\u7684\u6a21\u5757\n    pygame.init()\n    # \u521d\u59cb\u5316\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u5e76\u8bbe\u7f6e\u7a97\u53e3\u5c3a\u5bf8\n    screen = pygame.display.set_mode((800, 600))\n    # \u8bbe\u7f6e\u5f53\u524d\u7a97\u53e3\u7684\u6807\u9898\n    pygame.display.set_caption('\u5927\u7403\u5403\u5c0f\u7403')\n    # \u8bbe\u7f6e\u7a97\u53e3\u7684\u80cc\u666f\u8272(\u989c\u8272\u662f\u7531\u7ea2\u7eff\u84dd\u4e09\u539f\u8272\u6784\u6210\u7684\u5143\u7ec4)\n    screen.fill((255, 255, 255))\n    # \u901a\u8fc7\u6307\u5b9a\u7684\u6587\u4ef6\u540d\u52a0\u8f7d\u56fe\u50cf\n    ball_image = pygame.image.load('../../../../img/res/ball.png')\n    # \u5728\u7a97\u53e3\u4e0a\u6e32\u67d3\u56fe\u50cf\n    screen.blit(ball_image, (50, 50))\n    # \u5237\u65b0\u5f53\u524d\u7a97\u53e3(\u6e32\u67d3\u7a97\u53e3\u5c06\u7ed8\u5236\u7684\u56fe\u50cf\u5448\u73b0\u51fa\u6765)\n    pygame.display.flip()\n    running = True\n    # \u5f00\u542f\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u53d1\u751f\u7684\u4e8b\u4ef6\n    while running:\n        # \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u4e8b\u4ef6\u5e76\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                running = False\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/10.%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#_5","title":"\u5b9e\u73b0\u52a8\u753b\u6548\u679c","text":"<p>\u8bf4\u5230\u52a8\u753b\u8fd9\u4e2a\u8bcd\u5927\u5bb6\u90fd\u4e0d\u4f1a\u964c\u751f\uff0c\u4e8b\u5b9e\u4e0a\u8981\u5b9e\u73b0\u52a8\u753b\u6548\u679c\uff0c\u672c\u8eab\u7684\u539f\u7406\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u662f\u5c06\u4e0d\u8fde\u7eed\u7684\u56fe\u7247\u8fde\u7eed\u7684\u64ad\u653e\uff0c\u53ea\u8981\u6bcf\u79d2\u949f\u8fbe\u5230\u4e86\u4e00\u5b9a\u7684\u5e27\u6570\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u505a\u51fa\u6bd4\u8f83\u6d41\u7545\u7684\u52a8\u753b\u6548\u679c\u3002\u5982\u679c\u8981\u8ba9\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684\u5c0f\u7403\u52a8\u8d77\u6765\uff0c\u53ef\u4ee5\u5c06\u5c0f\u7403\u7684\u4f4d\u7f6e\u7528\u53d8\u91cf\u6765\u8868\u793a\uff0c\u5e76\u5728\u5faa\u73af\u4e2d\u4fee\u6539\u5c0f\u7403\u7684\u4f4d\u7f6e\u518d\u5237\u65b0\u6574\u4e2a\u7a97\u53e3\u5373\u53ef\u3002</p> <pre><code>import pygame\n\n\ndef main():\n    # \u521d\u59cb\u5316\u5bfc\u5165\u7684pygame\u4e2d\u7684\u6a21\u5757\n    pygame.init()\n    # \u521d\u59cb\u5316\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u5e76\u8bbe\u7f6e\u7a97\u53e3\u5c3a\u5bf8\n    screen = pygame.display.set_mode((800, 600))\n    # \u8bbe\u7f6e\u5f53\u524d\u7a97\u53e3\u7684\u6807\u9898\n    pygame.display.set_caption('\u5927\u7403\u5403\u5c0f\u7403')\n    # \u5b9a\u4e49\u53d8\u91cf\u6765\u8868\u793a\u5c0f\u7403\u5728\u5c4f\u5e55\u4e0a\u7684\u4f4d\u7f6e\n    x, y = 50, 50\n    running = True\n    # \u5f00\u542f\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u53d1\u751f\u7684\u4e8b\u4ef6\n    while running:\n        # \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u4e8b\u4ef6\u5e76\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                running = False\n        screen.fill((255, 255, 255))\n        pygame.draw.circle(screen, (255, 0, 0,), (x, y), 30, 0)\n        pygame.display.flip()\n        # \u6bcf\u969450\u6beb\u79d2\u5c31\u6539\u53d8\u5c0f\u7403\u7684\u4f4d\u7f6e\u518d\u5237\u65b0\u7a97\u53e3\n        pygame.time.delay(50)\n        x, y = x + 5, y + 5\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/10.%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#_6","title":"\u78b0\u649e\u68c0\u6d4b","text":"<p>\u901a\u5e38\u4e00\u4e2a\u6e38\u620f\u4e2d\u4f1a\u6709\u5f88\u591a\u5bf9\u8c61\u51fa\u73b0\uff0c\u800c\u8fd9\u4e9b\u5bf9\u8c61\u4e4b\u95f4\u7684\u201c\u78b0\u649e\u201d\u5728\u6240\u96be\u514d\uff0c\u6bd4\u5982\u70ae\u5f39\u51fb\u4e2d\u4e86\u98de\u673a\u3001\u7bb1\u5b50\u649e\u5230\u4e86\u5730\u9762\u7b49\u3002\u78b0\u649e\u68c0\u6d4b\u5728\u7edd\u5927\u591a\u6570\u7684\u6e38\u620f\u4e2d\u90fd\u662f\u4e00\u4e2a\u5fc5\u987b\u5f97\u5904\u7406\u7684\u81f3\u5173\u91cd\u8981\u7684\u95ee\u9898\uff0cpygame\u7684sprite\uff08\u52a8\u753b\u7cbe\u7075\uff09\u6a21\u5757\u5c31\u63d0\u4f9b\u4e86\u5bf9\u78b0\u649e\u68c0\u6d4b\u7684\u652f\u6301\uff0c\u8fd9\u91cc\u6211\u4eec\u6682\u65f6\u4e0d\u4ecb\u7ecdsprite\u6a21\u5757\u63d0\u4f9b\u7684\u529f\u80fd\uff0c\u56e0\u4e3a\u8981\u68c0\u6d4b\u4e24\u4e2a\u5c0f\u7403\u6709\u6ca1\u6709\u78b0\u649e\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u68c0\u67e5\u7403\u5fc3\u7684\u8ddd\u79bb\u6709\u6ca1\u6709\u5c0f\u4e8e\u4e24\u4e2a\u7403\u7684\u534a\u5f84\u4e4b\u548c\u3002\u4e3a\u4e86\u5236\u9020\u51fa\u66f4\u591a\u7684\u5c0f\u7403\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9\u9f20\u6807\u4e8b\u4ef6\u7684\u5904\u7406\uff0c\u5728\u70b9\u51fb\u9f20\u6807\u7684\u4f4d\u7f6e\u521b\u5efa\u989c\u8272\u3001\u5927\u5c0f\u548c\u79fb\u52a8\u901f\u5ea6\u90fd\u968f\u673a\u7684\u5c0f\u7403\uff0c\u5f53\u7136\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e4b\u524d\u5b66\u4e60\u5230\u7684\u9762\u5411\u5bf9\u8c61\u7684\u77e5\u8bc6\u5e94\u7528\u8d77\u6765\u3002</p> <pre><code>from enum import Enum, unique\nfrom math import sqrt\nfrom random import randint\n\nimport pygame\n\n\n@unique\nclass Color(Enum):\n    \"\"\"\u989c\u8272\"\"\"\n\n    RED = (255, 0, 0)\n    GREEN = (0, 255, 0)\n    BLUE = (0, 0, 255)\n    BLACK = (0, 0, 0)\n    WHITE = (255, 255, 255)\n    GRAY = (242, 242, 242)\n\n    @staticmethod\n    def random_color():\n        \"\"\"\u83b7\u5f97\u968f\u673a\u989c\u8272\"\"\"\n        r = randint(0, 255)\n        g = randint(0, 255)\n        b = randint(0, 255)\n        return (r, g, b)\n\n\nclass Ball(object):\n    \"\"\"\u7403\"\"\"\n\n    def __init__(self, x, y, radius, sx, sy, color=Color.RED):\n        \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5\"\"\"\n        self.x = x\n        self.y = y\n        self.radius = radius\n        self.sx = sx\n        self.sy = sy\n        self.color = color\n        self.alive = True\n\n    def move(self, screen):\n        \"\"\"\u79fb\u52a8\"\"\"\n        self.x += self.sx\n        self.y += self.sy\n        if self.x - self.radius &lt;= 0 or \\\n                self.x + self.radius &gt;= screen.get_width():\n            self.sx = -self.sx\n        if self.y - self.radius &lt;= 0 or \\\n                self.y + self.radius &gt;= screen.get_height():\n            self.sy = -self.sy\n\n    def eat(self, other):\n        \"\"\"\u5403\u5176\u4ed6\u7403\"\"\"\n        if self.alive and other.alive and self != other:\n            dx, dy = self.x - other.x, self.y - other.y\n            distance = sqrt(dx ** 2 + dy ** 2)\n            if distance &lt; self.radius + other.radius \\\n                    and self.radius &gt; other.radius:\n                other.alive = False\n                self.radius = self.radius + int(other.radius * 0.146)\n\n    def draw(self, screen):\n        \"\"\"\u5728\u7a97\u53e3\u4e0a\u7ed8\u5236\u7403\"\"\"\n        pygame.draw.circle(screen, self.color,\n                           (self.x, self.y), self.radius, 0)\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/10.%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/#_7","title":"\u4e8b\u4ef6\u5904\u7406","text":"<p>\u53ef\u4ee5\u5728\u4e8b\u4ef6\u5faa\u73af\u4e2d\u5bf9\u9f20\u6807\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\uff0c\u901a\u8fc7\u4e8b\u4ef6\u5bf9\u8c61\u7684<code>type</code>\u5c5e\u6027\u53ef\u4ee5\u5224\u5b9a\u4e8b\u4ef6\u7c7b\u578b\uff0c\u518d\u901a\u8fc7<code>pos</code>\u5c5e\u6027\u5c31\u53ef\u4ee5\u83b7\u5f97\u9f20\u6807\u70b9\u51fb\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u8981\u5904\u7406\u952e\u76d8\u4e8b\u4ef6\u4e5f\u662f\u5728\u8fd9\u4e2a\u5730\u65b9\uff0c\u505a\u6cd5\u4e0e\u5904\u7406\u9f20\u6807\u4e8b\u4ef6\u7c7b\u4f3c\u3002</p> <pre><code>def main():\n    # \u5b9a\u4e49\u7528\u6765\u88c5\u6240\u6709\u7403\u7684\u5bb9\u5668\n    balls = []\n    # \u521d\u59cb\u5316\u5bfc\u5165\u7684pygame\u4e2d\u7684\u6a21\u5757\n    pygame.init()\n    # \u521d\u59cb\u5316\u7528\u4e8e\u663e\u793a\u7684\u7a97\u53e3\u5e76\u8bbe\u7f6e\u7a97\u53e3\u5c3a\u5bf8\n    screen = pygame.display.set_mode((800, 600))\n    # \u8bbe\u7f6e\u5f53\u524d\u7a97\u53e3\u7684\u6807\u9898\n    pygame.display.set_caption('\u5927\u7403\u5403\u5c0f\u7403')\n    running = True\n    # \u5f00\u542f\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u53d1\u751f\u7684\u4e8b\u4ef6\n    while running:\n        # \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u4e8b\u4ef6\u5e76\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                running = False\n            # \u5904\u7406\u9f20\u6807\u4e8b\u4ef6\u7684\u4ee3\u7801\n            if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:\n                # \u83b7\u5f97\u70b9\u51fb\u9f20\u6807\u7684\u4f4d\u7f6e\n                x, y = event.pos\n                radius = randint(10, 100)\n                sx, sy = randint(-10, 10), randint(-10, 10)\n                color = Color.random_color()\n                # \u5728\u70b9\u51fb\u9f20\u6807\u7684\u4f4d\u7f6e\u521b\u5efa\u4e00\u4e2a\u7403(\u5927\u5c0f\u3001\u901f\u5ea6\u548c\u989c\u8272\u968f\u673a)\n                ball = Ball(x, y, radius, sx, sy, color)\n                # \u5c06\u7403\u6dfb\u52a0\u5230\u5217\u8868\u5bb9\u5668\u4e2d\n                balls.append(ball)\n        screen.fill((255, 255, 255))\n        # \u53d6\u51fa\u5bb9\u5668\u4e2d\u7684\u7403 \u5982\u679c\u6ca1\u88ab\u5403\u6389\u5c31\u7ed8\u5236 \u88ab\u5403\u6389\u4e86\u5c31\u79fb\u9664\n        for ball in balls:\n            if ball.alive:\n                ball.draw(screen)\n            else:\n                balls.remove(ball)\n        pygame.display.flip()\n        # \u6bcf\u969450\u6beb\u79d2\u5c31\u6539\u53d8\u7403\u7684\u4f4d\u7f6e\u518d\u5237\u65b0\u7a97\u53e3\n        pygame.time.delay(50)\n        for ball in balls:\n            ball.move(screen)\n            # \u68c0\u67e5\u7403\u6709\u6ca1\u6709\u5403\u5230\u5176\u4ed6\u7684\u7403\n            for other in balls:\n                ball.eat(other)\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u4e0a\u9762\u7684\u4e24\u6bb5\u4ee3\u7801\u5408\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u201c\u5927\u7403\u5403\u5c0f\u7403\u201d\u7684\u6e38\u620f\uff08\u5982\u4e0b\u56fe\u6240\u793a\uff09\uff0c\u51c6\u786e\u7684\u8bf4\u5b83\u7b97\u4e0d\u4e0a\u4e00\u4e2a\u6e38\u620f\uff0c\u4f46\u662f\u505a\u4e00\u4e2a\u5c0f\u6e38\u620f\u7684\u57fa\u672c\u77e5\u8bc6\u6211\u4eec\u5df2\u7ecf\u901a\u8fc7\u8fd9\u4e2a\u4f8b\u5b50\u544a\u8bc9\u5927\u5bb6\u4e86\uff0c\u6709\u4e86\u8fd9\u4e9b\u77e5\u8bc6\u5df2\u7ecf\u53ef\u4ee5\u5f00\u59cb\u4f60\u7684\u5c0f\u6e38\u620f\u5f00\u53d1\u4e4b\u65c5\u4e86\u3002\u5176\u5b9e\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u8fd8\u6709\u5f88\u591a\u503c\u5f97\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u5237\u65b0\u7a97\u53e3\u4ee5\u53ca\u8ba9\u7403\u79fb\u52a8\u8d77\u6765\u7684\u4ee3\u7801\u5e76\u4e0d\u5e94\u8be5\u653e\u5728\u4e8b\u4ef6\u5faa\u73af\u4e2d\uff0c\u7b49\u5b66\u4e60\u4e86\u591a\u7ebf\u7a0b\u7684\u77e5\u8bc6\u540e\uff0c\u7528\u4e00\u4e2a\u540e\u53f0\u7ebf\u7a0b\u6765\u5904\u7406\u8fd9\u4e9b\u4e8b\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002\u5982\u679c\u5e0c\u671b\u83b7\u5f97\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u6e38\u620f\u4e2d\u52a0\u5165\u80cc\u666f\u97f3\u4e50\u4ee5\u53ca\u5728\u7403\u4e0e\u7403\u53d1\u751f\u78b0\u649e\u65f6\u64ad\u653e\u97f3\u6548\uff0c\u5229\u7528pygame\u7684mixer\u548cmusic\u6a21\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u8fd9\u65b9\u9762\u7684\u77e5\u8bc6\u3002\u4e8b\u5b9e\u4e0a\uff0c\u60f3\u4e86\u89e3\u66f4\u591a\u7684\u5173\u4e8epygame\u7684\u77e5\u8bc6\uff0c\u6700\u597d\u7684\u6559\u7a0b\u662fpygame\u7684\u5b98\u65b9\u7f51\u7ad9\uff0c\u5982\u679c\u82f1\u8bed\u6ca1\u6bdb\u75c5\u5c31\u53ef\u4ee5\u8d76\u7d27\u53bb\u770b\u770b\u5566\u3002 \u5982\u679c\u60f3\u5f00\u53d13D\u6e38\u620f\uff0cpygame\u5c31\u663e\u5f97\u529b\u4e0d\u4ece\u5fc3\u4e86\uff0c\u5bf93D\u6e38\u620f\u5f00\u53d1\u5982\u679c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u4e0d\u59a8\u770b\u770bPanda3D\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/11.%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/","title":"11.\u6587\u4ef6\u548c\u5f02\u5e38","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/11.%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/#_1","title":"\u6587\u4ef6\u548c\u5f02\u5e38","text":"<p>\u5b9e\u9645\u5f00\u53d1\u4e2d\u5e38\u5e38\u4f1a\u9047\u5230\u5bf9\u6570\u636e\u8fdb\u884c\u6301\u4e45\u5316\u64cd\u4f5c\u7684\u573a\u666f\uff0c\u800c\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\u6700\u76f4\u63a5\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u5c06\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u3002\u8bf4\u5230\u201c\u6587\u4ef6\u201d\u8fd9\u4e2a\u8bcd\uff0c\u53ef\u80fd\u9700\u8981\u5148\u79d1\u666e\u4e00\u4e0b\u5173\u4e8e\u6587\u4ef6\u7cfb\u7edf\u7684\u77e5\u8bc6\uff0c\u4f46\u662f\u8fd9\u91cc\u6211\u4eec\u5e76\u4e0d\u6d6a\u8d39\u7b14\u58a8\u4ecb\u7ecd\u8fd9\u4e2a\u6982\u5ff5\uff0c\u8bf7\u5927\u5bb6\u81ea\u884c\u901a\u8fc7\u7ef4\u57fa\u767e\u79d1\u8fdb\u884c\u4e86\u89e3\u3002</p> <p>\u5728Python\u4e2d\u5b9e\u73b0\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff0c\u901a\u8fc7Python\u5185\u7f6e\u7684<code>open</code>\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u6587\u4ef6\u540d\u3001\u64cd\u4f5c\u6a21\u5f0f\u3001\u7f16\u7801\u4fe1\u606f\u7b49\u6765\u83b7\u5f97\u64cd\u4f5c\u6587\u4ef6\u7684\u5bf9\u8c61\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u4e86\u3002\u8fd9\u91cc\u6240\u8bf4\u7684\u64cd\u4f5c\u6a21\u5f0f\u662f\u6307\u8981\u6253\u5f00\u4ec0\u4e48\u6837\u7684\u6587\u4ef6\uff08\u5b57\u7b26\u6587\u4ef6\u8fd8\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09\u4ee5\u53ca\u505a\u4ec0\u4e48\u6837\u7684\u64cd\u4f5c\uff08\u8bfb\u3001\u5199\u8fd8\u662f\u8ffd\u52a0\uff09\uff0c\u5177\u4f53\u7684\u5982\u4e0b\u8868\u6240\u793a\u3002</p> \u64cd\u4f5c\u6a21\u5f0f \u5177\u4f53\u542b\u4e49 <code>'r'</code> \u8bfb\u53d6 \uff08\u9ed8\u8ba4\uff09 <code>'w'</code> \u5199\u5165\uff08\u4f1a\u5148\u622a\u65ad\u4e4b\u524d\u7684\u5185\u5bb9\uff09 <code>'x'</code> \u5199\u5165\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\u4f1a\u4ea7\u751f\u5f02\u5e38 <code>'a'</code> \u8ffd\u52a0\uff0c\u5c06\u5185\u5bb9\u5199\u5165\u5230\u5df2\u6709\u6587\u4ef6\u7684\u672b\u5c3e <code>'b'</code> \u4e8c\u8fdb\u5236\u6a21\u5f0f <code>'t'</code> \u6587\u672c\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09 <code>'+'</code> \u66f4\u65b0\uff08\u65e2\u53ef\u4ee5\u8bfb\u53c8\u53ef\u4ee5\u5199\uff09 <p>\u4e0b\u9762\u8fd9\u5f20\u56fe\u6765\u81ea\u4e8e\u83dc\u9e1f\u6559\u7a0b\u7f51\u7ad9\uff0c\u5b83\u5c55\u793a\u4e86\u5982\u679c\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u7684\u9700\u8981\u6765\u8bbe\u7f6e\u64cd\u4f5c\u6a21\u5f0f\u3002</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/11.%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/#_2","title":"\u8bfb\u5199\u6587\u672c\u6587\u4ef6","text":"<p>\u8bfb\u53d6\u6587\u672c\u6587\u4ef6\u65f6\uff0c\u9700\u8981\u5728\u4f7f\u7528<code>open</code>\u51fd\u6570\u65f6\u6307\u5b9a\u597d\u5e26\u8def\u5f84\u7684\u6587\u4ef6\u540d\uff08\u53ef\u4ee5\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u6216\u7edd\u5bf9\u8def\u5f84\uff09\u5e76\u5c06\u6587\u4ef6\u6a21\u5f0f\u8bbe\u7f6e\u4e3a<code>'r'</code>\uff08\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u503c\u4e5f\u662f<code>'r'</code>\uff09\uff0c\u7136\u540e\u901a\u8fc7<code>encoding</code>\u53c2\u6570\u6307\u5b9a\u7f16\u7801\uff08\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u503c\u662fNone\uff0c\u90a3\u4e48\u5728\u8bfb\u53d6\u6587\u4ef6\u65f6\u4f7f\u7528\u7684\u662f\u64cd\u4f5c\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7f16\u7801\uff09\uff0c\u5982\u679c\u4e0d\u80fd\u4fdd\u8bc1\u4fdd\u5b58\u6587\u4ef6\u65f6\u4f7f\u7528\u7684\u7f16\u7801\u65b9\u5f0f\u4e0eencoding\u53c2\u6570\u6307\u5b9a\u7684\u7f16\u7801\u65b9\u5f0f\u662f\u4e00\u81f4\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u80fd\u56e0\u65e0\u6cd5\u89e3\u7801\u5b57\u7b26\u800c\u5bfc\u81f4\u8bfb\u53d6\u5931\u8d25\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u8bfb\u53d6\u4e00\u4e2a\u7eaf\u6587\u672c\u6587\u4ef6\u3002</p> <pre><code>def main():\n    f = open('\u81f4\u6a61\u6811.txt', 'r', encoding='utf-8')\n    print(f.read())\n    f.close()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u8bf7\u6ce8\u610f\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5982\u679c<code>open</code>\u51fd\u6570\u6307\u5b9a\u7684\u6587\u4ef6\u5e76\u4e0d\u5b58\u5728\u6216\u8005\u65e0\u6cd5\u6253\u5f00\uff0c\u90a3\u4e48\u5c06\u5f15\u53d1\u5f02\u5e38\u72b6\u51b5\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002\u4e3a\u4e86\u8ba9\u4ee3\u7801\u6709\u4e00\u5b9a\u7684\u5065\u58ee\u6027\u548c\u5bb9\u9519\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Python\u7684\u5f02\u5e38\u673a\u5236\u5bf9\u53ef\u80fd\u5728\u8fd0\u884c\u65f6\u53d1\u751f\u72b6\u51b5\u7684\u4ee3\u7801\u8fdb\u884c\u9002\u5f53\u7684\u5904\u7406\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>def main():\n    f = None\n    try:\n        f = open('\u81f4\u6a61\u6811.txt', 'r', encoding='utf-8')\n        print(f.read())\n    except FileNotFoundError:\n        print('\u65e0\u6cd5\u6253\u5f00\u6307\u5b9a\u7684\u6587\u4ef6!')\n    except LookupError:\n        print('\u6307\u5b9a\u4e86\u672a\u77e5\u7684\u7f16\u7801!')\n    except UnicodeDecodeError:\n        print('\u8bfb\u53d6\u6587\u4ef6\u65f6\u89e3\u7801\u9519\u8bef!')\n    finally:\n        if f:\n            f.close()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u90a3\u4e9b\u5728\u8fd0\u884c\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u72b6\u51b5\u7684\u4ee3\u7801\u653e\u5728<code>try</code>\u4ee3\u7801\u5757\u4e2d\uff0c\u5728<code>try</code>\u4ee3\u7801\u5757\u7684\u540e\u9762\u53ef\u4ee5\u8ddf\u4e0a\u4e00\u4e2a\u6216\u591a\u4e2a<code>except</code>\u6765\u6355\u83b7\u53ef\u80fd\u51fa\u73b0\u7684\u5f02\u5e38\u72b6\u51b5\u3002\u4f8b\u5982\u5728\u4e0a\u9762\u8bfb\u53d6\u6587\u4ef6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6587\u4ef6\u627e\u4e0d\u5230\u4f1a\u5f15\u53d1<code>FileNotFoundError</code>\uff0c\u6307\u5b9a\u4e86\u672a\u77e5\u7684\u7f16\u7801\u4f1a\u5f15\u53d1<code>LookupError</code>\uff0c\u800c\u5982\u679c\u8bfb\u53d6\u6587\u4ef6\u65f6\u65e0\u6cd5\u6309\u6307\u5b9a\u65b9\u5f0f\u89e3\u7801\u4f1a\u5f15\u53d1<code>UnicodeDecodeError</code>\uff0c\u6211\u4eec\u5728<code>try</code>\u540e\u9762\u8ddf\u4e0a\u4e86\u4e09\u4e2a<code>except</code>\u5206\u522b\u5904\u7406\u8fd9\u4e09\u79cd\u4e0d\u540c\u7684\u5f02\u5e38\u72b6\u51b5\u3002\u6700\u540e\u6211\u4eec\u4f7f\u7528<code>finally</code>\u4ee3\u7801\u5757\u6765\u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u91ca\u653e\u6389\u7a0b\u5e8f\u4e2d\u83b7\u53d6\u7684\u5916\u90e8\u8d44\u6e90\uff0c\u7531\u4e8e<code>finally</code>\u5757\u7684\u4ee3\u7801\u4e0d\u8bba\u7a0b\u5e8f\u6b63\u5e38\u8fd8\u662f\u5f02\u5e38\u90fd\u4f1a\u6267\u884c\u5230\uff08\u751a\u81f3\u662f\u8c03\u7528\u4e86<code>sys</code>\u6a21\u5757\u7684<code>exit</code>\u51fd\u6570\u9000\u51faPython\u73af\u5883\uff0c<code>finally</code>\u5757\u90fd\u4f1a\u88ab\u6267\u884c\uff0c\u56e0\u4e3a<code>exit</code>\u51fd\u6570\u5b9e\u8d28\u4e0a\u662f\u5f15\u53d1\u4e86<code>SystemExit</code>\u5f02\u5e38\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u901a\u5e38\u628a<code>finally</code>\u5757\u79f0\u4e3a\u201c\u603b\u662f\u6267\u884c\u4ee3\u7801\u5757\u201d\uff0c\u5b83\u6700\u9002\u5408\u7528\u6765\u505a\u91ca\u653e\u5916\u90e8\u8d44\u6e90\u7684\u64cd\u4f5c\u3002\u5982\u679c\u4e0d\u613f\u610f\u5728<code>finally</code>\u4ee3\u7801\u5757\u4e2d\u5173\u95ed\u6587\u4ef6\u5bf9\u8c61\u91ca\u653e\u8d44\u6e90\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0a\u4e0b\u6587\u8bed\u6cd5\uff0c\u901a\u8fc7<code>with</code>\u5173\u952e\u5b57\u6307\u5b9a\u6587\u4ef6\u5bf9\u8c61\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u5e76\u5728\u79bb\u5f00\u4e0a\u4e0b\u6587\u73af\u5883\u65f6\u81ea\u52a8\u91ca\u653e\u6587\u4ef6\u8d44\u6e90\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>def main():\n    try:\n        with open('\u81f4\u6a61\u6811.txt', 'r', encoding='utf-8') as f:\n            print(f.read())\n    except FileNotFoundError:\n        print('\u65e0\u6cd5\u6253\u5f00\u6307\u5b9a\u7684\u6587\u4ef6!')\n    except LookupError:\n        print('\u6307\u5b9a\u4e86\u672a\u77e5\u7684\u7f16\u7801!')\n    except UnicodeDecodeError:\n        print('\u8bfb\u53d6\u6587\u4ef6\u65f6\u89e3\u7801\u9519\u8bef!')\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u9664\u4e86\u4f7f\u7528\u6587\u4ef6\u5bf9\u8c61\u7684<code>read</code>\u65b9\u6cd5\u8bfb\u53d6\u6587\u4ef6\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528<code>for-in</code>\u5faa\u73af\u9010\u884c\u8bfb\u53d6\u6216\u8005\u7528<code>readlines</code>\u65b9\u6cd5\u5c06\u6587\u4ef6\u6309\u884c\u8bfb\u53d6\u5230\u4e00\u4e2a\u5217\u8868\u5bb9\u5668\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>import time\n\n\ndef main():\n    # \u4e00\u6b21\u6027\u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\u5185\u5bb9\n    with open('\u81f4\u6a61\u6811.txt', 'r', encoding='utf-8') as f:\n        print(f.read())\n\n    # \u901a\u8fc7for-in\u5faa\u73af\u9010\u884c\u8bfb\u53d6\n    with open('\u81f4\u6a61\u6811.txt', mode='r') as f:\n        for line in f:\n            print(line, end='')\n            time.sleep(0.5)\n    print()\n\n    # \u8bfb\u53d6\u6587\u4ef6\u6309\u884c\u8bfb\u53d6\u5230\u5217\u8868\u4e2d\n    with open('\u81f4\u6a61\u6811.txt') as f:\n        lines = f.readlines()\n    print(lines)\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u8981\u5c06\u6587\u672c\u4fe1\u606f\u5199\u5165\u6587\u4ef6\u6587\u4ef6\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u5728\u4f7f\u7528<code>open</code>\u51fd\u6570\u65f6\u6307\u5b9a\u597d\u6587\u4ef6\u540d\u5e76\u5c06\u6587\u4ef6\u6a21\u5f0f\u8bbe\u7f6e\u4e3a<code>'w'</code>\u5373\u53ef\u3002\u6ce8\u610f\u5982\u679c\u9700\u8981\u5bf9\u6587\u4ef6\u5185\u5bb9\u8fdb\u884c\u8ffd\u52a0\u5f0f\u5199\u5165\uff0c\u5e94\u8be5\u5c06\u6a21\u5f0f\u8bbe\u7f6e\u4e3a<code>'a'</code>\u3002\u5982\u679c\u8981\u5199\u5165\u7684\u6587\u4ef6\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u800c\u4e0d\u662f\u5f15\u53d1\u5f02\u5e38\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u5c061-9999\u4e4b\u95f4\u7684\u7d20\u6570\u5206\u522b\u5199\u5165\u4e09\u4e2a\u6587\u4ef6\u4e2d\uff081-99\u4e4b\u95f4\u7684\u7d20\u6570\u4fdd\u5b58\u5728a.txt\u4e2d\uff0c100-999\u4e4b\u95f4\u7684\u7d20\u6570\u4fdd\u5b58\u5728b.txt\u4e2d\uff0c1000-9999\u4e4b\u95f4\u7684\u7d20\u6570\u4fdd\u5b58\u5728c.txt\u4e2d\uff09\u3002</p> <pre><code>from math import sqrt\n\n\ndef is_prime(n):\n    \"\"\"\u5224\u65ad\u7d20\u6570\u7684\u51fd\u6570\"\"\"\n    assert n &gt; 0\n    for factor in range(2, int(sqrt(n)) + 1):\n        if n % factor == 0:\n            return False\n    return True if n != 1 else False\n\n\ndef main():\n    filenames = ('a.txt', 'b.txt', 'c.txt')\n    fs_list = []\n    try:\n        for filename in filenames:\n            fs_list.append(open(filename, 'w', encoding='utf-8'))\n        for number in range(1, 10000):\n            if is_prime(number):\n                if number &lt; 100:\n                    fs_list[0].write(str(number) + '\\n')\n                elif number &lt; 1000:\n                    fs_list[1].write(str(number) + '\\n')\n                else:\n                    fs_list[2].write(str(number) + '\\n')\n    except IOError as ex:\n        print(ex)\n        print('\u5199\u6587\u4ef6\u65f6\u53d1\u751f\u9519\u8bef!')\n    finally:\n        for fs in fs_list:\n            fs.close()\n    print('\u64cd\u4f5c\u5b8c\u6210!')\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/11.%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/#_3","title":"\u8bfb\u5199\u4e8c\u8fdb\u5236\u6587\u4ef6","text":"<p>\u77e5\u9053\u4e86\u5982\u4f55\u8bfb\u5199\u6587\u672c\u6587\u4ef6\u8981\u8bfb\u5199\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e5f\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u590d\u5236\u56fe\u7247\u6587\u4ef6\u7684\u529f\u80fd\u3002</p> <pre><code>def main():\n    try:\n        with open('guido.jpg', 'rb') as fs1:\n            data = fs1.read()\n            print(type(data))  # &lt;class 'bytes'&gt;\n        with open('\u5409\u591a.jpg', 'wb') as fs2:\n            fs2.write(data)\n    except FileNotFoundError as e:\n        print('\u6307\u5b9a\u7684\u6587\u4ef6\u65e0\u6cd5\u6253\u5f00.')\n    except IOError as e:\n        print('\u8bfb\u5199\u6587\u4ef6\u65f6\u51fa\u73b0\u9519\u8bef.')\n    print('\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f.')\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/11.%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/#json","title":"\u8bfb\u5199JSON\u6587\u4ef6","text":"<p>\u901a\u8fc7\u4e0a\u9762\u7684\u8bb2\u89e3\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u5c06\u6587\u672c\u6570\u636e\u548c\u4e8c\u8fdb\u5236\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u90a3\u4e48\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5e0c\u671b\u628a\u4e00\u4e2a\u5217\u8868\u6216\u8005\u4e00\u4e2a\u5b57\u5178\u4e2d\u7684\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u53c8\u8be5\u600e\u4e48\u505a\u5462\uff1f\u7b54\u6848\u662f\u5c06\u6570\u636e\u4ee5JSON\u683c\u5f0f\u8fdb\u884c\u4fdd\u5b58\u3002JSON\u662f\u201cJavaScript Object Notation\u201d\u7684\u7f29\u5199\uff0c\u5b83\u672c\u6765\u662fJavaScript\u8bed\u8a00\u4e2d\u521b\u5efa\u5bf9\u8c61\u7684\u4e00\u79cd\u5b57\u9762\u91cf\u8bed\u6cd5\uff0c\u73b0\u5728\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u8de8\u5e73\u53f0\u8de8\u8bed\u8a00\u7684\u6570\u636e\u4ea4\u6362\uff0c\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u56e0\u4e3aJSON\u4e5f\u662f\u7eaf\u6587\u672c\uff0c\u4efb\u4f55\u7cfb\u7edf\u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\u5904\u7406\u7eaf\u6587\u672c\u90fd\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\u76ee\u524dJSON\u57fa\u672c\u4e0a\u5df2\u7ecf\u53d6\u4ee3\u4e86XML\u4f5c\u4e3a\u5f02\u6784\u7cfb\u7edf\u95f4\u4ea4\u6362\u6570\u636e\u7684\u4e8b\u5b9e\u6807\u51c6\u3002\u5173\u4e8eJSON\u7684\u77e5\u8bc6\uff0c\u66f4\u591a\u7684\u53ef\u4ee5\u53c2\u8003JSON\u7684\u5b98\u65b9\u7f51\u7ad9\uff0c\u4ece\u8fd9\u4e2a\u7f51\u7ad9\u4e5f\u53ef\u4ee5\u4e86\u89e3\u5230\u6bcf\u79cd\u8bed\u8a00\u5904\u7406JSON\u6570\u636e\u683c\u5f0f\u53ef\u4ee5\u4f7f\u7528\u7684\u5de5\u5177\u6216\u4e09\u65b9\u5e93\uff0c\u4e0b\u9762\u662f\u4e00\u4e2aJSON\u7684\u7b80\u5355\u4f8b\u5b50\u3002</p> <pre><code>{\n    \"name\": \"\u9a86\u660a\",\n    \"age\": 38,\n    \"qq\": 957658,\n    \"friends\": [\"\u738b\u5927\u9524\", \"\u767d\u5143\u82b3\"],\n    \"cars\": [\n        {\"brand\": \"BYD\", \"max_speed\": 180},\n        {\"brand\": \"Audi\", \"max_speed\": 280},\n        {\"brand\": \"Benz\", \"max_speed\": 320}\n    ]\n}\n</code></pre> <p>\u53ef\u80fd\u5927\u5bb6\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u4e0a\u9762\u7684JSON\u8ddfPython\u4e2d\u7684\u5b57\u5178\u5176\u5b9e\u662f\u4e00\u6837\u4e00\u6837\u7684\uff0c\u4e8b\u5b9e\u4e0aJSON\u7684\u6570\u636e\u7c7b\u578b\u548cPython\u7684\u6570\u636e\u7c7b\u578b\u662f\u5f88\u5bb9\u6613\u627e\u5230\u5bf9\u5e94\u5173\u7cfb\u7684\uff0c\u5982\u4e0b\u9762\u4e24\u5f20\u8868\u6240\u793a\u3002</p> JSON Python object dict array list string str number (int / real) int / float true / false True / False null None Python JSON dict object list, tuple array str string int, float, int- &amp; float-derived Enums number True / False true / false None null <p>\u6211\u4eec\u4f7f\u7528Python\u4e2d\u7684json\u6a21\u5757\u5c31\u53ef\u4ee5\u5c06\u5b57\u5178\u6216\u5217\u8868\u4ee5JSON\u683c\u5f0f\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>import json\n\n\ndef main():\n    mydict = {\n        'name': '\u9a86\u660a',\n        'age': 38,\n        'qq': 957658,\n        'friends': ['\u738b\u5927\u9524', '\u767d\u5143\u82b3'],\n        'cars': [\n            {'brand': 'BYD', 'max_speed': 180},\n            {'brand': 'Audi', 'max_speed': 280},\n            {'brand': 'Benz', 'max_speed': 320}\n        ]\n    }\n    try:\n        with open('data.json', 'w', encoding='utf-8') as fs:\n            json.dump(mydict, fs)\n    except IOError as e:\n        print(e)\n    print('\u4fdd\u5b58\u6570\u636e\u5b8c\u6210!')\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>json\u6a21\u5757\u4e3b\u8981\u6709\u56db\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u51fd\u6570\uff0c\u5206\u522b\u662f\uff1a</p> <ul> <li><code>dump</code> - \u5c06Python\u5bf9\u8c61\u6309\u7167JSON\u683c\u5f0f\u5e8f\u5217\u5316\u5230\u6587\u4ef6\u4e2d</li> <li><code>dumps</code> - \u5c06Python\u5bf9\u8c61\u5904\u7406\u6210JSON\u683c\u5f0f\u7684\u5b57\u7b26\u4e32</li> <li><code>load</code> - \u5c06\u6587\u4ef6\u4e2d\u7684JSON\u6570\u636e\u53cd\u5e8f\u5217\u5316\u6210\u5bf9\u8c61</li> <li><code>loads</code> - \u5c06\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u53cd\u5e8f\u5217\u5316\u6210Python\u5bf9\u8c61</li> </ul> <p>\u8fd9\u91cc\u51fa\u73b0\u4e86\u4e24\u4e2a\u6982\u5ff5\uff0c\u4e00\u4e2a\u53eb\u5e8f\u5217\u5316\uff0c\u4e00\u4e2a\u53eb\u53cd\u5e8f\u5217\u5316\u3002\u81ea\u7531\u7684\u767e\u79d1\u5168\u4e66\u7ef4\u57fa\u767e\u79d1\u4e0a\u5bf9\u8fd9\u4e24\u4e2a\u6982\u5ff5\u662f\u8fd9\u6837\u89e3\u91ca\u7684\uff1a\u201c\u5e8f\u5217\u5316\uff08serialization\uff09\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6570\u636e\u5904\u7406\u4e2d\uff0c\u662f\u6307\u5c06\u6570\u636e\u7ed3\u6784\u6216\u5bf9\u8c61\u72b6\u6001\u8f6c\u6362\u4e3a\u53ef\u4ee5\u5b58\u50a8\u6216\u4f20\u8f93\u7684\u5f62\u5f0f\uff0c\u8fd9\u6837\u5728\u9700\u8981\u7684\u65f6\u5019\u80fd\u591f\u6062\u590d\u5230\u539f\u5148\u7684\u72b6\u6001\uff0c\u800c\u4e14\u901a\u8fc7\u5e8f\u5217\u5316\u7684\u6570\u636e\u91cd\u65b0\u83b7\u53d6\u5b57\u8282\u65f6\uff0c\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u5b57\u8282\u6765\u4ea7\u751f\u539f\u59cb\u5bf9\u8c61\u7684\u526f\u672c\uff08\u62f7\u8d1d\uff09\u3002\u4e0e\u8fd9\u4e2a\u8fc7\u7a0b\u76f8\u53cd\u7684\u52a8\u4f5c\uff0c\u5373\u4ece\u4e00\u7cfb\u5217\u5b57\u8282\u4e2d\u63d0\u53d6\u6570\u636e\u7ed3\u6784\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u53cd\u5e8f\u5217\u5316\uff08deserialization\uff09\u201d\u3002</p> <p>\u76ee\u524d\u7edd\u5927\u591a\u6570\u7f51\u7edc\u6570\u636e\u670d\u52a1\uff08\u6216\u79f0\u4e4b\u4e3a\u7f51\u7edcAPI\uff09\u90fd\u662f\u57fa\u4e8eHTTP\u534f\u8bae\u63d0\u4f9bJSON\u683c\u5f0f\u7684\u6570\u636e\uff0c\u5173\u4e8eHTTP\u534f\u8bae\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u53ef\u4ee5\u770b\u770b\u962e\u4e00\u5cf0\u8001\u5e08\u7684\u300aHTTP\u534f\u8bae\u5165\u95e8\u300b\uff0c\u5982\u679c\u60f3\u4e86\u89e3\u56fd\u5185\u7684\u7f51\u7edc\u6570\u636e\u670d\u52a1\uff0c\u53ef\u4ee5\u770b\u770b\u805a\u5408\u6570\u636e\u548c\u963f\u51e1\u8fbe\u6570\u636e\u7b49\u7f51\u7ad9\uff0c\u56fd\u5916\u7684\u53ef\u4ee5\u770b\u770b{API}Search\u7f51\u7ad9\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528requests\u6a21\u5757\uff08\u5c01\u88c5\u5f97\u8db3\u591f\u597d\u7684\u7b2c\u4e09\u65b9\u7f51\u7edc\u8bbf\u95ee\u6a21\u5757\uff09\u8bbf\u95ee\u7f51\u7edcAPI\u83b7\u53d6\u56fd\u5185\u65b0\u95fb\uff0c\u5982\u4f55\u901a\u8fc7json\u6a21\u5757\u89e3\u6790JSON\u6570\u636e\u5e76\u663e\u793a\u65b0\u95fb\u6807\u9898\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u4f7f\u7528\u4e86\u5929\u884c\u6570\u636e\u63d0\u4f9b\u7684\u56fd\u5185\u65b0\u95fb\u6570\u636e\u63a5\u53e3\uff0c\u5176\u4e2d\u7684APIKey\u9700\u8981\u81ea\u5df1\u5230\u8be5\u7f51\u7ad9\u7533\u8bf7\u3002</p> <pre><code>import requests\nimport json\n\n\ndef main():\n    resp = requests.get('http://api.tianapi.com/guonei/?key=APIKey&amp;num=10')\n    data_model = json.loads(resp.text)\n    for news in data_model['newslist']:\n        print(news['title'])\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u5728Python\u4e2d\u8981\u5b9e\u73b0\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u9664\u4e86\u4f7f\u7528json\u6a21\u5757\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528pickle\u548cshelve\u6a21\u5757\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u6a21\u5757\u662f\u4f7f\u7528\u7279\u6709\u7684\u5e8f\u5217\u5316\u534f\u8bae\u6765\u5e8f\u5217\u5316\u6570\u636e\uff0c\u56e0\u6b64\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\u53ea\u80fd\u88abPython\u8bc6\u522b\u3002\u5173\u4e8e\u8fd9\u4e24\u4e2a\u6a21\u5757\u7684\u76f8\u5173\u77e5\u8bc6\u53ef\u4ee5\u81ea\u5df1\u770b\u770b\u7f51\u7edc\u4e0a\u7684\u8d44\u6599\u3002\u53e6\u5916\uff0c\u5982\u679c\u8981\u4e86\u89e3\u66f4\u591a\u7684\u5173\u4e8ePython\u5f02\u5e38\u673a\u5236\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u770b\u770bsegmentfault\u4e0a\u9762\u7684\u6587\u7ae0\u300a\u603b\u7ed3\uff1aPython\u4e2d\u7684\u5f02\u5e38\u5904\u7406\u300b\uff0c\u8fd9\u7bc7\u6587\u7ae0\u4e0d\u4ec5\u4ecb\u7ecd\u4e86Python\u4e2d\u5f02\u5e38\u673a\u5236\u7684\u4f7f\u7528\uff0c\u8fd8\u603b\u7ed3\u4e86\u4e00\u7cfb\u5217\u7684\u6700\u4f73\u5b9e\u8df5\uff0c\u5f88\u503c\u5f97\u4e00\u8bfb\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/12.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","title":"12.\u5b57\u7b26\u4e32\u548c\u6b63\u5219\u8868\u8fbe\u5f0f","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/12.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#_1","title":"\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/12.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#_2","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u77e5\u8bc6","text":"<p>\u5728\u7f16\u5199\u5904\u7406\u5b57\u7b26\u4e32\u7684\u7a0b\u5e8f\u6216\u7f51\u9875\u65f6\uff0c\u7ecf\u5e38\u4f1a\u6709\u67e5\u627e\u7b26\u5408\u67d0\u4e9b\u590d\u6742\u89c4\u5219\u7684\u5b57\u7b26\u4e32\u7684\u9700\u8981\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u662f\u7528\u4e8e\u63cf\u8ff0\u8fd9\u4e9b\u89c4\u5219\u7684\u5de5\u5177\uff0c\u6362\u53e5\u8bdd\u8bf4\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u4e00\u79cd\u5de5\u5177\uff0c\u5b83\u5b9a\u4e49\u4e86\u5b57\u7b26\u4e32\u7684\u5339\u914d\u6a21\u5f0f\uff08\u5982\u4f55\u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u6709\u8ddf\u67d0\u79cd\u6a21\u5f0f\u5339\u914d\u7684\u90e8\u5206\u6216\u8005\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5c06\u4e0e\u6a21\u5f0f\u5339\u914d\u7684\u90e8\u5206\u63d0\u53d6\u51fa\u6765\u6216\u8005\u66ff\u6362\u6389\uff09\u3002\u5982\u679c\u4f60\u5728Windows\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4f7f\u7528\u8fc7\u6587\u4ef6\u67e5\u627e\u5e76\u4e14\u5728\u6307\u5b9a\u6587\u4ef6\u540d\u65f6\u4f7f\u7528\u8fc7\u901a\u914d\u7b26\uff08*\u548c?\uff09\uff0c\u90a3\u4e48\u6b63\u5219\u8868\u8fbe\u5f0f\u4e5f\u662f\u4e0e\u4e4b\u7c7b\u4f3c\u7684\u7528\u6765\u8fdb\u884c\u6587\u672c\u5339\u914d\u7684\u5de5\u5177\uff0c\u53ea\u4e0d\u8fc7\u6bd4\u8d77\u901a\u914d\u7b26\u6b63\u5219\u8868\u8fbe\u5f0f\u66f4\u5f3a\u5927\uff0c\u5b83\u80fd\u66f4\u7cbe\u786e\u5730\u63cf\u8ff0\u4f60\u7684\u9700\u6c42\uff08\u5f53\u7136\u4f60\u4ed8\u51fa\u7684\u4ee3\u4ef7\u662f\u4e66\u5199\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u6bd4\u6253\u51fa\u4e00\u4e2a\u901a\u914d\u7b26\u8981\u590d\u6742\u5f97\u591a\uff0c\u8981\u77e5\u9053\u4efb\u4f55\u7ed9\u4f60\u5e26\u6765\u597d\u5904\u7684\u4e1c\u897f\u90fd\u662f\u6709\u4ee3\u4ef7\u7684\uff0c\u5c31\u5982\u540c\u5b66\u4e60\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u4e00\u6837\uff09\uff0c\u6bd4\u5982\u4f60\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u6765\u67e5\u627e\u6240\u6709\u4ee50\u5f00\u5934\uff0c\u540e\u9762\u8ddf\u77402-3\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u8fde\u5b57\u53f7\u201c-\u201d\uff0c\u6700\u540e\u662f7\u62168\u4f4d\u6570\u5b57\u7684\u5b57\u7b26\u4e32\uff08\u50cf028-12345678\u62160813-7654321\uff09\uff0c\u8fd9\u4e0d\u5c31\u662f\u56fd\u5185\u7684\u5ea7\u673a\u53f7\u7801\u5417\u3002\u6700\u521d\u8ba1\u7b97\u673a\u662f\u4e3a\u4e86\u505a\u6570\u5b66\u8fd0\u7b97\u800c\u8bde\u751f\u7684\uff0c\u5904\u7406\u7684\u4fe1\u606f\u57fa\u672c\u4e0a\u90fd\u662f\u6570\u503c\uff0c\u800c\u4eca\u5929\u6211\u4eec\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u5904\u7406\u7684\u4fe1\u606f\u57fa\u672c\u4e0a\u90fd\u662f\u6587\u672c\u6570\u636e\uff0c\u6211\u4eec\u5e0c\u671b\u8ba1\u7b97\u673a\u80fd\u591f\u8bc6\u522b\u548c\u5904\u7406\u7b26\u5408\u67d0\u4e9b\u6a21\u5f0f\u7684\u6587\u672c\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u663e\u5f97\u975e\u5e38\u91cd\u8981\u4e86\u3002\u4eca\u5929\u51e0\u4e4e\u6240\u6709\u7684\u7f16\u7a0b\u8bed\u8a00\u90fd\u63d0\u4f9b\u4e86\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u7684\u652f\u6301\uff0cPython\u901a\u8fc7\u6807\u51c6\u5e93\u4e2d\u7684re\u6a21\u5757\u6765\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e0b\u9762\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u4ece\u67d0\u4e2a\u5730\u65b9\uff08\u53ef\u80fd\u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u4e5f\u53ef\u80fd\u662f\u7f51\u7edc\u4e0a\u7684\u4e00\u5219\u65b0\u95fb\uff09\u83b7\u5f97\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e0c\u671b\u5728\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u624b\u673a\u53f7\u548c\u5ea7\u673a\u53f7\u3002\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u8bbe\u5b9a\u624b\u673a\u53f7\u662f11\u4f4d\u7684\u6570\u5b57\uff08\u6ce8\u610f\u5e76\u4e0d\u662f\u968f\u673a\u768411\u4f4d\u6570\u5b57\uff0c\u56e0\u4e3a\u4f60\u6ca1\u6709\u89c1\u8fc7\u201c25012345678\u201d\u8fd9\u6837\u7684\u624b\u673a\u53f7\u5427\uff09\u800c\u5ea7\u673a\u53f7\u8ddf\u4e0a\u4e00\u6bb5\u4e2d\u63cf\u8ff0\u7684\u6a21\u5f0f\u76f8\u540c\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u8981\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u5c31\u4f1a\u5f88\u9ebb\u70e6\u3002</p> <p>\u5173\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u5927\u5bb6\u53ef\u4ee5\u9605\u8bfb\u4e00\u7bc7\u975e\u5e38\u6709\u540d\u7684\u535a\u5ba2\u53eb\u300a\u6b63\u5219\u8868\u8fbe\u5f0f30\u5206\u949f\u5165\u95e8\u6559\u7a0b\u300b\uff0c\u8bfb\u5b8c\u8fd9\u7bc7\u6587\u7ae0\u540e\u4f60\u5c31\u53ef\u4ee5\u770b\u61c2\u4e0b\u9762\u7684\u8868\u683c\uff0c\u8fd9\u662f\u6211\u4eec\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u4e00\u4e9b\u57fa\u672c\u7b26\u53f7\u8fdb\u884c\u7684\u627c\u8981\u603b\u7ed3\u3002</p> \u7b26\u53f7 \u89e3\u91ca \u793a\u4f8b \u8bf4\u660e . \u5339\u914d\u4efb\u610f\u5b57\u7b26 b.t \u53ef\u4ee5\u5339\u914dbat / but / b#t / b1t\u7b49 \\w \u5339\u914d\u5b57\u6bcd/\u6570\u5b57/\u4e0b\u5212\u7ebf b\\wt \u53ef\u4ee5\u5339\u914dbat / b1t / b_t\u7b49\u4f46\u4e0d\u80fd\u5339\u914db#t \\s \u5339\u914d\u7a7a\u767d\u5b57\u7b26\uff08\u5305\u62ec\\r\u3001\\n\u3001\\t\u7b49\uff09 love\\syou \u53ef\u4ee5\u5339\u914dlove you \\d \u5339\u914d\u6570\u5b57 \\d\\d \u53ef\u4ee5\u5339\u914d01 / 23 / 99\u7b49 \\b \u5339\u914d\u5355\u8bcd\u7684\u8fb9\u754c \\bThe\\b ^ \u5339\u914d\u5b57\u7b26\u4e32\u7684\u5f00\u59cb ^The \u53ef\u4ee5\u5339\u914dThe\u5f00\u5934\u7684\u5b57\u7b26\u4e32 $ \u5339\u914d\u5b57\u7b26\u4e32\u7684\u7ed3\u675f .exe$ \u53ef\u4ee5\u5339\u914d.exe\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32 \\W \u5339\u914d\u975e\u5b57\u6bcd/\u6570\u5b57/\u4e0b\u5212\u7ebf b\\Wt \u53ef\u4ee5\u5339\u914db#t / b@t\u7b49\u4f46\u4e0d\u80fd\u5339\u914dbut / b1t / b_t\u7b49 \\S \u5339\u914d\u975e\u7a7a\u767d\u5b57\u7b26 love\\Syou \u53ef\u4ee5\u5339\u914dlove#you\u7b49\u4f46\u4e0d\u80fd\u5339\u914dlove you \\D \u5339\u914d\u975e\u6570\u5b57 \\d\\D \u53ef\u4ee5\u5339\u914d9a / 3# / 0F\u7b49 \\B \u5339\u914d\u975e\u5355\u8bcd\u8fb9\u754c \\Bio\\B [] \u5339\u914d\u6765\u81ea\u5b57\u7b26\u96c6\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [aeiou] \u53ef\u4ee5\u5339\u914d\u4efb\u4e00\u5143\u97f3\u5b57\u6bcd\u5b57\u7b26 [^] \u5339\u914d\u4e0d\u5728\u5b57\u7b26\u96c6\u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [^aeiou] \u53ef\u4ee5\u5339\u914d\u4efb\u4e00\u975e\u5143\u97f3\u5b57\u6bcd\u5b57\u7b26 * \u5339\u914d0\u6b21\u6216\u591a\u6b21 \\w* + \u5339\u914d1\u6b21\u6216\u591a\u6b21 \\w+ ? \u5339\u914d0\u6b21\u62161\u6b21 \\w? {N} \u5339\u914dN\u6b21 \\w{3} {M,} \u5339\u914d\u81f3\u5c11M\u6b21 \\w{3,} {M,N} \u5339\u914d\u81f3\u5c11M\u6b21\u81f3\u591aN\u6b21 \\w{3,6} | \u5206\u652f foo|bar \u53ef\u4ee5\u5339\u914dfoo\u6216\u8005bar (?#) \u6ce8\u91ca (exp) \u5339\u914dexp\u5e76\u6355\u83b7\u5230\u81ea\u52a8\u547d\u540d\u7684\u7ec4\u4e2d (?&lt;name&gt;exp) \u5339\u914dexp\u5e76\u6355\u83b7\u5230\u540d\u4e3aname\u7684\u7ec4\u4e2d (?:exp) \u5339\u914dexp\u4f46\u662f\u4e0d\u6355\u83b7\u5339\u914d\u7684\u6587\u672c (?=exp) \u5339\u914dexp\u524d\u9762\u7684\u4f4d\u7f6e \\b\\w+(?=ing) \u53ef\u4ee5\u5339\u914dI'm dancing\u4e2d\u7684danc (?&lt;=exp) \u5339\u914dexp\u540e\u9762\u7684\u4f4d\u7f6e (?&lt;=\\bdanc)\\w+\\b \u53ef\u4ee5\u5339\u914dI love dancing and reading\u4e2d\u7684\u7b2c\u4e00\u4e2aing (?!exp) \u5339\u914d\u540e\u9762\u4e0d\u662fexp\u7684\u4f4d\u7f6e (?&lt;!exp) \u5339\u914d\u524d\u9762\u4e0d\u662fexp\u7684\u4f4d\u7f6e *? \u91cd\u590d\u4efb\u610f\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d a.*ba.*?b \u5c06\u6b63\u5219\u8868\u8fbe\u5f0f\u5e94\u7528\u4e8eaabab\uff0c\u524d\u8005\u4f1a\u5339\u914d\u6574\u4e2a\u5b57\u7b26\u4e32aabab\uff0c\u540e\u8005\u4f1a\u5339\u914daab\u548cab\u4e24\u4e2a\u5b57\u7b26\u4e32 +? \u91cd\u590d1\u6b21\u6216\u591a\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d ?? \u91cd\u590d0\u6b21\u62161\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d {M,N}? \u91cd\u590dM\u5230N\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d {M,}? \u91cd\u590dM\u6b21\u4ee5\u4e0a\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d <p>\u8bf4\u660e\uff1a \u5982\u679c\u9700\u8981\u5339\u914d\u7684\u5b57\u7b26\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u7279\u6b8a\u5b57\u7b26\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\\\u8fdb\u884c\u8f6c\u4e49\u5904\u7406\uff0c\u4f8b\u5982\u60f3\u5339\u914d\u5c0f\u6570\u70b9\u53ef\u4ee5\u5199\u6210\\.\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u76f4\u63a5\u5199.\u4f1a\u5339\u914d\u4efb\u610f\u5b57\u7b26\uff1b\u540c\u7406\uff0c\u60f3\u5339\u914d\u5de6\u62ec\u53f7\u5fc5\u987b\u5199\u6210 \\(\uff0c\u5426\u5219\u5706\u62ec\u53f7\u88ab\u89c6\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u5206\u7ec4\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/12.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#python","title":"Python\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u652f\u6301","text":"<p>Python\u63d0\u4f9b\u4e86re\u6a21\u5757\u6765\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u64cd\u4f5c\uff0c\u4e0b\u9762\u662fre\u6a21\u5757\u4e2d\u7684\u6838\u5fc3\u51fd\u6570\u3002</p> \u51fd\u6570 \u8bf4\u660e compile(pattern, flags=0) \u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\u8fd4\u56de\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61 match(pattern, string, flags=0) \u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5b57\u7b26\u4e32 \u6210\u529f\u8fd4\u56de\u5339\u914d\u5bf9\u8c61 \u5426\u5219\u8fd4\u56deNone search(pattern, string, flags=0) \u641c\u7d22\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6a21\u5f0f \u6210\u529f\u8fd4\u56de\u5339\u914d\u5bf9\u8c61 \u5426\u5219\u8fd4\u56deNone split(pattern, string, maxsplit=0, flags=0) \u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6307\u5b9a\u7684\u6a21\u5f0f\u5206\u9694\u7b26\u62c6\u5206\u5b57\u7b26\u4e32 \u8fd4\u56de\u5217\u8868 sub(pattern, repl, string, count=0, flags=0) \u7528\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u66ff\u6362\u539f\u5b57\u7b26\u4e32\u4e2d\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6a21\u5f0f \u53ef\u4ee5\u7528count\u6307\u5b9a\u66ff\u6362\u7684\u6b21\u6570 fullmatch(pattern, string, flags=0) match\u51fd\u6570\u7684\u5b8c\u5168\u5339\u914d\uff08\u4ece\u5b57\u7b26\u4e32\u5f00\u5934\u5230\u7ed3\u5c3e\uff09\u7248\u672c findall(pattern, string, flags=0) \u67e5\u627e\u5b57\u7b26\u4e32\u6240\u6709\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6a21\u5f0f \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u5217\u8868 finditer(pattern, string, flags=0) \u67e5\u627e\u5b57\u7b26\u4e32\u6240\u6709\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6a21\u5f0f \u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668 purge() \u6e05\u9664\u9690\u5f0f\u7f16\u8bd1\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u7f13\u5b58 re.I / re.IGNORECASE \u5ffd\u7565\u5927\u5c0f\u5199\u5339\u914d\u6807\u8bb0 re.M / re.MULTILINE \u591a\u884c\u5339\u914d\u6807\u8bb0 <p>\u8bf4\u660e\uff1a \u4e0a\u9762\u63d0\u5230\u7684re\u6a21\u5757\u4e2d\u7684\u8fd9\u4e9b\u51fd\u6570\uff0c\u5b9e\u9645\u5f00\u53d1\u4e2d\u4e5f\u53ef\u4ee5\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\u7684\u65b9\u6cd5\u66ff\u4ee3\u5bf9\u8fd9\u4e9b\u51fd\u6570\u7684\u4f7f\u7528\uff0c\u5982\u679c\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u9700\u8981\u91cd\u590d\u7684\u4f7f\u7528\uff0c\u90a3\u4e48\u5148\u901a\u8fc7compile\u51fd\u6570\u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u521b\u5efa\u51fa\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\u65e0\u7591\u662f\u66f4\u4e3a\u660e\u667a\u7684\u9009\u62e9\u3002</p> <p>\u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u4f8b\u5b50\u6765\u544a\u8bc9\u5927\u5bb6\u5728Python\u4e2d\u5982\u4f55\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/12.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#1qq","title":"\u4f8b\u5b501\uff1a\u9a8c\u8bc1\u8f93\u5165\u7528\u6237\u540d\u548cQQ\u53f7\u662f\u5426\u6709\u6548\u5e76\u7ed9\u51fa\u5bf9\u5e94\u7684\u63d0\u793a\u4fe1\u606f\u3002","text":"<pre><code>\"\"\"\n\u9a8c\u8bc1\u8f93\u5165\u7528\u6237\u540d\u548cQQ\u53f7\u662f\u5426\u6709\u6548\u5e76\u7ed9\u51fa\u5bf9\u5e94\u7684\u63d0\u793a\u4fe1\u606f\n\n\u8981\u6c42\uff1a\u7528\u6237\u540d\u5fc5\u987b\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u6216\u4e0b\u5212\u7ebf\u6784\u6210\u4e14\u957f\u5ea6\u57286~20\u4e2a\u5b57\u7b26\u4e4b\u95f4\uff0cQQ\u53f7\u662f5~12\u7684\u6570\u5b57\u4e14\u9996\u4f4d\u4e0d\u80fd\u4e3a0\n\"\"\"\nimport re\n\n\ndef main():\n    username = input('\u8bf7\u8f93\u5165\u7528\u6237\u540d: ')\n    qq = input('\u8bf7\u8f93\u5165QQ\u53f7: ')\n    # match\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u5b57\u7b26\u4e32\u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\n    # \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8981\u8ddf\u6b63\u5219\u8868\u8fbe\u5f0f\u505a\u5339\u914d\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61\n    m1 = re.match(r'^[0-9a-zA-Z_]{6,20}$', username)\n    if not m1:\n        print('\u8bf7\u8f93\u5165\u6709\u6548\u7684\u7528\u6237\u540d.')\n    m2 = re.match(r'^[1-9]\\d{4,11}$', qq)\n    if not m2:\n        print('\u8bf7\u8f93\u5165\u6709\u6548\u7684QQ\u53f7.')\n    if m1 and m2:\n        print('\u4f60\u8f93\u5165\u7684\u4fe1\u606f\u662f\u6709\u6548\u7684!')\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u63d0\u793a\uff1a \u4e0a\u9762\u5728\u4e66\u5199\u6b63\u5219\u8868\u8fbe\u5f0f\u65f6\u4f7f\u7528\u4e86\u201c\u539f\u59cb\u5b57\u7b26\u4e32\u201d\u7684\u5199\u6cd5\uff08\u5728\u5b57\u7b26\u4e32\u524d\u9762\u52a0\u4e0a\u4e86r\uff09\uff0c\u6240\u8c13\u201c\u539f\u59cb\u5b57\u7b26\u4e32\u201d\u5c31\u662f\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u662f\u5b83\u539f\u59cb\u7684\u610f\u4e49\uff0c\u8bf4\u5f97\u66f4\u76f4\u63a5\u4e00\u70b9\u5c31\u662f\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u6240\u8c13\u7684\u8f6c\u4e49\u5b57\u7b26\u5566\u3002\u56e0\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u6709\u5f88\u591a\u5143\u5b57\u7b26\u548c\u9700\u8981\u8fdb\u884c\u8f6c\u4e49\u7684\u5730\u65b9\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u539f\u59cb\u5b57\u7b26\u4e32\u5c31\u9700\u8981\u5c06\u53cd\u659c\u6760\u5199\u4f5c\\\\\uff0c\u4f8b\u5982\u8868\u793a\u6570\u5b57\u7684\\d\u5f97\u4e66\u5199\u6210\\\\d\uff0c\u8fd9\u6837\u4e0d\u4ec5\u5199\u8d77\u6765\u4e0d\u65b9\u4fbf\uff0c\u9605\u8bfb\u7684\u65f6\u5019\u4e5f\u4f1a\u5f88\u5403\u529b\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/12.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#2","title":"\u4f8b\u5b502\uff1a\u4ece\u4e00\u6bb5\u6587\u5b57\u4e2d\u63d0\u53d6\u51fa\u56fd\u5185\u624b\u673a\u53f7\u7801\u3002","text":"<p>\u4e0b\u9762\u8fd9\u5f20\u56fe\u662f\u622a\u6b62\u52302017\u5e74\u5e95\uff0c\u56fd\u5185\u4e09\u5bb6\u8fd0\u8425\u5546\u63a8\u51fa\u7684\u624b\u673a\u53f7\u6bb5\u3002</p> <p></p> <pre><code>import re\n\n\ndef main():\n    # \u521b\u5efa\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61 \u4f7f\u7528\u4e86\u524d\u77bb\u548c\u56de\u987e\u6765\u4fdd\u8bc1\u624b\u673a\u53f7\u524d\u540e\u4e0d\u5e94\u8be5\u51fa\u73b0\u6570\u5b57\n    pattern = re.compile(r'(?&lt;=\\D)1[34578]\\d{9}(?=\\D)')\n    sentence = '''\n    \u91cd\u8981\u7684\u4e8b\u60c5\u8bf48130123456789\u904d\uff0c\u6211\u7684\u624b\u673a\u53f7\u662f13512346789\u8fd9\u4e2a\u9753\u53f7\uff0c\n    \u4e0d\u662f15600998765\uff0c\u4e5f\u662f110\u6216119\uff0c\u738b\u5927\u9524\u7684\u624b\u673a\u53f7\u624d\u662f15600998765\u3002\n    '''\n    # \u67e5\u627e\u6240\u6709\u5339\u914d\u5e76\u4fdd\u5b58\u5230\u4e00\u4e2a\u5217\u8868\u4e2d\n    mylist = re.findall(pattern, sentence)\n    print(mylist)\n    print('--------\u534e\u4e3d\u7684\u5206\u9694\u7ebf--------')\n    # \u901a\u8fc7\u8fed\u4ee3\u5668\u53d6\u51fa\u5339\u914d\u5bf9\u8c61\u5e76\u83b7\u5f97\u5339\u914d\u7684\u5185\u5bb9\n    for temp in pattern.finditer(sentence):\n        print(temp.group())\n    print('--------\u534e\u4e3d\u7684\u5206\u9694\u7ebf--------')\n    # \u901a\u8fc7search\u51fd\u6570\u6307\u5b9a\u641c\u7d22\u4f4d\u7f6e\u627e\u51fa\u6240\u6709\u5339\u914d\n    m = pattern.search(sentence)\n    while m:\n        print(m.group())\n        m = pattern.search(sentence, m.end())\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u8bf4\u660e\uff1a \u4e0a\u9762\u5339\u914d\u56fd\u5185\u624b\u673a\u53f7\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u4e0d\u591f\u597d\uff0c\u56e0\u4e3a\u50cf14\u5f00\u5934\u7684\u53f7\u7801\u53ea\u6709145\u6216147\uff0c\u800c\u4e0a\u9762\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u6ca1\u6709\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\uff0c\u8981\u5339\u914d\u56fd\u5185\u624b\u673a\u53f7\uff0c\u66f4\u597d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5199\u6cd5\u662f\uff1a<code>(?&lt;=\\D)(1[38]\\d{9}|14[57]\\d{8}|15[0-35-9]\\d{8}|17[678]\\d{8})(?=\\D)</code>\uff0c\u56fd\u5185\u6700\u8fd1\u597d\u50cf\u670919\u548c16\u5f00\u5934\u7684\u624b\u673a\u53f7\u4e86\uff0c\u4f46\u662f\u8fd9\u4e2a\u6682\u65f6\u4e0d\u5728\u6211\u4eec\u8003\u8651\u4e4b\u5217\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/12.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#3","title":"\u4f8b\u5b503\uff1a\u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u4e0d\u826f\u5185\u5bb9","text":"<pre><code>import re\n\n\ndef main():\n    sentence = '\u4f60\u4e2b\u662f\u50bb\u53c9\u5417? \u6211\u64cd\u4f60\u5927\u7237\u7684. Fuck you.'\n    purified = re.sub('[\u64cd\u808f\u8279]|fuck|shit|\u50bb[\u6bd4\u5c44\u903c\u53c9\u7f3a\u540a\u5c4c]|\u715e\u7b14',\n                      '*', sentence, flags=re.IGNORECASE)\n    print(purified)  # \u4f60\u4e2b\u662f*\u5417? \u6211*\u4f60\u5927\u7237\u7684. * you.\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u8bf4\u660e\uff1a re\u6a21\u5757\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u51fd\u6570\u4e2d\u90fd\u6709\u4e00\u4e2aflags\u53c2\u6570\uff0c\u5b83\u4ee3\u8868\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5339\u914d\u6807\u8bb0\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u6807\u8bb0\u6765\u6307\u5b9a\u5339\u914d\u65f6\u662f\u5426\u5ffd\u7565\u5927\u5c0f\u5199\u3001\u662f\u5426\u8fdb\u884c\u591a\u884c\u5339\u914d\u3001\u662f\u5426\u663e\u793a\u8c03\u8bd5\u4fe1\u606f\u7b49\u3002\u5982\u679c\u9700\u8981\u4e3aflags\u53c2\u6570\u6307\u5b9a\u591a\u4e2a\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528\u6309\u4f4d\u6216\u8fd0\u7b97\u7b26\u8fdb\u884c\u53e0\u52a0\uff0c\u5982<code>flags=re.I | re.M</code>\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/12.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#4","title":"\u4f8b\u5b504\uff1a\u62c6\u5206\u957f\u5b57\u7b26\u4e32","text":"<pre><code>import re\n\n\ndef main():\n    poem = '\u7a97\u524d\u660e\u6708\u5149\uff0c\u7591\u662f\u5730\u4e0a\u971c\u3002\u4e3e\u5934\u671b\u660e\u6708\uff0c\u4f4e\u5934\u601d\u6545\u4e61\u3002'\n    sentence_list = re.split(r'[\uff0c\u3002, .]', poem)\n    while '' in sentence_list:\n        sentence_list.remove('')\n    print(sentence_list)  # ['\u7a97\u524d\u660e\u6708\u5149', '\u7591\u662f\u5730\u4e0a\u971c', '\u4e3e\u5934\u671b\u660e\u6708', '\u4f4e\u5934\u601d\u6545\u4e61']\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/12.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#_3","title":"\u540e\u8bdd","text":"<p>\u5982\u679c\u8981\u4ece\u4e8b\u722c\u866b\u7c7b\u5e94\u7528\u7684\u5f00\u53d1\uff0c\u90a3\u4e48\u6b63\u5219\u8868\u8fbe\u5f0f\u4e00\u5b9a\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u52a9\u624b\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u8fc5\u901f\u7684\u4ece\u7f51\u9875\u4ee3\u7801\u4e2d\u53d1\u73b0\u67d0\u79cd\u6211\u4eec\u6307\u5b9a\u7684\u6a21\u5f0f\u5e76\u63d0\u53d6\u51fa\u6211\u4eec\u9700\u8981\u7684\u4fe1\u606f\uff0c\u5f53\u7136\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u6536\uff0c\u8981\u7f16\u5199\u4e00\u4e2a\u6b63\u786e\u7684\u9002\u5f53\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u80fd\u5e76\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\u60c5\uff08\u5f53\u7136\u6709\u4e9b\u5e38\u7528\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u76f4\u63a5\u5728\u7f51\u4e0a\u627e\u627e\uff09\uff0c\u6240\u4ee5\u5b9e\u9645\u5f00\u53d1\u722c\u866b\u5e94\u7528\u7684\u65f6\u5019\uff0c\u6709\u5f88\u591a\u4eba\u4f1a\u9009\u62e9Beautiful Soup\u6216Lxml\u6765\u8fdb\u884c\u5339\u914d\u548c\u4fe1\u606f\u7684\u63d0\u53d6\uff0c\u524d\u8005\u7b80\u5355\u65b9\u4fbf\u4f46\u662f\u6027\u80fd\u8f83\u5dee\uff0c\u540e\u8005\u65e2\u597d\u7528\u6027\u80fd\u4e5f\u597d\uff0c\u4f46\u662f\u5b89\u88c5\u7a0d\u5acc\u9ebb\u70e6\uff0c\u8fd9\u4e9b\u5185\u5bb9\u6211\u4eec\u4f1a\u5728\u540e\u671f\u7684\u722c\u866b\u4e13\u9898\u4e2d\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/13.%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/","title":"13.\u8fdb\u7a0b\u548c\u7ebf\u7a0b","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/13.%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_1","title":"\u8fdb\u7a0b\u548c\u7ebf\u7a0b","text":"<p>\u4eca\u5929\u6211\u4eec\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u65e9\u5df2\u8fdb\u5165\u591aCPU\u6216\u591a\u6838\u65f6\u4ee3\uff0c\u800c\u6211\u4eec\u4f7f\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u90fd\u662f\u652f\u6301\u201c\u591a\u4efb\u52a1\u201d\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e00\u4e2a\u7a0b\u5e8f\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u5b50\u4efb\u52a1\uff0c\u8ba9\u591a\u4e2a\u5b50\u4efb\u52a1\u5e76\u53d1\u7684\u6267\u884c\uff0c\u4ece\u800c\u7f29\u77ed\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\uff0c\u540c\u65f6\u4e5f\u8ba9\u7528\u6237\u83b7\u5f97\u66f4\u597d\u7684\u4f53\u9a8c\u3002\u56e0\u6b64\u5728\u5f53\u4e0b\u4e0d\u7ba1\u662f\u7528\u4ec0\u4e48\u7f16\u7a0b\u8bed\u8a00\u8fdb\u884c\u5f00\u53d1\uff0c\u5b9e\u73b0\u8ba9\u7a0b\u5e8f\u540c\u65f6\u6267\u884c\u591a\u4e2a\u4efb\u52a1\u4e5f\u5c31\u662f\u5e38\u8bf4\u7684\u201c\u5e76\u53d1\u7f16\u7a0b\u201d\uff0c\u5e94\u8be5\u662f\u7a0b\u5e8f\u5458\u5fc5\u5907\u6280\u80fd\u4e4b\u4e00\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5148\u8ba8\u8bba\u4e24\u4e2a\u6982\u5ff5\uff0c\u4e00\u4e2a\u53eb\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u53eb\u7ebf\u7a0b\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/13.%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_2","title":"\u6982\u5ff5","text":"<p>\u8fdb\u7a0b\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6267\u884c\u7684\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u8fdb\u7a0b\u4e3a\u5355\u4f4d\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u5730\u5740\u7a7a\u95f4\u3001\u6570\u636e\u6808\u4ee5\u53ca\u5176\u4ed6\u7528\u4e8e\u8ddf\u8e2a\u8fdb\u7a0b\u6267\u884c\u7684\u8f85\u52a9\u6570\u636e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u6240\u6709\u8fdb\u7a0b\u7684\u6267\u884c\uff0c\u4e3a\u5b83\u4eec\u5408\u7406\u7684\u5206\u914d\u8d44\u6e90\u3002\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7fork\u6216spawn\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u65b0\u7684\u8fdb\u7a0b\u6765\u6267\u884c\u5176\u4ed6\u7684\u4efb\u52a1\uff0c\u4e0d\u8fc7\u65b0\u7684\u8fdb\u7a0b\u4e5f\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u6b64\u5fc5\u987b\u901a\u8fc7\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\uff08IPC\uff0cInter-Process Communication\uff09\u6765\u5b9e\u73b0\u6570\u636e\u5171\u4eab\uff0c\u5177\u4f53\u7684\u65b9\u5f0f\u5305\u62ec\u7ba1\u9053\u3001\u4fe1\u53f7\u3001\u5957\u63a5\u5b57\u3001\u5171\u4eab\u5185\u5b58\u533a\u7b49\u3002</p> <p>\u4e00\u4e2a\u8fdb\u7a0b\u8fd8\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a\u5e76\u53d1\u7684\u6267\u884c\u7ebf\u7d22\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u62e5\u6709\u591a\u4e2a\u53ef\u4ee5\u83b7\u5f97CPU\u8c03\u5ea6\u7684\u6267\u884c\u5355\u5143\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u7ebf\u7a0b\u3002\u7531\u4e8e\u7ebf\u7a0b\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e0b\uff0c\u5b83\u4eec\u53ef\u4ee5\u5171\u4eab\u76f8\u540c\u7684\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u76f8\u5bf9\u4e8e\u8fdb\u7a0b\u800c\u8a00\uff0c\u7ebf\u7a0b\u95f4\u7684\u4fe1\u606f\u5171\u4eab\u548c\u901a\u4fe1\u66f4\u52a0\u5bb9\u6613\u3002\u5f53\u7136\u5728\u5355\u6838CPU\u7cfb\u7edf\u4e2d\uff0c\u771f\u6b63\u7684\u5e76\u53d1\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u5728\u67d0\u4e2a\u65f6\u523b\u80fd\u591f\u83b7\u5f97CPU\u7684\u53ea\u6709\u552f\u4e00\u7684\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u4e86CPU\u7684\u6267\u884c\u65f6\u95f4\u3002\u4f7f\u7528\u591a\u7ebf\u7a0b\u5b9e\u73b0\u5e76\u53d1\u7f16\u7a0b\u4e3a\u7a0b\u5e8f\u5e26\u6765\u7684\u597d\u5904\u662f\u4e0d\u8a00\u800c\u55bb\u7684\uff0c\u6700\u4e3b\u8981\u7684\u4f53\u73b0\u5728\u63d0\u5347\u7a0b\u5e8f\u7684\u6027\u80fd\u548c\u6539\u5584\u7528\u6237\u4f53\u9a8c\uff0c\u4eca\u5929\u6211\u4eec\u4f7f\u7528\u7684\u8f6f\u4ef6\u51e0\u4e4e\u90fd\u7528\u5230\u4e86\u591a\u7ebf\u7a0b\u6280\u672f\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u5229\u7528\u7cfb\u7edf\u81ea\u5e26\u7684\u8fdb\u7a0b\u76d1\u63a7\u5de5\u5177\uff08\u5982macOS\u4e2d\u7684\u201c\u6d3b\u52a8\u76d1\u89c6\u5668\u201d\u3001Windows\u4e2d\u7684\u201c\u4efb\u52a1\u7ba1\u7406\u5668\u201d\uff09\u6765\u8bc1\u5b9e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u5f53\u7136\u591a\u7ebf\u7a0b\u4e5f\u5e76\u4e0d\u662f\u6ca1\u6709\u574f\u5904\uff0c\u7ad9\u5728\u5176\u4ed6\u8fdb\u7a0b\u7684\u89d2\u5ea6\uff0c\u591a\u7ebf\u7a0b\u7684\u7a0b\u5e8f\u5bf9\u5176\u4ed6\u7a0b\u5e8f\u5e76\u4e0d\u53cb\u597d\uff0c\u56e0\u4e3a\u5b83\u5360\u7528\u4e86\u66f4\u591a\u7684CPU\u6267\u884c\u65f6\u95f4\uff0c\u5bfc\u81f4\u5176\u4ed6\u7a0b\u5e8f\u65e0\u6cd5\u83b7\u5f97\u8db3\u591f\u7684CPU\u6267\u884c\u65f6\u95f4\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u7ad9\u5728\u5f00\u53d1\u8005\u7684\u89d2\u5ea6\uff0c\u7f16\u5199\u548c\u8c03\u8bd5\u591a\u7ebf\u7a0b\u7684\u7a0b\u5e8f\u90fd\u5bf9\u5f00\u53d1\u8005\u6709\u8f83\u9ad8\u7684\u8981\u6c42\uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u66f4\u52a0\u56f0\u96be\u3002</p> <p>Python\u65e2\u652f\u6301\u591a\u8fdb\u7a0b\u53c8\u652f\u6301\u591a\u7ebf\u7a0b\uff0c\u56e0\u6b64\u4f7f\u7528Python\u5b9e\u73b0\u5e76\u53d1\u7f16\u7a0b\u4e3b\u8981\u67093\u79cd\u65b9\u5f0f\uff1a\u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b\u3001\u591a\u8fdb\u7a0b+\u591a\u7ebf\u7a0b\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/13.%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#python","title":"Python\u4e2d\u7684\u591a\u8fdb\u7a0b","text":"<p>Unix\u548cLinux\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u63d0\u4f9b\u4e86<code>fork()</code>\u7cfb\u7edf\u8c03\u7528\u6765\u521b\u5efa\u8fdb\u7a0b\uff0c\u8c03\u7528<code>fork()</code>\u51fd\u6570\u7684\u662f\u7236\u8fdb\u7a0b\uff0c\u521b\u5efa\u51fa\u7684\u662f\u5b50\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u662f\u7236\u8fdb\u7a0b\u7684\u4e00\u4e2a\u62f7\u8d1d\uff0c\u4f46\u662f\u5b50\u8fdb\u7a0b\u62e5\u6709\u81ea\u5df1\u7684PID\u3002<code>fork()</code>\u51fd\u6570\u975e\u5e38\u7279\u6b8a\u5b83\u4f1a\u8fd4\u56de\u4e24\u6b21\uff0c\u7236\u8fdb\u7a0b\u4e2d\u53ef\u4ee5\u901a\u8fc7<code>fork()</code>\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5f97\u5230\u5b50\u8fdb\u7a0b\u7684PID\uff0c\u800c\u5b50\u8fdb\u7a0b\u4e2d\u7684\u8fd4\u56de\u503c\u6c38\u8fdc\u90fd\u662f0\u3002Python\u7684os\u6a21\u5757\u63d0\u4f9b\u4e86<code>fork()</code>\u51fd\u6570\u3002\u7531\u4e8eWindows\u7cfb\u7edf\u6ca1\u6709<code>fork()</code>\u8c03\u7528\uff0c\u56e0\u6b64\u8981\u5b9e\u73b0\u8de8\u5e73\u53f0\u7684\u591a\u8fdb\u7a0b\u7f16\u7a0b\uff0c\u53ef\u4ee5\u4f7f\u7528multiprocessing\u6a21\u5757\u7684<code>Process</code>\u7c7b\u6765\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u800c\u4e14\u8be5\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7ea7\u7684\u5c01\u88c5\uff0c\u4f8b\u5982\u6279\u91cf\u542f\u52a8\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u6c60\uff08<code>Pool</code>\uff09\u3001\u7528\u4e8e\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u961f\u5217\uff08<code>Queue</code>\uff09\u548c\u7ba1\u9053\uff08<code>Pipe</code>\uff09\u7b49\u3002</p> <p>\u4e0b\u9762\u7528\u4e00\u4e2a\u4e0b\u8f7d\u6587\u4ef6\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u4f7f\u7528\u591a\u8fdb\u7a0b\u548c\u4e0d\u4f7f\u7528\u591a\u8fdb\u7a0b\u5230\u5e95\u6709\u4ec0\u4e48\u5dee\u522b\uff0c\u5148\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u3002</p> <pre><code>from random import randint\nfrom time import time, sleep\n\n\ndef download_task(filename):\n    print('\u5f00\u59cb\u4e0b\u8f7d%s...' % filename)\n    time_to_download = randint(5, 10)\n    sleep(time_to_download)\n    print('%s\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e86%d\u79d2' % (filename, time_to_download))\n\n\ndef main():\n    start = time()\n    download_task('Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf')\n    download_task('Peking Hot.avi')\n    end = time()\n    print('\u603b\u5171\u8017\u8d39\u4e86%.2f\u79d2.' % (end - start))\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u4e0b\u9762\u662f\u8fd0\u884c\u7a0b\u5e8f\u5f97\u5230\u7684\u4e00\u6b21\u8fd0\u884c\u7ed3\u679c\u3002</p> <pre><code>\u5f00\u59cb\u4e0b\u8f7dPython\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf...\nPython\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e866\u79d2\n\u5f00\u59cb\u4e0b\u8f7dPeking Hot.avi...\nPeking Hot.avi\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e867\u79d2\n\u603b\u5171\u8017\u8d39\u4e8613.01\u79d2.\n</code></pre> <p>\u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\uff0c\u5982\u679c\u7a0b\u5e8f\u4e2d\u7684\u4ee3\u7801\u53ea\u80fd\u6309\u987a\u5e8f\u4e00\u70b9\u70b9\u7684\u5f80\u4e0b\u6267\u884c\uff0c\u90a3\u4e48\u5373\u4f7f\u6267\u884c\u4e24\u4e2a\u6beb\u4e0d\u76f8\u5173\u7684\u4e0b\u8f7d\u4efb\u52a1\uff0c\u4e5f\u9700\u8981\u5148\u7b49\u5f85\u4e00\u4e2a\u6587\u4ef6\u4e0b\u8f7d\u5b8c\u6210\u540e\u624d\u80fd\u5f00\u59cb\u4e0b\u4e00\u4e2a\u4e0b\u8f7d\u4efb\u52a1\uff0c\u5f88\u663e\u7136\u8fd9\u5e76\u4e0d\u5408\u7406\u4e5f\u6ca1\u6709\u6548\u7387\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528\u591a\u8fdb\u7a0b\u7684\u65b9\u5f0f\u5c06\u4e24\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u653e\u5230\u4e0d\u540c\u7684\u8fdb\u7a0b\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>from multiprocessing import Process\nfrom os import getpid\nfrom random import randint\nfrom time import time, sleep\n\n\ndef download_task(filename):\n    print('\u542f\u52a8\u4e0b\u8f7d\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u53f7[%d].' % getpid())\n    print('\u5f00\u59cb\u4e0b\u8f7d%s...' % filename)\n    time_to_download = randint(5, 10)\n    sleep(time_to_download)\n    print('%s\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e86%d\u79d2' % (filename, time_to_download))\n\n\ndef main():\n    start = time()\n    p1 = Process(target=download_task, args=('Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf', ))\n    p1.start()\n    p2 = Process(target=download_task, args=('Peking Hot.avi', ))\n    p2.start()\n    p1.join()\n    p2.join()\n    end = time()\n    print('\u603b\u5171\u8017\u8d39\u4e86%.2f\u79d2.' % (end - start))\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7<code>Process</code>\u7c7b\u521b\u5efa\u4e86\u8fdb\u7a0b\u5bf9\u8c61\uff0c\u901a\u8fc7<code>target</code>\u53c2\u6570\u6211\u4eec\u4f20\u5165\u4e00\u4e2a\u51fd\u6570\u6765\u8868\u793a\u8fdb\u7a0b\u542f\u52a8\u540e\u8981\u6267\u884c\u7684\u4ee3\u7801\uff0c\u540e\u9762\u7684<code>args</code>\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u5b83\u4ee3\u8868\u4e86\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u53c2\u6570\u3002<code>Process</code>\u5bf9\u8c61\u7684<code>start</code>\u65b9\u6cd5\u7528\u6765\u542f\u52a8\u8fdb\u7a0b\uff0c\u800c<code>join</code>\u65b9\u6cd5\u8868\u793a\u7b49\u5f85\u8fdb\u7a0b\u6267\u884c\u7ed3\u675f\u3002\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u660e\u663e\u53d1\u73b0\u4e24\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u201c\u540c\u65f6\u201d\u542f\u52a8\u4e86\uff0c\u800c\u4e14\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\u5c06\u5927\u5927\u7f29\u77ed\uff0c\u4e0d\u518d\u662f\u4e24\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u603b\u548c\u3002\u4e0b\u9762\u662f\u7a0b\u5e8f\u7684\u4e00\u6b21\u6267\u884c\u7ed3\u679c\u3002</p> <pre><code>\u542f\u52a8\u4e0b\u8f7d\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u53f7[1530].\n\u5f00\u59cb\u4e0b\u8f7dPython\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf...\n\u542f\u52a8\u4e0b\u8f7d\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u53f7[1531].\n\u5f00\u59cb\u4e0b\u8f7dPeking Hot.avi...\nPeking Hot.avi\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e867\u79d2\nPython\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e8610\u79d2\n\u603b\u5171\u8017\u8d39\u4e8610.01\u79d2.\n</code></pre> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528subprocess\u6a21\u5757\u4e2d\u7684\u7c7b\u548c\u51fd\u6570\u6765\u521b\u5efa\u548c\u542f\u52a8\u5b50\u8fdb\u7a0b\uff0c\u7136\u540e\u901a\u8fc7\u7ba1\u9053\u6765\u548c\u5b50\u8fdb\u7a0b\u901a\u4fe1\uff0c\u8fd9\u4e9b\u5185\u5bb9\u6211\u4eec\u4e0d\u5728\u6b64\u8fdb\u884c\u8bb2\u89e3\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u5df1\u4e86\u89e3\u8fd9\u4e9b\u77e5\u8bc6\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u5982\u4f55\u5b9e\u73b0\u4e24\u4e2a\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u3002\u6211\u4eec\u542f\u52a8\u4e24\u4e2a\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u8f93\u51faPing\uff0c\u4e00\u4e2a\u8f93\u51faPong\uff0c\u4e24\u4e2a\u8fdb\u7a0b\u8f93\u51fa\u7684Ping\u548cPong\u52a0\u8d77\u6765\u4e00\u517110\u4e2a\u3002\u542c\u8d77\u6765\u5f88\u7b80\u5355\u5427\uff0c\u4f46\u662f\u5982\u679c\u8fd9\u6837\u5199\u53ef\u662f\u9519\u7684\u54e6\u3002</p> <pre><code>from multiprocessing import Process\nfrom time import sleep\n\ncounter = 0\n\n\ndef sub_task(string):\n    global counter\n    while counter &lt; 10:\n        print(string, end='', flush=True)\n        counter += 1\n        sleep(0.01)\n\n\ndef main():\n    Process(target=sub_task, args=('Ping', )).start()\n    Process(target=sub_task, args=('Pong', )).start()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u770b\u8d77\u6765\u6ca1\u6bdb\u75c5\uff0c\u4f46\u662f\u6700\u540e\u7684\u7ed3\u679c\u662fPing\u548cPong\u5404\u8f93\u51fa\u4e8610\u4e2a\uff0cWhy\uff1f\u5f53\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u521b\u5efa\u8fdb\u7a0b\u7684\u65f6\u5019\uff0c\u5b50\u8fdb\u7a0b\u590d\u5236\u4e86\u7236\u8fdb\u7a0b\u53ca\u5176\u6240\u6709\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bcf\u4e2a\u5b50\u8fdb\u7a0b\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u4e24\u4e2a\u5b50\u8fdb\u7a0b\u4e2d\u5404\u6709\u4e00\u4e2a<code>counter</code>\u53d8\u91cf\uff0c\u6240\u4ee5\u7ed3\u679c\u4e5f\u5c31\u53ef\u60f3\u800c\u77e5\u4e86\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6bd4\u8f83\u7b80\u5355\u7684\u529e\u6cd5\u662f\u4f7f\u7528multiprocessing\u6a21\u5757\u4e2d\u7684<code>Queue</code>\u7c7b\uff0c\u5b83\u662f\u53ef\u4ee5\u88ab\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u7684\u961f\u5217\uff0c\u5e95\u5c42\u662f\u901a\u8fc7\u7ba1\u9053\u548c\u4fe1\u53f7\u91cf\uff08semaphore\uff09\u673a\u5236\u6765\u5b9e\u73b0\u7684\uff1a</p> <pre><code>from multiprocessing import Process, Queue\nfrom time import sleep\n\ndef sub_task(queue, string):\n    while not queue.empty():\n        queue.get()\n        print(string, end='', flush=True)\n        sleep(0.01)\n\ndef main():\n    queue = Queue()\n    for _ in range(10):\n        queue.put(None)  # \u5411\u961f\u5217\u4e2d\u653e\u5165 10 \u4e2a\u5143\u7d20\uff0c\u8868\u793a\u9700\u8981\u6253\u5370 10 \u6b21\n\n    p1 = Process(target=sub_task, args=(queue, 'Ping'))\n    p2 = Process(target=sub_task, args=(queue, 'Pong'))\n    p1.start()\n    p2.start()\n    p1.join()\n    p2.join()\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/13.%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#python_1","title":"Python\u4e2d\u7684\u591a\u7ebf\u7a0b","text":"<p>\u5728Python\u65e9\u671f\u7684\u7248\u672c\u4e2d\u5c31\u5f15\u5165\u4e86thread\u6a21\u5757\uff08\u73b0\u5728\u540d\u4e3a_thread\uff09\u6765\u5b9e\u73b0\u591a\u7ebf\u7a0b\u7f16\u7a0b\uff0c\u7136\u800c\u8be5\u6a21\u5757\u8fc7\u4e8e\u5e95\u5c42\uff0c\u800c\u4e14\u5f88\u591a\u529f\u80fd\u90fd\u6ca1\u6709\u63d0\u4f9b\uff0c\u56e0\u6b64\u76ee\u524d\u7684\u591a\u7ebf\u7a0b\u5f00\u53d1\u6211\u4eec\u63a8\u8350\u4f7f\u7528threading\u6a21\u5757\uff0c\u8be5\u6a21\u5757\u5bf9\u591a\u7ebf\u7a0b\u7f16\u7a0b\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u9762\u5411\u5bf9\u8c61\u7684\u5c01\u88c5\u3002\u6211\u4eec\u628a\u521a\u624d\u4e0b\u8f7d\u6587\u4ef6\u7684\u4f8b\u5b50\u7528\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u4e00\u904d\u3002</p> <pre><code>from random import randint\nfrom threading import Thread\nfrom time import time, sleep\n\n\ndef download(filename):\n    print('\u5f00\u59cb\u4e0b\u8f7d%s...' % filename)\n    time_to_download = randint(5, 10)\n    sleep(time_to_download)\n    print('%s\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e86%d\u79d2' % (filename, time_to_download))\n\n\ndef main():\n    start = time()\n    t1 = Thread(target=download, args=('Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf',))\n    t1.start()\n    t2 = Thread(target=download, args=('Peking Hot.avi',))\n    t2.start()\n    t1.join()\n    t2.join()\n    end = time()\n    print('\u603b\u5171\u8017\u8d39\u4e86%.3f\u79d2' % (end - start))\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528threading\u6a21\u5757\u7684<code>Thread</code>\u7c7b\u6765\u521b\u5efa\u7ebf\u7a0b\uff0c\u4f46\u662f\u6211\u4eec\u4e4b\u524d\u8bb2\u8fc7\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6982\u5ff5\u53eb\u201c\u7ee7\u627f\u201d\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5df2\u6709\u7684\u7c7b\u521b\u5efa\u65b0\u7c7b\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f<code>Thread</code>\u7c7b\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u7ebf\u7a0b\u7c7b\uff0c\u7136\u540e\u518d\u521b\u5efa\u7ebf\u7a0b\u5bf9\u8c61\u5e76\u542f\u52a8\u7ebf\u7a0b\u3002\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>from random import randint\nfrom threading import Thread\nfrom time import time, sleep\n\n\nclass DownloadTask(Thread):\n\n    def __init__(self, filename):\n        super().__init__()\n        self._filename = filename\n\n    def run(self):\n        print('\u5f00\u59cb\u4e0b\u8f7d%s...' % self._filename)\n        time_to_download = randint(5, 10)\n        sleep(time_to_download)\n        print('%s\u4e0b\u8f7d\u5b8c\u6210! \u8017\u8d39\u4e86%d\u79d2' % (self._filename, time_to_download))\n\n\ndef main():\n    start = time()\n    t1 = DownloadTask('Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf')\n    t1.start()\n    t2 = DownloadTask('Peking Hot.avi')\n    t2.start()\n    t1.join()\n    t2.join()\n    end = time()\n    print('\u603b\u5171\u8017\u8d39\u4e86%.2f\u79d2.' % (end - start))\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u56e0\u4e3a\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u6b64\u8981\u5b9e\u73b0\u591a\u4e2a\u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1\u76f8\u5bf9\u7b80\u5355\uff0c\u5927\u5bb6\u80fd\u60f3\u5230\u7684\u6700\u76f4\u63a5\u7684\u529e\u6cd5\u5c31\u662f\u8bbe\u7f6e\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u8fd9\u4e2a\u5168\u5c40\u53d8\u91cf\u5373\u53ef\u3002\u4f46\u662f\u5f53\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u540c\u4e00\u4e2a\u53d8\u91cf\uff08\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\u201c\u8d44\u6e90\u201d\uff09\u7684\u65f6\u5019\uff0c\u5f88\u6709\u53ef\u80fd\u4ea7\u751f\u4e0d\u53ef\u63a7\u7684\u7ed3\u679c\u4ece\u800c\u5bfc\u81f4\u7a0b\u5e8f\u5931\u6548\u751a\u81f3\u5d29\u6e83\u3002\u5982\u679c\u4e00\u4e2a\u8d44\u6e90\u88ab\u591a\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u4f7f\u7528\uff0c\u90a3\u4e48\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\u201c\u4e34\u754c\u8d44\u6e90\u201d\uff0c\u5bf9\u201c\u4e34\u754c\u8d44\u6e90\u201d\u7684\u8bbf\u95ee\u9700\u8981\u52a0\u4e0a\u4fdd\u62a4\uff0c\u5426\u5219\u8d44\u6e90\u4f1a\u5904\u4e8e\u201c\u6df7\u4e71\u201d\u7684\u72b6\u6001\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86100\u4e2a\u7ebf\u7a0b\u5411\u540c\u4e00\u4e2a\u94f6\u884c\u8d26\u6237\u8f6c\u8d26\uff08\u8f6c\u51651\u5143\u94b1\uff09\u7684\u573a\u666f\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u94f6\u884c\u8d26\u6237\u5c31\u662f\u4e00\u4e2a\u4e34\u754c\u8d44\u6e90\uff0c\u5728\u6ca1\u6709\u4fdd\u62a4\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u5f88\u6709\u53ef\u80fd\u4f1a\u5f97\u5230\u9519\u8bef\u7684\u7ed3\u679c\u3002</p> <pre><code>from time import sleep\nfrom threading import Thread\n\n\nclass Account(object):\n\n    def __init__(self):\n        self._balance = 0\n\n    def deposit(self, money):\n        # \u8ba1\u7b97\u5b58\u6b3e\u540e\u7684\u4f59\u989d\n        new_balance = self._balance + money\n        # \u6a21\u62df\u53d7\u7406\u5b58\u6b3e\u4e1a\u52a1\u9700\u89810.01\u79d2\u7684\u65f6\u95f4\n        sleep(0.01)\n        # \u4fee\u6539\u8d26\u6237\u4f59\u989d\n        self._balance = new_balance\n\n    @property\n    def balance(self):\n        return self._balance\n\n\nclass AddMoneyThread(Thread):\n\n    def __init__(self, account, money):\n        super().__init__()\n        self._account = account\n        self._money = money\n\n    def run(self):\n        self._account.deposit(self._money)\n\n\ndef main():\n    account = Account()\n    threads = []\n    # \u521b\u5efa100\u4e2a\u5b58\u6b3e\u7684\u7ebf\u7a0b\u5411\u540c\u4e00\u4e2a\u8d26\u6237\u4e2d\u5b58\u94b1\n    for _ in range(100):\n        t = AddMoneyThread(account, 1)\n        threads.append(t)\n        t.start()\n    # \u7b49\u6240\u6709\u5b58\u6b3e\u7684\u7ebf\u7a0b\u90fd\u6267\u884c\u5b8c\u6bd5\n    for t in threads:\n        t.join()\n    print('\u8d26\u6237\u4f59\u989d\u4e3a: \uffe5%d\u5143' % account.balance)\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u8fd0\u884c\u4e0a\u9762\u7684\u7a0b\u5e8f\uff0c\u7ed3\u679c\u8ba9\u4eba\u5927\u8dcc\u773c\u955c\uff0c100\u4e2a\u7ebf\u7a0b\u5206\u522b\u5411\u8d26\u6237\u4e2d\u8f6c\u51651\u5143\u94b1\uff0c\u7ed3\u679c\u5c45\u7136\u8fdc\u8fdc\u5c0f\u4e8e100\u5143\u3002\u4e4b\u6240\u4ee5\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u662f\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u5bf9\u94f6\u884c\u8d26\u6237\u8fd9\u4e2a\u201c\u4e34\u754c\u8d44\u6e90\u201d\u52a0\u4ee5\u4fdd\u62a4\uff0c\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5411\u8d26\u6237\u4e2d\u5b58\u94b1\u65f6\uff0c\u4f1a\u4e00\u8d77\u6267\u884c\u5230<code>new_balance = self._balance + money</code>\u8fd9\u884c\u4ee3\u7801\uff0c\u591a\u4e2a\u7ebf\u7a0b\u5f97\u5230\u7684\u8d26\u6237\u4f59\u989d\u90fd\u662f\u521d\u59cb\u72b6\u6001\u4e0b\u7684<code>0</code>\uff0c\u6240\u4ee5\u90fd\u662f<code>0</code>\u4e0a\u9762\u505a\u4e86+1\u7684\u64cd\u4f5c\uff0c\u56e0\u6b64\u5f97\u5230\u4e86\u9519\u8bef\u7684\u7ed3\u679c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u201c\u9501\u201d\u5c31\u53ef\u4ee5\u6d3e\u4e0a\u7528\u573a\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u201c\u9501\u201d\u6765\u4fdd\u62a4\u201c\u4e34\u754c\u8d44\u6e90\u201d\uff0c\u53ea\u6709\u83b7\u5f97\u201c\u9501\u201d\u7684\u7ebf\u7a0b\u624d\u80fd\u8bbf\u95ee\u201c\u4e34\u754c\u8d44\u6e90\u201d\uff0c\u800c\u5176\u4ed6\u6ca1\u6709\u5f97\u5230\u201c\u9501\u201d\u7684\u7ebf\u7a0b\u53ea\u80fd\u88ab\u963b\u585e\u8d77\u6765\uff0c\u76f4\u5230\u83b7\u5f97\u201c\u9501\u201d\u7684\u7ebf\u7a0b\u91ca\u653e\u4e86\u201c\u9501\u201d\uff0c\u5176\u4ed6\u7ebf\u7a0b\u624d\u6709\u673a\u4f1a\u83b7\u5f97\u201c\u9501\u201d\uff0c\u8fdb\u800c\u8bbf\u95ee\u88ab\u4fdd\u62a4\u7684\u201c\u4e34\u754c\u8d44\u6e90\u201d\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u201c\u9501\u201d\u6765\u4fdd\u62a4\u5bf9\u94f6\u884c\u8d26\u6237\u7684\u64cd\u4f5c\uff0c\u4ece\u800c\u83b7\u5f97\u6b63\u786e\u7684\u7ed3\u679c\u3002</p> <pre><code>from time import sleep\nfrom threading import Thread, Lock\n\n\nclass Account(object):\n\n    def __init__(self):\n        self._balance = 0\n        self._lock = Lock()\n\n    def deposit(self, money):\n        # \u5148\u83b7\u53d6\u9501\u624d\u80fd\u6267\u884c\u540e\u7eed\u7684\u4ee3\u7801\n        self._lock.acquire()\n        try:\n            new_balance = self._balance + money\n            sleep(0.01)\n            self._balance = new_balance\n        finally:\n            # \u5728finally\u4e2d\u6267\u884c\u91ca\u653e\u9501\u7684\u64cd\u4f5c\u4fdd\u8bc1\u6b63\u5e38\u5f02\u5e38\u9501\u90fd\u80fd\u91ca\u653e\n            self._lock.release()\n\n    @property\n    def balance(self):\n        return self._balance\n\n\nclass AddMoneyThread(Thread):\n\n    def __init__(self, account, money):\n        super().__init__()\n        self._account = account\n        self._money = money\n\n    def run(self):\n        self._account.deposit(self._money)\n\n\ndef main():\n    account = Account()\n    threads = []\n    for _ in range(100):\n        t = AddMoneyThread(account, 1)\n        threads.append(t)\n        t.start()\n    for t in threads:\n        t.join()\n    print('\u8d26\u6237\u4f59\u989d\u4e3a: \uffe5%d\u5143' % account.balance)\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u6bd4\u8f83\u9057\u61be\u7684\u4e00\u4ef6\u4e8b\u60c5\u662fPython\u7684\u591a\u7ebf\u7a0b\u5e76\u4e0d\u80fd\u53d1\u6325CPU\u7684\u591a\u6838\u7279\u6027\uff0c\u8fd9\u4e00\u70b9\u53ea\u8981\u542f\u52a8\u51e0\u4e2a\u6267\u884c\u6b7b\u5faa\u73af\u7684\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u5f97\u5230\u8bc1\u5b9e\u4e86\u3002\u4e4b\u6240\u4ee5\u5982\u6b64\uff0c\u662f\u56e0\u4e3aPython\u7684\u89e3\u91ca\u5668\u6709\u4e00\u4e2a\u201c\u5168\u5c40\u89e3\u91ca\u5668\u9501\u201d\uff08GIL\uff09\u7684\u4e1c\u897f\uff0c\u4efb\u4f55\u7ebf\u7a0b\u6267\u884c\u524d\u5fc5\u987b\u5148\u83b7\u5f97GIL\u9501\uff0c\u7136\u540e\u6bcf\u6267\u884c100\u6761\u5b57\u8282\u7801\uff0c\u89e3\u91ca\u5668\u5c31\u81ea\u52a8\u91ca\u653eGIL\u9501\uff0c\u8ba9\u522b\u7684\u7ebf\u7a0b\u6709\u673a\u4f1a\u6267\u884c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5386\u53f2\u9057\u7559\u95ee\u9898\uff0c\u4f46\u662f\u5373\u4fbf\u5982\u6b64\uff0c\u5c31\u5982\u6211\u4eec\u4e4b\u524d\u4e3e\u7684\u4f8b\u5b50\uff0c\u4f7f\u7528\u591a\u7ebf\u7a0b\u5728\u63d0\u5347\u6267\u884c\u6548\u7387\u548c\u6539\u5584\u7528\u6237\u4f53\u9a8c\u65b9\u9762\u4ecd\u7136\u662f\u6709\u79ef\u6781\u610f\u4e49\u7684\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/13.%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_3","title":"\u591a\u8fdb\u7a0b\u8fd8\u662f\u591a\u7ebf\u7a0b","text":"<p>\u65e0\u8bba\u662f\u591a\u8fdb\u7a0b\u8fd8\u662f\u591a\u7ebf\u7a0b\uff0c\u53ea\u8981\u6570\u91cf\u4e00\u591a\uff0c\u6548\u7387\u80af\u5b9a\u4e0a\u4e0d\u53bb\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u6253\u4e2a\u6bd4\u65b9\uff0c\u5047\u8bbe\u4f60\u4e0d\u5e78\u6b63\u5728\u51c6\u5907\u4e2d\u8003\uff0c\u6bcf\u5929\u665a\u4e0a\u9700\u8981\u505a\u8bed\u6587\u3001\u6570\u5b66\u3001\u82f1\u8bed\u3001\u7269\u7406\u3001\u5316\u5b66\u8fd95\u79d1\u7684\u4f5c\u4e1a\uff0c\u6bcf\u9879\u4f5c\u4e1a\u8017\u65f61\u5c0f\u65f6\u3002\u5982\u679c\u4f60\u5148\u82b11\u5c0f\u65f6\u505a\u8bed\u6587\u4f5c\u4e1a\uff0c\u505a\u5b8c\u4e86\uff0c\u518d\u82b11\u5c0f\u65f6\u505a\u6570\u5b66\u4f5c\u4e1a\uff0c\u8fd9\u6837\uff0c\u4f9d\u6b21\u5168\u90e8\u505a\u5b8c\uff0c\u4e00\u5171\u82b15\u5c0f\u65f6\uff0c\u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e3a\u5355\u4efb\u52a1\u6a21\u578b\u3002\u5982\u679c\u4f60\u6253\u7b97\u5207\u6362\u5230\u591a\u4efb\u52a1\u6a21\u578b\uff0c\u53ef\u4ee5\u5148\u505a1\u5206\u949f\u8bed\u6587\uff0c\u518d\u5207\u6362\u5230\u6570\u5b66\u4f5c\u4e1a\uff0c\u505a1\u5206\u949f\uff0c\u518d\u5207\u6362\u5230\u82f1\u8bed\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u53ea\u8981\u5207\u6362\u901f\u5ea6\u8db3\u591f\u5feb\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5c31\u548c\u5355\u6838CPU\u6267\u884c\u591a\u4efb\u52a1\u662f\u4e00\u6837\u7684\u4e86\uff0c\u4ee5\u65c1\u89c2\u8005\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u4f60\u5c31\u6b63\u5728\u540c\u65f6\u51995\u79d1\u4f5c\u4e1a\u3002</p> <p>\u4f46\u662f\uff0c\u5207\u6362\u4f5c\u4e1a\u662f\u6709\u4ee3\u4ef7\u7684\uff0c\u6bd4\u5982\u4ece\u8bed\u6587\u5207\u5230\u6570\u5b66\uff0c\u8981\u5148\u6536\u62fe\u684c\u5b50\u4e0a\u7684\u8bed\u6587\u4e66\u672c\u3001\u94a2\u7b14\uff08\u8fd9\u53eb\u4fdd\u5b58\u73b0\u573a\uff09\uff0c\u7136\u540e\uff0c\u6253\u5f00\u6570\u5b66\u8bfe\u672c\u3001\u627e\u51fa\u5706\u89c4\u76f4\u5c3a\uff08\u8fd9\u53eb\u51c6\u5907\u65b0\u73af\u5883\uff09\uff0c\u624d\u80fd\u5f00\u59cb\u505a\u6570\u5b66\u4f5c\u4e1a\u3002\u64cd\u4f5c\u7cfb\u7edf\u5728\u5207\u6362\u8fdb\u7a0b\u6216\u8005\u7ebf\u7a0b\u65f6\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u5b83\u9700\u8981\u5148\u4fdd\u5b58\u5f53\u524d\u6267\u884c\u7684\u73b0\u573a\u73af\u5883\uff08CPU\u5bc4\u5b58\u5668\u72b6\u6001\u3001\u5185\u5b58\u9875\u7b49\uff09\uff0c\u7136\u540e\uff0c\u628a\u65b0\u4efb\u52a1\u7684\u6267\u884c\u73af\u5883\u51c6\u5907\u597d\uff08\u6062\u590d\u4e0a\u6b21\u7684\u5bc4\u5b58\u5668\u72b6\u6001\uff0c\u5207\u6362\u5185\u5b58\u9875\u7b49\uff09\uff0c\u624d\u80fd\u5f00\u59cb\u6267\u884c\u3002\u8fd9\u4e2a\u5207\u6362\u8fc7\u7a0b\u867d\u7136\u5f88\u5feb\uff0c\u4f46\u662f\u4e5f\u9700\u8981\u8017\u8d39\u65f6\u95f4\u3002\u5982\u679c\u6709\u51e0\u5343\u4e2a\u4efb\u52a1\u540c\u65f6\u8fdb\u884c\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53ef\u80fd\u5c31\u4e3b\u8981\u5fd9\u7740\u5207\u6362\u4efb\u52a1\uff0c\u6839\u672c\u6ca1\u6709\u591a\u5c11\u65f6\u95f4\u53bb\u6267\u884c\u4efb\u52a1\u4e86\uff0c\u8fd9\u79cd\u60c5\u51b5\u6700\u5e38\u89c1\u7684\u5c31\u662f\u786c\u76d8\u72c2\u54cd\uff0c\u70b9\u7a97\u53e3\u65e0\u53cd\u5e94\uff0c\u7cfb\u7edf\u5904\u4e8e\u5047\u6b7b\u72b6\u6001\u3002\u6240\u4ee5\uff0c\u591a\u4efb\u52a1\u4e00\u65e6\u591a\u5230\u4e00\u4e2a\u9650\u5ea6\uff0c\u53cd\u800c\u4f1a\u4f7f\u5f97\u7cfb\u7edf\u6027\u80fd\u6025\u5267\u4e0b\u964d\uff0c\u6700\u7ec8\u5bfc\u81f4\u6240\u6709\u4efb\u52a1\u90fd\u505a\u4e0d\u597d\u3002</p> <p>\u662f\u5426\u91c7\u7528\u591a\u4efb\u52a1\u7684\u7b2c\u4e8c\u4e2a\u8003\u8651\u662f\u4efb\u52a1\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u628a\u4efb\u52a1\u5206\u4e3a\u8ba1\u7b97\u5bc6\u96c6\u578b\u548cI/O\u5bc6\u96c6\u578b\u3002\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u7684\u7279\u70b9\u662f\u8981\u8fdb\u884c\u5927\u91cf\u7684\u8ba1\u7b97\uff0c\u6d88\u8017CPU\u8d44\u6e90\uff0c\u6bd4\u5982\u5bf9\u89c6\u9891\u8fdb\u884c\u7f16\u7801\u89e3\u7801\u6216\u8005\u683c\u5f0f\u8f6c\u6362\u7b49\u7b49\uff0c\u8fd9\u79cd\u4efb\u52a1\u5168\u9760CPU\u7684\u8fd0\u7b97\u80fd\u529b\uff0c\u867d\u7136\u4e5f\u53ef\u4ee5\u7528\u591a\u4efb\u52a1\u5b8c\u6210\uff0c\u4f46\u662f\u4efb\u52a1\u8d8a\u591a\uff0c\u82b1\u5728\u4efb\u52a1\u5207\u6362\u7684\u65f6\u95f4\u5c31\u8d8a\u591a\uff0cCPU\u6267\u884c\u4efb\u52a1\u7684\u6548\u7387\u5c31\u8d8a\u4f4e\u3002\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u7531\u4e8e\u4e3b\u8981\u6d88\u8017CPU\u8d44\u6e90\uff0c\u8fd9\u7c7b\u4efb\u52a1\u7528Python\u8fd9\u6837\u7684\u811a\u672c\u8bed\u8a00\u53bb\u6267\u884c\u6548\u7387\u901a\u5e38\u5f88\u4f4e\uff0c\u6700\u80fd\u80dc\u4efb\u8fd9\u7c7b\u4efb\u52a1\u7684\u662fC\u8bed\u8a00\uff0c\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u8fc7Python\u4e2d\u6709\u5d4c\u5165C/C++\u4ee3\u7801\u7684\u673a\u5236\u3002</p> <p>\u9664\u4e86\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u5176\u4ed6\u7684\u6d89\u53ca\u5230\u7f51\u7edc\u3001\u5b58\u50a8\u4ecb\u8d28I/O\u7684\u4efb\u52a1\u90fd\u53ef\u4ee5\u89c6\u4e3aI/O\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u8fd9\u7c7b\u4efb\u52a1\u7684\u7279\u70b9\u662fCPU\u6d88\u8017\u5f88\u5c11\uff0c\u4efb\u52a1\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u7b49\u5f85I/O\u64cd\u4f5c\u5b8c\u6210\uff08\u56e0\u4e3aI/O\u7684\u901f\u5ea6\u8fdc\u8fdc\u4f4e\u4e8eCPU\u548c\u5185\u5b58\u7684\u901f\u5ea6\uff09\u3002\u5bf9\u4e8eI/O\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u5982\u679c\u542f\u52a8\u591a\u4efb\u52a1\uff0c\u5c31\u53ef\u4ee5\u51cf\u5c11I/O\u7b49\u5f85\u65f6\u95f4\u4ece\u800c\u8ba9CPU\u9ad8\u6548\u7387\u7684\u8fd0\u8f6c\u3002\u6709\u4e00\u5927\u7c7b\u7684\u4efb\u52a1\u90fd\u5c5e\u4e8eI/O\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u8fd9\u5176\u4e2d\u5305\u62ec\u4e86\u6211\u4eec\u5f88\u5feb\u4f1a\u6d89\u53ca\u5230\u7684\u7f51\u7edc\u5e94\u7528\u548cWeb\u5e94\u7528\u3002</p> <p>\u8bf4\u660e\uff1a \u4e0a\u9762\u7684\u5185\u5bb9\u548c\u4f8b\u5b50\u6765\u81ea\u4e8e\u5ed6\u96ea\u5cf0\u5b98\u65b9\u7f51\u7ad9\u7684\u300aPython\u6559\u7a0b\u300b\uff0c\u56e0\u4e3a\u5bf9\u4f5c\u8005\u6587\u4e2d\u7684\u67d0\u4e9b\u89c2\u70b9\u6301\u6709\u4e0d\u540c\u7684\u770b\u6cd5\uff0c\u5bf9\u539f\u6587\u7684\u6587\u5b57\u63cf\u8ff0\u505a\u4e86\u9002\u5f53\u7684\u8c03\u6574\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/13.%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#io","title":"\u5355\u7ebf\u7a0b+\u5f02\u6b65I/O","text":"<p>\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5bf9I/O\u64cd\u4f5c\u7684\u6539\u8fdb\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u5c31\u662f\u652f\u6301\u5f02\u6b65I/O\u3002\u5982\u679c\u5145\u5206\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u5f02\u6b65I/O\u652f\u6301\uff0c\u5c31\u53ef\u4ee5\u7528\u5355\u8fdb\u7a0b\u5355\u7ebf\u7a0b\u6a21\u578b\u6765\u6267\u884c\u591a\u4efb\u52a1\uff0c\u8fd9\u79cd\u5168\u65b0\u7684\u6a21\u578b\u79f0\u4e3a\u4e8b\u4ef6\u9a71\u52a8\u6a21\u578b\u3002Nginx\u5c31\u662f\u652f\u6301\u5f02\u6b65I/O\u7684Web\u670d\u52a1\u5668\uff0c\u5b83\u5728\u5355\u6838CPU\u4e0a\u91c7\u7528\u5355\u8fdb\u7a0b\u6a21\u578b\u5c31\u53ef\u4ee5\u9ad8\u6548\u5730\u652f\u6301\u591a\u4efb\u52a1\u3002\u5728\u591a\u6838CPU\u4e0a\uff0c\u53ef\u4ee5\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b\uff08\u6570\u91cf\u4e0eCPU\u6838\u5fc3\u6570\u76f8\u540c\uff09\uff0c\u5145\u5206\u5229\u7528\u591a\u6838CPU\u3002\u7528Node.js\u5f00\u53d1\u7684\u670d\u52a1\u5668\u7aef\u7a0b\u5e8f\u4e5f\u4f7f\u7528\u4e86\u8fd9\u79cd\u5de5\u4f5c\u6a21\u5f0f\uff0c\u8fd9\u4e5f\u662f\u5f53\u4e0b\u5e76\u53d1\u7f16\u7a0b\u7684\u4e00\u79cd\u6d41\u884c\u65b9\u6848\u3002</p> <p>\u5728Python\u8bed\u8a00\u4e2d\uff0c\u5355\u7ebf\u7a0b+\u5f02\u6b65I/O\u7684\u7f16\u7a0b\u6a21\u578b\u79f0\u4e3a\u534f\u7a0b\uff0c\u6709\u4e86\u534f\u7a0b\u7684\u652f\u6301\uff0c\u5c31\u53ef\u4ee5\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7f16\u5199\u9ad8\u6548\u7684\u591a\u4efb\u52a1\u7a0b\u5e8f\u3002\u534f\u7a0b\u6700\u5927\u7684\u4f18\u52bf\u5c31\u662f\u6781\u9ad8\u7684\u6267\u884c\u6548\u7387\uff0c\u56e0\u4e3a\u5b50\u7a0b\u5e8f\u5207\u6362\u4e0d\u662f\u7ebf\u7a0b\u5207\u6362\uff0c\u800c\u662f\u7531\u7a0b\u5e8f\u81ea\u8eab\u63a7\u5236\uff0c\u56e0\u6b64\uff0c\u6ca1\u6709\u7ebf\u7a0b\u5207\u6362\u7684\u5f00\u9500\u3002\u534f\u7a0b\u7684\u7b2c\u4e8c\u4e2a\u4f18\u52bf\u5c31\u662f\u4e0d\u9700\u8981\u591a\u7ebf\u7a0b\u7684\u9501\u673a\u5236\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u4e5f\u4e0d\u5b58\u5728\u540c\u65f6\u5199\u53d8\u91cf\u51b2\u7a81\uff0c\u5728\u534f\u7a0b\u4e2d\u63a7\u5236\u5171\u4eab\u8d44\u6e90\u4e0d\u7528\u52a0\u9501\uff0c\u53ea\u9700\u8981\u5224\u65ad\u72b6\u6001\u5c31\u597d\u4e86\uff0c\u6240\u4ee5\u6267\u884c\u6548\u7387\u6bd4\u591a\u7ebf\u7a0b\u9ad8\u5f88\u591a\u3002\u5982\u679c\u60f3\u8981\u5145\u5206\u5229\u7528CPU\u7684\u591a\u6838\u7279\u6027\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u591a\u8fdb\u7a0b+\u534f\u7a0b\uff0c\u65e2\u5145\u5206\u5229\u7528\u591a\u6838\uff0c\u53c8\u5145\u5206\u53d1\u6325\u534f\u7a0b\u7684\u9ad8\u6548\u7387\uff0c\u53ef\u83b7\u5f97\u6781\u9ad8\u7684\u6027\u80fd\u3002\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u5185\u5bb9\uff0c\u5728\u540e\u7eed\u7684\u8bfe\u7a0b\u4e2d\u4f1a\u8fdb\u884c\u8bb2\u89e3\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/13.%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_4","title":"\u5e94\u7528\u6848\u4f8b","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/13.%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#1","title":"\u4f8b\u5b501\uff1a\u5c06\u8017\u65f6\u95f4\u7684\u4efb\u52a1\u653e\u5230\u7ebf\u7a0b\u4e2d\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\u3002","text":"<p>\u5982\u4e0b\u6240\u793a\u7684\u754c\u9762\u4e2d\uff0c\u6709\u201c\u4e0b\u8f7d\u201d\u548c\u201c\u5173\u4e8e\u201d\u4e24\u4e2a\u6309\u94ae\uff0c\u7528\u4f11\u7720\u7684\u65b9\u5f0f\u6a21\u62df\u70b9\u51fb\u201c\u4e0b\u8f7d\u201d\u6309\u94ae\u4f1a\u8054\u7f51\u4e0b\u8f7d\u6587\u4ef6\u9700\u8981\u8017\u8d3910\u79d2\u7684\u65f6\u95f4\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u201c\u591a\u7ebf\u7a0b\u201d\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5f53\u70b9\u51fb\u201c\u4e0b\u8f7d\u201d\u6309\u94ae\u540e\u6574\u4e2a\u7a0b\u5e8f\u7684\u5176\u4ed6\u90e8\u5206\u90fd\u88ab\u8fd9\u4e2a\u8017\u65f6\u95f4\u7684\u4efb\u52a1\u963b\u585e\u800c\u65e0\u6cd5\u6267\u884c\u4e86\uff0c\u8fd9\u663e\u7136\u662f\u975e\u5e38\u7cdf\u7cd5\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>import time\nimport tkinter\nimport tkinter.messagebox\n\n\ndef download():\n    # \u6a21\u62df\u4e0b\u8f7d\u4efb\u52a1\u9700\u8981\u82b1\u8d3910\u79d2\u949f\u65f6\u95f4\n    time.sleep(10)\n    tkinter.messagebox.showinfo('\u63d0\u793a', '\u4e0b\u8f7d\u5b8c\u6210!')\n\n\ndef show_about():\n    tkinter.messagebox.showinfo('\u5173\u4e8e', '\u4f5c\u8005: \u9a86\u660a(v1.0)')\n\n\ndef main():\n    top = tkinter.Tk()\n    top.title('\u5355\u7ebf\u7a0b')\n    top.geometry('200x150')\n    top.wm_attributes('-topmost', True)\n\n    panel = tkinter.Frame(top)\n    button1 = tkinter.Button(panel, text='\u4e0b\u8f7d', command=download)\n    button1.pack(side='left')\n    button2 = tkinter.Button(panel, text='\u5173\u4e8e', command=show_about)\n    button2.pack(side='right')\n    panel.pack(side='bottom')\n\n    tkinter.mainloop()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u5982\u679c\u4f7f\u7528\u591a\u7ebf\u7a0b\u5c06\u8017\u65f6\u95f4\u7684\u4efb\u52a1\u653e\u5230\u4e00\u4e2a\u72ec\u7acb\u7684\u7ebf\u7a0b\u4e2d\u6267\u884c\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u56e0\u4e3a\u6267\u884c\u8017\u65f6\u95f4\u7684\u4efb\u52a1\u800c\u963b\u585e\u4e86\u4e3b\u7ebf\u7a0b\uff0c\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>import time\nimport tkinter\nimport tkinter.messagebox\nfrom threading import Thread\n\n\ndef main():\n\n    class DownloadTaskHandler(Thread):\n\n        def run(self):\n            time.sleep(10)\n            tkinter.messagebox.showinfo('\u63d0\u793a', '\u4e0b\u8f7d\u5b8c\u6210!')\n            # \u542f\u7528\u4e0b\u8f7d\u6309\u94ae\n            button1.config(state=tkinter.NORMAL)\n\n    def download():\n        # \u7981\u7528\u4e0b\u8f7d\u6309\u94ae\n        button1.config(state=tkinter.DISABLED)\n        # \u901a\u8fc7daemon\u53c2\u6570\u5c06\u7ebf\u7a0b\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b(\u4e3b\u7a0b\u5e8f\u9000\u51fa\u5c31\u4e0d\u518d\u4fdd\u7559\u6267\u884c)\n        # \u5728\u7ebf\u7a0b\u4e2d\u5904\u7406\u8017\u65f6\u95f4\u7684\u4e0b\u8f7d\u4efb\u52a1\n        DownloadTaskHandler(daemon=True).start()\n\n    def show_about():\n        tkinter.messagebox.showinfo('\u5173\u4e8e', '\u4f5c\u8005: \u9a86\u660a(v1.0)')\n\n    top = tkinter.Tk()\n    top.title('\u5355\u7ebf\u7a0b')\n    top.geometry('200x150')\n    top.wm_attributes('-topmost', 1)\n\n    panel = tkinter.Frame(top)\n    button1 = tkinter.Button(panel, text='\u4e0b\u8f7d', command=download)\n    button1.pack(side='left')\n    button2 = tkinter.Button(panel, text='\u5173\u4e8e', command=show_about)\n    button2.pack(side='right')\n    panel.pack(side='bottom')\n\n    tkinter.mainloop()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/13.%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#2","title":"\u4f8b\u5b502\uff1a\u4f7f\u7528\u591a\u8fdb\u7a0b\u5bf9\u590d\u6742\u4efb\u52a1\u8fdb\u884c\u201c\u5206\u800c\u6cbb\u4e4b\u201d\u3002","text":"<p>\u6211\u4eec\u6765\u5b8c\u62101~100000000\u6c42\u548c\u7684\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u8fd9\u4e2a\u95ee\u9898\u672c\u8eab\u975e\u5e38\u7b80\u5355\uff0c\u6709\u70b9\u5faa\u73af\u7684\u77e5\u8bc6\u5c31\u80fd\u89e3\u51b3\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>from time import time\n\n\ndef main():\n    total = 0\n    number_list = [x for x in range(1, 100000001)]\n    start = time()\n    for number in number_list:\n        total += number\n    print(total)\n    end = time()\n    print('Execution time: %.3fs' % (end - start))\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u6545\u610f\u5148\u53bb\u521b\u5efa\u4e86\u4e00\u4e2a\u5217\u8868\u5bb9\u5668\u7136\u540e\u586b\u5165\u4e86100000000\u4e2a\u6570\uff0c\u8fd9\u4e00\u6b65\u5176\u5b9e\u662f\u6bd4\u8f83\u8017\u65f6\u95f4\u7684\uff0c\u6240\u4ee5\u4e3a\u4e86\u516c\u5e73\u8d77\u89c1\uff0c\u5f53\u6211\u4eec\u5c06\u8fd9\u4e2a\u4efb\u52a1\u5206\u89e3\u52308\u4e2a\u8fdb\u7a0b\u4e2d\u53bb\u6267\u884c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6682\u65f6\u4e5f\u4e0d\u8003\u8651\u5217\u8868\u5207\u7247\u64cd\u4f5c\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u53ea\u662f\u628a\u505a\u8fd0\u7b97\u548c\u5408\u5e76\u8fd0\u7b97\u7ed3\u679c\u7684\u65f6\u95f4\u7edf\u8ba1\u51fa\u6765\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>from multiprocessing import Process, Queue\nfrom random import randint\nfrom time import time\n\n\ndef task_handler(curr_list, result_queue):\n    total = 0\n    for number in curr_list:\n        total += number\n    result_queue.put(total)\n\n\ndef main():\n    processes = []\n    number_list = [x for x in range(1, 100000001)]\n    result_queue = Queue()\n    index = 0\n    # \u542f\u52a88\u4e2a\u8fdb\u7a0b\u5c06\u6570\u636e\u5207\u7247\u540e\u8fdb\u884c\u8fd0\u7b97\n    for _ in range(8):\n        p = Process(target=task_handler,\n                    args=(number_list[index:index + 12500000], result_queue))\n        index += 12500000\n        processes.append(p)\n        p.start()\n    # \u5f00\u59cb\u8bb0\u5f55\u6240\u6709\u8fdb\u7a0b\u6267\u884c\u5b8c\u6210\u82b1\u8d39\u7684\u65f6\u95f4\n    start = time()\n    for p in processes:\n        p.join()\n    # \u5408\u5e76\u6267\u884c\u7ed3\u679c\n    total = 0\n    while not result_queue.empty():\n        total += result_queue.get()\n    print(total)\n    end = time()\n    print('Execution time: ', (end - start), 's', sep='')\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u6bd4\u8f83\u4e24\u6bb5\u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\uff08\u5728\u6211\u76ee\u524d\u4f7f\u7528\u7684MacBook\u4e0a\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u9700\u8981\u5927\u69826\u79d2\u5de6\u53f3\u7684\u65f6\u95f4\uff0c\u800c\u4e0b\u9762\u7684\u4ee3\u7801\u53ea\u9700\u8981\u4e0d\u52301\u79d2\u7684\u65f6\u95f4\uff0c\u518d\u5f3a\u8c03\u4e00\u6b21\u6211\u4eec\u53ea\u662f\u6bd4\u8f83\u4e86\u8fd0\u7b97\u7684\u65f6\u95f4\uff0c\u4e0d\u8003\u8651\u5217\u8868\u521b\u5efa\u53ca\u5207\u7247\u64cd\u4f5c\u82b1\u8d39\u7684\u65f6\u95f4\uff09\uff0c\u4f7f\u7528\u591a\u8fdb\u7a0b\u540e\u7531\u4e8e\u83b7\u5f97\u4e86\u66f4\u591a\u7684CPU\u6267\u884c\u65f6\u95f4\u4ee5\u53ca\u66f4\u597d\u7684\u5229\u7528\u4e86CPU\u7684\u591a\u6838\u7279\u6027\uff0c\u660e\u663e\u7684\u51cf\u5c11\u4e86\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\uff0c\u800c\u4e14\u8ba1\u7b97\u91cf\u8d8a\u5927\u6548\u679c\u8d8a\u660e\u663e\u3002\u5f53\u7136\uff0c\u5982\u679c\u613f\u610f\u8fd8\u53ef\u4ee5\u5c06\u591a\u4e2a\u8fdb\u7a0b\u90e8\u7f72\u5728\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u4e0a\uff0c\u505a\u6210\u5206\u5e03\u5f0f\u8fdb\u7a0b\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u5c31\u662f\u901a\u8fc7<code>multiprocessing.managers</code>\u6a21\u5757\u4e2d\u63d0\u4f9b\u7684\u7ba1\u7406\u5668\u5c06<code>Queue</code>\u5bf9\u8c61\u901a\u8fc7\u7f51\u7edc\u5171\u4eab\u51fa\u6765\uff08\u6ce8\u518c\u5230\u7f51\u7edc\u4e0a\u8ba9\u5176\u4ed6\u8ba1\u7b97\u673a\u53ef\u4ee5\u8bbf\u95ee\uff09\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u4e5f\u7559\u5230\u722c\u866b\u7684\u4e13\u9898\u518d\u8fdb\u884c\u8bb2\u89e3\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/","title":"14.\u7f51\u7edc\u7f16\u7a0b\u5165\u95e8\u548c\u7f51\u7edc\u5e94\u7528\u5f00\u53d1","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#_1","title":"\u7f51\u7edc\u7f16\u7a0b\u5165\u95e8","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#_2","title":"\u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840","text":"<p>\u8ba1\u7b97\u673a\u7f51\u7edc\u662f\u72ec\u7acb\u81ea\u4e3b\u7684\u8ba1\u7b97\u673a\u4e92\u8054\u800c\u6210\u7684\u7cfb\u7edf\u7684\u603b\u79f0\uff0c\u7ec4\u5efa\u8ba1\u7b97\u673a\u7f51\u7edc\u6700\u4e3b\u8981\u7684\u76ee\u7684\u662f\u5b9e\u73b0\u591a\u53f0\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u901a\u4fe1\u548c\u8d44\u6e90\u5171\u4eab\u3002\u4eca\u5929\u8ba1\u7b97\u673a\u7f51\u7edc\u4e2d\u7684\u8bbe\u5907\u548c\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u7528\u6237\u5df2\u7ecf\u591a\u5f97\u4e0d\u53ef\u8ba1\u6570\uff0c\u800c\u8ba1\u7b97\u673a\u7f51\u7edc\u4e5f\u53ef\u4ee5\u79f0\u5f97\u4e0a\u662f\u4e00\u4e2a\u201c\u590d\u6742\u5de8\u7cfb\u7edf\u201d\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684\u7cfb\u7edf\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u7528\u4e00\u4e24\u7bc7\u6587\u7ae0\u628a\u5b83\u8bb2\u6e05\u695a\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfbAndrew S.Tanenbaum\u8001\u5e08\u7684\u7ecf\u5178\u4e4b\u4f5c\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u300b\u6216Kurose\u548cRoss\u8001\u5e08\u5408\u8457\u7684\u300a\u8ba1\u7b97\u673a\u7f51\u7edc:\u81ea\u9876\u5411\u4e0b\u65b9\u6cd5\u300b\u6765\u4e86\u89e3\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u76f8\u5173\u77e5\u8bc6\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#_3","title":"\u8ba1\u7b97\u673a\u7f51\u7edc\u53d1\u5c55\u53f2","text":"<ol> <li>1960s - \u7f8e\u56fd\u56fd\u9632\u90e8ARPANET\u9879\u76ee\u95ee\u4e16\uff0c\u5960\u5b9a\u4e86\u5206\u7ec4\u4ea4\u6362\u7f51\u7edc\u7684\u57fa\u7840\u3002</li> </ol> <ol> <li>1980s - \u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7\uff08ISO\uff09\u53d1\u5e03OSI/RM\uff0c\u5960\u5b9a\u4e86\u7f51\u7edc\u6280\u672f\u6807\u51c6\u5316\u7684\u57fa\u7840\u3002</li> </ol> <ol> <li>1990s - \u82f1\u56fd\u4eba\u8482\u59c6\u00b7\u4f2f\u7eb3\u65af-\u674e\u53d1\u660e\u4e86\u56fe\u5f62\u5316\u7684\u6d4f\u89c8\u5668\uff0c\u6d4f\u89c8\u5668\u7684\u7b80\u5355\u6613\u7528\u6027\u4f7f\u5f97\u8ba1\u7b97\u673a\u7f51\u7edc\u8fc5\u901f\u88ab\u666e\u53ca\u3002</li> </ol> <p>\u5728\u6ca1\u6709\u6d4f\u89c8\u5668\u7684\u5e74\u4ee3\uff0c\u4e0a\u7f51\u662f\u8fd9\u6837\u7684\u3002</p> <p></p> <p>\u6709\u4e86\u6d4f\u89c8\u5668\u4ee5\u540e\uff0c\u4e0a\u7f51\u662f\u8fd9\u6837\u7684\u3002</p> <p></p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#tcpip","title":"TCP/IP\u6a21\u578b","text":"<p>\u5b9e\u73b0\u7f51\u7edc\u901a\u4fe1\u7684\u57fa\u7840\u662f\u7f51\u7edc\u901a\u4fe1\u534f\u8bae\uff0c\u8fd9\u4e9b\u534f\u8bae\u901a\u5e38\u662f\u7531\u4e92\u8054\u7f51\u5de5\u7a0b\u4efb\u52a1\u7ec4 \uff08IETF\uff09\u5236\u5b9a\u7684\u3002\u6240\u8c13\u201c\u534f\u8bae\u201d\u5c31\u662f\u901a\u4fe1\u8ba1\u7b97\u673a\u53cc\u65b9\u5fc5\u987b\u5171\u540c\u9075\u4ece\u7684\u4e00\u7ec4\u7ea6\u5b9a\uff0c\u4f8b\u5982\u600e\u6837\u5efa\u7acb\u8fde\u63a5\u3001\u600e\u6837\u4e92\u76f8\u8bc6\u522b\u7b49\uff0c\u7f51\u7edc\u534f\u8bae\u7684\u4e09\u8981\u7d20\u662f\uff1a\u8bed\u6cd5\u3001\u8bed\u4e49\u548c\u65f6\u5e8f\u3002\u6784\u6210\u6211\u4eec\u4eca\u5929\u4f7f\u7528\u7684Internet\u7684\u57fa\u7840\u7684\u662fTCP/IP\u534f\u8bae\u65cf\uff0c\u6240\u8c13\u534f\u8bae\u65cf\u5c31\u662f\u4e00\u7cfb\u5217\u7684\u534f\u8bae\u53ca\u5176\u6784\u6210\u7684\u901a\u4fe1\u6a21\u578b\uff0c\u6211\u4eec\u901a\u5e38\u4e5f\u628a\u8fd9\u5957\u4e1c\u897f\u79f0\u4e3aTCP/IP\u6a21\u578b\u3002\u4e0e\u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7\u53d1\u5e03\u7684OSI/RM\u8fd9\u4e2a\u4e03\u5c42\u6a21\u578b\u4e0d\u540c\uff0cTCP/IP\u662f\u4e00\u4e2a\u56db\u5c42\u6a21\u578b\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8be5\u6a21\u578b\u5c06\u6211\u4eec\u4f7f\u7528\u7684\u7f51\u7edc\u4ece\u903b\u8f91\u4e0a\u5206\u89e3\u4e3a\u56db\u4e2a\u5c42\u6b21\uff0c\u81ea\u5e95\u5411\u4e0a\u4f9d\u6b21\u662f\uff1a\u7f51\u7edc\u63a5\u53e3\u5c42\u3001\u7f51\u7edc\u5c42\u3001\u4f20\u8f93\u5c42\u548c\u5e94\u7528\u5c42\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>IP\u901a\u5e38\u88ab\u7ffb\u8bd1\u4e3a\u7f51\u9645\u534f\u8bae\uff0c\u5b83\u670d\u52a1\u4e8e\u7f51\u7edc\u5c42\uff0c\u4e3b\u8981\u5b9e\u73b0\u4e86\u5bfb\u5740\u548c\u8def\u7531\u7684\u529f\u80fd\u3002\u63a5\u5165\u7f51\u7edc\u7684\u6bcf\u4e00\u53f0\u4e3b\u673a\u90fd\u9700\u8981\u6709\u81ea\u5df1\u7684IP\u5730\u5740\uff0cIP\u5730\u5740\u5c31\u662f\u4e3b\u673a\u5728\u8ba1\u7b97\u673a\u7f51\u7edc\u4e0a\u7684\u8eab\u4efd\u6807\u8bc6\u3002\u5f53\u7136\u7531\u4e8eIPv4\u5730\u5740\u7684\u532e\u4e4f\uff0c\u6211\u4eec\u5e73\u5e38\u5728\u5bb6\u91cc\u3001\u529e\u516c\u5ba4\u4ee5\u53ca\u5176\u4ed6\u53ef\u4ee5\u63a5\u5165\u7f51\u7edc\u7684\u516c\u5171\u533a\u57df\u4e0a\u7f51\u65f6\u83b7\u5f97\u7684IP\u5730\u5740\u5e76\u4e0d\u662f\u5168\u7403\u552f\u4e00\u7684IP\u5730\u5740\uff0c\u800c\u662f\u4e00\u4e2a\u5c40\u57df\u7f51\uff08LAN\uff09\u4e2d\u7684\u5185\u90e8IP\u5730\u5740\uff0c\u901a\u8fc7\u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff08NAT\uff09\u670d\u52a1\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u7f51\u7edc\u7684\u8bbf\u95ee\u3002\u8ba1\u7b97\u673a\u7f51\u7edc\u4e0a\u6709\u5927\u91cf\u7684\u88ab\u6211\u4eec\u79f0\u4e3a\u201c\u8def\u7531\u5668\u201d\u7684\u7f51\u7edc\u4e2d\u7ee7\u8bbe\u5907\uff0c\u5b83\u4eec\u4f1a\u5b58\u50a8\u8f6c\u53d1\u6211\u4eec\u53d1\u9001\u5230\u7f51\u7edc\u4e0a\u7684\u6570\u636e\u5206\u7ec4\uff0c\u8ba9\u4ece\u6e90\u5934\u53d1\u51fa\u7684\u6570\u636e\u6700\u7ec8\u80fd\u591f\u627e\u5230\u4f20\u9001\u5230\u76ee\u7684\u5730\u901a\u8def\uff0c\u8fd9\u9879\u529f\u80fd\u5c31\u662f\u6240\u8c13\u7684\u8def\u7531\u3002</p> <p>TCP\u5168\u79f0\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff0c\u5b83\u662f\u57fa\u4e8eIP\u63d0\u4f9b\u7684\u5bfb\u5740\u548c\u8def\u7531\u670d\u52a1\u800c\u5efa\u7acb\u8d77\u6765\u7684\u8d1f\u8d23\u5b9e\u73b0\u7aef\u5230\u7aef\u53ef\u9760\u4f20\u8f93\u7684\u534f\u8bae\uff0c\u4e4b\u6240\u4ee5\u5c06TCP\u79f0\u4e3a\u53ef\u9760\u7684\u4f20\u8f93\u534f\u8bae\u662f\u56e0\u4e3aTCP\u5411\u8c03\u7528\u8005\u627f\u8bfa\u4e86\u4e09\u4ef6\u4e8b\u60c5\uff1a</p> <ol> <li>\u6570\u636e\u4e0d\u4f20\u4e22\u4e0d\u4f20\u9519\uff08\u5229\u7528\u63e1\u624b\u3001\u6821\u9a8c\u548c\u91cd\u4f20\u673a\u5236\u53ef\u4ee5\u5b9e\u73b0\uff09\u3002</li> <li>\u6d41\u91cf\u63a7\u5236\uff08\u901a\u8fc7\u6ed1\u52a8\u7a97\u53e3\u5339\u914d\u6570\u636e\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\u4e4b\u95f4\u7684\u4f20\u8f93\u901f\u5ea6\uff09\u3002</li> <li>\u62e5\u585e\u63a7\u5236\uff08\u901a\u8fc7RTT\u65f6\u95f4\u4ee5\u53ca\u5bf9\u6ed1\u52a8\u7a97\u53e3\u7684\u63a7\u5236\u7f13\u89e3\u7f51\u7edc\u62e5\u5835\uff09\u3002</li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#_4","title":"\u7f51\u7edc\u5e94\u7528\u6a21\u5f0f","text":"<ol> <li>C/S\u6a21\u5f0f\u548cB/S\u6a21\u5f0f\u3002\u8fd9\u91cc\u7684C\u6307\u7684\u662fClient\uff08\u5ba2\u6237\u7aef\uff09\uff0c\u901a\u5e38\u662f\u4e00\u4e2a\u9700\u8981\u5b89\u88c5\u5230\u67d0\u4e2a\u5bbf\u4e3b\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\uff1b\u800cB\u6307\u7684\u662fBrowser\uff08\u6d4f\u89c8\u5668\uff09\uff0c\u5b83\u51e0\u4e4e\u662f\u6240\u6709\u56fe\u5f62\u5316\u64cd\u4f5c\u7cfb\u7edf\u90fd\u9ed8\u8ba4\u5b89\u88c5\u4e86\u7684\u4e00\u4e2a\u5e94\u7528\u8f6f\u4ef6\uff1b\u901a\u8fc7C\u6216B\u90fd\u53ef\u4ee5\u5b9e\u73b0\u5bf9S\uff08\u670d\u52a1\u5668\uff09\u7684\u8bbf\u95ee\u3002\u5173\u4e8e\u4e8c\u8005\u7684\u6bd4\u8f83\u548c\u8ba8\u8bba\u5728\u7f51\u7edc\u4e0a\u6709\u4e00\u5927\u5806\u7684\u6587\u7ae0\uff0c\u5728\u6b64\u6211\u4eec\u5c31\u4e0d\u518d\u6d6a\u8d39\u7b14\u58a8\u4e86\u3002</li> <li>\u53bb\u4e2d\u5fc3\u5316\u7684\u7f51\u7edc\u5e94\u7528\u6a21\u5f0f\u3002\u4e0d\u7ba1\u662fB/S\u8fd8\u662fC/S\u90fd\u9700\u8981\u670d\u52a1\u5668\u7684\u5b58\u5728\uff0c\u670d\u52a1\u5668\u5c31\u662f\u6574\u4e2a\u5e94\u7528\u6a21\u5f0f\u7684\u4e2d\u5fc3\uff0c\u800c\u53bb\u4e2d\u5fc3\u5316\u7684\u7f51\u7edc\u5e94\u7528\u901a\u5e38\u6ca1\u6709\u56fa\u5b9a\u7684\u670d\u52a1\u5668\u6216\u8005\u56fa\u5b9a\u7684\u5ba2\u6237\u7aef\uff0c\u6240\u6709\u5e94\u7528\u7684\u4f7f\u7528\u8005\u65e2\u53ef\u4ee5\u4f5c\u4e3a\u8d44\u6e90\u7684\u63d0\u4f9b\u8005\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u8d44\u6e90\u7684\u8bbf\u95ee\u8005\u3002</li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#http","title":"\u57fa\u4e8eHTTP\u534f\u8bae\u7684\u7f51\u7edc\u8d44\u6e90\u8bbf\u95ee","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#http_1","title":"HTTP\uff08\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09","text":"<p>HTTP\u662f\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff08Hyper-Text Transfer Proctol\uff09\u7684\u7b80\u79f0\uff0c\u7ef4\u57fa\u767e\u79d1\u4e0a\u5bf9HTTP\u7684\u89e3\u91ca\u662f\uff1a\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\u662f\u4e00\u79cd\u7528\u4e8e\u5206\u5e03\u5f0f\u3001\u534f\u4f5c\u5f0f\u548c\u8d85\u5a92\u4f53\u4fe1\u606f\u7cfb\u7edf\u7684\u5e94\u7528\u5c42\u534f\u8bae\uff0c\u5b83\u662f\u4e07\u7ef4\u7f51\u6570\u636e\u901a\u4fe1\u7684\u57fa\u7840\uff0c\u8bbe\u8ba1HTTP\u6700\u521d\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u4f9b\u4e00\u79cd\u53d1\u5e03\u548c\u63a5\u6536HTML\u9875\u9762\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7HTTP\u6216\u8005HTTPS\uff08\u8d85\u6587\u672c\u4f20\u8f93\u5b89\u5168\u534f\u8bae\uff09\u8bf7\u6c42\u7684\u8d44\u6e90\u7531URI\uff08\u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26\uff09\u6765\u6807\u8bc6\u3002\u5173\u4e8eHTTP\u7684\u66f4\u591a\u5185\u5bb9\uff0c\u6211\u4eec\u63a8\u8350\u9605\u8bfb\u962e\u4e00\u5cf0\u8001\u5e08\u7684\u300aHTTP \u534f\u8bae\u5165\u95e8\u300b\uff0c\u7b80\u5355\u7684\u8bf4\uff0c\u901a\u8fc7HTTP\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u7f51\u7edc\u4e0a\u7684\uff08\u57fa\u4e8e\u5b57\u7b26\u7684\uff09\u8d44\u6e90\uff0c\u5f00\u53d1\u4e2d\u7ecf\u5e38\u4f1a\u7528\u5230\u7684\u7f51\u7edcAPI\uff08\u6709\u7684\u5730\u65b9\u4e5f\u79f0\u4e4b\u4e3a\u7f51\u7edc\u6570\u636e\u63a5\u53e3\uff09\u5c31\u662f\u57fa\u4e8eHTTP\u6765\u5b9e\u73b0\u6570\u636e\u4f20\u8f93\u7684\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#json","title":"JSON\u683c\u5f0f","text":"<p>JSON\uff08JavaScript Object Notation\uff09\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u6570\u636e\u4ea4\u6362\u8bed\u8a00\uff0c\u8be5\u8bed\u8a00\u4ee5\u6613\u4e8e\u8ba9\u4eba\u9605\u8bfb\u7684\u6587\u5b57\uff08\u7eaf\u6587\u672c\uff09\u4e3a\u57fa\u7840\uff0c\u7528\u6765\u4f20\u8f93\u7531\u5c5e\u6027\u503c\u6216\u8005\u5e8f\u5217\u6027\u7684\u503c\u7ec4\u6210\u7684\u6570\u636e\u5bf9\u8c61\u3002\u5c3d\u7ba1JSON\u662f\u6700\u521d\u53ea\u662fJavascript\u4e2d\u4e00\u79cd\u521b\u5efa\u5bf9\u8c61\u7684\u5b57\u9762\u91cf\u8bed\u6cd5\uff0c\u4f46\u5b83\u5728\u5f53\u4e0b\u66f4\u662f\u4e00\u79cd\u72ec\u7acb\u4e8e\u8bed\u8a00\u7684\u6570\u636e\u683c\u5f0f\uff0c\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u652f\u6301JSON\u683c\u5f0f\u6570\u636e\u7684\u751f\u6210\u548c\u89e3\u6790\uff0cPython\u5185\u7f6e\u7684json\u6a21\u5757\u4e5f\u63d0\u4f9b\u4e86\u8fd9\u65b9\u9762\u7684\u529f\u80fd\u3002\u7531\u4e8eJSON\u662f\u7eaf\u6587\u672c\uff0c\u5b83\u548cXML\u4e00\u6837\u90fd\u9002\u7528\u4e8e\u5f02\u6784\u7cfb\u7edf\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u6362\uff0c\u800c\u76f8\u8f83\u4e8eXML\uff0cJSON\u663e\u5f97\u66f4\u52a0\u7684\u8f7b\u4fbf\u548c\u4f18\u96c5\u3002\u4e0b\u9762\u662f\u8868\u8fbe\u540c\u6837\u4fe1\u606f\u7684XML\u548cJSON\uff0c\u800cJSON\u7684\u4f18\u52bf\u662f\u76f8\u5f53\u76f4\u89c2\u7684\u3002</p> <p>XML\u7684\u4f8b\u5b50\uff1a</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;message&gt;\n    &lt;from&gt;Alice&lt;/from&gt;\n    &lt;to&gt;Bob&lt;/to&gt;\n    &lt;content&gt;Will you marry me?&lt;/content&gt;\n&lt;/message&gt;\n</code></pre> <p>JSON\u7684\u4f8b\u5b50\uff1a</p> <pre><code>{\n    \"from\": \"Alice\",\n    \"to\": \"Bob\",\n    \"content\": \"Will you marry me?\"\n}\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#requests","title":"requests\u5e93","text":"<p>requests\u662f\u4e00\u4e2a\u57fa\u4e8eHTTP\u534f\u8bae\u6765\u4f7f\u7528\u7f51\u7edc\u7684\u7b2c\u4e09\u5e93\uff0c\u5176\u5b98\u65b9\u7f51\u7ad9\u6709\u8fd9\u6837\u7684\u4e00\u53e5\u4ecb\u7ecd\u5b83\u7684\u8bdd\uff1a\u201cRequests\u662f\u552f\u4e00\u7684\u4e00\u4e2a\u975e\u8f6c\u57fa\u56e0\u7684Python HTTP\u5e93\uff0c\u4eba\u7c7b\u53ef\u4ee5\u5b89\u5168\u4eab\u7528\u3002\u201d\u7b80\u5355\u7684\u8bf4\uff0c\u4f7f\u7528requests\u5e93\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u7684\u4f7f\u7528HTTP\uff0c\u907f\u514d\u5b89\u5168\u7f3a\u9677\u3001\u5197\u4f59\u4ee3\u7801\u4ee5\u53ca\u201c\u91cd\u590d\u53d1\u660e\u8f6e\u5b50\u201d\uff08\u884c\u4e1a\u9ed1\u8bdd\uff0c\u901a\u5e38\u7528\u5728\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\u8868\u793a\u91cd\u65b0\u521b\u9020\u4e00\u4e2a\u5df2\u6709\u7684\u6216\u662f\u65e9\u5df2\u88ab\u4f18\u5316\u904e\u7684\u57fa\u672c\u65b9\u6cd5\uff09\u3002\u524d\u9762\u7684\u6587\u7ae0\u4e2d\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u8fc7\u8fd9\u4e2a\u5e93\uff0c\u4e0b\u9762\u6211\u4eec\u8fd8\u662f\u901a\u8fc7requests\u6765\u5b9e\u73b0\u4e00\u4e2a\u8bbf\u95ee\u7f51\u7edc\u6570\u636e\u63a5\u53e3\u5e76\u4ece\u4e2d\u83b7\u53d6\u7f8e\u5973\u56fe\u7247\u4e0b\u8f7d\u94fe\u63a5\u7136\u540e\u4e0b\u8f7d\u7f8e\u5973\u56fe\u7247\u5230\u672c\u5730\u7684\u4f8b\u5b50\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u4e86\u5929\u884c\u6570\u636e\u63d0\u4f9b\u7684\u7f51\u7edcAPI\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5148\u901a\u8fc7pip\u5b89\u88c5requests\u53ca\u5176\u4f9d\u8d56\u5e93\u3002</p> <pre><code>pip install requests\n</code></pre> <p>\u5982\u679c\u4f7f\u7528PyCharm\u4f5c\u4e3a\u5f00\u53d1\u5de5\u5177\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u4e66\u5199<code>import requests</code>\uff0c\u7136\u540e\u901a\u8fc7\u4ee3\u7801\u4fee\u590d\u529f\u80fd\u6765\u81ea\u52a8\u4e0b\u8f7d\u5b89\u88c5requests\u3002</p> <pre><code>from time import time\nfrom threading import Thread\n\nimport requests\n\n\n# \u7ee7\u627fThread\u7c7b\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u7ebf\u7a0b\u7c7b\nclass DownloadHanlder(Thread):\n\n    def __init__(self, url):\n        super().__init__()\n        self.url = url\n\n    def run(self):\n        filename = self.url[self.url.rfind('/') + 1:]\n        resp = requests.get(self.url)\n        with open('/Users/Hao/' + filename, 'wb') as f:\n            f.write(resp.content)\n\n\ndef main():\n    # \u901a\u8fc7requests\u6a21\u5757\u7684get\u51fd\u6570\u83b7\u53d6\u7f51\u7edc\u8d44\u6e90\n    # \u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u5929\u884c\u6570\u636e\u63a5\u53e3\u63d0\u4f9b\u7684\u7f51\u7edcAPI\n    # \u8981\u4f7f\u7528\u8be5\u6570\u636e\u63a5\u53e3\u9700\u8981\u5728\u5929\u884c\u6570\u636e\u7684\u7f51\u7ad9\u4e0a\u6ce8\u518c\n    # \u7136\u540e\u7528\u81ea\u5df1\u7684Key\u66ff\u6362\u6389\u4e0b\u9762\u4ee3\u7801\u7684\u4e2dAPIKey\u5373\u53ef\n    resp = requests.get(\n        'http://api.tianapi.com/meinv/?key=APIKey&amp;num=10')\n    # \u5c06\u670d\u52a1\u5668\u8fd4\u56de\u7684JSON\u683c\u5f0f\u7684\u6570\u636e\u89e3\u6790\u4e3a\u5b57\u5178\n    data_model = resp.json()\n    for mm_dict in data_model['newslist']:\n        url = mm_dict['picUrl']\n        # \u901a\u8fc7\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u5b9e\u73b0\u56fe\u7247\u4e0b\u8f7d\n        DownloadHanlder(url).start()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#_5","title":"\u57fa\u4e8e\u4f20\u8f93\u5c42\u534f\u8bae\u7684\u5957\u63a5\u5b57\u7f16\u7a0b","text":"<p>\u5957\u63a5\u5b57\u8fd9\u4e2a\u8bcd\u5bf9\u5f88\u591a\u4e0d\u4e86\u89e3\u7f51\u7edc\u7f16\u7a0b\u7684\u4eba\u6765\u8bf4\u663e\u5f97\u975e\u5e38\u6666\u6da9\u548c\u964c\u751f\uff0c\u5176\u5b9e\u8bf4\u5f97\u901a\u4fd7\u70b9\uff0c\u5957\u63a5\u5b57\u5c31\u662f\u4e00\u5957\u7528C\u8bed\u8a00\u5199\u6210\u7684\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u5e93\uff0c\u4e3b\u8981\u7528\u4e8e\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u901a\u4fe1\u548c\u7f51\u7edc\u7f16\u7a0b\uff0c\u5728\u7f51\u7edc\u5e94\u7528\u5f00\u53d1\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u5728Python\u4e2d\u4e5f\u53ef\u4ee5\u57fa\u4e8e\u5957\u63a5\u5b57\u6765\u4f7f\u7528\u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u4f20\u8f93\u670d\u52a1\uff0c\u5e76\u57fa\u4e8e\u6b64\u5f00\u53d1\u81ea\u5df1\u7684\u7f51\u7edc\u5e94\u7528\u3002\u5b9e\u9645\u5f00\u53d1\u4e2d\u4f7f\u7528\u7684\u5957\u63a5\u5b57\u53ef\u4ee5\u5206\u4e3a\u4e09\u7c7b\uff1a\u6d41\u5957\u63a5\u5b57\uff08TCP\u5957\u63a5\u5b57\uff09\u3001\u6570\u636e\u62a5\u5957\u63a5\u5b57\u548c\u539f\u59cb\u5957\u63a5\u5b57\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#tcp","title":"TCP\u5957\u63a5\u5b57","text":"<p>\u6240\u8c13TCP\u5957\u63a5\u5b57\u5c31\u662f\u4f7f\u7528TCP\u534f\u8bae\u63d0\u4f9b\u7684\u4f20\u8f93\u670d\u52a1\u6765\u5b9e\u73b0\u7f51\u7edc\u901a\u4fe1\u7684\u7f16\u7a0b\u63a5\u53e3\u3002\u5728Python\u4e2d\u53ef\u4ee5\u901a\u8fc7\u521b\u5efasocket\u5bf9\u8c61\u5e76\u6307\u5b9atype\u5c5e\u6027\u4e3aSOCK_STREAM\u6765\u4f7f\u7528TCP\u5957\u63a5\u5b57\u3002\u7531\u4e8e\u4e00\u53f0\u4e3b\u673a\u53ef\u80fd\u62e5\u6709\u591a\u4e2aIP\u5730\u5740\uff0c\u800c\u4e14\u5f88\u6709\u53ef\u80fd\u4f1a\u914d\u7f6e\u591a\u4e2a\u4e0d\u540c\u7684\u670d\u52a1\uff0c\u6240\u4ee5\u4f5c\u4e3a\u670d\u52a1\u5668\u7aef\u7684\u7a0b\u5e8f\uff0c\u9700\u8981\u5728\u521b\u5efa\u5957\u63a5\u5b57\u5bf9\u8c61\u540e\u5c06\u5176\u7ed1\u5b9a\u5230\u6307\u5b9a\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u4e0a\u3002\u8fd9\u91cc\u7684\u7aef\u53e3\u5e76\u4e0d\u662f\u7269\u7406\u8bbe\u5907\u800c\u662f\u5bf9IP\u5730\u5740\u7684\u6269\u5c55\uff0c\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u7684\u670d\u52a1\uff0c\u4f8b\u5982\u6211\u4eec\u901a\u5e38\u5c06HTTP\u670d\u52a1\u8ddf80\u7aef\u53e3\u7ed1\u5b9a\uff0c\u800cMySQL\u6570\u636e\u5e93\u670d\u52a1\u9ed8\u8ba4\u7ed1\u5b9a\u57283306\u7aef\u53e3\uff0c\u8fd9\u6837\u5f53\u670d\u52a1\u5668\u6536\u5230\u7528\u6237\u8bf7\u6c42\u65f6\u5c31\u53ef\u4ee5\u6839\u636e\u7aef\u53e3\u53f7\u6765\u786e\u5b9a\u5230\u5e95\u7528\u6237\u8bf7\u6c42\u7684\u662fHTTP\u670d\u52a1\u5668\u8fd8\u662f\u6570\u636e\u5e93\u670d\u52a1\u5668\u63d0\u4f9b\u7684\u670d\u52a1\u3002\u7aef\u53e3\u7684\u53d6\u503c\u8303\u56f4\u662f0~65535\uff0c\u800c1024\u4ee5\u4e0b\u7684\u7aef\u53e3\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\u201c\u8457\u540d\u7aef\u53e3\u201d\uff08\u7559\u7ed9\u50cfFTP\u3001HTTP\u3001SMTP\u7b49\u201c\u8457\u540d\u670d\u52a1\u201d\u4f7f\u7528\u7684\u7aef\u53e3\uff0c\u6709\u7684\u5730\u65b9\u4e5f\u79f0\u4e4b\u4e3a\u201c\u5468\u77e5\u7aef\u53e3\u201d\uff09\uff0c\u81ea\u5b9a\u4e49\u7684\u670d\u52a1\u901a\u5e38\u4e0d\u4f7f\u7528\u8fd9\u4e9b\u7aef\u53e3\uff0c\u9664\u975e\u81ea\u5b9a\u4e49\u7684\u662fHTTP\u6216FTP\u8fd9\u6837\u7684\u8457\u540d\u670d\u52a1\u3002</p> <p>\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2a\u63d0\u4f9b\u65f6\u95f4\u65e5\u671f\u7684\u670d\u52a1\u5668\u3002</p> <pre><code>from socket import socket, SOCK_STREAM, AF_INET\nfrom datetime import datetime\n\n\ndef main():\n    # 1.\u521b\u5efa\u5957\u63a5\u5b57\u5bf9\u8c61\u5e76\u6307\u5b9a\u4f7f\u7528\u54ea\u79cd\u4f20\u8f93\u670d\u52a1\n    # family=AF_INET - IPv4\u5730\u5740\n    # family=AF_INET6 - IPv6\u5730\u5740\n    # type=SOCK_STREAM - TCP\u5957\u63a5\u5b57\n    # type=SOCK_DGRAM - UDP\u5957\u63a5\u5b57\n    # type=SOCK_RAW - \u539f\u59cb\u5957\u63a5\u5b57\n    server = socket(family=AF_INET, type=SOCK_STREAM)\n    # 2.\u7ed1\u5b9aIP\u5730\u5740\u548c\u7aef\u53e3(\u7aef\u53e3\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u7684\u670d\u52a1)\n    # \u540c\u4e00\u65f6\u95f4\u5728\u540c\u4e00\u4e2a\u7aef\u53e3\u4e0a\u53ea\u80fd\u7ed1\u5b9a\u4e00\u4e2a\u670d\u52a1\u5426\u5219\u62a5\u9519\n    server.bind(('192.168.1.2', 6789))\n    # 3.\u5f00\u542f\u76d1\u542c - \u76d1\u542c\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u670d\u52a1\u5668\n    # \u53c2\u6570512\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fde\u63a5\u961f\u5217\u7684\u5927\u5c0f\n    server.listen(512)\n    print('\u670d\u52a1\u5668\u542f\u52a8\u5f00\u59cb\u76d1\u542c...')\n    while True:\n        # 4.\u901a\u8fc7\u5faa\u73af\u63a5\u6536\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u5e76\u4f5c\u51fa\u76f8\u5e94\u7684\u5904\u7406(\u63d0\u4f9b\u670d\u52a1)\n        # accept\u65b9\u6cd5\u662f\u4e00\u4e2a\u963b\u585e\u65b9\u6cd5\u5982\u679c\u6ca1\u6709\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u670d\u52a1\u5668\u4ee3\u7801\u4e0d\u4f1a\u5411\u4e0b\u6267\u884c\n        # accept\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\u5176\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u5ba2\u6237\u7aef\u5bf9\u8c61\n        # \u7b2c\u4e8c\u4e2a\u5143\u7d20\u662f\u8fde\u63a5\u5230\u670d\u52a1\u5668\u7684\u5ba2\u6237\u7aef\u7684\u5730\u5740(\u7531IP\u548c\u7aef\u53e3\u4e24\u90e8\u5206\u6784\u6210)\n        client, addr = server.accept()\n        print(str(addr) + '\u8fde\u63a5\u5230\u4e86\u670d\u52a1\u5668.')\n        # 5.\u53d1\u9001\u6570\u636e\n        client.send(str(datetime.now()).encode('utf-8'))\n        # 6.\u65ad\u5f00\u8fde\u63a5\n        client.close()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u8fd0\u884c\u670d\u52a1\u5668\u7a0b\u5e8f\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Windows\u7cfb\u7edf\u7684telnet\u6765\u8bbf\u95ee\u8be5\u670d\u52a1\u5668\uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <pre><code>telnet 192.168.1.2 6789\n</code></pre> <p></p> <p>\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7Python\u7684\u7a0b\u5e8f\u6765\u5b9e\u73b0TCP\u5ba2\u6237\u7aef\u7684\u529f\u80fd\uff0c\u76f8\u8f83\u4e8e\u5b9e\u73b0\u670d\u52a1\u5668\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5c31\u7b80\u5355\u591a\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>from socket import socket\n\n\ndef main():\n    # 1.\u521b\u5efa\u5957\u63a5\u5b57\u5bf9\u8c61\u9ed8\u8ba4\u4f7f\u7528IPv4\u548cTCP\u534f\u8bae\n    client = socket()\n    # 2.\u8fde\u63a5\u5230\u670d\u52a1\u5668(\u9700\u8981\u6307\u5b9aIP\u5730\u5740\u548c\u7aef\u53e3)\n    client.connect(('192.168.1.2', 6789))\n    # 3.\u4ece\u670d\u52a1\u5668\u63a5\u6536\u6570\u636e\n    print(client.recv(1024).decode('utf-8'))\n    client.close()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e0a\u9762\u7684\u670d\u52a1\u5668\u5e76\u6ca1\u6709\u4f7f\u7528\u591a\u7ebf\u7a0b\u6216\u8005\u5f02\u6b65I/O\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u5f53\u670d\u52a1\u5668\u4e0e\u4e00\u4e2a\u5ba2\u6237\u7aef\u5904\u4e8e\u901a\u4fe1\u72b6\u6001\u65f6\uff0c\u5176\u4ed6\u7684\u5ba2\u6237\u7aef\u53ea\u80fd\u6392\u961f\u7b49\u5f85\u3002\u5f88\u663e\u7136\uff0c\u8fd9\u6837\u7684\u670d\u52a1\u5668\u5e76\u4e0d\u80fd\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\uff0c\u6211\u4eec\u9700\u8981\u7684\u670d\u52a1\u5668\u662f\u80fd\u591f\u540c\u65f6\u63a5\u7eb3\u548c\u5904\u7406\u591a\u4e2a\u7528\u6237\u8bf7\u6c42\u7684\u3002\u4e0b\u9762\u6211\u4eec\u6765\u8bbe\u8ba1\u4e00\u4e2a\u4f7f\u7528\u591a\u7ebf\u7a0b\u6280\u672f\u5904\u7406\u591a\u4e2a\u7528\u6237\u8bf7\u6c42\u7684\u670d\u52a1\u5668\uff0c\u8be5\u670d\u52a1\u5668\u4f1a\u5411\u8fde\u63a5\u5230\u670d\u52a1\u5668\u7684\u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u5f20\u56fe\u7247\u3002</p> <p>\u670d\u52a1\u5668\u7aef\u4ee3\u7801\uff1a</p> <pre><code>from socket import socket, SOCK_STREAM, AF_INET\nfrom base64 import b64encode\nfrom json import dumps\nfrom threading import Thread\n\n\ndef main():\n\n    # \u81ea\u5b9a\u4e49\u7ebf\u7a0b\u7c7b\n    class FileTransferHandler(Thread):\n\n        def __init__(self, cclient):\n            super().__init__()\n            self.cclient = cclient\n\n        def run(self):\n            my_dict = {}\n            my_dict['filename'] = 'guido.jpg'\n            # JSON\u662f\u7eaf\u6587\u672c\u4e0d\u80fd\u643a\u5e26\u4e8c\u8fdb\u5236\u6570\u636e\n            # \u6240\u4ee5\u56fe\u7247\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u8981\u5904\u7406\u6210base64\u7f16\u7801\n            my_dict['filedata'] = data\n            # \u901a\u8fc7dumps\u51fd\u6570\u5c06\u5b57\u5178\u5904\u7406\u6210JSON\u5b57\u7b26\u4e32\n            json_str = dumps(my_dict)\n            # \u53d1\u9001JSON\u5b57\u7b26\u4e32\n            self.cclient.send(json_str.encode('utf-8'))\n            self.cclient.close()\n\n    # 1.\u521b\u5efa\u5957\u63a5\u5b57\u5bf9\u8c61\u5e76\u6307\u5b9a\u4f7f\u7528\u54ea\u79cd\u4f20\u8f93\u670d\u52a1\n    server = socket()\n    # 2.\u7ed1\u5b9aIP\u5730\u5740\u548c\u7aef\u53e3(\u533a\u5206\u4e0d\u540c\u7684\u670d\u52a1)\n    server.bind(('192.168.1.2', 5566))\n    # 3.\u5f00\u542f\u76d1\u542c - \u76d1\u542c\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u670d\u52a1\u5668\n    server.listen(512)\n    print('\u670d\u52a1\u5668\u542f\u52a8\u5f00\u59cb\u76d1\u542c...')\n    with open('guido.jpg', 'rb') as f:\n        # \u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u5904\u7406\u6210base64\u518d\u89e3\u7801\u6210\u5b57\u7b26\u4e32\n        data = b64encode(f.read()).decode('utf-8')\n    while True:\n        client, addr = server.accept()\n        # \u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u6765\u5904\u7406\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\n        FileTransferHandler(client).start()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u5ba2\u6237\u7aef\u4ee3\u7801\uff1a</p> <pre><code>from socket import socket\nfrom json import loads\nfrom base64 import b64decode\n\n\ndef main():\n    client = socket()\n    client.connect(('192.168.1.2', 5566))\n    # \u5b9a\u4e49\u4e00\u4e2a\u4fdd\u5b58\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u5bf9\u8c61\n    in_data = bytes()\n    # \u7531\u4e8e\u4e0d\u77e5\u9053\u670d\u52a1\u5668\u53d1\u9001\u7684\u6570\u636e\u6709\u591a\u5927\u6bcf\u6b21\u63a5\u65361024\u5b57\u8282\n    data = client.recv(1024)\n    while data:\n        # \u5c06\u6536\u5230\u7684\u6570\u636e\u62fc\u63a5\u8d77\u6765\n        in_data += data\n        data = client.recv(1024)\n    # \u5c06\u6536\u5230\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u89e3\u7801\u6210JSON\u5b57\u7b26\u4e32\u5e76\u8f6c\u6362\u6210\u5b57\u5178\n    # loads\u51fd\u6570\u7684\u4f5c\u7528\u5c31\u662f\u5c06JSON\u5b57\u7b26\u4e32\u8f6c\u6210\u5b57\u5178\u5bf9\u8c61\n    my_dict = loads(in_data.decode('utf-8'))\n    filename = my_dict['filename']\n    filedata = my_dict['filedata'].encode('utf-8')\n    with open('/Users/Hao/' + filename, 'wb') as f:\n        # \u5c06base64\u683c\u5f0f\u7684\u6570\u636e\u89e3\u7801\u6210\u4e8c\u8fdb\u5236\u6570\u636e\u5e76\u5199\u5165\u6587\u4ef6\n        f.write(b64decode(filedata))\n    print('\u56fe\u7247\u5df2\u4fdd\u5b58.')\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86JSON\u4f5c\u4e3a\u6570\u636e\u4f20\u8f93\u7684\u683c\u5f0f\uff08\u901a\u8fc7JSON\u683c\u5f0f\u5bf9\u4f20\u8f93\u7684\u6570\u636e\u8fdb\u884c\u4e86\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\u64cd\u4f5c\uff09\uff0c\u4f46\u662fJSON\u5e76\u4e0d\u80fd\u643a\u5e26\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u56e0\u6b64\u5bf9\u56fe\u7247\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u8fdb\u884c\u4e86Base64\u7f16\u7801\u7684\u5904\u7406\u3002Base64\u662f\u4e00\u79cd\u752864\u4e2a\u5b57\u7b26\u8868\u793a\u6240\u6709\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u7f16\u7801\u65b9\u5f0f\uff0c\u901a\u8fc7\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u6bcf6\u4f4d\u4e00\u7ec4\u7684\u65b9\u5f0f\u91cd\u65b0\u7ec4\u7ec7\uff0c\u521a\u597d\u53ef\u4ee5\u4f7f\u75280~9\u7684\u6570\u5b57\u3001\u5927\u5c0f\u5199\u5b57\u6bcd\u4ee5\u53ca\u201c+\u201d\u548c\u201c/\u201d\u603b\u517164\u4e2a\u5b57\u7b26\u8868\u793a\u4ece<code>000000</code>\u5230<code>111111</code>\u768464\u79cd\u72b6\u6001\u3002\u7ef4\u57fa\u767e\u79d1\u4e0a\u6709\u5173\u4e8eBase64\u7f16\u7801\u7684\u8be6\u7ec6\u8bb2\u89e3\uff0c\u4e0d\u719f\u6089Base64\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u3002</p> <p>\u8bf4\u660e\uff1a \u4e0a\u9762\u7684\u4ee3\u7801\u4e3b\u8981\u4e3a\u4e86\u8bb2\u89e3\u7f51\u7edc\u7f16\u7a0b\u7684\u76f8\u5173\u5185\u5bb9\u56e0\u6b64\u5e76\u6ca1\u6709\u5bf9\u5f02\u5e38\u72b6\u51b5\u8fdb\u884c\u5904\u7406\uff0c\u8bf7\u8bfb\u8005\u81ea\u884c\u6dfb\u52a0\u5f02\u5e38\u5904\u7406\u4ee3\u7801\u6765\u589e\u5f3a\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#udp","title":"UDP\u5957\u63a5\u5b57","text":"<p>\u4f20\u8f93\u5c42\u9664\u4e86\u6709\u53ef\u9760\u7684\u4f20\u8f93\u534f\u8baeTCP\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u975e\u5e38\u8f7b\u4fbf\u7684\u4f20\u8f93\u534f\u8bae\u53eb\u505a\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff0c\u7b80\u79f0UDP\u3002TCP\u548cUDP\u90fd\u662f\u63d0\u4f9b\u7aef\u5230\u7aef\u4f20\u8f93\u670d\u52a1\u7684\u534f\u8bae\uff0c\u4e8c\u8005\u7684\u5dee\u522b\u5c31\u5982\u540c\u6253\u7535\u8bdd\u548c\u53d1\u77ed\u4fe1\u7684\u533a\u522b\uff0c\u540e\u8005\u4e0d\u5bf9\u4f20\u8f93\u7684\u53ef\u9760\u6027\u548c\u53ef\u8fbe\u6027\u505a\u51fa\u4efb\u4f55\u627f\u8bfa\u4ece\u800c\u907f\u514d\u4e86TCP\u4e2d\u63e1\u624b\u548c\u91cd\u4f20\u7684\u5f00\u9500\uff0c\u6240\u4ee5\u5728\u5f3a\u8c03\u6027\u80fd\u548c\u800c\u4e0d\u662f\u6570\u636e\u5b8c\u6574\u6027\u7684\u573a\u666f\u4e2d\uff08\u4f8b\u5982\u4f20\u8f93\u7f51\u7edc\u97f3\u89c6\u9891\u6570\u636e\uff09\uff0cUDP\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002\u53ef\u80fd\u5927\u5bb6\u4f1a\u6ce8\u610f\u5230\u4e00\u4e2a\u73b0\u8c61\uff0c\u5c31\u662f\u5728\u89c2\u770b\u7f51\u7edc\u89c6\u9891\u65f6\uff0c\u6709\u65f6\u4f1a\u51fa\u73b0\u5361\u987f\uff0c\u6709\u65f6\u4f1a\u51fa\u73b0\u82b1\u5c4f\uff0c\u8fd9\u65e0\u975e\u5c31\u662f\u90e8\u5206\u6570\u636e\u4f20\u4e22\u6216\u4f20\u9519\u9020\u6210\u7684\u3002\u5728Python\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528UDP\u5957\u63a5\u5b57\u6765\u521b\u5efa\u7f51\u7edc\u5e94\u7528\uff0c\u5bf9\u6b64\u6211\u4eec\u4e0d\u8fdb\u884c\u8d58\u8ff0\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#_6","title":"\u7f51\u7edc\u5e94\u7528\u5f00\u53d1","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#_7","title":"\u53d1\u9001\u7535\u5b50\u90ae\u4ef6","text":"<p>\u5728\u5373\u65f6\u901a\u4fe1\u8f6f\u4ef6\u5982\u6b64\u53d1\u8fbe\u7684\u4eca\u5929\uff0c\u7535\u5b50\u90ae\u4ef6\u4ecd\u7136\u662f\u4e92\u8054\u7f51\u4e0a\u4f7f\u7528\u6700\u4e3a\u5e7f\u6cdb\u7684\u5e94\u7528\u4e4b\u4e00\uff0c\u516c\u53f8\u5411\u5e94\u8058\u8005\u53d1\u51fa\u5f55\u7528\u901a\u77e5\u3001\u7f51\u7ad9\u5411\u7528\u6237\u53d1\u9001\u4e00\u4e2a\u6fc0\u6d3b\u8d26\u53f7\u7684\u94fe\u63a5\u3001\u94f6\u884c\u5411\u5ba2\u6237\u63a8\u5e7f\u5b83\u4eec\u7684\u7406\u8d22\u4ea7\u54c1\u7b49\u51e0\u4e4e\u90fd\u662f\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u6765\u5b8c\u6210\u7684\uff0c\u800c\u8fd9\u4e9b\u4efb\u52a1\u5e94\u8be5\u90fd\u662f\u7531\u7a0b\u5e8f\u81ea\u52a8\u5b8c\u6210\u7684\u3002</p> <p>\u5c31\u50cf\u6211\u4eec\u53ef\u4ee5\u7528HTTP\uff08\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09\u6765\u8bbf\u95ee\u4e00\u4e2a\u7f51\u7ad9\u4e00\u6837\uff0c\u53d1\u9001\u90ae\u4ef6\u8981\u4f7f\u7528SMTP\uff08\u7b80\u5355\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\uff0cSMTP\u4e5f\u662f\u4e00\u4e2a\u5efa\u7acb\u5728TCP\uff08\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u63d0\u4f9b\u7684\u53ef\u9760\u6570\u636e\u4f20\u8f93\u670d\u52a1\u7684\u57fa\u7840\u4e0a\u7684\u5e94\u7528\u7ea7\u534f\u8bae\uff0c\u5b83\u89c4\u5b9a\u4e86\u90ae\u4ef6\u7684\u53d1\u9001\u8005\u5982\u4f55\u8ddf\u53d1\u9001\u90ae\u4ef6\u7684\u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\u7684\u7ec6\u8282\uff0c\u800cPython\u4e2d\u7684smtplib\u6a21\u5757\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u7b80\u5316\u6210\u4e86\u51e0\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u3002</p> <p>\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5728Python\u53d1\u9001\u90ae\u4ef6\u3002</p> <pre><code>from smtplib import SMTP\nfrom email.header import Header\nfrom email.mime.text import MIMEText\n\n\ndef main():\n    # \u8bf7\u81ea\u884c\u4fee\u6539\u4e0b\u9762\u7684\u90ae\u4ef6\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\n    sender = 'abcdefg@126.com'\n    receivers = ['uvwxyz@qq.com', 'uvwxyz@126.com']\n    message = MIMEText('\u7528Python\u53d1\u9001\u90ae\u4ef6\u7684\u793a\u4f8b\u4ee3\u7801.', 'plain', 'utf-8')\n    message['From'] = Header('\u738b\u5927\u9524', 'utf-8')\n    message['To'] = Header('\u9a86\u660a', 'utf-8')\n    message['Subject'] = Header('\u793a\u4f8b\u4ee3\u7801\u5b9e\u9a8c\u90ae\u4ef6', 'utf-8')\n    smtper = SMTP('smtp.126.com')\n    # \u8bf7\u81ea\u884c\u4fee\u6539\u4e0b\u9762\u7684\u767b\u5f55\u53e3\u4ee4\n    smtper.login(sender, 'secretpass')\n    smtper.sendmail(sender, receivers, message.as_string())\n    print('\u90ae\u4ef6\u53d1\u9001\u5b8c\u6210!')\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u5982\u679c\u8981\u53d1\u9001\u5e26\u6709\u9644\u4ef6\u7684\u90ae\u4ef6\uff0c\u90a3\u4e48\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u65b9\u5f0f\u8fdb\u884c\u64cd\u4f5c\u3002</p> <pre><code>from smtplib import SMTP\nfrom email.header import Header\nfrom email.mime.text import MIMEText\nfrom email.mime.image import MIMEImage\nfrom email.mime.multipart import MIMEMultipart\n\nimport urllib\n\n\ndef main():\n    # \u521b\u5efa\u4e00\u4e2a\u5e26\u9644\u4ef6\u7684\u90ae\u4ef6\u6d88\u606f\u5bf9\u8c61\n    message = MIMEMultipart()\n\n    # \u521b\u5efa\u6587\u672c\u5185\u5bb9\n    text_content = MIMEText('\u9644\u4ef6\u4e2d\u6709\u672c\u6708\u6570\u636e\u8bf7\u67e5\u6536', 'plain', 'utf-8')\n    message['Subject'] = Header('\u672c\u6708\u6570\u636e', 'utf-8')\n    # \u5c06\u6587\u672c\u5185\u5bb9\u6dfb\u52a0\u5230\u90ae\u4ef6\u6d88\u606f\u5bf9\u8c61\u4e2d\n    message.attach(text_content)\n\n    # \u8bfb\u53d6\u6587\u4ef6\u5e76\u5c06\u6587\u4ef6\u4f5c\u4e3a\u9644\u4ef6\u6dfb\u52a0\u5230\u90ae\u4ef6\u6d88\u606f\u5bf9\u8c61\u4e2d\n    with open('/Users/Hao/Desktop/hello.txt', 'rb') as f:\n        txt = MIMEText(f.read(), 'base64', 'utf-8')\n        txt['Content-Type'] = 'text/plain'\n        txt['Content-Disposition'] = 'attachment; filename=hello.txt'\n        message.attach(txt)\n    # \u8bfb\u53d6\u6587\u4ef6\u5e76\u5c06\u6587\u4ef6\u4f5c\u4e3a\u9644\u4ef6\u6dfb\u52a0\u5230\u90ae\u4ef6\u6d88\u606f\u5bf9\u8c61\u4e2d\n    with open('/Users/Hao/Desktop/\u6c47\u603b\u6570\u636e.xlsx', 'rb') as f:\n        xls = MIMEText(f.read(), 'base64', 'utf-8')\n        xls['Content-Type'] = 'application/vnd.ms-excel'\n        xls['Content-Disposition'] = 'attachment; filename=month-data.xlsx'\n        message.attach(xls)\n\n    # \u521b\u5efaSMTP\u5bf9\u8c61\n    smtper = SMTP('smtp.126.com')\n    # \u5f00\u542f\u5b89\u5168\u8fde\u63a5\n    # smtper.starttls()\n    sender = 'abcdefg@126.com'\n    receivers = ['uvwxyz@qq.com']\n    # \u767b\u5f55\u5230SMTP\u670d\u52a1\u5668\n    # \u8bf7\u6ce8\u610f\u6b64\u5904\u4e0d\u662f\u4f7f\u7528\u5bc6\u7801\u800c\u662f\u90ae\u4ef6\u5ba2\u6237\u7aef\u6388\u6743\u7801\u8fdb\u884c\u767b\u5f55\n    # \u5bf9\u6b64\u6709\u7591\u95ee\u7684\u8bfb\u8005\u53ef\u4ee5\u8054\u7cfb\u81ea\u5df1\u4f7f\u7528\u7684\u90ae\u4ef6\u670d\u52a1\u5668\u5ba2\u670d\n    smtper.login(sender, 'secretpass')\n    # \u53d1\u9001\u90ae\u4ef6\n    smtper.sendmail(sender, receivers, message.as_string())\n    # \u4e0e\u90ae\u4ef6\u670d\u52a1\u5668\u65ad\u5f00\u8fde\u63a5\n    smtper.quit()\n    print('\u53d1\u9001\u5b8c\u6210!')\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/#_8","title":"\u53d1\u9001\u77ed\u4fe1","text":"<p>\u53d1\u9001\u77ed\u4fe1\u4e5f\u662f\u9879\u76ee\u4e2d\u5e38\u89c1\u7684\u529f\u80fd\uff0c\u7f51\u7ad9\u7684\u6ce8\u518c\u7801\u3001\u9a8c\u8bc1\u7801\u3001\u8425\u9500\u4fe1\u606f\u57fa\u672c\u4e0a\u90fd\u662f\u901a\u8fc7\u77ed\u4fe1\u6765\u53d1\u9001\u7ed9\u7528\u6237\u7684\u3002\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u4f7f\u7528\u4e86\u4e92\u4ebf\u65e0\u7ebf\u77ed\u4fe1\u5e73\u53f0\uff08\u8be5\u5e73\u53f0\u4e3a\u6ce8\u518c\u7528\u6237\u63d0\u4f9b\u4e8650\u6761\u514d\u8d39\u77ed\u4fe1\u4ee5\u53ca\u5e38\u7528\u5f00\u53d1\u8bed\u8a00\u53d1\u9001\u77ed\u4fe1\u7684demo\uff0c\u53ef\u4ee5\u767b\u5f55\u8be5\u7f51\u7ad9\u5e76\u5728\u7528\u6237\u81ea\u670d\u52a1\u9875\u9762\u4e2d\u5bf9\u77ed\u4fe1\u8fdb\u884c\u914d\u7f6e\uff09\u63d0\u4f9b\u7684API\u63a5\u53e3\u5b9e\u73b0\u4e86\u53d1\u9001\u77ed\u4fe1\u7684\u670d\u52a1\uff0c\u5f53\u7136\u56fd\u5185\u7684\u77ed\u4fe1\u5e73\u53f0\u5f88\u591a\uff0c\u8bfb\u8005\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u8fdb\u884c\u9009\u62e9\uff08\u901a\u5e38\u4f1a\u8003\u8651\u8d39\u7528\u9884\u7b97\u3001\u77ed\u4fe1\u8fbe\u5230\u7387\u3001\u4f7f\u7528\u7684\u96be\u6613\u7a0b\u5ea6\u7b49\u6307\u6807\uff09\uff0c\u5982\u679c\u9700\u8981\u5728\u5546\u4e1a\u9879\u76ee\u4e2d\u4f7f\u7528\u77ed\u4fe1\u670d\u52a1\u5efa\u8bae\u8d2d\u4e70\u77ed\u4fe1\u5e73\u53f0\u63d0\u4f9b\u7684\u5957\u9910\u670d\u52a1\u3002</p> <pre><code>import urllib.parse\nimport http.client\nimport json\n\n\ndef main():\n    host  = \"106.ihuyi.com\"\n    sms_send_uri = \"/webservice/sms.php?method=Submit\"\n    # \u4e0b\u9762\u7684\u53c2\u6570\u9700\u8981\u586b\u5165\u81ea\u5df1\u6ce8\u518c\u7684\u8d26\u53f7\u548c\u5bf9\u5e94\u7684\u5bc6\u7801\n    params = urllib.parse.urlencode({'account': '\u4f60\u81ea\u5df1\u7684\u8d26\u53f7', 'password' : '\u4f60\u81ea\u5df1\u7684\u5bc6\u7801', 'content': '\u60a8\u7684\u9a8c\u8bc1\u7801\u662f\uff1a147258\u3002\u8bf7\u4e0d\u8981\u628a\u9a8c\u8bc1\u7801\u6cc4\u9732\u7ed9\u5176\u4ed6\u4eba\u3002', 'mobile': '\u63a5\u6536\u8005\u7684\u624b\u673a\u53f7', 'format':'json' })\n    print(params)\n    headers = {'Content-type': 'application/x-www-form-urlencoded', 'Accept': 'text/plain'}\n    conn = http.client.HTTPConnection(host, port=80, timeout=30)\n    conn.request('POST', sms_send_uri, params, headers)\n    response = conn.getresponse()\n    response_str = response.read()\n    jsonstr = response_str.decode('utf-8')\n    print(json.loads(jsonstr))\n    conn.close()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/15.%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/","title":"15.\u56fe\u50cf\u548c\u529e\u516c\u6587\u6863\u5904\u7406","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/15.%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/#_1","title":"\u56fe\u50cf\u548c\u529e\u516c\u6587\u6863\u5904\u7406","text":"<p>\u7528\u7a0b\u5e8f\u6765\u5904\u7406\u56fe\u50cf\u548c\u529e\u516c\u6587\u6863\u7ecf\u5e38\u51fa\u73b0\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0cPython\u7684\u6807\u51c6\u5e93\u4e2d\u867d\u7136\u6ca1\u6709\u76f4\u63a5\u652f\u6301\u8fd9\u4e9b\u64cd\u4f5c\u7684\u6a21\u5757\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Python\u751f\u6001\u5708\u4e2d\u7684\u7b2c\u4e09\u65b9\u6a21\u5757\u6765\u5b8c\u6210\u8fd9\u4e9b\u64cd\u4f5c\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/15.%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/#_2","title":"\u64cd\u4f5c\u56fe\u50cf","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/15.%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/#_3","title":"\u8ba1\u7b97\u673a\u56fe\u50cf\u76f8\u5173\u77e5\u8bc6","text":"<ol> <li> <p>\u989c\u8272\u3002\u5982\u679c\u4f60\u6709\u4f7f\u7528\u989c\u6599\u753b\u753b\u7684\u7ecf\u5386\uff0c\u90a3\u4e48\u4e00\u5b9a\u77e5\u9053\u6df7\u5408\u7ea2\u3001\u9ec4\u3001\u84dd\u4e09\u79cd\u989c\u6599\u53ef\u4ee5\u5f97\u5230\u5176\u4ed6\u7684\u989c\u8272\uff0c\u4e8b\u5b9e\u4e0a\u8fd9\u4e09\u79cd\u989c\u8272\u5c31\u662f\u88ab\u6211\u4eec\u79f0\u4e3a\u7f8e\u672f\u4e09\u539f\u8272\u7684\u4e1c\u897f\uff0c\u5b83\u4eec\u662f\u4e0d\u80fd\u518d\u5206\u89e3\u7684\u57fa\u672c\u989c\u8272\u3002\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7ea2\u3001\u7eff\u3001\u84dd\u4e09\u79cd\u8272\u5149\u4ee5\u4e0d\u540c\u7684\u6bd4\u4f8b\u53e0\u52a0\u6765\u7ec4\u5408\u6210\u5176\u4ed6\u7684\u989c\u8272\uff0c\u56e0\u6b64\u8fd9\u4e09\u79cd\u989c\u8272\u5c31\u662f\u8272\u5149\u4e09\u539f\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u5e38\u4f1a\u5c06\u4e00\u4e2a\u989c\u8272\u8868\u793a\u4e3a\u4e00\u4e2aRGB\u503c\u6216RGBA\u503c\uff08\u5176\u4e2d\u7684A\u8868\u793aAlpha\u901a\u9053\uff0c\u5b83\u51b3\u5b9a\u4e86\u900f\u8fc7\u8fd9\u4e2a\u56fe\u50cf\u7684\u50cf\u7d20\uff0c\u4e5f\u5c31\u662f\u900f\u660e\u5ea6\uff09\u3002</p> \u540d\u79f0 RGBA\u503c \u540d\u79f0 RGBA\u503c White (255, 255, 255, 255) Red (255, 0, 0, 255) Green (0, 255, 0, 255) Blue (0, 0, 255, 255) Gray (128, 128, 128, 255) Yellow (255, 255, 0, 255) Black (0, 0, 0, 255) Purple (128, 0, 128, 255) </li> <li> <p>\u50cf\u7d20\u3002\u5bf9\u4e8e\u4e00\u4e2a\u7531\u6570\u5b57\u5e8f\u5217\u8868\u793a\u7684\u56fe\u50cf\u6765\u8bf4\uff0c\u6700\u5c0f\u7684\u5355\u4f4d\u5c31\u662f\u56fe\u50cf\u4e0a\u5355\u4e00\u989c\u8272\u7684\u5c0f\u65b9\u683c\uff0c\u8fd9\u4e9b\u5c0f\u65b9\u5757\u90fd\u6709\u4e00\u4e2a\u660e\u786e\u7684\u4f4d\u7f6e\u548c\u88ab\u5206\u914d\u7684\u8272\u5f69\u6570\u503c\uff0c\u800c\u8fd9\u4e9b\u4e00\u5c0f\u65b9\u683c\u7684\u989c\u8272\u548c\u4f4d\u7f6e\u51b3\u5b9a\u4e86\u8be5\u56fe\u50cf\u6700\u7ec8\u5448\u73b0\u51fa\u6765\u7684\u6837\u5b50\uff0c\u5b83\u4eec\u662f\u4e0d\u53ef\u5206\u5272\u7684\u5355\u4f4d\uff0c\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\u50cf\u7d20\uff08pixel\uff09\u3002\u6bcf\u4e00\u4e2a\u56fe\u50cf\u90fd\u5305\u542b\u4e86\u4e00\u5b9a\u91cf\u7684\u50cf\u7d20\uff0c\u8fd9\u4e9b\u50cf\u7d20\u51b3\u5b9a\u56fe\u50cf\u5728\u5c4f\u5e55\u4e0a\u6240\u5448\u73b0\u7684\u5927\u5c0f\u3002</p> </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/15.%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/#pillow","title":"\u7528Pillow\u64cd\u4f5c\u56fe\u50cf","text":"<p>Pillow\u662f\u7531\u4ece\u8457\u540d\u7684Python\u56fe\u50cf\u5904\u7406\u5e93PIL\u53d1\u5c55\u51fa\u6765\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u901a\u8fc7Pillow\u53ef\u4ee5\u5b9e\u73b0\u56fe\u50cf\u538b\u7f29\u548c\u56fe\u50cf\u5904\u7406\u7b49\u5404\u79cd\u64cd\u4f5c\u3002\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5b89\u88c5Pillow\u3002</p> <pre><code>pip install pillow\n</code></pre> <p>Pillow\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u662fImage\u7c7b\uff0c\u8bfb\u53d6\u548c\u5904\u7406\u56fe\u50cf\u90fd\u8981\u901a\u8fc7\u8fd9\u4e2a\u7c7b\u6765\u5b8c\u6210\u3002</p> <pre><code>&gt;&gt;&gt; from PIL import Image\n&gt;&gt;&gt;\n&gt;&gt;&gt; image = Image.open('../../../../img/res/guido.jpg')\n&gt;&gt;&gt; image.format, image.size, image.mode\n('JPEG', (500, 750), 'RGB')\n&gt;&gt;&gt; image.show()\n</code></pre> <p></p> <ol> <li> <p>\u526a\u88c1\u56fe\u50cf</p> <pre><code>&gt;&gt;&gt; image = Image.open('../../../../img/res/guido.jpg')\n&gt;&gt;&gt; rect = 80, 20, 310, 360\n&gt;&gt;&gt; image.crop(rect).show()\n</code></pre> <p></p> </li> <li> <p>\u751f\u6210\u7f29\u7565\u56fe</p> <pre><code>&gt;&gt;&gt; image = Image.open('../../../../img/res/guido.jpg')\n&gt;&gt;&gt; size = 128, 128\n&gt;&gt;&gt; image.thumbnail(size)\n&gt;&gt;&gt; image.show()\n</code></pre> <p></p> </li> <li> <p>\u7f29\u653e\u548c\u9ecf\u8d34\u56fe\u50cf</p> <pre><code>&gt;&gt;&gt; image1 = Image.open('../../../../img/res/luohao.png')\n&gt;&gt;&gt; image2 = Image.open('../../../../img/res/guido.jpg')\n&gt;&gt;&gt; rect = 80, 20, 310, 360\n&gt;&gt;&gt; guido_head = image2.crop(rect)\n&gt;&gt;&gt; width, height = guido_head.size\n&gt;&gt;&gt; image1.paste(guido_head.resize((int(width / 1.5), int(height / 1.5))), (172, 40))\n</code></pre> <p></p> </li> <li> <p>\u65cb\u8f6c\u548c\u7ffb\u8f6c</p> <pre><code>&gt;&gt;&gt; image = Image.open('../../../../img/res/guido.png')\n&gt;&gt;&gt; image.rotate(180).show()\n&gt;&gt;&gt; image.transpose(Image.FLIP_LEFT_RIGHT).show()\n</code></pre> <p></p> <p></p> </li> <li> <p>\u64cd\u4f5c\u50cf\u7d20</p> <pre><code>&gt;&gt;&gt; image = Image.open('../../../../img/res/guido.jpg')\n&gt;&gt;&gt; for x in range(80, 310):\n...     for y in range(20, 360):\n...         image.putpixel((x, y), (128, 128, 128))\n... \n&gt;&gt;&gt; image.show()\n</code></pre> <p></p> </li> <li> <p>\u6ee4\u955c\u6548\u679c</p> <pre><code>&gt;&gt;&gt; from PIL import Image, ImageFilter\n&gt;&gt;&gt;\n&gt;&gt;&gt; image = Image.open('../../../../img/res/guido.jpg')\n&gt;&gt;&gt; image.filter(ImageFilter.CONTOUR).show()\n</code></pre> <p></p> </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/15.%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/#excel","title":"\u5904\u7406Excel\u7535\u5b50\u8868\u683c","text":"<p>Python\u7684openpyxl\u6a21\u5757\u8ba9\u6211\u4eec\u53ef\u4ee5\u5728Python\u7a0b\u5e8f\u4e2d\u8bfb\u53d6\u548c\u4fee\u6539Excel\u7535\u5b50\u8868\u683c\uff0c\u7531\u4e8e\u5fae\u8f6f\u4eceOffice 2007\u5f00\u59cb\u4f7f\u7528\u4e86\u65b0\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u8fd9\u4f7f\u5f97Office Excel\u548cLibreOffice Calc\u3001OpenOffice Calc\u662f\u5b8c\u5168\u517c\u5bb9\u7684\uff0c\u8fd9\u5c31\u610f\u5473\u7740openpyxl\u6a21\u5757\u4e5f\u80fd\u5904\u7406\u6765\u81ea\u8fd9\u4e9b\u8f6f\u4ef6\u751f\u6210\u7684\u7535\u5b50\u8868\u683c\u3002</p> <pre><code>import datetime\n\nfrom openpyxl import Workbook\n\nwb = Workbook()\nws = wb.active\n\nws['A1'] = 42\nws.append([1, 2, 3])\nws['A2'] = datetime.datetime.now()\n\nwb.save(\"sample.xlsx\")\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/PythonBasic/15.%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/#word","title":"\u5904\u7406Word\u6587\u6863","text":"<p>\u5229\u7528python-docx\u6a21\u5757\uff0cPython\u53ef\u4ee5\u521b\u5efa\u548c\u4fee\u6539Word\u6587\u6863\uff0c\u5f53\u7136\u8fd9\u91cc\u7684Word\u6587\u6863\u4e0d\u4ec5\u4ec5\u662f\u6307\u901a\u8fc7\u5fae\u8f6f\u7684Office\u8f6f\u4ef6\u521b\u5efa\u7684\u6269\u5c55\u540d\u4e3adocx\u7684\u6587\u6863\uff0cLibreOffice Writer\u548cOpenOffice Writer\u90fd\u662f\u514d\u8d39\u7684\u5b57\u5904\u7406\u8f6f\u4ef6\u3002</p> <pre><code>from docx import Document\nfrom docx.shared import Inches\n\ndocument = Document()\n\ndocument.add_heading('Document Title', 0)\n\np = document.add_paragraph('A plain paragraph having some ')\np.add_run('bold').bold = True\np.add_run(' and some ')\np.add_run('italic.').italic = True\n\ndocument.add_heading('Heading, level 1', level=1)\ndocument.add_paragraph('Intense quote', style='Intense Quote')\n\ndocument.add_paragraph(\n    'first item in unordered list', style='List Bullet'\n)\ndocument.add_paragraph(\n    'first item in ordered list', style='List Number'\n)\n\ndocument.add_picture('monty-truth.png', width=Inches(1.25))\n\nrecords = (\n    (3, '101', 'Spam'),\n    (7, '422', 'Eggs'),\n    (4, '631', 'Spam, spam, eggs, and spam')\n)\n\ntable = document.add_table(rows=1, cols=3)\nhdr_cells = table.rows[0].cells\nhdr_cells[0].text = 'Qty'\nhdr_cells[1].text = 'Id'\nhdr_cells[2].text = 'Desc'\nfor qty, id, desc in records:\n    row_cells = table.add_row().cells\n    row_cells[0].text = str(qty)\n    row_cells[1].text = id\n    row_cells[2].text = desc\n\ndocument.add_page_break()\n\ndocument.save('demo.docx')\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/Python%E8%BF%9B%E9%98%B6/16.Python%E8%AF%AD%E8%A8%80%E8%BF%9B%E9%98%B6/","title":"16.Python\u8bed\u8a00\u8fdb\u9636","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/Python%E8%BF%9B%E9%98%B6/16.Python%E8%AF%AD%E8%A8%80%E8%BF%9B%E9%98%B6/#python","title":"Python\u8bed\u8a00\u8fdb\u9636","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/Python%E8%BF%9B%E9%98%B6/16.Python%E8%AF%AD%E8%A8%80%E8%BF%9B%E9%98%B6/#_1","title":"\u91cd\u8981\u77e5\u8bc6\u70b9","text":"<ul> <li>\u751f\u6210\u5f0f\uff08\u63a8\u5bfc\u5f0f\uff09\u7684\u7528\u6cd5</li> </ul> <pre><code>prices = {\n    'AAPL': 191.88,\n    'GOOG': 1186.96,\n    'IBM': 149.24,\n    'ORCL': 48.44,\n    'ACN': 166.89,\n    'FB': 208.09,\n    'SYMC': 21.29\n}\n# \u7528\u80a1\u7968\u4ef7\u683c\u5927\u4e8e100\u5143\u7684\u80a1\u7968\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u5b57\u5178\nprices2 = {key: value for key, value in prices.items() if value &gt; 100}\nprint(prices2)\n</code></pre> <p>\u8bf4\u660e\uff1a\u751f\u6210\u5f0f\uff08\u63a8\u5bfc\u5f0f\uff09\u53ef\u4ee5\u7528\u6765\u751f\u6210\u5217\u8868\u3001\u96c6\u5408\u548c\u5b57\u5178\u3002</p> <ul> <li>\u5d4c\u5957\u7684\u5217\u8868\u7684\u5751</li> </ul> <pre><code>names = ['\u5173\u7fbd', '\u5f20\u98de', '\u8d75\u4e91', '\u9a6c\u8d85', '\u9ec4\u5fe0']\ncourses = ['\u8bed\u6587', '\u6570\u5b66', '\u82f1\u8bed']\n# \u5f55\u5165\u4e94\u4e2a\u5b66\u751f\u4e09\u95e8\u8bfe\u7a0b\u7684\u6210\u7ee9\n# \u9519\u8bef - \u53c2\u8003http://pythontutor.com/visualize.html#mode=edit\n# scores = [[None] * len(courses)] * len(names)\n# \u4e0a\u9762\u8fd9\u79cd\u9519\u8bef\u5199\u6cd5\u5bfc\u81f4\u4e94\u4e2a\u4eba\u6bcf\u95e8\u79d1\u76ee\u6210\u7ee9\u90fd\u4e00\u6a21\u4e00\u6837\nscores = [[None] * len(courses) for _ in range(len(names))]\nfor row, name in enumerate(names):\n    for col, course in enumerate(courses):\n        scores[row][col] = float(input(f'\u8bf7\u8f93\u5165{name}\u7684{course}\u6210\u7ee9: '))\n        print(scores)\n</code></pre> <p>Python Tutor - VISUALIZE CODE AND GET LIVE HELP</p> <ul> <li><code>heapq</code>\u6a21\u5757\uff08\u5806\u6392\u5e8f\uff09</li> </ul> <pre><code>\"\"\"\n\u4ece\u5217\u8868\u4e2d\u627e\u51fa\u6700\u5927\u7684\u6216\u6700\u5c0f\u7684N\u4e2a\u5143\u7d20\n\u5806\u7ed3\u6784(\u5927\u6839\u5806/\u5c0f\u6839\u5806)\n\"\"\"\nimport heapq\n\nlist1 = [34, 25, 12, 99, 87, 63, 58, 78, 88, 92]\nlist2 = [\n    {'name': 'IBM', 'shares': 100, 'price': 91.1},\n    {'name': 'AAPL', 'shares': 50, 'price': 543.22},\n    {'name': 'FB', 'shares': 200, 'price': 21.09},\n    {'name': 'HPQ', 'shares': 35, 'price': 31.75},\n    {'name': 'YHOO', 'shares': 45, 'price': 16.35},\n    {'name': 'ACME', 'shares': 75, 'price': 115.65}\n]\nprint(heapq.nlargest(3, list1))\nprint(heapq.nsmallest(3, list1))\nprint(heapq.nlargest(2, list2, key=lambda x: x['price']))\nprint(heapq.nlargest(2, list2, key=lambda x: x['shares']))\n</code></pre> <ul> <li><code>itertools</code>\u6a21\u5757</li> </ul> <pre><code>\"\"\"\n\u8fed\u4ee3\u5de5\u5177\u6a21\u5757\n\"\"\"\nimport itertools\n\n# \u4ea7\u751fABCD\u7684\u5168\u6392\u5217\nitertools.permutations('ABCD')\n# \u4ea7\u751fABCDE\u7684\u4e94\u9009\u4e09\u7ec4\u5408\nitertools.combinations('ABCDE', 3)\n# \u4ea7\u751fABCD\u548c123\u7684\u7b1b\u5361\u5c14\u79ef\nitertools.product('ABCD', '123')\n# \u4ea7\u751fABC\u7684\u65e0\u9650\u5faa\u73af\u5e8f\u5217\nitertools.cycle(('A', 'B', 'C'))\n</code></pre> <ul> <li><code>collections</code>\u6a21\u5757</li> </ul> <p>\u5e38\u7528\u7684\u5de5\u5177\u7c7b\uff1a</p> <ul> <li><code>namedtuple</code>\uff1a\u547d\u4ee4\u5143\u7ec4\uff0c\u5b83\u662f\u4e00\u4e2a\u7c7b\u5de5\u5382\uff0c\u63a5\u53d7\u7c7b\u578b\u7684\u540d\u79f0\u548c\u5c5e\u6027\u5217\u8868\u6765\u521b\u5efa\u4e00\u4e2a\u7c7b\u3002</li> <li><code>deque</code>\uff1a\u53cc\u7aef\u961f\u5217\uff0c\u662f\u5217\u8868\u7684\u66ff\u4ee3\u5b9e\u73b0\u3002Python\u4e2d\u7684\u5217\u8868\u5e95\u5c42\u662f\u57fa\u4e8e\u6570\u7ec4\u6765\u5b9e\u73b0\u7684\uff0c\u800cdeque\u5e95\u5c42\u662f\u53cc\u5411\u94fe\u8868\uff0c\u56e0\u6b64\u5f53\u4f60\u9700\u8981\u5728\u5934\u5c3e\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\u65f6\uff0cdeque\u4f1a\u8868\u73b0\u51fa\u66f4\u597d\u7684\u6027\u80fd\uff0c\u6e10\u8fd1\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(1)\\)\u3002</li> <li><code>Counter</code>\uff1a<code>dict</code>\u7684\u5b50\u7c7b\uff0c\u952e\u662f\u5143\u7d20\uff0c\u503c\u662f\u5143\u7d20\u7684\u8ba1\u6570\uff0c\u5b83\u7684<code>most_common()</code>\u65b9\u6cd5\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u83b7\u53d6\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u5143\u7d20\u3002<code>Counter</code>\u548c<code>dict</code>\u7684\u7ee7\u627f\u5173\u7cfb\u6211\u8ba4\u4e3a\u662f\u503c\u5f97\u5546\u69b7\u7684\uff0c\u6309\u7167CARP\u539f\u5219\uff0c<code>Counter</code>\u8ddf<code>dict</code>\u7684\u5173\u7cfb\u5e94\u8be5\u8bbe\u8ba1\u4e3a\u5173\u8054\u5173\u7cfb\u66f4\u4e3a\u5408\u7406\u3002</li> <li><code>OrderedDict</code>\uff1a<code>dict</code>\u7684\u5b50\u7c7b\uff0c\u5b83\u8bb0\u5f55\u4e86\u952e\u503c\u5bf9\u63d2\u5165\u7684\u987a\u5e8f\uff0c\u770b\u8d77\u6765\u65e2\u6709\u5b57\u5178\u7684\u884c\u4e3a\uff0c\u4e5f\u6709\u94fe\u8868\u7684\u884c\u4e3a\u3002</li> <li><code>defaultdict</code>\uff1a\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7c7b\u578b\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u9ed8\u8ba4\u7684\u5de5\u5382\u51fd\u6570\u6765\u83b7\u5f97\u952e\u5bf9\u5e94\u7684\u9ed8\u8ba4\u503c\uff0c\u76f8\u6bd4\u5b57\u5178\u4e2d\u7684<code>setdefault()</code>\u65b9\u6cd5\uff0c\u8fd9\u79cd\u505a\u6cd5\u66f4\u52a0\u9ad8\u6548\u3002</li> </ul> <pre><code>\"\"\"\n\u627e\u51fa\u5e8f\u5217\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20\n\"\"\"\nfrom collections import Counter\n\nwords = [\n    'look', 'into', 'my', 'eyes', 'look', 'into', 'my', 'eyes',\n    'the', 'eyes', 'the', 'eyes', 'the', 'eyes', 'not', 'around',\n    'the', 'eyes', \"don't\", 'look', 'around', 'the', 'eyes',\n    'look', 'into', 'my', 'eyes', \"you're\", 'under'\n]\ncounter = Counter(words)\nprint(counter.most_common(3))\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/Python%E8%BF%9B%E9%98%B6/16.Python%E8%AF%AD%E8%A8%80%E8%BF%9B%E9%98%B6/#_2","title":"\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5","text":"<ul> <li> <p>\u7b97\u6cd5\uff1a\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u548c\u6b65\u9aa4</p> </li> <li> <p>\u8bc4\u4ef7\u7b97\u6cd5\u7684\u597d\u574f\uff1a\u6e10\u8fd1\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u6e10\u8fd1\u7a7a\u95f4\u590d\u6742\u5ea6\u3002</p> </li> <li> <p>\u6e10\u8fd1\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u5927O\u6807\u8bb0\uff1a</p> <ul> <li>\\(O(c)\\) - \u5e38\u91cf\u65f6\u95f4\u590d\u6742\u5ea6 - \u5e03\u9686\u8fc7\u6ee4\u5668 / \u54c8\u5e0c\u5b58\u50a8</li> <li>\\(O(log_2n)\\) - \u5bf9\u6570\u65f6\u95f4\u590d\u6742\u5ea6 - \u6298\u534a\u67e5\u627e\uff08\u4e8c\u5206\u67e5\u627e\uff09</li> <li>\\(O(n)\\) - \u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6 - \u987a\u5e8f\u67e5\u627e / \u8ba1\u6570\u6392\u5e8f</li> <li>\\(O(n*log_2n)\\) - \u5bf9\u6570\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6 - \u9ad8\u7ea7\u6392\u5e8f\u7b97\u6cd5\uff08\u5f52\u5e76\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\uff09</li> <li>\\(O(n^2)\\) - \u5e73\u65b9\u65f6\u95f4\u590d\u6742\u5ea6 - \u7b80\u5355\u6392\u5e8f\u7b97\u6cd5\uff08\u9009\u62e9\u6392\u5e8f\u3001\u63d2\u5165\u6392\u5e8f\u3001\u5192\u6ce1\u6392\u5e8f\uff09</li> <li>\\(O(n^3)\\) - \u7acb\u65b9\u65f6\u95f4\u590d\u6742\u5ea6 - Floyd\u7b97\u6cd5 / \u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97</li> <li>\\(O(2^n)\\) - \u51e0\u4f55\u7ea7\u6570\u65f6\u95f4\u590d\u6742\u5ea6 - \u6c49\u8bfa\u5854</li> <li>\\(O(n!)\\) - \u9636\u4e58\u65f6\u95f4\u590d\u6742\u5ea6 - \u65c5\u884c\u7ecf\u9500\u5546\u95ee\u9898 - NPC</li> </ul> </li> </ul> <p></p> <p></p> <ul> <li>\u6392\u5e8f\u7b97\u6cd5\uff08\u9009\u62e9\u3001\u5192\u6ce1\u548c\u5f52\u5e76\uff09\u548c\u67e5\u627e\u7b97\u6cd5\uff08\u987a\u5e8f\u548c\u6298\u534a\uff09</li> </ul> <pre><code>def select_sort(items, comp=lambda x, y: x &lt; y):\n    \"\"\"\u7b80\u5355\u9009\u62e9\u6392\u5e8f\"\"\"\n    items = items[:]\n    for i in range(len(items) - 1):\n        min_index = i\n        for j in range(i + 1, len(items)):\n            if comp(items[j], items[min_index]):\n                min_index = j\n        items[i], items[min_index] = items[min_index], items[i]\n    return items\n</code></pre> <pre><code>def bubble_sort(items, comp=lambda x, y: x &gt; y):\n    \"\"\"\u5192\u6ce1\u6392\u5e8f\"\"\"\n    items = items[:]\n    for i in range(len(items) - 1):\n        swapped = False\n        for j in range(len(items) - 1 - i):\n            if comp(items[j], items[j + 1]):\n                items[j], items[j + 1] = items[j + 1], items[j]\n                swapped = True\n        if not swapped:\n            break\n    return items\n</code></pre> <pre><code>def bubble_sort(items, comp=lambda x, y: x &gt; y):\n    \"\"\"\u6405\u62cc\u6392\u5e8f(\u5192\u6ce1\u6392\u5e8f\u5347\u7ea7\u7248)\"\"\"\n    items = items[:]\n    for i in range(len(items) - 1):\n        swapped = False\n        for j in range(len(items) - 1 - i):\n            if comp(items[j], items[j + 1]):\n                items[j], items[j + 1] = items[j + 1], items[j]\n                swapped = True\n        if swapped:\n            swapped = False\n            for j in range(len(items) - 2 - i, i, -1):\n                if comp(items[j - 1], items[j]):\n                    items[j], items[j - 1] = items[j - 1], items[j]\n                    swapped = True\n        if not swapped:\n            break\n    return items\n</code></pre> <pre><code>def merge(items1, items2, comp=lambda x, y: x &lt; y):\n    \"\"\"\u5408\u5e76(\u5c06\u4e24\u4e2a\u6709\u5e8f\u7684\u5217\u8868\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u7684\u5217\u8868)\"\"\"\n    items = []\n    index1, index2 = 0, 0\n    while index1 &lt; len(items1) and index2 &lt; len(items2):\n        if comp(items1[index1], items2[index2]):\n            items.append(items1[index1])\n            index1 += 1\n        else:\n            items.append(items2[index2])\n            index2 += 1\n    items += items1[index1:]\n    items += items2[index2:]\n    return items\n\n\ndef merge_sort(items, comp=lambda x, y: x &lt; y):\n    return _merge_sort(list(items), comp)\n\n\ndef _merge_sort(items, comp):\n    \"\"\"\u5f52\u5e76\u6392\u5e8f\"\"\"\n    if len(items) &lt; 2:\n        return items\n    mid = len(items) // 2\n    left = _merge_sort(items[:mid], comp)\n    right = _merge_sort(items[mid:], comp)\n    return merge(left, right, comp)\n</code></pre> <pre><code>def seq_search(items, key):\n    \"\"\"\u987a\u5e8f\u67e5\u627e\"\"\"\n    for index, item in enumerate(items):\n        if item == key:\n            return index\n    return -1\n</code></pre> <pre><code>def bin_search(items, key):\n    \"\"\"\u6298\u534a\u67e5\u627e\"\"\"\n    start, end = 0, len(items) - 1\n    while start &lt;= end:\n        mid = (start + end) // 2\n        if key &gt; items[mid]:\n            start = mid + 1\n        elif key &lt; items[mid]:\n            end = mid - 1\n        else:\n            return mid\n    return -1\n</code></pre> <ul> <li> <p>\u5e38\u7528\u7b97\u6cd5\uff1a</p> <ul> <li>\u7a77\u4e3e\u6cd5 - \u53c8\u79f0\u4e3a\u66b4\u529b\u7834\u89e3\u6cd5\uff0c\u5bf9\u6240\u6709\u7684\u53ef\u80fd\u6027\u8fdb\u884c\u9a8c\u8bc1\uff0c\u76f4\u5230\u627e\u5230\u6b63\u786e\u7b54\u6848\u3002</li> <li>\u8d2a\u5a6a\u6cd5 - \u5728\u5bf9\u95ee\u9898\u6c42\u89e3\u65f6\uff0c\u603b\u662f\u505a\u51fa\u5728\u5f53\u524d\u770b\u6765\u6700\u597d\u7684\u9009\u62e9\uff0c\u4e0d\u8ffd\u6c42\u6700\u4f18\u89e3\uff0c\u5feb\u901f\u627e\u5230\u6ee1\u610f\u89e3\u3002</li> <li>\u5206\u6cbb\u6cd5 - \u628a\u4e00\u4e2a\u590d\u6742\u7684\u95ee\u9898\u5206\u6210\u4e24\u4e2a\u6216\u66f4\u591a\u7684\u76f8\u540c\u6216\u76f8\u4f3c\u7684\u5b50\u95ee\u9898\uff0c\u518d\u628a\u5b50\u95ee\u9898\u5206\u6210\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\uff0c\u76f4\u5230\u53ef\u4ee5\u76f4\u63a5\u6c42\u89e3\u7684\u7a0b\u5ea6\uff0c\u6700\u540e\u5c06\u5b50\u95ee\u9898\u7684\u89e3\u8fdb\u884c\u5408\u5e76\u5f97\u5230\u539f\u95ee\u9898\u7684\u89e3\u3002</li> <li>\u56de\u6eaf\u6cd5 - \u56de\u6eaf\u6cd5\u53c8\u79f0\u4e3a\u8bd5\u63a2\u6cd5\uff0c\u6309\u9009\u4f18\u6761\u4ef6\u5411\u524d\u641c\u7d22\uff0c\u5f53\u641c\u7d22\u5230\u67d0\u4e00\u6b65\u53d1\u73b0\u539f\u5148\u9009\u62e9\u5e76\u4e0d\u4f18\u6216\u8fbe\u4e0d\u5230\u76ee\u6807\u65f6\uff0c\u5c31\u9000\u56de\u4e00\u6b65\u91cd\u65b0\u9009\u62e9\u3002</li> <li>\u52a8\u6001\u89c4\u5212 - \u57fa\u672c\u601d\u60f3\u4e5f\u662f\u5c06\u5f85\u6c42\u89e3\u95ee\u9898\u5206\u89e3\u6210\u82e5\u5e72\u4e2a\u5b50\u95ee\u9898\uff0c\u5148\u6c42\u89e3\u5e76\u4fdd\u5b58\u8fd9\u4e9b\u5b50\u95ee\u9898\u7684\u89e3\uff0c\u907f\u514d\u4ea7\u751f\u5927\u91cf\u7684\u91cd\u590d\u8fd0\u7b97\u3002</li> </ul> </li> </ul> <p>\u7a77\u4e3e\u6cd5\u4f8b\u5b50\uff1a\u767e\u94b1\u767e\u9e21\u548c\u4e94\u4eba\u5206\u9c7c\u3002</p> <pre><code># \u516c\u9e215\u5143\u4e00\u53ea \u6bcd\u9e213\u5143\u4e00\u53ea \u5c0f\u9e211\u5143\u4e09\u53ea\n# \u7528100\u5143\u4e70100\u53ea\u9e21 \u95ee\u516c\u9e21/\u6bcd\u9e21/\u5c0f\u9e21\u5404\u591a\u5c11\u53ea\nfor x in range(20):\n    for y in range(33):\n        z = 100 - x - y\n        if 5 * x + 3 * y + z // 3 == 100 and z % 3 == 0:\n            print(x, y, z)\n\n# A\u3001B\u3001C\u3001D\u3001E\u4e94\u4eba\u5728\u67d0\u5929\u591c\u91cc\u5408\u4f19\u6355\u9c7c \u6700\u540e\u75b2\u60eb\u4e0d\u582a\u5404\u81ea\u7761\u89c9\n# \u7b2c\u4e8c\u5929A\u7b2c\u4e00\u4e2a\u9192\u6765 \u4ed6\u5c06\u9c7c\u5206\u4e3a5\u4efd \u6254\u6389\u591a\u4f59\u76841\u6761 \u62ff\u8d70\u81ea\u5df1\u7684\u4e00\u4efd\n# B\u7b2c\u4e8c\u4e2a\u9192\u6765 \u4e5f\u5c06\u9c7c\u5206\u4e3a5\u4efd \u6254\u6389\u591a\u4f59\u76841\u6761 \u62ff\u8d70\u81ea\u5df1\u7684\u4e00\u4efd\n# \u7136\u540eC\u3001D\u3001E\u4f9d\u6b21\u9192\u6765\u4e5f\u6309\u540c\u6837\u7684\u65b9\u5f0f\u5206\u9c7c \u95ee\u4ed6\u4eec\u81f3\u5c11\u6355\u4e86\u591a\u5c11\u6761\u9c7c\nfish = 6\nwhile True:\n    total = fish\n    enough = True\n    for _ in range(5):\n        if (total - 1) % 5 == 0:\n            total = (total - 1) // 5 * 4\n        else:\n            enough = False\n            break\n    if enough:\n        print(fish)\n        break\n    fish += 5\n</code></pre> <p>\u8d2a\u5a6a\u6cd5\u4f8b\u5b50\uff1a\u5047\u8bbe\u5c0f\u5077\u6709\u4e00\u4e2a\u80cc\u5305\uff0c\u6700\u591a\u80fd\u88c520\u516c\u65a4\u8d43\u7269\uff0c\u4ed6\u95ef\u5165\u4e00\u6237\u4eba\u5bb6\uff0c\u53d1\u73b0\u5982\u4e0b\u8868\u6240\u793a\u7684\u7269\u54c1\u3002\u5f88\u663e\u7136\uff0c\u4ed6\u4e0d\u80fd\u628a\u6240\u6709\u7269\u54c1\u90fd\u88c5\u8fdb\u80cc\u5305\uff0c\u6240\u4ee5\u5fc5\u987b\u786e\u5b9a\u62ff\u8d70\u54ea\u4e9b\u7269\u54c1\uff0c\u7559\u4e0b\u54ea\u4e9b\u7269\u54c1\u3002</p> \u540d\u79f0 \u4ef7\u683c\uff08\u7f8e\u5143\uff09 \u91cd\u91cf\uff08kg\uff09 \u7535\u8111 200 20 \u6536\u97f3\u673a 20 4 \u949f 175 10 \u82b1\u74f6 50 2 \u4e66 10 1 \u6cb9\u753b 90 9 <pre><code>\"\"\"\n\u8d2a\u5a6a\u6cd5\uff1a\u5728\u5bf9\u95ee\u9898\u6c42\u89e3\u65f6\uff0c\u603b\u662f\u505a\u51fa\u5728\u5f53\u524d\u770b\u6765\u662f\u6700\u597d\u7684\u9009\u62e9\uff0c\u4e0d\u8ffd\u6c42\u6700\u4f18\u89e3\uff0c\u5feb\u901f\u627e\u5230\u6ee1\u610f\u89e3\u3002\n\u8f93\u5165\uff1a\n20 6\n\u7535\u8111 200 20\n\u6536\u97f3\u673a 20 4\n\u949f 175 10\n\u82b1\u74f6 50 2\n\u4e66 10 1\n\u6cb9\u753b 90 9\n\"\"\"\nclass Thing(object):\n    \"\"\"\u7269\u54c1\"\"\"\n\n    def __init__(self, name, price, weight):\n        self.name = name\n        self.price = price\n        self.weight = weight\n\n    @property\n    def value(self):\n        \"\"\"\u4ef7\u683c\u91cd\u91cf\u6bd4\"\"\"\n        return self.price / self.weight\n\n\ndef input_thing():\n    \"\"\"\u8f93\u5165\u7269\u54c1\u4fe1\u606f\"\"\"\n    name_str, price_str, weight_str = input().split()\n    return name_str, int(price_str), int(weight_str)\n\n\ndef main():\n    \"\"\"\u4e3b\u51fd\u6570\"\"\"\n    max_weight, num_of_things = map(int, input().split())\n    all_things = []\n    for _ in range(num_of_things):\n        all_things.append(Thing(*input_thing()))\n    all_things.sort(key=lambda x: x.value, reverse=True)\n    total_weight = 0\n    total_price = 0\n    for thing in all_things:\n        if total_weight + thing.weight &lt;= max_weight:\n            print(f'\u5c0f\u5077\u62ff\u8d70\u4e86{thing.name}')\n            total_weight += thing.weight\n            total_price += thing.price\n    print(f'\u603b\u4ef7\u503c: {total_price}\u7f8e\u5143')\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u5206\u6cbb\u6cd5\u4f8b\u5b50\uff1a\u5feb\u901f\u6392\u5e8f\u3002</p> <pre><code>\"\"\"\n\u5feb\u901f\u6392\u5e8f - \u9009\u62e9\u67a2\u8f74\u5bf9\u5143\u7d20\u8fdb\u884c\u5212\u5206\uff0c\u5de6\u8fb9\u90fd\u6bd4\u67a2\u8f74\u5c0f\u53f3\u8fb9\u90fd\u6bd4\u67a2\u8f74\u5927\n\"\"\"\ndef quick_sort(items, comp=lambda x, y: x &lt;= y):\n    items = list(items)[:]\n    _quick_sort(items, 0, len(items) - 1, comp)\n    return items\n\n\ndef _quick_sort(items, start, end, comp):\n    if start &lt; end:\n        pos = _partition(items, start, end, comp)\n        _quick_sort(items, start, pos - 1, comp)\n        _quick_sort(items, pos + 1, end, comp)\n\n\ndef _partition(items, start, end, comp):\n    pivot = items[end]\n    i = start - 1\n    for j in range(start, end):\n        if comp(items[j], pivot):\n            i += 1\n            items[i], items[j] = items[j], items[i]\n    items[i + 1], items[end] = items[end], items[i + 1]\n    return i + 1\n</code></pre> <p>\u56de\u6eaf\u6cd5\u4f8b\u5b50\uff1a\u9a91\u58eb\u5de1\u903b\u3002</p> <pre><code>\"\"\"\n\u9012\u5f52\u56de\u6eaf\u6cd5\uff1a\u53eb\u79f0\u4e3a\u8bd5\u63a2\u6cd5\uff0c\u6309\u9009\u4f18\u6761\u4ef6\u5411\u524d\u641c\u7d22\uff0c\u5f53\u641c\u7d22\u5230\u67d0\u4e00\u6b65\uff0c\u53d1\u73b0\u539f\u5148\u9009\u62e9\u5e76\u4e0d\u4f18\u6216\u8fbe\u4e0d\u5230\u76ee\u6807\u65f6\uff0c\u5c31\u9000\u56de\u4e00\u6b65\u91cd\u65b0\u9009\u62e9\uff0c\u6bd4\u8f83\u7ecf\u5178\u7684\u95ee\u9898\u5305\u62ec\u9a91\u58eb\u5de1\u903b\u3001\u516b\u7687\u540e\u548c\u8ff7\u5bab\u5bfb\u8def\u7b49\u3002\n\"\"\"\nimport sys\nimport time\n\nSIZE = 5\ntotal = 0\n\n\ndef print_board(board):\n    for row in board:\n        for col in row:\n            print(str(col).center(4), end='')\n        print()\n\n\ndef patrol(board, row, col, step=1):\n    if row &gt;= 0 and row &lt; SIZE and \\\n        col &gt;= 0 and col &lt; SIZE and \\\n        board[row][col] == 0:\n        board[row][col] = step\n        if step == SIZE * SIZE:\n            global total\n            total += 1\n            print(f'\u7b2c{total}\u79cd\u8d70\u6cd5: ')\n            print_board(board)\n        patrol(board, row - 2, col - 1, step + 1)\n        patrol(board, row - 1, col - 2, step + 1)\n        patrol(board, row + 1, col - 2, step + 1)\n        patrol(board, row + 2, col - 1, step + 1)\n        patrol(board, row + 2, col + 1, step + 1)\n        patrol(board, row + 1, col + 2, step + 1)\n        patrol(board, row - 1, col + 2, step + 1)\n        patrol(board, row - 2, col + 1, step + 1)\n        board[row][col] = 0\n\n\ndef main():\n    board = [[0] * SIZE for _ in range(SIZE)]\n    patrol(board, SIZE - 1, SIZE - 1)\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u52a8\u6001\u89c4\u5212\u4f8b\u5b50\uff1a\u5b50\u5217\u8868\u5143\u7d20\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002</p> <p>\u8bf4\u660e\uff1a\u5b50\u5217\u8868\u6307\u7684\u662f\u5217\u8868\u4e2d\u7d22\u5f15\uff08\u4e0b\u6807\uff09\u8fde\u7eed\u7684\u5143\u7d20\u6784\u6210\u7684\u5217\u8868\uff1b\u5217\u8868\u4e2d\u7684\u5143\u7d20\u662fint\u7c7b\u578b\uff0c\u53ef\u80fd\u5305\u542b\u6b63\u6574\u6570\u30010\u3001\u8d1f\u6574\u6570\uff1b\u7a0b\u5e8f\u8f93\u5165\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u8f93\u51fa\u5b50\u5217\u8868\u5143\u7d20\u6c42\u548c\u7684\u6700\u5927\u503c\uff0c\u4f8b\u5982\uff1a</p> <p>\u8f93\u5165\uff1a1 -2 3 5 -3 2</p> <p>\u8f93\u51fa\uff1a8</p> <p>\u8f93\u5165\uff1a0 -2 3 5 -1 2</p> <p>\u8f93\u51fa\uff1a9</p> <p>\u8f93\u5165\uff1a-9 -2 -3 -5 -3</p> <p>\u8f93\u51fa\uff1a-2</p> <pre><code>def main():\n    items = list(map(int, input().split()))\n    overall = partial = items[0]\n    for i in range(1, len(items)):\n        partial = max(items[i], partial + items[i])\n        overall = max(partial, overall)\n    print(overall)\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u8bf4\u660e\uff1a\u8fd9\u4e2a\u9898\u76ee\u6700\u5bb9\u6613\u60f3\u5230\u7684\u89e3\u6cd5\u662f\u4f7f\u7528\u4e8c\u91cd\u5faa\u73af\uff0c\u4f46\u662f\u4ee3\u7801\u7684\u65f6\u95f4\u6027\u80fd\u5c06\u4f1a\u53d8\u5f97\u975e\u5e38\u7684\u7cdf\u7cd5\u3002\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u7684\u601d\u60f3\uff0c\u4ec5\u4ec5\u662f\u591a\u7528\u4e86\u4e24\u4e2a\u53d8\u91cf\uff0c\u5c31\u5c06\u539f\u6765\\(O(N^2)\\)\u590d\u6742\u5ea6\u7684\u95ee\u9898\u53d8\u6210\u4e86\\(O(N)\\)\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/Python%E8%BF%9B%E9%98%B6/16.Python%E8%AF%AD%E8%A8%80%E8%BF%9B%E9%98%B6/#_3","title":"\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u5f0f","text":"<ul> <li> <p>\u5c06\u51fd\u6570\u89c6\u4e3a\u201c\u4e00\u7b49\u516c\u6c11\u201d</p> <ul> <li>\u51fd\u6570\u53ef\u4ee5\u8d4b\u503c\u7ed9\u53d8\u91cf</li> <li>\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570</li> <li>\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c</li> </ul> </li> <li> <p>\u9ad8\u9636\u51fd\u6570\u7684\u7528\u6cd5\uff08<code>filter</code>\u3001<code>map</code>\u4ee5\u53ca\u5b83\u4eec\u7684\u66ff\u4ee3\u54c1\uff09</p> </li> </ul> <pre><code>items1 = list(map(lambda x: x ** 2, filter(lambda x: x % 2, range(1, 10))))\nitems2 = [x ** 2 for x in range(1, 10) if x % 2]\n</code></pre> <ul> <li> <p>\u4f4d\u7f6e\u53c2\u6570\u3001\u53ef\u53d8\u53c2\u6570\u3001\u5173\u952e\u5b57\u53c2\u6570\u3001\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570</p> </li> <li> <p>\u53c2\u6570\u7684\u5143\u4fe1\u606f\uff08\u4ee3\u7801\u53ef\u8bfb\u6027\u95ee\u9898\uff09</p> </li> <li> <p>\u533f\u540d\u51fd\u6570\u548c\u5185\u8054\u51fd\u6570\u7684\u7528\u6cd5\uff08<code>lambda</code>\u51fd\u6570\uff09</p> </li> <li> <p>\u95ed\u5305\u548c\u4f5c\u7528\u57df\u95ee\u9898</p> <ul> <li> <p>Python\u641c\u7d22\u53d8\u91cf\u7684LEGB\u987a\u5e8f\uff08Local &gt;&gt;&gt; Embedded &gt;&gt;&gt; Global &gt;&gt;&gt; Built-in\uff09</p> </li> <li> <p><code>global</code>\u548c<code>nonlocal</code>\u5173\u952e\u5b57\u7684\u4f5c\u7528</p> </li> </ul> <p><code>global</code>\uff1a\u58f0\u660e\u6216\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\uff08\u8981\u4e48\u76f4\u63a5\u4f7f\u7528\u73b0\u6709\u7684\u5168\u5c40\u4f5c\u7528\u57df\u7684\u53d8\u91cf\uff0c\u8981\u4e48\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u653e\u5230\u5168\u5c40\u4f5c\u7528\u57df\uff09\u3002</p> <p><code>nonlocal</code>\uff1a\u58f0\u660e\u4f7f\u7528\u5d4c\u5957\u4f5c\u7528\u57df\u7684\u53d8\u91cf\uff08\u5d4c\u5957\u4f5c\u7528\u57df\u5fc5\u987b\u5b58\u5728\u8be5\u53d8\u91cf\uff0c\u5426\u5219\u62a5\u9519\uff09\u3002</p> </li> <li> <p>\u88c5\u9970\u5668\u51fd\u6570\uff08\u4f7f\u7528\u88c5\u9970\u5668\u548c\u53d6\u6d88\u88c5\u9970\u5668\uff09</p> </li> </ul> <p>\u4f8b\u5b50\uff1a\u8f93\u51fa\u51fd\u6570\u6267\u884c\u65f6\u95f4\u7684\u88c5\u9970\u5668\u3002</p> <pre><code>def record_time(func):\n    \"\"\"\u81ea\u5b9a\u4e49\u88c5\u9970\u51fd\u6570\u7684\u88c5\u9970\u5668\"\"\"\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        start = time()\n        result = func(*args, **kwargs)\n        print(f'{func.__name__}: {time() - start}\u79d2')\n        return result\n\n    return wrapper\n</code></pre> <p>\u5982\u679c\u88c5\u9970\u5668\u4e0d\u5e0c\u671b\u8ddf<code>print</code>\u51fd\u6570\u8026\u5408\uff0c\u53ef\u4ee5\u7f16\u5199\u53ef\u4ee5\u53c2\u6570\u5316\u7684\u88c5\u9970\u5668\u3002</p> <pre><code>from functools import wraps\nfrom time import time\n\n\ndef record(output):\n    \"\"\"\u53ef\u4ee5\u53c2\u6570\u5316\u7684\u88c5\u9970\u5668\"\"\"\n\n  def decorate(func):\n\n      @wraps(func)\n      def wrapper(*args, **kwargs):\n          start = time()\n          result = func(*args, **kwargs)\n          output(func.__name__, time() - start)\n          return result\n\n      return wrapper\n\n  return decorate\n</code></pre> <pre><code>from functools import wraps\nfrom time import time\n\n\nclass Record():\n    \"\"\"\u901a\u8fc7\u5b9a\u4e49\u7c7b\u7684\u65b9\u5f0f\u5b9a\u4e49\u88c5\u9970\u5668\"\"\"\n\n    def __init__(self, output):\n        self.output = output\n\n    def __call__(self, func):\n\n        @wraps(func)\n        def wrapper(*args, **kwargs):\n            start = time()\n            result = func(*args, **kwargs)\n            self.output(func.__name__, time() - start)\n            return result\n\n        return wrapper\n</code></pre> <p>\u8bf4\u660e\uff1a\u7531\u4e8e\u5bf9\u5e26\u88c5\u9970\u529f\u80fd\u7684\u51fd\u6570\u6dfb\u52a0\u4e86@wraps\u88c5\u9970\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7<code>func.__wrapped__</code>\u65b9\u5f0f\u83b7\u5f97\u88ab\u88c5\u9970\u4e4b\u524d\u7684\u51fd\u6570\u6216\u7c7b\u6765\u53d6\u6d88\u88c5\u9970\u5668\u7684\u4f5c\u7528\u3002</p> <p>\u4f8b\u5b50\uff1a\u7528\u88c5\u9970\u5668\u6765\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f\u3002</p> <pre><code>from functools import wraps\n\n\ndef singleton(cls):\n    \"\"\"\u88c5\u9970\u7c7b\u7684\u88c5\u9970\u5668\"\"\"\n    instances = {}\n\n    @wraps(cls)\n    def wrapper(*args, **kwargs):\n        if cls not in instances:\n            instances[cls] = cls(*args, **kwargs)\n        return instances[cls]\n\n    return wrapper\n\n\n@singleton\nclass President:\n    \"\"\"\u603b\u7edf(\u5355\u4f8b\u7c7b)\"\"\"\n    pass\n</code></pre> <p>\u63d0\u793a\uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u7528\u5230\u4e86\u95ed\u5305\uff08closure\uff09\uff0c\u4e0d\u77e5\u9053\u4f60\u662f\u5426\u5df2\u7ecf\u610f\u8bc6\u5230\u4e86\u3002\u8fd8\u6ca1\u6709\u4e00\u4e2a\u5c0f\u95ee\u9898\u5c31\u662f\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u5e76\u6ca1\u6709\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u7684\u5355\u4f8b\uff0c\u5982\u679c\u8981\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u7684\u5355\u4f8b\u5e94\u8be5\u600e\u4e48\u505a\u5462\uff1f</p> <p>\u7ebf\u7a0b\u5b89\u5168\u7684\u5355\u4f8b\u88c5\u9970\u5668\u3002</p> <pre><code>from functools import wraps\nfrom threading import RLock\n\n\ndef singleton(cls):\n    \"\"\"\u7ebf\u7a0b\u5b89\u5168\u7684\u5355\u4f8b\u88c5\u9970\u5668\"\"\"\n    instances = {}\n    locker = RLock()\n\n    @wraps(cls)\n    def wrapper(*args, **kwargs):\n        if cls not in instances:\n            with locker:\n                if cls not in instances:\n                    instances[cls] = cls(*args, **kwargs)\n        return instances[cls]\n\n    return wrapper\n</code></pre> <p>\u63d0\u793a\uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u7528\u5230\u4e86<code>with</code>\u4e0a\u4e0b\u6587\u8bed\u6cd5\u6765\u8fdb\u884c\u9501\u64cd\u4f5c\uff0c\u56e0\u4e3a\u9501\u5bf9\u8c61\u672c\u8eab\u5c31\u662f\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u5bf9\u8c61\uff08\u652f\u6301<code>__enter__</code>\u548c<code>__exit__</code>\u9b54\u672f\u65b9\u6cd5\uff09\u3002\u5728<code>wrapper</code>\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5148\u505a\u4e86\u4e00\u6b21\u4e0d\u5e26\u9501\u7684\u68c0\u67e5\uff0c\u7136\u540e\u518d\u505a\u5e26\u9501\u7684\u68c0\u67e5\uff0c\u8fd9\u6837\u505a\u6bd4\u76f4\u63a5\u52a0\u9501\u68c0\u67e5\u6027\u80fd\u8981\u66f4\u597d\uff0c\u5982\u679c\u5bf9\u8c61\u5df2\u7ecf\u521b\u5efa\u5c31\u6ca1\u6709\u5fc5\u987b\u518d\u53bb\u52a0\u9501\u800c\u662f\u76f4\u63a5\u8fd4\u56de\u8be5\u5bf9\u8c61\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/Python%E8%BF%9B%E9%98%B6/16.Python%E8%AF%AD%E8%A8%80%E8%BF%9B%E9%98%B6/#_4","title":"\u9762\u5411\u5bf9\u8c61\u76f8\u5173\u77e5\u8bc6","text":"<ul> <li>\u4e09\u5927\u652f\u67f1\uff1a\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001</li> </ul> <p>\u4f8b\u5b50\uff1a\u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf\u3002</p> <pre><code>\"\"\"\n\u6708\u85aa\u7ed3\u7b97\u7cfb\u7edf - \u90e8\u95e8\u7ecf\u7406\u6bcf\u670815000 \u7a0b\u5e8f\u5458\u6bcf\u5c0f\u65f6200 \u9500\u552e\u54581800\u5e95\u85aa\u52a0\u9500\u552e\u989d5%\u63d0\u6210\n\"\"\"\nfrom abc import ABCMeta, abstractmethod\n\n\nclass Employee(metaclass=ABCMeta):\n    \"\"\"\u5458\u5de5(\u62bd\u8c61\u7c7b)\"\"\"\n\n    def __init__(self, name):\n        self.name = name\n\n    @abstractmethod\n    def get_salary(self):\n        \"\"\"\u7ed3\u7b97\u6708\u85aa(\u62bd\u8c61\u65b9\u6cd5)\"\"\"\n        pass\n\n\nclass Manager(Employee):\n    \"\"\"\u90e8\u95e8\u7ecf\u7406\"\"\"\n\n    def get_salary(self):\n        return 15000.0\n\n\nclass Programmer(Employee):\n    \"\"\"\u7a0b\u5e8f\u5458\"\"\"\n\n    def __init__(self, name, working_hour=0):\n        self.working_hour = working_hour\n        super().__init__(name)\n\n    def get_salary(self):\n        return 200.0 * self.working_hour\n\n\nclass Salesman(Employee):\n    \"\"\"\u9500\u552e\u5458\"\"\"\n\n    def __init__(self, name, sales=0.0):\n        self.sales = sales\n        super().__init__(name)\n\n    def get_salary(self):\n        return 1800.0 + self.sales * 0.05\n\n\nclass EmployeeFactory:\n    \"\"\"\u521b\u5efa\u5458\u5de5\u7684\u5de5\u5382\uff08\u5de5\u5382\u6a21\u5f0f - \u901a\u8fc7\u5de5\u5382\u5b9e\u73b0\u5bf9\u8c61\u4f7f\u7528\u8005\u548c\u5bf9\u8c61\u4e4b\u95f4\u7684\u89e3\u8026\u5408\uff09\"\"\"\n\n    @staticmethod\n    def create(emp_type, *args, **kwargs):\n        \"\"\"\u521b\u5efa\u5458\u5de5\"\"\"\n        all_emp_types = {'M': Manager, 'P': Programmer, 'S': Salesman}\n        cls = all_emp_types[emp_type.upper()]\n        return cls(*args, **kwargs) if cls else None\n\n\ndef main():\n    \"\"\"\u4e3b\u51fd\u6570\"\"\"\n    emps = [\n        EmployeeFactory.create('M', '\u66f9\u64cd'), \n        EmployeeFactory.create('P', '\u8340\u5f67', 120),\n        EmployeeFactory.create('P', '\u90ed\u5609', 85), \n        EmployeeFactory.create('S', '\u5178\u97e6', 123000),\n    ]\n    for emp in emps:\n        print(f'{emp.name}: {emp.get_salary():.2f}\u5143')\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <ul> <li> <p>\u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb</p> <ul> <li>is-a\u5173\u7cfb\uff1a\u7ee7\u627f</li> <li>has-a\u5173\u7cfb\uff1a\u5173\u8054 / \u805a\u5408 / \u5408\u6210</li> <li>use-a\u5173\u7cfb\uff1a\u4f9d\u8d56</li> </ul> </li> </ul> <p>\u4f8b\u5b50\uff1a\u6251\u514b\u6e38\u620f\u3002</p> <pre><code>\"\"\"\n\u7ecf\u9a8c\uff1a\u7b26\u53f7\u5e38\u91cf\u603b\u662f\u4f18\u4e8e\u5b57\u9762\u5e38\u91cf\uff0c\u679a\u4e3e\u7c7b\u578b\u662f\u5b9a\u4e49\u7b26\u53f7\u5e38\u91cf\u7684\u6700\u4f73\u9009\u62e9\n\"\"\"\nfrom enum import Enum, unique\n\nimport random\n\n\n@unique\nclass Suite(Enum):\n    \"\"\"\u82b1\u8272\"\"\"\n\n    SPADE, HEART, CLUB, DIAMOND = range(4)\n\n    def __lt__(self, other):\n        return self.value &lt; other.value\n\n\nclass Card:\n    \"\"\"\u724c\"\"\"\n\n    def __init__(self, suite, face):\n        \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5\"\"\"\n        self.suite = suite\n        self.face = face\n\n    def show(self):\n        \"\"\"\u663e\u793a\u724c\u9762\"\"\"\n        suites = ['\u2660\ufe0e', '\u2665\ufe0e', '\u2663\ufe0e', '\u2666\ufe0e']\n        faces = ['', 'A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K']\n        return f'{suites[self.suite.value]}{faces[self.face]}'\n\n    def __repr__(self):\n        return self.show()\n\n\nclass Poker:\n    \"\"\"\u6251\u514b\"\"\"\n\n    def __init__(self):\n        self.index = 0\n        self.cards = [Card(suite, face)\n                      for suite in Suite\n                      for face in range(1, 14)]\n\n    def shuffle(self):\n        \"\"\"\u6d17\u724c\uff08\u968f\u673a\u4e71\u5e8f\uff09\"\"\"\n        random.shuffle(self.cards)\n        self.index = 0\n\n    def deal(self):\n        \"\"\"\u53d1\u724c\"\"\"\n        card = self.cards[self.index]\n        self.index += 1\n        return card\n\n    @property\n    def has_more(self):\n        return self.index &lt; len(self.cards)\n\n\nclass Player:\n    \"\"\"\u73a9\u5bb6\"\"\"\n\n    def __init__(self, name):\n        self.name = name\n        self.cards = []\n\n    def get_one(self, card):\n        \"\"\"\u6478\u4e00\u5f20\u724c\"\"\"\n        self.cards.append(card)\n\n    def sort(self, comp=lambda card: (card.suite, card.face)):\n        \"\"\"\u6574\u7406\u624b\u4e0a\u7684\u724c\"\"\"\n        self.cards.sort(key=comp)\n\n\ndef main():\n    \"\"\"\u4e3b\u51fd\u6570\"\"\"\n    poker = Poker()\n    poker.shuffle()\n    players = [Player('\u4e1c\u90aa'), Player('\u897f\u6bd2'), Player('\u5357\u5e1d'), Player('\u5317\u4e10')]\n    while poker.has_more:\n        for player in players:\n                player.get_one(poker.deal())\n    for player in players:\n        player.sort()\n        print(player.name, end=': ')\n        print(player.cards)\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86Emoji\u5b57\u7b26\u6765\u8868\u793a\u6251\u514b\u724c\u7684\u56db\u79cd\u82b1\u8272\uff0c\u5728\u67d0\u4e9b\u4e0d\u652f\u6301Emoji\u5b57\u7b26\u7684\u7cfb\u7edf\u4e0a\u53ef\u80fd\u65e0\u6cd5\u663e\u793a\u3002</p> <ul> <li> <p>\u5bf9\u8c61\u7684\u590d\u5236\uff08\u6df1\u590d\u5236/\u6df1\u62f7\u8d1d/\u6df1\u5ea6\u514b\u9686\u548c\u6d45\u590d\u5236/\u6d45\u62f7\u8d1d/\u5f71\u5b50\u514b\u9686\uff09</p> </li> <li> <p>\u5783\u573e\u56de\u6536\u3001\u5faa\u73af\u5f15\u7528\u548c\u5f31\u5f15\u7528</p> </li> </ul> <p>Python\u4f7f\u7528\u4e86\u81ea\u52a8\u5316\u5185\u5b58\u7ba1\u7406\uff0c\u8fd9\u79cd\u7ba1\u7406\u673a\u5236\u4ee5\u5f15\u7528\u8ba1\u6570\u4e3a\u57fa\u7840\uff0c\u540c\u65f6\u4e5f\u5f15\u5165\u4e86\u6807\u8bb0-\u6e05\u9664\u548c\u5206\u4ee3\u6536\u96c6\u4e24\u79cd\u673a\u5236\u4e3a\u8f85\u7684\u7b56\u7565\u3002</p> <pre><code>typedef struct _object {\n    /* \u5f15\u7528\u8ba1\u6570 */\n    int ob_refcnt;\n    /* \u5bf9\u8c61\u6307\u9488 */\n    struct _typeobject *ob_type;\n} PyObject;\n</code></pre> <pre><code>/* \u589e\u52a0\u5f15\u7528\u8ba1\u6570\u7684\u5b8f\u5b9a\u4e49 */\n#define Py_INCREF(op)   ((op)-&gt;ob_refcnt++)\n/* \u51cf\u5c11\u5f15\u7528\u8ba1\u6570\u7684\u5b8f\u5b9a\u4e49 */\n#define Py_DECREF(op) \\ //\u51cf\u5c11\u8ba1\u6570\n    if (--(op)-&gt;ob_refcnt != 0) \\\n        ; \\\n    else \\\n        __Py_Dealloc((PyObject *)(op))\n</code></pre> <p>\u5bfc\u81f4\u5f15\u7528\u8ba1\u6570+1\u7684\u60c5\u51b5\uff1a</p> <ul> <li>\u5bf9\u8c61\u88ab\u521b\u5efa\uff0c\u4f8b\u5982<code>a = 23</code></li> <li>\u5bf9\u8c61\u88ab\u5f15\u7528\uff0c\u4f8b\u5982<code>b = a</code></li> <li>\u5bf9\u8c61\u88ab\u4f5c\u4e3a\u53c2\u6570\uff0c\u4f20\u5165\u5230\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u4f8b\u5982<code>f(a)</code></li> <li>\u5bf9\u8c61\u4f5c\u4e3a\u4e00\u4e2a\u5143\u7d20\uff0c\u5b58\u50a8\u5728\u5bb9\u5668\u4e2d\uff0c\u4f8b\u5982<code>list1 = [a, a]</code></li> </ul> <p>\u5bfc\u81f4\u5f15\u7528\u8ba1\u6570-1\u7684\u60c5\u51b5\uff1a</p> <ul> <li>\u5bf9\u8c61\u7684\u522b\u540d\u88ab\u663e\u5f0f\u9500\u6bc1\uff0c\u4f8b\u5982<code>del a</code></li> <li>\u5bf9\u8c61\u7684\u522b\u540d\u88ab\u8d4b\u4e88\u65b0\u7684\u5bf9\u8c61\uff0c\u4f8b\u5982<code>a = 24</code></li> <li>\u4e00\u4e2a\u5bf9\u8c61\u79bb\u5f00\u5b83\u7684\u4f5c\u7528\u57df\uff0c\u4f8b\u5982f\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u65f6\uff0cf\u51fd\u6570\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\uff08\u5168\u5c40\u53d8\u91cf\u4e0d\u4f1a\uff09</li> <li>\u5bf9\u8c61\u6240\u5728\u7684\u5bb9\u5668\u88ab\u9500\u6bc1\uff0c\u6216\u4ece\u5bb9\u5668\u4e2d\u5220\u9664\u5bf9\u8c61</li> </ul> <p>\u5f15\u7528\u8ba1\u6570\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5faa\u73af\u5f15\u7528\u95ee\u9898\uff0c\u800c\u5faa\u73af\u5f15\u7528\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\uff0c\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6240\u793a\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cPython\u4e2d\u5f15\u5165\u4e86\u201c\u6807\u8bb0-\u6e05\u9664\u201d\u548c\u201c\u5206\u4ee3\u6536\u96c6\u201d\u3002\u5728\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u5bf9\u8c61\u88ab\u653e\u5728\u7b2c\u4e00\u4ee3\u4e2d\uff0c\u5982\u679c\u5728\u7b2c\u4e00\u4ee3\u7684\u5783\u573e\u68c0\u67e5\u4e2d\u5bf9\u8c61\u5b58\u6d3b\u4e86\u4e0b\u6765\uff0c\u8be5\u5bf9\u8c61\u5c31\u4f1a\u88ab\u653e\u5230\u7b2c\u4e8c\u4ee3\u4e2d\uff0c\u540c\u7406\u5728\u7b2c\u4e8c\u4ee3\u7684\u5783\u573e\u68c0\u67e5\u4e2d\u5bf9\u8c61\u5b58\u6d3b\u4e0b\u6765\uff0c\u8be5\u5bf9\u8c61\u5c31\u4f1a\u88ab\u653e\u5230\u7b2c\u4e09\u4ee3\u4e2d\u3002</p> <pre><code># \u5faa\u73af\u5f15\u7528\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732 - Python\u9664\u4e86\u5f15\u7528\u6280\u672f\u8fd8\u5f15\u5165\u4e86\u6807\u8bb0\u6e05\u7406\u548c\u5206\u4ee3\u56de\u6536\n# \u5728Python 3.6\u4ee5\u524d\u5982\u679c\u91cd\u5199__del__\u9b54\u672f\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u5faa\u73af\u5f15\u7528\u5904\u7406\u5931\u6548\n# \u5982\u679c\u4e0d\u60f3\u9020\u6210\u5faa\u73af\u5f15\u7528\u53ef\u4ee5\u4f7f\u7528\u5f31\u5f15\u7528\nlist1 = []\nlist2 = [] \nlist1.append(list2)\nlist2.append(list1)\n</code></pre> <p>\u4ee5\u4e0b\u60c5\u51b5\u4f1a\u5bfc\u81f4\u5783\u573e\u56de\u6536\uff1a</p> <ul> <li>\u8c03\u7528<code>gc.collect()</code></li> <li><code>gc</code>\u6a21\u5757\u7684\u8ba1\u6570\u5668\u8fbe\u5230\u9600\u503c</li> <li>\u7a0b\u5e8f\u9000\u51fa</li> </ul> <p>\u5982\u679c\u5faa\u73af\u5f15\u7528\u4e2d\u4e24\u4e2a\u5bf9\u8c61\u90fd\u5b9a\u4e49\u4e86<code>__del__</code>\u65b9\u6cd5\uff0c<code>gc</code>\u6a21\u5757\u4e0d\u4f1a\u9500\u6bc1\u8fd9\u4e9b\u4e0d\u53ef\u8fbe\u5bf9\u8c61\uff0c\u56e0\u4e3agc\u6a21\u5757\u4e0d\u77e5\u9053\u5e94\u8be5\u5148\u8c03\u7528\u54ea\u4e2a\u5bf9\u8c61\u7684<code>__del__</code>\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u95ee\u9898\u5728Python 3.6\u4e2d\u5f97\u5230\u4e86\u89e3\u51b3\u3002</p> <p>\u4e5f\u53ef\u4ee5\u901a\u8fc7<code>weakref</code>\u6a21\u5757\u6784\u9020\u5f31\u5f15\u7528\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u5faa\u73af\u5f15\u7528\u7684\u95ee\u9898\u3002</p> <ul> <li>\u9b54\u6cd5\u5c5e\u6027\u548c\u65b9\u6cd5\uff08\u8bf7\u53c2\u8003\u300aPython\u9b54\u6cd5\u65b9\u6cd5\u6307\u5357\u300b\uff09</li> </ul> <p>\u6709\u51e0\u4e2a\u5c0f\u95ee\u9898\u8bf7\u5927\u5bb6\u601d\u8003\uff1a</p> <ul> <li>\u81ea\u5b9a\u4e49\u7684\u5bf9\u8c61\u80fd\u4e0d\u80fd\u4f7f\u7528\u8fd0\u7b97\u7b26\u505a\u8fd0\u7b97\uff1f</li> <li>\u81ea\u5b9a\u4e49\u7684\u5bf9\u8c61\u80fd\u4e0d\u80fd\u653e\u5230<code>set</code>\u4e2d\uff1f\u80fd\u53bb\u91cd\u5417\uff1f</li> <li>\u81ea\u5b9a\u4e49\u7684\u5bf9\u8c61\u80fd\u4e0d\u80fd\u4f5c\u4e3a<code>dict</code>\u7684\u952e\uff1f</li> <li> <p>\u81ea\u5b9a\u4e49\u7684\u5bf9\u8c61\u80fd\u4e0d\u80fd\u4f7f\u7528\u4e0a\u4e0b\u6587\u8bed\u6cd5\uff1f</p> </li> <li> <p>\u6df7\u5165\uff08Mixin\uff09</p> </li> </ul> <p>\u4f8b\u5b50\uff1a\u81ea\u5b9a\u4e49\u5b57\u5178\u9650\u5236\u53ea\u6709\u5728\u6307\u5b9a\u7684key\u4e0d\u5b58\u5728\u65f6\u624d\u80fd\u5728\u5b57\u5178\u4e2d\u8bbe\u7f6e\u952e\u503c\u5bf9\u3002</p> <pre><code>class SetOnceMappingMixin:\n    \"\"\"\u81ea\u5b9a\u4e49\u6df7\u5165\u7c7b\"\"\"\n    __slots__ = ()\n\n    def __setitem__(self, key, value):\n        if key in self:\n            raise KeyError(str(key) + ' already set')\n        return super().__setitem__(key, value)\n\n\nclass SetOnceDict(SetOnceMappingMixin, dict):\n    \"\"\"\u81ea\u5b9a\u4e49\u5b57\u5178\"\"\"\n    pass\n\n\nmy_dict= SetOnceDict()\ntry:\n    my_dict['username'] = 'jackfrued'\n    my_dict['username'] = 'hellokitty'\nexcept KeyError:\n    pass\nprint(my_dict)\n</code></pre> <ul> <li>\u5143\u7f16\u7a0b\u548c\u5143\u7c7b</li> </ul> <p>\u5bf9\u8c61\u662f\u901a\u8fc7\u7c7b\u521b\u5efa\u7684\uff0c\u7c7b\u662f\u901a\u8fc7\u5143\u7c7b\u521b\u5efa\u7684\uff0c\u5143\u7c7b\u63d0\u4f9b\u4e86\u521b\u5efa\u7c7b\u7684\u5143\u4fe1\u606f\u3002\u6240\u6709\u7684\u7c7b\u90fd\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u7ee7\u627f\u81ea<code>object</code>\uff0c\u6240\u6709\u7684\u5143\u7c7b\u90fd\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u7ee7\u627f\u81ea<code>type</code>\u3002</p> <p>\u4f8b\u5b50\uff1a\u7528\u5143\u7c7b\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f\u3002</p> <pre><code>import threading\n\n\nclass SingletonMeta(type):\n    \"\"\"\u81ea\u5b9a\u4e49\u5143\u7c7b\"\"\"\n\n    def __init__(cls, *args, **kwargs):\n        cls.__instance = None\n        cls.__lock = threading.RLock()\n        super().__init__(*args, **kwargs)\n\n    def __call__(cls, *args, **kwargs):\n        if cls.__instance is None:\n            with cls.__lock:\n                if cls.__instance is None:\n                    cls.__instance = super().__call__(*args, **kwargs)\n        return cls.__instance\n\n\nclass President(metaclass=SingletonMeta):\n    \"\"\"\u603b\u7edf(\u5355\u4f8b\u7c7b)\"\"\"\n\n    pass\n</code></pre> <ul> <li> <p>\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u539f\u5219</p> <ul> <li>\u5355\u4e00\u804c\u8d23\u539f\u5219 \uff08SRP\uff09- \u4e00\u4e2a\u7c7b\u53ea\u505a\u8be5\u505a\u7684\u4e8b\u60c5\uff08\u7c7b\u7684\u8bbe\u8ba1\u8981\u9ad8\u5185\u805a\uff09</li> <li>\u5f00\u95ed\u539f\u5219 \uff08OCP\uff09- \u8f6f\u4ef6\u5b9e\u4f53\u5e94\u8be5\u5bf9\u6269\u5c55\u5f00\u53d1\u5bf9\u4fee\u6539\u5173\u95ed</li> <li>\u4f9d\u8d56\u5012\u8f6c\u539f\u5219\uff08DIP\uff09- \u9762\u5411\u62bd\u8c61\u7f16\u7a0b\uff08\u5728\u5f31\u7c7b\u578b\u8bed\u8a00\u4e2d\u5df2\u7ecf\u88ab\u5f31\u5316\uff09</li> <li>\u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff08LSP\uff09 - \u4efb\u4f55\u65f6\u5019\u53ef\u4ee5\u7528\u5b50\u7c7b\u5bf9\u8c61\u66ff\u6362\u6389\u7236\u7c7b\u5bf9\u8c61</li> <li>\u63a5\u53e3\u9694\u79bb\u539f\u5219\uff08ISP\uff09- \u63a5\u53e3\u8981\u5c0f\u800c\u4e13\u4e0d\u8981\u5927\u800c\u5168\uff08Python\u4e2d\u6ca1\u6709\u63a5\u53e3\u7684\u6982\u5ff5\uff09</li> <li>\u5408\u6210\u805a\u5408\u590d\u7528\u539f\u5219\uff08CARP\uff09 - \u4f18\u5148\u4f7f\u7528\u5f3a\u5173\u8054\u5173\u7cfb\u800c\u4e0d\u662f\u7ee7\u627f\u5173\u7cfb\u590d\u7528\u4ee3\u7801</li> <li>\u6700\u5c11\u77e5\u8bc6\u539f\u5219\uff08\u8fea\u7c73\u7279\u6cd5\u5219\uff0cLoD\uff09- \u4e0d\u8981\u7ed9\u6ca1\u6709\u5fc5\u7136\u8054\u7cfb\u7684\u5bf9\u8c61\u53d1\u6d88\u606f</li> </ul> </li> </ul> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u52a0\u7c97\u7684\u5b57\u6bcd\u653e\u5728\u4e00\u8d77\u79f0\u4e3a\u9762\u5411\u5bf9\u8c61\u7684SOLID\u539f\u5219\u3002</p> <ul> <li> <p>GoF\u8bbe\u8ba1\u6a21\u5f0f</p> <ul> <li>\u521b\u5efa\u578b\u6a21\u5f0f\uff1a\u5355\u4f8b\u3001\u5de5\u5382\u3001\u5efa\u9020\u8005\u3001\u539f\u578b</li> <li>\u7ed3\u6784\u578b\u6a21\u5f0f\uff1a\u9002\u914d\u5668\u3001\u95e8\u9762\uff08\u5916\u89c2\uff09\u3001\u4ee3\u7406</li> <li>\u884c\u4e3a\u578b\u6a21\u5f0f\uff1a\u8fed\u4ee3\u5668\u3001\u89c2\u5bdf\u8005\u3001\u72b6\u6001\u3001\u7b56\u7565</li> </ul> </li> </ul> <p>\u4f8b\u5b50\uff1a\u53ef\u63d2\u62d4\u7684\u54c8\u5e0c\u7b97\u6cd5\uff08\u7b56\u7565\u6a21\u5f0f\uff09\u3002</p> <pre><code>class StreamHasher:\n    \"\"\"\u54c8\u5e0c\u6458\u8981\u751f\u6210\u5668\"\"\"\n\n    def __init__(self, alg='md5', size=4096):\n        self.size = size\n        alg = alg.lower()\n        self.hasher = getattr(__import__('hashlib'), alg.lower())()\n\n    def __call__(self, stream):\n        return self.to_digest(stream)\n\n    def to_digest(self, stream):\n        \"\"\"\u751f\u6210\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\u7684\u6458\u8981\"\"\"\n        for buf in iter(lambda: stream.read(self.size), b''):\n            self.hasher.update(buf)\n        return self.hasher.hexdigest()\n\ndef main():\n    \"\"\"\u4e3b\u51fd\u6570\"\"\"\n    hasher1 = StreamHasher()\n    with open('Python-3.7.6.tgz', 'rb') as stream:\n        print(hasher1.to_digest(stream))\n    hasher2 = StreamHasher('sha1')\n    with open('Python-3.7.6.tgz', 'rb') as stream:\n        print(hasher2(stream))\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/Python%E8%BF%9B%E9%98%B6/16.Python%E8%AF%AD%E8%A8%80%E8%BF%9B%E9%98%B6/#_5","title":"\u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668","text":"<ul> <li> <p>\u8fed\u4ee3\u5668\u662f\u5b9e\u73b0\u4e86\u8fed\u4ee3\u5668\u534f\u8bae\u7684\u5bf9\u8c61\u3002</p> <ul> <li>Python\u4e2d\u6ca1\u6709\u50cf<code>protocol</code>\u6216<code>interface</code>\u8fd9\u6837\u7684\u5b9a\u4e49\u534f\u8bae\u7684\u5173\u952e\u5b57\u3002</li> <li>Python\u4e2d\u7528\u9b54\u672f\u65b9\u6cd5\u8868\u793a\u534f\u8bae\u3002</li> <li><code>__iter__</code>\u548c<code>__next__</code>\u9b54\u672f\u65b9\u6cd5\u5c31\u662f\u8fed\u4ee3\u5668\u534f\u8bae\u3002</li> </ul> </li> </ul> <pre><code>class Fib(object):\n    \"\"\"\u8fed\u4ee3\u5668\"\"\"\n\n    def __init__(self, num):\n        self.num = num\n        self.a, self.b = 0, 1\n        self.idx = 0\n\n    def __iter__(self):\n        return self\n\n    def __next__(self):\n        if self.idx &lt; self.num:\n            self.a, self.b = self.b, self.a + self.b\n            self.idx += 1\n            return self.a\n        raise StopIteration()\n</code></pre> <ul> <li>\u751f\u6210\u5668\u662f\u8bed\u6cd5\u7b80\u5316\u7248\u7684\u8fed\u4ee3\u5668\u3002</li> </ul> <pre><code>def fib(num):\n    \"\"\"\u751f\u6210\u5668\"\"\"\n    a, b = 0, 1\n    for _ in range(num):\n        a, b = b, a + b\n        yield a\n</code></pre> <ul> <li>\u751f\u6210\u5668\u8fdb\u5316\u4e3a\u534f\u7a0b\u3002</li> </ul> <p>\u751f\u6210\u5668\u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528<code>send()</code>\u65b9\u6cd5\u53d1\u9001\u6570\u636e\uff0c\u53d1\u9001\u7684\u6570\u636e\u4f1a\u6210\u4e3a\u751f\u6210\u5668\u51fd\u6570\u4e2d\u901a\u8fc7<code>yield</code>\u8868\u8fbe\u5f0f\u83b7\u5f97\u7684\u503c\u3002\u8fd9\u6837\uff0c\u751f\u6210\u5668\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u534f\u7a0b\u4f7f\u7528\uff0c\u534f\u7a0b\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u53ef\u4ee5\u76f8\u4e92\u534f\u4f5c\u7684\u5b50\u7a0b\u5e8f\u3002</p> <pre><code>def calc_avg():\n  \"\"\"\u6d41\u5f0f\u8ba1\u7b97\u5e73\u5747\u503c\"\"\"\n  total, counter = 0, 0\n  avg_value = None\n  while True:\n      value = yield avg_value\n      # yield \u5173\u952e\u5b57\u4f7f\u5f97\u51fd\u6570\u80fd\u591f\u6682\u505c\u6267\u884c\u5e76\u8fd4\u56de avg_value\n      # \u540c\u65f6\uff0c\u51fd\u6570\u4f1a\u63a5\u6536\u5916\u90e8\u4f20\u5165\u7684\u503c\uff08\u901a\u8fc7 send \u65b9\u6cd5\uff09\u5e76\u8d4b\u503c\u7ed9 value\n      total, counter = total + value, counter + 1\n      avg_value = total / counter\n\ngen = calc_avg() # \u521b\u5efa\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61 gen\uff0c\u8c03\u7528 calc_avg \u51fd\u6570\u4f46\u4e0d\u6267\u884c\u5176\u4ee3\u7801\u3002\nnext(gen) # \u542f\u52a8\u751f\u6210\u5668\uff0c\u6267\u884c\u5230 yield \u8bed\u53e5\uff0c\u6b64\u65f6 avg_value \u4e3a None\uff0c\u8fd4\u56de None\nprint(gen.send(10)) # output: 10.0\nprint(gen.send(20)) # output: 15.0\nprint(gen.send(30)) # output: 20.0\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/Python-100-Days/Python%E8%BF%9B%E9%98%B6/16.Python%E8%AF%AD%E8%A8%80%E8%BF%9B%E9%98%B6/#_6","title":"\u5e76\u53d1\u7f16\u7a0b","text":"<p>Python\u4e2d\u5b9e\u73b0\u5e76\u53d1\u7f16\u7a0b\u7684\u4e09\u79cd\u65b9\u6848\uff1a\u591a\u7ebf\u7a0b\u3001\u591a\u8fdb\u7a0b\u548c\u5f02\u6b65I/O\u3002\u5e76\u53d1\u7f16\u7a0b\u7684\u597d\u5904\u5728\u4e8e\u53ef\u4ee5\u63d0\u5347\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u4ee5\u53ca\u6539\u5584\u7528\u6237\u4f53\u9a8c\uff1b\u574f\u5904\u5728\u4e8e\u5e76\u53d1\u7684\u7a0b\u5e8f\u4e0d\u5bb9\u6613\u5f00\u53d1\u548c\u8c03\u8bd5\uff0c\u540c\u65f6\u5bf9\u5176\u4ed6\u7a0b\u5e8f\u6765\u8bf4\u5b83\u5e76\u4e0d\u53cb\u597d\u3002</p> <ul> <li>\u591a\u7ebf\u7a0b\uff1aPython\u4e2d\u63d0\u4f9b\u4e86<code>Thread</code>\u7c7b\u5e76\u8f85\u4ee5<code>Lock</code>\u3001<code>Condition</code>\u3001<code>Event</code>\u3001<code>Semaphore</code>\u548c<code>Barrier</code>\u3002Python\u4e2d\u6709GIL\u6765\u9632\u6b62\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u6267\u884c\u672c\u5730\u5b57\u8282\u7801\uff0c\u8fd9\u4e2a\u9501\u5bf9\u4e8eCPython\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3aCPython\u7684\u5185\u5b58\u7ba1\u7406\u5e76\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u56e0\u4e3aGIL\u7684\u5b58\u5728\u591a\u7ebf\u7a0b\u5e76\u4e0d\u80fd\u53d1\u6325CPU\u7684\u591a\u6838\u7279\u6027\u3002</li> </ul> <pre><code>\"\"\"\n\u9762\u8bd5\u9898\uff1a\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u533a\u522b\u548c\u8054\u7cfb\uff1f\n\u8fdb\u7a0b - \u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u5185\u5b58\u7684\u57fa\u672c\u5355\u4f4d - \u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\n\u7ebf\u7a0b - \u64cd\u4f5c\u7cfb\u7edf\u5206\u914dCPU\u7684\u57fa\u672c\u5355\u4f4d\n\u5e76\u53d1\u7f16\u7a0b\uff08concurrent programming\uff09\n1. \u63d0\u5347\u6267\u884c\u6027\u80fd - \u8ba9\u7a0b\u5e8f\u4e2d\u6ca1\u6709\u56e0\u679c\u5173\u7cfb\u7684\u90e8\u5206\u53ef\u4ee5\u5e76\u53d1\u7684\u6267\u884c\n2. \u6539\u5584\u7528\u6237\u4f53\u9a8c - \u8ba9\u8017\u65f6\u95f4\u7684\u64cd\u4f5c\u4e0d\u4f1a\u9020\u6210\u7a0b\u5e8f\u7684\u5047\u6b7b\n\"\"\"\nimport glob\nimport os\nimport threading\n\nfrom PIL import Image\n\nPREFIX = 'thumbnails'\n\n\ndef generate_thumbnail(infile, size, format='PNG'):\n    \"\"\"\u751f\u6210\u6307\u5b9a\u56fe\u7247\u6587\u4ef6\u7684\u7f29\u7565\u56fe\"\"\"\n  file, ext = os.path.splitext(infile)\n  file = file[file.rfind('/') + 1:]\n  outfile = f'{PREFIX}/{file}_{size[0]}_{size[1]}.{ext}'\n  img = Image.open(infile)\n  img.thumbnail(size, Image.ANTIALIAS)\n  img.save(outfile, format)\n\n\ndef main():\n    \"\"\"\u4e3b\u51fd\u6570\"\"\"\n  if not os.path.exists(PREFIX):\n      os.mkdir(PREFIX)\n  for infile in glob.glob('images/*.png'):\n      for size in (32, 64, 128):\n            # \u521b\u5efa\u5e76\u542f\u52a8\u7ebf\u7a0b\n          threading.Thread(\n              target=generate_thumbnail, \n              args=(infile, (size, size))\n          ).start()\n\n\nif __name__ == '__main__':\n  main()\n</code></pre> <p>\u591a\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u8d44\u6e90\u7684\u60c5\u51b5\u3002</p> <pre><code>\"\"\"\n\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u5982\u679c\u6ca1\u6709\u7ade\u4e89\u8d44\u6e90\u5904\u7406\u8d77\u6765\u901a\u5e38\u4e5f\u6bd4\u8f83\u7b80\u5355\n\u5f53\u591a\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u4e34\u754c\u8d44\u6e90\u7684\u65f6\u5019\u5982\u679c\u7f3a\u4e4f\u5fc5\u8981\u7684\u4fdd\u62a4\u63aa\u65bd\u5c31\u4f1a\u5bfc\u81f4\u6570\u636e\u9519\u4e71\n\u8bf4\u660e\uff1a\u4e34\u754c\u8d44\u6e90\u5c31\u662f\u88ab\u591a\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u7684\u8d44\u6e90\n\"\"\"\nimport time\nimport threading\n\nfrom concurrent.futures import ThreadPoolExecutor\n\n\nclass Account(object):\n    \"\"\"\u94f6\u884c\u8d26\u6237\"\"\"\n\n    def __init__(self):\n        self.balance = 0.0\n        self.lock = threading.Lock()\n\n    def deposit(self, money):\n        # \u901a\u8fc7\u9501\u4fdd\u62a4\u4e34\u754c\u8d44\u6e90\n        with self.lock:\n            new_balance = self.balance + money\n            time.sleep(0.001)\n            self.balance = new_balance\n\n\ndef main():\n    \"\"\"\u4e3b\u51fd\u6570\"\"\"\n    account = Account()\n    # \u521b\u5efa\u7ebf\u7a0b\u6c60\n    pool = ThreadPoolExecutor(max_workers=10)\n    futures = []\n    for _ in range(100):\n        future = pool.submit(account.deposit, 1)\n        futures.append(future)\n    # \u5173\u95ed\u7ebf\u7a0b\u6c60\n    pool.shutdown()\n    for future in futures:\n        future.result()\n    print(account.balance)\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u4fee\u6539\u4e0a\u9762\u7684\u7a0b\u5e8f\uff0c\u542f\u52a85\u4e2a\u7ebf\u7a0b\u5411\u8d26\u6237\u4e2d\u5b58\u94b1\uff0c5\u4e2a\u7ebf\u7a0b\u4ece\u8d26\u6237\u4e2d\u53d6\u94b1\uff0c\u53d6\u94b1\u65f6\u5982\u679c\u4f59\u989d\u4e0d\u8db3\u5c31\u6682\u505c\u7ebf\u7a0b\u8fdb\u884c\u7b49\u5f85\u3002\u4e3a\u4e86\u8fbe\u5230\u4e0a\u8ff0\u76ee\u6807\uff0c\u9700\u8981\u5bf9\u5b58\u94b1\u548c\u53d6\u94b1\u7684\u7ebf\u7a0b\u8fdb\u884c\u8c03\u5ea6\uff0c\u5728\u4f59\u989d\u4e0d\u8db3\u65f6\u53d6\u94b1\u7684\u7ebf\u7a0b\u6682\u505c\u5e76\u91ca\u653e\u9501\uff0c\u800c\u5b58\u94b1\u7684\u7ebf\u7a0b\u5c06\u94b1\u5b58\u5165\u540e\u8981\u901a\u77e5\u53d6\u94b1\u7684\u7ebf\u7a0b\uff0c\u4f7f\u5176\u4ece\u6682\u505c\u72b6\u6001\u88ab\u5524\u9192\u3002\u53ef\u4ee5\u4f7f\u7528<code>threading</code>\u6a21\u5757\u7684<code>Condition</code>\u6765\u5b9e\u73b0\u7ebf\u7a0b\u8c03\u5ea6\uff0c\u8be5\u5bf9\u8c61\u4e5f\u662f\u57fa\u4e8e\u9501\u6765\u521b\u5efa\u7684\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>\"\"\"\n\u591a\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u4e00\u4e2a\u8d44\u6e90 - \u4fdd\u62a4\u4e34\u754c\u8d44\u6e90 - \u9501\uff08Lock/RLock\uff09\n\u591a\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u591a\u4e2a\u8d44\u6e90\uff08\u7ebf\u7a0b\u6570&gt;\u8d44\u6e90\u6570\uff09 - \u4fe1\u53f7\u91cf\uff08Semaphore\uff09\n\u591a\u4e2a\u7ebf\u7a0b\u7684\u8c03\u5ea6 - \u6682\u505c\u7ebf\u7a0b\u6267\u884c/\u5524\u9192\u7b49\u5f85\u4e2d\u7684\u7ebf\u7a0b - Condition\n\"\"\"\nfrom concurrent.futures import ThreadPoolExecutor\nfrom random import randint\nfrom time import sleep\n\nimport threading\n\n\nclass Account:\n    \"\"\"\u94f6\u884c\u8d26\u6237\"\"\"\n\n    def __init__(self, balance=0):\n        self.balance = balance\n        lock = threading.RLock()\n        self.condition = threading.Condition(lock)\n\n    def withdraw(self, money):\n        \"\"\"\u53d6\u94b1\"\"\"\n        with self.condition:\n            while money &gt; self.balance:\n                self.condition.wait()\n            new_balance = self.balance - money\n            sleep(0.001)\n            self.balance = new_balance\n\n    def deposit(self, money):\n        \"\"\"\u5b58\u94b1\"\"\"\n        with self.condition:\n            new_balance = self.balance + money\n            sleep(0.001)\n            self.balance = new_balance\n            self.condition.notify_all()\n\n\ndef add_money(account):\n    while True:\n        money = randint(5, 10)\n        account.deposit(money)\n        print(threading.current_thread().name, \n              ':', money, '====&gt;', account.balance)\n        sleep(0.5)\n\n\ndef sub_money(account):\n    while True:\n        money = randint(10, 30)\n        account.withdraw(money)\n        print(threading.current_thread().name, \n              ':', money, '&lt;====', account.balance)\n        sleep(1)\n\n\ndef main():\n    account = Account()\n    with ThreadPoolExecutor(max_workers=15) as pool:\n        for _ in range(5):\n            pool.submit(add_money, account)\n        for _ in range(10):\n            pool.submit(sub_money, account)\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <ul> <li>\u591a\u8fdb\u7a0b\uff1a\u591a\u8fdb\u7a0b\u53ef\u4ee5\u6709\u6548\u7684\u89e3\u51b3GIL\u7684\u95ee\u9898\uff0c\u5b9e\u73b0\u591a\u8fdb\u7a0b\u4e3b\u8981\u7684\u7c7b\u662f<code>Process</code>\uff0c\u5176\u4ed6\u8f85\u52a9\u7684\u7c7b\u8ddf<code>threading</code>\u6a21\u5757\u4e2d\u7684\u7c7b\u4f3c\uff0c\u8fdb\u7a0b\u95f4\u5171\u4eab\u6570\u636e\u53ef\u4ee5\u4f7f\u7528\u7ba1\u9053\u3001\u5957\u63a5\u5b57\u7b49\uff0c\u5728<code>multiprocessing</code>\u6a21\u5757\u4e2d\u6709\u4e00\u4e2a<code>Queue</code>\u7c7b\uff0c\u5b83\u57fa\u4e8e\u7ba1\u9053\u548c\u9501\u673a\u5236\u63d0\u4f9b\u4e86\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u7684\u961f\u5217\u3002\u4e0b\u9762\u662f\u5b98\u65b9\u6587\u6863\u4e0a\u5173\u4e8e\u591a\u8fdb\u7a0b\u548c\u8fdb\u7a0b\u6c60\u7684\u4e00\u4e2a\u793a\u4f8b\u3002</li> </ul> <pre><code>\"\"\"\n\u591a\u8fdb\u7a0b\u548c\u8fdb\u7a0b\u6c60\u7684\u4f7f\u7528\n\u591a\u7ebf\u7a0b\u56e0\u4e3aGIL\u7684\u5b58\u5728\u4e0d\u80fd\u591f\u53d1\u6325CPU\u7684\u591a\u6838\u7279\u6027\n\u5bf9\u4e8e\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u5e94\u8be5\u8003\u8651\u4f7f\u7528\u591a\u8fdb\u7a0b\ntime python3 example22.py\nreal    0m11.512s\nuser    0m39.319s\nsys     0m0.169s\n\u4f7f\u7528\u591a\u8fdb\u7a0b\u540e\u5b9e\u9645\u6267\u884c\u65f6\u95f4\u4e3a11.512\u79d2\uff0c\u800c\u7528\u6237\u65f6\u95f439.319\u79d2\u7ea6\u4e3a\u5b9e\u9645\u6267\u884c\u65f6\u95f4\u76844\u500d\n\u8fd9\u5c31\u8bc1\u660e\u6211\u4eec\u7684\u7a0b\u5e8f\u901a\u8fc7\u591a\u8fdb\u7a0b\u4f7f\u7528\u4e86CPU\u7684\u591a\u6838\u7279\u6027\uff0c\u800c\u4e14\u8fd9\u53f0\u8ba1\u7b97\u673a\u914d\u7f6e\u4e864\u6838\u7684CPU\n\"\"\"\nimport concurrent.futures\nimport math\n\nPRIMES = [\n    1116281,\n    1297337,\n    104395303,\n    472882027,\n    533000389,\n    817504243,\n    982451653,\n    112272535095293,\n    112582705942171,\n    112272535095293,\n    115280095190773,\n    115797848077099,\n    1099726899285419\n] * 5\n\n\ndef is_prime(n):\n    \"\"\"\u5224\u65ad\u7d20\u6570\"\"\"\n    if n % 2 == 0:\n        return False\n\n    sqrt_n = int(math.floor(math.sqrt(n)))\n    for i in range(3, sqrt_n + 1, 2):\n        if n % i == 0:\n            return False\n    return True\n\n\ndef main():\n    \"\"\"\u4e3b\u51fd\u6570\"\"\"\n    with concurrent.futures.ProcessPoolExecutor() as executor:\n        for number, prime in zip(PRIMES, executor.map(is_prime, PRIMES)):\n            print('%d is prime: %s' % (number, prime))\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u91cd\u70b9\uff1a\u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\u7684\u6bd4\u8f83\u3002</p> <p>\u4ee5\u4e0b\u60c5\u51b5\u9700\u8981\u4f7f\u7528\u591a\u7ebf\u7a0b\uff1a</p> <ol> <li>\u7a0b\u5e8f\u9700\u8981\u7ef4\u62a4\u8bb8\u591a\u5171\u4eab\u7684\u72b6\u6001\uff08\u5c24\u5176\u662f\u53ef\u53d8\u72b6\u6001\uff09\uff0cPython\u4e2d\u7684\u5217\u8868\u3001\u5b57\u5178\u3001\u96c6\u5408\u90fd\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u6240\u4ee5\u4f7f\u7528\u7ebf\u7a0b\u800c\u4e0d\u662f\u8fdb\u7a0b\u7ef4\u62a4\u5171\u4eab\u72b6\u6001\u7684\u4ee3\u4ef7\u76f8\u5bf9\u8f83\u5c0f\u3002</li> <li>\u7a0b\u5e8f\u4f1a\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u5728I/O\u64cd\u4f5c\u4e0a\uff0c\u6ca1\u6709\u592a\u591a\u5e76\u884c\u8ba1\u7b97\u7684\u9700\u6c42\u4e14\u4e0d\u9700\u5360\u7528\u592a\u591a\u7684\u5185\u5b58\u3002</li> </ol> <p>\u4ee5\u4e0b\u60c5\u51b5\u9700\u8981\u4f7f\u7528\u591a\u8fdb\u7a0b\uff1a</p> <ol> <li>\u7a0b\u5e8f\u6267\u884c\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff08\u5982\uff1a\u5b57\u8282\u7801\u64cd\u4f5c\u3001\u6570\u636e\u5904\u7406\u3001\u79d1\u5b66\u8ba1\u7b97\uff09\u3002</li> <li>\u7a0b\u5e8f\u7684\u8f93\u5165\u53ef\u4ee5\u5e76\u884c\u7684\u5206\u6210\u5757\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u8fd0\u7b97\u7ed3\u679c\u5408\u5e76\u3002</li> <li>\u7a0b\u5e8f\u5728\u5185\u5b58\u4f7f\u7528\u65b9\u9762\u6ca1\u6709\u4efb\u4f55\u9650\u5236\u4e14\u4e0d\u5f3a\u4f9d\u8d56\u4e8eI/O\u64cd\u4f5c\uff08\u5982\uff1a\u8bfb\u5199\u6587\u4ef6\u3001\u5957\u63a5\u5b57\u7b49\uff09\u3002</li> </ol> <ul> <li>\u5f02\u6b65\u5904\u7406\uff1a\u4ece\u8c03\u5ea6\u7a0b\u5e8f\u7684\u4efb\u52a1\u961f\u5217\u4e2d\u6311\u9009\u4efb\u52a1\uff0c\u8be5\u8c03\u5ea6\u7a0b\u5e8f\u4ee5\u4ea4\u53c9\u7684\u5f62\u5f0f\u6267\u884c\u8fd9\u4e9b\u4efb\u52a1\uff0c\u6211\u4eec\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u4efb\u52a1\u5c06\u4ee5\u67d0\u79cd\u987a\u5e8f\u53bb\u6267\u884c\uff0c\u56e0\u4e3a\u6267\u884c\u987a\u5e8f\u53d6\u51b3\u4e8e\u961f\u5217\u4e2d\u7684\u4e00\u9879\u4efb\u52a1\u662f\u5426\u613f\u610f\u5c06CPU\u5904\u7406\u65f6\u95f4\u8ba9\u4f4d\u7ed9\u53e6\u4e00\u9879\u4efb\u52a1\u3002\u5f02\u6b65\u4efb\u52a1\u901a\u5e38\u901a\u8fc7\u591a\u4efb\u52a1\u534f\u4f5c\u5904\u7406\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\uff0c\u7531\u4e8e\u6267\u884c\u65f6\u95f4\u548c\u987a\u5e8f\u7684\u4e0d\u786e\u5b9a\uff0c\u56e0\u6b64\u9700\u8981\u901a\u8fc7\u56de\u8c03\u5f0f\u7f16\u7a0b\u6216\u8005<code>future</code>\u5bf9\u8c61\u6765\u83b7\u53d6\u4efb\u52a1\u6267\u884c\u7684\u7ed3\u679c\u3002Python 3\u901a\u8fc7<code>asyncio</code>\u6a21\u5757\u548c<code>await</code>\u548c<code>async</code>\u5173\u952e\u5b57\uff08\u5728Python 3.7\u4e2d\u6b63\u5f0f\u88ab\u5217\u4e3a\u5173\u952e\u5b57\uff09\u6765\u652f\u6301\u5f02\u6b65\u5904\u7406\u3002</li> </ul> <pre><code>\"\"\"\n\u5f02\u6b65I/O - async / await\n\"\"\"\nimport asyncio\n\ndef num_generator(m, n):\n    \"\"\"\u6307\u5b9a\u8303\u56f4\u7684\u6570\u5b57\u751f\u6210\u5668\"\"\"\n    yield from range(m, n + 1)\n# yield from \u5141\u8bb8\u4e00\u4e2a\u751f\u6210\u5668\u5c06\u5176\u90e8\u5206\u64cd\u4f5c\u59d4\u6258\u7ed9\u53e6\u4e00\u4e2a\u751f\u6210\u5668\u3002\u8fd9\u610f\u5473\u7740\n# \u4f60\u53ef\u4ee5\u5728\u4e00\u4e2a\u751f\u6210\u5668\u51fd\u6570\u4e2d\u4f7f\u7528 yield from \u6765\u8c03\u7528\u53e6\u4e00\u4e2a\u751f\u6210\u5668\u51fd\u6570\uff0c\u5e76\n# \u76f4\u63a5\u83b7\u53d6\u5176\u751f\u6210\u7684\u503c\uff0c\u800c\u65e0\u9700\u81ea\u5df1\u624b\u52a8\u8fed\u4ee3\u3002\u8fd9\u91cc\uff0crange(m, n + 1) \u662f\n# \u4e00\u4e2a\u5185\u7f6e\u7684\u751f\u6210\u5668\u51fd\u6570\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u751f\u6210\u4ece m \u5f00\u59cb\u5230 n \u7ed3\u675f\u7684\u6574\u6570\u5e8f\u5217\u3002\n# yield from range(m, n + 1) \u7b49\u4ef7\u4e8e\u4e0b\u5217\u5199\u6cd5\uff1a\n# for i in range(m, n + 1):\n#     yield i\n\nasync def prime_filter(m, n):\n# async \u5173\u952e\u5b57\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e2a\u5f02\u6b65\u51fd\u6570\u3002\u5f02\u6b65\u51fd\u6570\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u5728\n# \u6267\u884c\u8fc7\u7a0b\u4e2d\u6682\u505c\u5e76\u5141\u8bb8\u5176\u4ed6\u4efb\u52a1\u6267\u884c\uff0c\u7136\u540e\u5728\u7a0d\u540e\u7684\u65f6\u95f4\u70b9\u6062\u590d\u6267\u884c\u3002\n    \"\"\"\u7d20\u6570\u8fc7\u6ee4\u5668\"\"\"\n    primes = []\n    for i in num_generator(m, n):\n        flag = True\n        for j in range(2, int(i ** 0.5 + 1)):\n            if i % j == 0:\n                flag = False\n                break\n        if flag:\n            print('Prime =&gt;', i)\n            primes.append(i)\n\n        await asyncio.sleep(0.001) # \u4f7f\u5f97\u51fd\u6570\u6682\u505c\u6267\u884c0.001\u79d2\uff0c\u7136\u540e\u6062\u590d\u6267\u884c\u3002\n        # \u8fd9\u5141\u8bb8\u5176\u4ed6\u5f02\u6b65\u4efb\u52a1\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\u6267\u884c\u3002\n    return tuple(primes)\n\nasync def square_mapper(m, n):\n    \"\"\"\u5e73\u65b9\u6620\u5c04\u5668\"\"\"\n    squares = []\n    for i in num_generator(m, n):\n        print('Square =&gt;', i * i)\n        squares.append(i * i)\n\n        await asyncio.sleep(0.001)\n    return squares\n\ndef main():\n    \"\"\"\u4e3b\u51fd\u6570\"\"\"\n    loop = asyncio.get_event_loop()\n    future = asyncio.gather(prime_filter(2, 100), square_mapper(1, 100))\n    future.add_done_callback(lambda x: print(x.result()))\n    loop.run_until_complete(future)\n    loop.close()\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u8bf4\u660e\uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u4f7f\u7528<code>get_event_loop</code>\u51fd\u6570\u83b7\u5f97\u7cfb\u7edf\u9ed8\u8ba4\u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u901a\u8fc7<code>gather</code>\u51fd\u6570\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a<code>future</code>\u5bf9\u8c61\uff0c<code>future</code>\u5bf9\u8c61\u7684<code>add_done_callback</code>\u53ef\u4ee5\u6dfb\u52a0\u6267\u884c\u5b8c\u6210\u65f6\u7684\u56de\u8c03\u51fd\u6570\uff0c<code>loop</code>\u5bf9\u8c61\u7684<code>run_until_complete</code>\u65b9\u6cd5\u53ef\u4ee5\u7b49\u5f85\u901a\u8fc7<code>future</code>\u5bf9\u8c61\u83b7\u5f97\u534f\u7a0b\u6267\u884c\u7ed3\u679c\u3002</p> <p>Python\u4e2d\u6709\u4e00\u4e2a\u540d\u4e3a<code>aiohttp</code>\u7684\u4e09\u65b9\u5e93\uff0c\u5b83\u63d0\u4f9b\u4e86\u5f02\u6b65\u7684HTTP\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\uff0c\u8fd9\u4e2a\u4e09\u65b9\u5e93\u53ef\u4ee5\u8ddf<code>asyncio</code>\u6a21\u5757\u4e00\u8d77\u5de5\u4f5c\uff0c\u5e76\u63d0\u4f9b\u4e86\u5bf9<code>Future</code>\u5bf9\u8c61\u7684\u652f\u6301\u3002Python 3.6\u4e2d\u5f15\u5165\u4e86<code>async</code>\u548c<code>await</code>\u6765\u5b9a\u4e49\u5f02\u6b65\u6267\u884c\u7684\u51fd\u6570\u4ee5\u53ca\u521b\u5efa\u5f02\u6b65\u4e0a\u4e0b\u6587\uff0c\u5728Python 3.7\u4e2d\u5b83\u4eec\u6b63\u5f0f\u6210\u4e3a\u4e86\u5173\u952e\u5b57\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5f02\u6b65\u7684\u4ece5\u4e2aURL\u4e2d\u83b7\u53d6\u9875\u9762\u5e76\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u547d\u540d\u6355\u83b7\u7ec4\u63d0\u53d6\u4e86\u7f51\u7ad9\u7684\u6807\u9898\u3002</p> <pre><code>import asyncio\nimport re\n\nimport aiohttp\n\nPATTERN = re.compile(r'\\&lt;title\\&gt;(?P&lt;title&gt;.*)\\&lt;\\/title\\&gt;')\n\n\nasync def fetch_page(session, url):\n    async with session.get(url, ssl=False) as resp:\n        return await resp.text()\n\n\nasync def show_title(url):\n    async with aiohttp.ClientSession() as session:\n        html = await fetch_page(session, url)\n        print(PATTERN.search(html).group('title'))\n\n\ndef main():\n    urls = ('https://www.python.org/',\n            'https://git-scm.com/',\n            'https://www.jd.com/',\n            'https://www.taobao.com/',\n            'https://www.douban.com/')\n    loop = asyncio.get_event_loop()\n    cos = [show_title(url) for url in urls]\n    loop.run_until_complete(asyncio.wait(cos))\n    loop.close()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u91cd\u70b9\uff1a\u5f02\u6b65I/O\u4e0e\u591a\u8fdb\u7a0b\u7684\u6bd4\u8f83\u3002</p> <p>\u5f53\u7a0b\u5e8f\u4e0d\u9700\u8981\u771f\u6b63\u7684\u5e76\u53d1\u6027\u6216\u5e76\u884c\u6027\uff0c\u800c\u662f\u66f4\u591a\u7684\u4f9d\u8d56\u4e8e\u5f02\u6b65\u5904\u7406\u548c\u56de\u8c03\u65f6\uff0c<code>asyncio</code>\u5c31\u662f\u4e00\u79cd\u5f88\u597d\u7684\u9009\u62e9\u3002\u5982\u679c\u7a0b\u5e8f\u4e2d\u6709\u5927\u91cf\u7684\u7b49\u5f85\u4e0e\u4f11\u7720\u65f6\uff0c\u4e5f\u5e94\u8be5\u8003\u8651<code>asyncio</code>\uff0c\u5b83\u5f88\u9002\u5408\u7f16\u5199\u6ca1\u6709\u5b9e\u65f6\u6570\u636e\u5904\u7406\u9700\u6c42\u7684Web\u5e94\u7528\u670d\u52a1\u5668\u3002</p> <p>Python\u8fd8\u6709\u5f88\u591a\u7528\u4e8e\u5904\u7406\u5e76\u884c\u4efb\u52a1\u7684\u4e09\u65b9\u5e93\uff0c\u4f8b\u5982\uff1a<code>joblib</code>\u3001<code>PyMP</code>\u7b49\u3002\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u8981\u63d0\u5347\u7cfb\u7edf\u7684\u53ef\u6269\u5c55\u6027\u548c\u5e76\u53d1\u6027\u901a\u5e38\u6709\u5782\u76f4\u6269\u5c55\uff08\u589e\u52a0\u5355\u4e2a\u8282\u70b9\u7684\u5904\u7406\u80fd\u529b\uff09\u548c\u6c34\u5e73\u6269\u5c55\uff08\u5c06\u5355\u4e2a\u8282\u70b9\u53d8\u6210\u591a\u4e2a\u8282\u70b9\uff09\u4e24\u79cd\u505a\u6cd5\u3002\u53ef\u4ee5\u901a\u8fc7\u6d88\u606f\u961f\u5217\u6765\u5b9e\u73b0\u5e94\u7528\u7a0b\u5e8f\u7684\u89e3\u8026\u5408\uff0c\u6d88\u606f\u961f\u5217\u76f8\u5f53\u4e8e\u662f\u591a\u7ebf\u7a0b\u540c\u6b65\u961f\u5217\u7684\u6269\u5c55\u7248\u672c\uff0c\u4e0d\u540c\u673a\u5668\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u76f8\u5f53\u4e8e\u5c31\u662f\u7ebf\u7a0b\uff0c\u800c\u5171\u4eab\u7684\u5206\u5e03\u5f0f\u6d88\u606f\u961f\u5217\u5c31\u662f\u539f\u6765\u7a0b\u5e8f\u4e2d\u7684Queue\u3002\u6d88\u606f\u961f\u5217\uff08\u9762\u5411\u6d88\u606f\u7684\u4e2d\u95f4\u4ef6\uff09\u7684\u6700\u6d41\u884c\u548c\u6700\u6807\u51c6\u5316\u7684\u5b9e\u73b0\u662fAMQP\uff08\u9ad8\u7ea7\u6d88\u606f\u961f\u5217\u534f\u8bae\uff09\uff0cAMQP\u6e90\u4e8e\u91d1\u878d\u884c\u4e1a\uff0c\u63d0\u4f9b\u4e86\u6392\u961f\u3001\u8def\u7531\u3001\u53ef\u9760\u4f20\u8f93\u3001\u5b89\u5168\u7b49\u529f\u80fd\uff0c\u6700\u8457\u540d\u7684\u5b9e\u73b0\u5305\u62ec\uff1aApache\u7684ActiveMQ\u3001RabbitMQ\u7b49\u3002</p> <p>\u8981\u5b9e\u73b0\u4efb\u52a1\u7684\u5f02\u6b65\u5316\uff0c\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3a<code>Celery</code>\u7684\u4e09\u65b9\u5e93\u3002<code>Celery</code>\u662fPython\u7f16\u5199\u7684\u5206\u5e03\u5f0f\u4efb\u52a1\u961f\u5217\uff0c\u5b83\u4f7f\u7528\u5206\u5e03\u5f0f\u6d88\u606f\u8fdb\u884c\u5de5\u4f5c\uff0c\u53ef\u4ee5\u57fa\u4e8eRabbitMQ\u6216Redis\u6765\u4f5c\u4e3a\u540e\u7aef\u7684\u6d88\u606f\u4ee3\u7406\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/jupyter/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-numpy/","title":"\u5b9e\u64cdNumpy","text":"In\u00a0[1]: Copied! <pre>names = ['\u5b59\u609f\u7a7a', '\u674e\u5143\u82b3', '\u767d\u8d77', '\u72c4\u4ec1\u6770', '\u8fbe\u6469']\ncourses = ['\u8bed\u6587', '\u6570\u5b66', '\u82f1\u8bed']\n</pre> names = ['\u5b59\u609f\u7a7a', '\u674e\u5143\u82b3', '\u767d\u8d77', '\u72c4\u4ec1\u6770', '\u8fbe\u6469'] courses = ['\u8bed\u6587', '\u6570\u5b66', '\u82f1\u8bed'] In\u00a0[2]: Copied! <pre>import random\nscores = [[random.randrange(60, 101) for _ in range(3)] for _ in range(5)]\nscores\n</pre> import random scores = [[random.randrange(60, 101) for _ in range(3)] for _ in range(5)] scores Out[2]: <pre>[[99, 96, 96], [90, 90, 93], [63, 94, 61], [93, 76, 91], [87, 68, 77]]</pre> In\u00a0[3]: Copied! <pre># \u7edf\u8ba1\u6bcf\u4e2a\u5b66\u751f\u7684\u8003\u8bd5\u5e73\u5747\u5206\nfor idx, name in enumerate(names):\n    temp = scores[idx]\n    avg_score = sum(temp) / len(temp)\n    print(f'{name}\u8003\u8bd5\u5e73\u5747\u5206\u4e3a\uff1a{avg_score:.1f}\u5206')\n</pre> # \u7edf\u8ba1\u6bcf\u4e2a\u5b66\u751f\u7684\u8003\u8bd5\u5e73\u5747\u5206 for idx, name in enumerate(names):     temp = scores[idx]     avg_score = sum(temp) / len(temp)     print(f'{name}\u8003\u8bd5\u5e73\u5747\u5206\u4e3a\uff1a{avg_score:.1f}\u5206') <pre>\u5b59\u609f\u7a7a\u8003\u8bd5\u5e73\u5747\u5206\u4e3a\uff1a97.0\u5206\n\u674e\u5143\u82b3\u8003\u8bd5\u5e73\u5747\u5206\u4e3a\uff1a91.0\u5206\n\u767d\u8d77\u8003\u8bd5\u5e73\u5747\u5206\u4e3a\uff1a72.7\u5206\n\u72c4\u4ec1\u6770\u8003\u8bd5\u5e73\u5747\u5206\u4e3a\uff1a86.7\u5206\n\u8fbe\u6469\u8003\u8bd5\u5e73\u5747\u5206\u4e3a\uff1a77.3\u5206\n</pre> <p>\u603b\u4f53\u65b9\u5dee\uff1a</p> <p>$$ \\sigma^2 = \\frac {1} {N} \\sum_{i=1}^{N} {(x_i - \\mu)^2)} $$</p> <p>\u603b\u4f53\u6807\u51c6\u5dee\uff1a</p> <p>$$ \\sigma = \\sqrt {\\frac {1} {N} \\sum_{i=1}^{N} {(x_i - \\mu)^2)}} $$</p> In\u00a0[4]: Copied! <pre>def mean(nums):\n    \"\"\"\u6c42\u5747\u503c\"\"\"\n    return sum(nums) / len(nums)\n\ndef variance(nums):\n    \"\"\"\u6c42\u65b9\u5dee\"\"\"\n    mean_value = mean(nums)\n    return mean([(num - mean_value) ** 2 for num in nums])\n\ndef stddev(nums):\n    \"\"\"\u6c42\u6807\u51c6\u5dee\"\"\"\n    return variance(nums) ** 0.5\n</pre> def mean(nums):     \"\"\"\u6c42\u5747\u503c\"\"\"     return sum(nums) / len(nums)  def variance(nums):     \"\"\"\u6c42\u65b9\u5dee\"\"\"     mean_value = mean(nums)     return mean([(num - mean_value) ** 2 for num in nums])  def stddev(nums):     \"\"\"\u6c42\u6807\u51c6\u5dee\"\"\"     return variance(nums) ** 0.5 In\u00a0[5]: Copied! <pre>for idx, course in enumerate(courses):\n    temp = [scores[i][idx] for i in range(len(names))]\n    max_score, min_score = max(temp), min(temp)\n    print(f'{course}\u6210\u7ee9\u6700\u9ad8\u5206\uff1a{max_score}\u5206')\n    print(f'{course}\u6210\u7ee9\u6700\u4f4e\u5206\uff1a{min_score}\u5206')\n    print(f'{course}\u6210\u7ee9\u6807\u51c6\u5dee\uff1a{stddev(temp)}')\n</pre> for idx, course in enumerate(courses):     temp = [scores[i][idx] for i in range(len(names))]     max_score, min_score = max(temp), min(temp)     print(f'{course}\u6210\u7ee9\u6700\u9ad8\u5206\uff1a{max_score}\u5206')     print(f'{course}\u6210\u7ee9\u6700\u4f4e\u5206\uff1a{min_score}\u5206')     print(f'{course}\u6210\u7ee9\u6807\u51c6\u5dee\uff1a{stddev(temp)}') <pre>\u8bed\u6587\u6210\u7ee9\u6700\u9ad8\u5206\uff1a99\u5206\n\u8bed\u6587\u6210\u7ee9\u6700\u4f4e\u5206\uff1a63\u5206\n\u8bed\u6587\u6210\u7ee9\u6807\u51c6\u5dee\uff1a12.354756169184402\n\u6570\u5b66\u6210\u7ee9\u6700\u9ad8\u5206\uff1a96\u5206\n\u6570\u5b66\u6210\u7ee9\u6700\u4f4e\u5206\uff1a68\u5206\n\u6570\u5b66\u6210\u7ee9\u6807\u51c6\u5dee\uff1a10.925200226998129\n\u82f1\u8bed\u6210\u7ee9\u6700\u9ad8\u5206\uff1a96\u5206\n\u82f1\u8bed\u6210\u7ee9\u6700\u4f4e\u5206\uff1a61\u5206\n\u82f1\u8bed\u6210\u7ee9\u6807\u51c6\u5dee\uff1a13.047605144240073\n</pre> In\u00a0[6]: Copied! <pre># \u5c06\u5b66\u751f\u53ca\u8003\u8bd5\u6210\u7ee9\u4ee5\u884c\u7684\u65b9\u5f0f\u8f93\u51fa\uff08\u6309\u7167\u5e73\u5747\u5206\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\uff09\nresults = {name: temp for name, temp in zip(names, scores)}\nresults\n</pre> # \u5c06\u5b66\u751f\u53ca\u8003\u8bd5\u6210\u7ee9\u4ee5\u884c\u7684\u65b9\u5f0f\u8f93\u51fa\uff08\u6309\u7167\u5e73\u5747\u5206\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\uff09 results = {name: temp for name, temp in zip(names, scores)} results Out[6]: <pre>{'\u5b59\u609f\u7a7a': [99, 96, 96],\n '\u674e\u5143\u82b3': [90, 90, 93],\n '\u767d\u8d77': [63, 94, 61],\n '\u72c4\u4ec1\u6770': [93, 76, 91],\n '\u8fbe\u6469': [87, 68, 77]}</pre> In\u00a0[7]: Copied! <pre>sorted_keys = sorted(results, key = lambda x: mean(results[x]), reverse = True)\nsorted_keys\n</pre> sorted_keys = sorted(results, key = lambda x: mean(results[x]), reverse = True) sorted_keys Out[7]: <pre>['\u5b59\u609f\u7a7a', '\u674e\u5143\u82b3', '\u72c4\u4ec1\u6770', '\u8fbe\u6469', '\u767d\u8d77']</pre> In\u00a0[8]: Copied! <pre>for key in sorted_keys:\n    verbal, math, english = results[key]\n    print(f'{key}\\t{verbal}\\t{math}\\t{english}')\n</pre> for key in sorted_keys:     verbal, math, english = results[key]     print(f'{key}\\t{verbal}\\t{math}\\t{english}') <pre>\u5b59\u609f\u7a7a\t99\t96\t96\n\u674e\u5143\u82b3\t90\t90\t93\n\u72c4\u4ec1\u6770\t93\t76\t91\n\u8fbe\u6469\t87\t68\t77\n\u767d\u8d77\t63\t94\t61\n</pre> In\u00a0[9]: Copied! <pre>import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n</pre> import numpy as np import pandas as pd import matplotlib.pyplot as plt In\u00a0[10]: Copied! <pre># list ---&gt; \u5d4c\u5957\u5217\u8868\nscores\n</pre> # list ---&gt; \u5d4c\u5957\u5217\u8868 scores Out[10]: <pre>[[99, 96, 96], [90, 90, 93], [63, 94, 61], [93, 76, 91], [87, 68, 77]]</pre> In\u00a0[11]: Copied! <pre># \u901a\u8fc7 array \u51fd\u6570\u5c06 list \u5904\u7406\u6210 ndarray \u5bf9\u8c61\nscores = np.array(scores)\nscores\n</pre> # \u901a\u8fc7 array \u51fd\u6570\u5c06 list \u5904\u7406\u6210 ndarray \u5bf9\u8c61 scores = np.array(scores) scores Out[11]: <pre>array([[99, 96, 96],\n       [90, 90, 93],\n       [63, 94, 61],\n       [93, 76, 91],\n       [87, 68, 77]])</pre> In\u00a0[12]: Copied! <pre># ---------------------&gt; 1 \u8f74\uff08\u6cbf\u7740\u5217\u7684\u65b9\u5411\uff09\n# | array([[97, 84, 68],\n# |        [95, 82, 82],\n# |        [77, 76, 68],\n# |        [84, 78, 82],\n# |        [99, 69, 81]])\n# \u2193\n# 0 \u8f74\uff08\u6cbf\u7740\u884c\u7684\u65b9\u5411\uff09\n</pre> # ---------------------&gt; 1 \u8f74\uff08\u6cbf\u7740\u5217\u7684\u65b9\u5411\uff09 # | array([[97, 84, 68], # |        [95, 82, 82], # |        [77, 76, 68], # |        [84, 78, 82], # |        [99, 69, 81]]) # \u2193 # 0 \u8f74\uff08\u6cbf\u7740\u884c\u7684\u65b9\u5411\uff09 In\u00a0[13]: Copied! <pre>np.round(scores.mean(axis=1), 1)\n</pre> np.round(scores.mean(axis=1), 1) Out[13]: <pre>array([97. , 91. , 72.7, 86.7, 77.3])</pre> In\u00a0[14]: Copied! <pre>scores.max(axis=0)\n</pre> scores.max(axis=0) Out[14]: <pre>array([99, 96, 96])</pre> In\u00a0[15]: Copied! <pre>scores.min(axis=0)\n</pre> scores.min(axis=0) Out[15]: <pre>array([63, 68, 61])</pre> In\u00a0[16]: Copied! <pre>scores.std(axis=0)\n</pre> scores.std(axis=0) Out[16]: <pre>array([12.35475617, 10.92520023, 13.04760514])</pre> In\u00a0[17]: Copied! <pre>scores.var(axis=0)\n</pre> scores.var(axis=0) Out[17]: <pre>array([152.64, 119.36, 170.24])</pre> In\u00a0[18]: Copied! <pre>scores_df = pd.DataFrame(data=scores, columns=courses, index=names)\nscores_df\n</pre> scores_df = pd.DataFrame(data=scores, columns=courses, index=names) scores_df Out[18]: \u8bed\u6587 \u6570\u5b66 \u82f1\u8bed \u5b59\u609f\u7a7a 99 96 96 \u674e\u5143\u82b3 90 90 93 \u767d\u8d77 63 94 61 \u72c4\u4ec1\u6770 93 76 91 \u8fbe\u6469 87 68 77 In\u00a0[19]: Copied! <pre>np.round(scores_df.mean(axis=1), 1)\n</pre> np.round(scores_df.mean(axis=1), 1) Out[19]: <pre>\u5b59\u609f\u7a7a    97.0\n\u674e\u5143\u82b3    91.0\n\u767d\u8d77     72.7\n\u72c4\u4ec1\u6770    86.7\n\u8fbe\u6469     77.3\ndtype: float64</pre> In\u00a0[20]: Copied! <pre>scores_df.max()\n</pre> scores_df.max() Out[20]: <pre>\u8bed\u6587    99\n\u6570\u5b66    96\n\u82f1\u8bed    96\ndtype: int32</pre> In\u00a0[21]: Copied! <pre>scores_df.min()\n</pre> scores_df.min() Out[21]: <pre>\u8bed\u6587    63\n\u6570\u5b66    68\n\u82f1\u8bed    61\ndtype: int32</pre> In\u00a0[22]: Copied! <pre>scores_df['\u5e73\u5747\u5206'] = np.round(scores_df.mean(axis=1), 1)\nscores_df\n</pre> scores_df['\u5e73\u5747\u5206'] = np.round(scores_df.mean(axis=1), 1) scores_df Out[22]: \u8bed\u6587 \u6570\u5b66 \u82f1\u8bed \u5e73\u5747\u5206 \u5b59\u609f\u7a7a 99 96 96 97.0 \u674e\u5143\u82b3 90 90 93 91.0 \u767d\u8d77 63 94 61 72.7 \u72c4\u4ec1\u6770 93 76 91 86.7 \u8fbe\u6469 87 68 77 77.3 In\u00a0[23]: Copied! <pre># \u5c06\u6570\u636e\u5199\u5165 excel \u6587\u4ef6\nscores_df.to_excel('\u8003\u8bd5\u6210\u7ee9\u8868.xlsx')\n</pre> # \u5c06\u6570\u636e\u5199\u5165 excel \u6587\u4ef6 scores_df.to_excel('\u8003\u8bd5\u6210\u7ee9\u8868.xlsx') In\u00a0[24]: Copied! <pre># \u4fee\u6539\u4f7f\u5f97 plt \u652f\u6301\u4e2d\u6587\u5b57\u4f53\n# \u67e5\u770b C:\\Users\\username\\.matplotlib\\fontlist-v330.json \u6587\u4ef6\u627e\u5230\u652f\u6301\u4e2d\u6587\u7684\u5b57\u4f53\nplt.rcParams['font.sans-serif'] = ['FangSong', ]\nplt.rcParams['axes.unicode_minus'] = False\n</pre> # \u4fee\u6539\u4f7f\u5f97 plt \u652f\u6301\u4e2d\u6587\u5b57\u4f53 # \u67e5\u770b C:\\Users\\username\\.matplotlib\\fontlist-v330.json \u6587\u4ef6\u627e\u5230\u652f\u6301\u4e2d\u6587\u7684\u5b57\u4f53 plt.rcParams['font.sans-serif'] = ['FangSong', ] plt.rcParams['axes.unicode_minus'] = False In\u00a0[25]: Copied! <pre># \u77e2\u91cf\u56fe\uff0c\u63d0\u9ad8\u56fe\u7247\u8d28\u91cf\n%config InlineBackend.figure_format = 'svg'\n</pre> # \u77e2\u91cf\u56fe\uff0c\u63d0\u9ad8\u56fe\u7247\u8d28\u91cf %config InlineBackend.figure_format = 'svg' In\u00a0[26]: Copied! <pre># \u751f\u6210\u67f1\u72b6\u56fe\nscores_df.plot(figsize=(8, 4), kind='bar', y=['\u8bed\u6587', '\u6570\u5b66', '\u82f1\u8bed'])\n# \u6a2a\u5750\u6807\u6587\u5b57\u6a2a\u7740\u663e\u793a\nplt.xticks(rotation=0)\n# \u4fdd\u5b58\u56fe\u7684\u64cd\u4f5c\u5fc5\u987b\u5728\u663e\u793a\u56fe\u4e4b\u524d\uff0c\u663e\u793a\u56fe\u540e\u56fe\u5c31\u88ab\u91ca\u653e\u4e86 (svg\u77e2\u91cf\u56fe\u66f4\u6e05\u6670)\nplt.savefig('\u6210\u7ee9\u67f1\u72b6\u56fe.svg')\n# \u663e\u793a\u56fe\nplt.show()\n</pre> # \u751f\u6210\u67f1\u72b6\u56fe scores_df.plot(figsize=(8, 4), kind='bar', y=['\u8bed\u6587', '\u6570\u5b66', '\u82f1\u8bed']) # \u6a2a\u5750\u6807\u6587\u5b57\u6a2a\u7740\u663e\u793a plt.xticks(rotation=0) # \u4fdd\u5b58\u56fe\u7684\u64cd\u4f5c\u5fc5\u987b\u5728\u663e\u793a\u56fe\u4e4b\u524d\uff0c\u663e\u793a\u56fe\u540e\u56fe\u5c31\u88ab\u91ca\u653e\u4e86 (svg\u77e2\u91cf\u56fe\u66f4\u6e05\u6670) plt.savefig('\u6210\u7ee9\u67f1\u72b6\u56fe.svg') # \u663e\u793a\u56fe plt.show() In\u00a0[27]: Copied! <pre># \u65b9\u6cd5\u4e00\uff1a\u901a\u8fc7 array \u51fd\u6570\u5c06 list \u5904\u7406\u6210 ndarray \u5bf9\u8c61\narray1 = np.array([1, 2, 10, 20, 100])\narray1\n</pre> # \u65b9\u6cd5\u4e00\uff1a\u901a\u8fc7 array \u51fd\u6570\u5c06 list \u5904\u7406\u6210 ndarray \u5bf9\u8c61 array1 = np.array([1, 2, 10, 20, 100]) array1 Out[27]: <pre>array([  1,   2,  10,  20, 100])</pre> In\u00a0[28]: Copied! <pre>type(array1)\n</pre> type(array1) Out[28]: <pre>numpy.ndarray</pre> In\u00a0[29]: Copied! <pre># \u65b9\u6cd5\u4e8c\uff1a\u6307\u5b9a\u4e00\u4e2a\u8303\u56f4\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61\narray2 = np.arange(1, 20, 2)\narray2\n</pre> # \u65b9\u6cd5\u4e8c\uff1a\u6307\u5b9a\u4e00\u4e2a\u8303\u56f4\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61 array2 = np.arange(1, 20, 2) array2 Out[29]: <pre>array([ 1,  3,  5,  7,  9, 11, 13, 15, 17, 19])</pre> In\u00a0[30]: Copied! <pre># \u65b9\u6cd5\u4e09\uff1a\u6307\u5b9a\u8303\u56f4\u548c\u5143\u7d20\u7684\u4e2a\u6570\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61\narray3 = np.linspace(-5, 5, 10)\narray3\n</pre> # \u65b9\u6cd5\u4e09\uff1a\u6307\u5b9a\u8303\u56f4\u548c\u5143\u7d20\u7684\u4e2a\u6570\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61 array3 = np.linspace(-5, 5, 10) array3 Out[30]: <pre>array([-5.        , -3.88888889, -2.77777778, -1.66666667, -0.55555556,\n        0.55555556,  1.66666667,  2.77777778,  3.88888889,  5.        ])</pre> In\u00a0[31]: Copied! <pre># \u65b9\u6cd5\u56db\uff1a\u7528\u968f\u673a\u751f\u6210\u5143\u7d20\u7684\u65b9\u5f0f\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61\narray4 = np.random.random(10)\narray4\n</pre> # \u65b9\u6cd5\u56db\uff1a\u7528\u968f\u673a\u751f\u6210\u5143\u7d20\u7684\u65b9\u5f0f\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61 array4 = np.random.random(10) array4 Out[31]: <pre>array([0.73711155, 0.78882694, 0.56130063, 0.94364568, 0.65777035,\n       0.19102854, 0.47503744, 0.34101279, 0.1630476 , 0.46981312])</pre> In\u00a0[32]: Copied! <pre>array5 = np.random.randint(1, 11, 10) # [1, 11) \u8303\u56f4\u5185\u4ea7\u751f 10 \u4e2a\u968f\u673a\u6574\u6570\narray5\n</pre> array5 = np.random.randint(1, 11, 10) # [1, 11) \u8303\u56f4\u5185\u4ea7\u751f 10 \u4e2a\u968f\u673a\u6574\u6570 array5 Out[32]: <pre>array([7, 8, 9, 8, 7, 5, 4, 6, 4, 8])</pre> In\u00a0[33]: Copied! <pre># \u751f\u621020\u4e2a\u968f\u673a\u6570\uff0c\u6ee1\u8db3\u6b63\u6001\u5206\u5e03\uff0c\u5747\u503c\u4e3a0\uff0c\u6807\u51c6\u5dee\u4e3a1\narray6 = np.random.normal(0, 1, 20)\narray6\n</pre> # \u751f\u621020\u4e2a\u968f\u673a\u6570\uff0c\u6ee1\u8db3\u6b63\u6001\u5206\u5e03\uff0c\u5747\u503c\u4e3a0\uff0c\u6807\u51c6\u5dee\u4e3a1 array6 = np.random.normal(0, 1, 20) array6 Out[33]: <pre>array([ 0.37869439, -1.06110403,  0.56734816, -0.20760227, -0.79489914,\n       -0.99655416, -0.65429533,  0.05704808,  0.02838821, -0.63978021,\n       -0.19239243, -0.07290331,  1.00191672, -0.82146079, -0.6455396 ,\n        0.34893548,  1.1030459 , -0.22275866, -3.22014377,  2.80015162])</pre> In\u00a0[34]: Copied! <pre>plt.hist(array6, bins=10) # bins\u8868\u793a\u6570\u636e\u5206\u621010\u7ec4\nplt.show()\n</pre> plt.hist(array6, bins=10) # bins\u8868\u793a\u6570\u636e\u5206\u621010\u7ec4 plt.show() In\u00a0[35]: Copied! <pre># \u8fed\u4ee3\u5668 - \u5b9e\u73b0\u4e86\u8fed\u4ee3\u5668\u534f\u8bae\u7684\u5bf9\u8c61\n# \u8fed\u4ee3\u5668\u534f\u8bae\u662f\u4e24\u4e2a\u9b54\u672f\u65b9\u6cd5\uff1a__iter__\u3001__next__\n# \u751f\u6210\u5668 - \u8bed\u6cd5\u7b80\u5316\u5347\u7ea7\u7248\u7684\u8fed\u4ee3\u5668\n\ndef fib(num):\n    a, b = 0, 1\n    for _ in range(num):\n        a, b = b, a + b\n        yield a\n\ngen = fib(20)\ngen\n</pre> # \u8fed\u4ee3\u5668 - \u5b9e\u73b0\u4e86\u8fed\u4ee3\u5668\u534f\u8bae\u7684\u5bf9\u8c61 # \u8fed\u4ee3\u5668\u534f\u8bae\u662f\u4e24\u4e2a\u9b54\u672f\u65b9\u6cd5\uff1a__iter__\u3001__next__ # \u751f\u6210\u5668 - \u8bed\u6cd5\u7b80\u5316\u5347\u7ea7\u7248\u7684\u8fed\u4ee3\u5668  def fib(num):     a, b = 0, 1     for _ in range(num):         a, b = b, a + b         yield a  gen = fib(20) gen Out[35]: <pre>&lt;generator object fib at 0x000001A8A6F4CB30&gt;</pre> In\u00a0[36]: Copied! <pre># \u65b9\u6cd5\u4e94\uff1a\u901a\u8fc7\u8fed\u4ee3\u5668\u3001\u751f\u6210\u5668\u83b7\u53d6\u6570\u636e\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61\narray7 = np.fromiter(gen, dtype=np.int32)\narray7\n</pre> # \u65b9\u6cd5\u4e94\uff1a\u901a\u8fc7\u8fed\u4ee3\u5668\u3001\u751f\u6210\u5668\u83b7\u53d6\u6570\u636e\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61 array7 = np.fromiter(gen, dtype=np.int32) array7 Out[36]: <pre>array([   1,    1,    2,    3,    5,    8,   13,   21,   34,   55,   89,\n        144,  233,  377,  610,  987, 1597, 2584, 4181, 6765])</pre> In\u00a0[37]: Copied! <pre># \u65b9\u6cd5\u516d\uff1a\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u89e3\u6790\u6587\u672c\u5185\u5bb9\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61\nwith open('data/news.txt', 'r', encoding='utf-8') as file:\n    temp = np.fromregex(file, r'\\d+(?=\u767e\u4e07\u7f8e\u5143)', dtype=[('aaa', np.int32)])\ntemp['aaa']\n# r'\\d+(?=\u767e\u4e07\u7f8e\u5143)': \u5339\u914d\u4e00\u4e2a\u6216\u591a\u4e2a\u6570\u5b57\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6570\u5b57\u540e\u9762\u7d27\u8ddf\u7740 \u767e\u4e07\u7f8e\u5143\n# r \u524d\u7f00\u8868\u793a\u4e00\u4e2a\u539f\u59cb\u5b57\u7b26\u4e32\uff08raw string\uff09\u3002\u539f\u59cb\u5b57\u7b26\u4e32\u7684\u76ee\u7684\u662f\u8ba9\u5b57\u7b26\u4e32\u4e2d\u7684\u53cd\u659c\u6760 \\ \n# \u4e0d\u88ab\u89e3\u91ca\u4e3a\u8f6c\u4e49\u5b57\u7b26\uff0c\u800c\u662f\u76f4\u63a5\u4f5c\u4e3a\u5b57\u9762\u610f\u4e49\u4e0a\u7684\u53cd\u659c\u6760\u3002\n</pre> # \u65b9\u6cd5\u516d\uff1a\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u89e3\u6790\u6587\u672c\u5185\u5bb9\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61 with open('data/news.txt', 'r', encoding='utf-8') as file:     temp = np.fromregex(file, r'\\d+(?=\u767e\u4e07\u7f8e\u5143)', dtype=[('aaa', np.int32)]) temp['aaa'] # r'\\d+(?=\u767e\u4e07\u7f8e\u5143)': \u5339\u914d\u4e00\u4e2a\u6216\u591a\u4e2a\u6570\u5b57\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6570\u5b57\u540e\u9762\u7d27\u8ddf\u7740 \u767e\u4e07\u7f8e\u5143 # r \u524d\u7f00\u8868\u793a\u4e00\u4e2a\u539f\u59cb\u5b57\u7b26\u4e32\uff08raw string\uff09\u3002\u539f\u59cb\u5b57\u7b26\u4e32\u7684\u76ee\u7684\u662f\u8ba9\u5b57\u7b26\u4e32\u4e2d\u7684\u53cd\u659c\u6760 \\  # \u4e0d\u88ab\u89e3\u91ca\u4e3a\u8f6c\u4e49\u5b57\u7b26\uff0c\u800c\u662f\u76f4\u63a5\u4f5c\u4e3a\u5b57\u9762\u610f\u4e49\u4e0a\u7684\u53cd\u659c\u6760\u3002 Out[37]: <pre>array([2356266,  577290])</pre> In\u00a0[38]: Copied! <pre># \u5143\u7d20\u4e2a\u6570\narray1.size\n</pre> # \u5143\u7d20\u4e2a\u6570 array1.size Out[38]: <pre>5</pre> In\u00a0[39]: Copied! <pre># \u5f62\u72b6\narray1.shape\n</pre> # \u5f62\u72b6 array1.shape Out[39]: <pre>(5,)</pre> In\u00a0[40]: Copied! <pre># \u7ef4\u5ea6\narray1.ndim\n</pre> # \u7ef4\u5ea6 array1.ndim Out[40]: <pre>1</pre> In\u00a0[41]: Copied! <pre># \u6570\u636e\u7c7b\u578b\narray1.dtype\n</pre> # \u6570\u636e\u7c7b\u578b array1.dtype Out[41]: <pre>dtype('int32')</pre> In\u00a0[42]: Copied! <pre># \u5143\u7d20\u5360\u7528\u5185\u5b58\u7a7a\u95f4\u7684\u5927\u5c0f\uff08\u5b57\u8282\uff09\narray1.itemsize\n</pre> # \u5143\u7d20\u5360\u7528\u5185\u5b58\u7a7a\u95f4\u7684\u5927\u5c0f\uff08\u5b57\u8282\uff09 array1.itemsize Out[42]: <pre>4</pre> In\u00a0[43]: Copied! <pre># \u6240\u6709\u5143\u7d20\u5360\u7528\u5185\u5b58\u7a7a\u95f4\u7684\u5927\u5c0f\uff08\u5b57\u8282\uff09\narray1.nbytes\n</pre> # \u6240\u6709\u5143\u7d20\u5360\u7528\u5185\u5b58\u7a7a\u95f4\u7684\u5927\u5c0f\uff08\u5b57\u8282\uff09 array1.nbytes Out[43]: <pre>20</pre> In\u00a0[44]: Copied! <pre># \u65b9\u6cd5\u4e00\uff1a\u901a\u8fc7array\u51fd\u6570\u5c06\u5d4c\u5957\u5217\u8868\u5904\u7406\u6210\u4e8c\u7ef4\u6570\u7ec4\narray8 = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\narray8\n</pre> # \u65b9\u6cd5\u4e00\uff1a\u901a\u8fc7array\u51fd\u6570\u5c06\u5d4c\u5957\u5217\u8868\u5904\u7406\u6210\u4e8c\u7ef4\u6570\u7ec4 array8 = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) array8 Out[44]: <pre>array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9]])</pre> In\u00a0[45]: Copied! <pre># \u65b9\u6cd5\u4e8c\uff1a\u901a\u8fc7\u5bf9\u4e00\u7ef4\u6570\u7ec4\u8c03\u5f62\u53d8\u6210\u4e8c\u7ef4\u6570\u7ec4\ntemp = np.arange(1, 10)\narray9 = temp.reshape((3, 3))\narray9\n</pre> # \u65b9\u6cd5\u4e8c\uff1a\u901a\u8fc7\u5bf9\u4e00\u7ef4\u6570\u7ec4\u8c03\u5f62\u53d8\u6210\u4e8c\u7ef4\u6570\u7ec4 temp = np.arange(1, 10) array9 = temp.reshape((3, 3)) array9 Out[45]: <pre>array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9]])</pre> In\u00a0[46]: Copied! <pre># \u65b9\u6cd5\u4e09\uff1a\u901a\u8fc7\u751f\u6210\u968f\u673a\u5143\u7d20\u521b\u5efa\u4e8c\u7ef4\u6570\u7ec4\narray10 = np.random.randint(60, 101, (5, 3))\narray10\n</pre> # \u65b9\u6cd5\u4e09\uff1a\u901a\u8fc7\u751f\u6210\u968f\u673a\u5143\u7d20\u521b\u5efa\u4e8c\u7ef4\u6570\u7ec4 array10 = np.random.randint(60, 101, (5, 3)) array10 Out[46]: <pre>array([[63, 86, 84],\n       [88, 67, 84],\n       [72, 82, 65],\n       [62, 93, 67],\n       [71, 86, 89]])</pre> In\u00a0[47]: Copied! <pre># \u65b9\u6cd5\u56db\uff1a\u521b\u5efa\u51680\u3001\u51681\u3001\u6307\u5b9a\u503c\u7684\u4e8c\u7ef4\u6570\u7ec4\narray11 = np.zeros((5, 4), dtype='i8') # i8 \u4e3a int64\narray11\n</pre> # \u65b9\u6cd5\u56db\uff1a\u521b\u5efa\u51680\u3001\u51681\u3001\u6307\u5b9a\u503c\u7684\u4e8c\u7ef4\u6570\u7ec4 array11 = np.zeros((5, 4), dtype='i8') # i8 \u4e3a int64 array11 Out[47]: <pre>array([[0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0]], dtype=int64)</pre> In\u00a0[48]: Copied! <pre>array12 = np.ones((5, 4), dtype='i8')\narray12\n</pre> array12 = np.ones((5, 4), dtype='i8') array12 Out[48]: <pre>array([[1, 1, 1, 1],\n       [1, 1, 1, 1],\n       [1, 1, 1, 1],\n       [1, 1, 1, 1],\n       [1, 1, 1, 1]], dtype=int64)</pre> In\u00a0[49]: Copied! <pre>array13 = np.full((5, 4), 100, dtype='i8')\narray13\n</pre> array13 = np.full((5, 4), 100, dtype='i8') array13 Out[49]: <pre>array([[100, 100, 100, 100],\n       [100, 100, 100, 100],\n       [100, 100, 100, 100],\n       [100, 100, 100, 100],\n       [100, 100, 100, 100]], dtype=int64)</pre> In\u00a0[50]: Copied! <pre># \u65b9\u6cd5\u4e94\uff1a\u521b\u5efa\u5355\u4f4d\u77e9\u9635\narray14 = np.eye(5, dtype='i8')\narray14\n</pre> # \u65b9\u6cd5\u4e94\uff1a\u521b\u5efa\u5355\u4f4d\u77e9\u9635 array14 = np.eye(5, dtype='i8') array14 Out[50]: <pre>array([[1, 0, 0, 0, 0],\n       [0, 1, 0, 0, 0],\n       [0, 0, 1, 0, 0],\n       [0, 0, 0, 1, 0],\n       [0, 0, 0, 0, 1]], dtype=int64)</pre> In\u00a0[51]: Copied! <pre># \u8bfb\u53d6\u56fe\u7247\u521b\u5efa\u4e09\u7ef4\u6570\u7ec4\narray15 = plt.imread('data/guido.jpg')\narray15\n</pre> # \u8bfb\u53d6\u56fe\u7247\u521b\u5efa\u4e09\u7ef4\u6570\u7ec4 array15 = plt.imread('data/guido.jpg') array15 Out[51]: <pre>array([[[ 24,  23,  19],\n        [ 30,  29,  25],\n        [ 31,  30,  26],\n        ...,\n        [ 25,  24,  20],\n        [ 25,  24,  20],\n        [ 25,  24,  20]],\n\n       [[ 29,  28,  24],\n        [ 36,  35,  31],\n        [ 37,  36,  32],\n        ...,\n        [ 31,  30,  26],\n        [ 31,  30,  26],\n        [ 31,  30,  26]],\n\n       [[ 31,  30,  26],\n        [ 37,  36,  32],\n        [ 39,  38,  34],\n        ...,\n        [ 32,  31,  27],\n        [ 32,  31,  27],\n        [ 32,  31,  27]],\n\n       ...,\n\n       [[192, 142,  91],\n        [231, 180, 127],\n        [229, 176, 124],\n        ...,\n        [ 73,  66,  56],\n        [ 71,  64,  54],\n        [ 69,  62,  52]],\n\n       [[191, 141,  88],\n        [230, 179, 126],\n        [228, 175, 123],\n        ...,\n        [ 75,  68,  58],\n        [ 73,  66,  56],\n        [ 69,  65,  54]],\n\n       [[190, 140,  87],\n        [229, 178, 125],\n        [226, 173, 121],\n        ...,\n        [ 77,  70,  60],\n        [ 74,  67,  57],\n        [ 71,  67,  56]]], dtype=uint8)</pre> In\u00a0[52]: Copied! <pre>plt.imshow(array15)\n</pre> plt.imshow(array15) Out[52]: <pre>&lt;matplotlib.image.AxesImage at 0x1a8a71c4970&gt;</pre> In\u00a0[53]: Copied! <pre>plt.imshow(array15[::-1])\n</pre> plt.imshow(array15[::-1]) Out[53]: <pre>&lt;matplotlib.image.AxesImage at 0x1a8a7119c40&gt;</pre> In\u00a0[54]: Copied! <pre>plt.imshow(array15[:,::-1])\n</pre> plt.imshow(array15[:,::-1]) Out[54]: <pre>&lt;matplotlib.image.AxesImage at 0x1a8a74c1a30&gt;</pre> In\u00a0[55]: Copied! <pre>plt.imshow(array15[30:350, 90:300])\n</pre> plt.imshow(array15[30:350, 90:300]) Out[55]: <pre>&lt;matplotlib.image.AxesImage at 0x1a8a76803d0&gt;</pre> In\u00a0[56]: Copied! <pre>plt.imshow(array15[::10, ::10])\n</pre> plt.imshow(array15[::10, ::10]) Out[56]: <pre>&lt;matplotlib.image.AxesImage at 0x1a8a7834460&gt;</pre> In\u00a0[57]: Copied! <pre>array10\n</pre> array10 Out[57]: <pre>array([[63, 86, 84],\n       [88, 67, 84],\n       [72, 82, 65],\n       [62, 93, 67],\n       [71, 86, 89]])</pre> In\u00a0[58]: Copied! <pre># \u83b7\u53d6\u67d0\u4e2a\u6307\u5b9a\u7684\u5143\u7d20\narray10[1, 2]\n</pre> # \u83b7\u53d6\u67d0\u4e2a\u6307\u5b9a\u7684\u5143\u7d20 array10[1, 2] Out[58]: <pre>84</pre> In\u00a0[59]: Copied! <pre># \u83b7\u53d6\u4e00\u90e8\u5206\u7684\u5143\u7d20\narray10[3:, 1:]\n</pre> # \u83b7\u53d6\u4e00\u90e8\u5206\u7684\u5143\u7d20 array10[3:, 1:] Out[59]: <pre>array([[93, 67],\n       [86, 89]])</pre> In\u00a0[60]: Copied! <pre># \u7d22\u5f15\narray10[2]\n</pre> # \u7d22\u5f15 array10[2] Out[60]: <pre>array([72, 82, 65])</pre> In\u00a0[61]: Copied! <pre># \u5207\u7247\uff08\u9017\u53f7\u524d\u540e\u5747\u6709\u5192\u53f7\uff0c\u5171\u4e24\u4e2a\u5192\u53f7\uff09\narray10[2:3, :]\n</pre> # \u5207\u7247\uff08\u9017\u53f7\u524d\u540e\u5747\u6709\u5192\u53f7\uff0c\u5171\u4e24\u4e2a\u5192\u53f7\uff09 array10[2:3, :] Out[61]: <pre>array([[72, 82, 65]])</pre> In\u00a0[62]: Copied! <pre>array2\n</pre> array2 Out[62]: <pre>array([ 1,  3,  5,  7,  9, 11, 13, 15, 17, 19])</pre> In\u00a0[63]: Copied! <pre># \u82b1\u5f0f\u7d22\u5f15\uff08fancy index) \uff08\u6ce8\u610f\u4e24\u4e2a[]\uff09\narray2[[0, 1, 2, -3, -2, -1]]\n</pre> # \u82b1\u5f0f\u7d22\u5f15\uff08fancy index) \uff08\u6ce8\u610f\u4e24\u4e2a[]\uff09 array2[[0, 1, 2, -3, -2, -1]] Out[63]: <pre>array([ 1,  3,  5, 15, 17, 19])</pre> In\u00a0[64]: Copied! <pre>array10\n</pre> array10 Out[64]: <pre>array([[63, 86, 84],\n       [88, 67, 84],\n       [72, 82, 65],\n       [62, 93, 67],\n       [71, 86, 89]])</pre> In\u00a0[65]: Copied! <pre>array10[[0, 1, 4], [0, 1, 2]]\n</pre> array10[[0, 1, 4], [0, 1, 2]] Out[65]: <pre>array([63, 67, 89])</pre> In\u00a0[66]: Copied! <pre># \u5e03\u5c14\u7d22\u5f15\narray2[array2 &gt; 5]\n</pre> # \u5e03\u5c14\u7d22\u5f15 array2[array2 &gt; 5] Out[66]: <pre>array([ 7,  9, 11, 13, 15, 17, 19])</pre> In\u00a0[67]: Copied! <pre>array16 = np.arange(1, 10)\narray16\n</pre> array16 = np.arange(1, 10) array16 Out[67]: <pre>array([1, 2, 3, 4, 5, 6, 7, 8, 9])</pre> In\u00a0[68]: Copied! <pre>array16[(array16 &gt; 5) &amp; (array16 % 2 != 0)]\n# \u6ce8\u610f\u4e0d\u80fd\u4f7f\u7528 and\uff0c\u56e0\u4e3a and\u8981\u6c42\u4e24\u8fb9\u90fd\u662f\u5e03\u5c14\u503c\uff0c\u800c\u8fd9\u91cc\u4e24\u8fb9\u90fd\u662f\u4e00\u4e32\u5e03\u5c14\u503c\n</pre> array16[(array16 &gt; 5) &amp; (array16 % 2 != 0)] # \u6ce8\u610f\u4e0d\u80fd\u4f7f\u7528 and\uff0c\u56e0\u4e3a and\u8981\u6c42\u4e24\u8fb9\u90fd\u662f\u5e03\u5c14\u503c\uff0c\u800c\u8fd9\u91cc\u4e24\u8fb9\u90fd\u662f\u4e00\u4e32\u5e03\u5c14\u503c Out[68]: <pre>array([7, 9])</pre> In\u00a0[69]: Copied! <pre>array16[(array16 &gt; 5) | (array16 % 2 != 0)]\n</pre> array16[(array16 &gt; 5) | (array16 % 2 != 0)] Out[69]: <pre>array([1, 3, 5, 6, 7, 8, 9])</pre> In\u00a0[70]: Copied! <pre>array16[(array16 &gt; 5) | ~(array16 % 2 != 0)]\n</pre> array16[(array16 &gt; 5) | ~(array16 % 2 != 0)] Out[70]: <pre>array([2, 4, 6, 7, 8, 9])</pre> In\u00a0[71]: Copied! <pre>array1 = np.random.randint(10, 50, 10)\narray1\n</pre> array1 = np.random.randint(10, 50, 10) array1 Out[71]: <pre>array([46, 45, 30, 32, 40, 25, 43, 25, 38, 20])</pre> In\u00a0[72]: Copied! <pre>array1.sum() # np.sum(array1)\n</pre> array1.sum() # np.sum(array1) Out[72]: <pre>344</pre> In\u00a0[73]: Copied! <pre>array1.mean() # np.mean(array1)\n</pre> array1.mean() # np.mean(array1) Out[73]: <pre>34.4</pre> In\u00a0[74]: Copied! <pre>array1.max() # np.amax(array1)\n</pre> array1.max() # np.amax(array1) Out[74]: <pre>46</pre> In\u00a0[75]: Copied! <pre>array1.min() # np.amin(array1)\n</pre> array1.min() # np.amin(array1) Out[75]: <pre>20</pre> In\u00a0[76]: Copied! <pre>np.median(array1) # \u6ce8\u610f\u6ca1\u6709array1.median()\n</pre> np.median(array1) # \u6ce8\u610f\u6ca1\u6709array1.median() Out[76]: <pre>35.0</pre> In\u00a0[77]: Copied! <pre>array1.var() # np.var(array1)\n</pre> array1.var() # np.var(array1) Out[77]: <pre>77.44000000000001</pre> In\u00a0[78]: Copied! <pre>array1.std() # np.std(array1)\n</pre> array1.std() # np.std(array1) Out[78]: <pre>8.8</pre> In\u00a0[79]: Copied! <pre>array1.cumsum() # np.cumsum(array1)\n</pre> array1.cumsum() # np.cumsum(array1) Out[79]: <pre>array([ 46,  91, 121, 153, 193, 218, 261, 286, 324, 344])</pre> In\u00a0[80]: Copied! <pre>channel_a = np.array([42, 45, 62, 56, 35, 79, 67, 74, 30, 28, 54])\nchannel_b = np.array([65, 36, 123, 25, 45, 32, 26, 78, 57, 51, 34])\nchannel_c = np.array([82, 36, 21, 23, 25, 43, 52, 59, 60, 76, 95])\n</pre> channel_a = np.array([42, 45, 62, 56, 35, 79, 67, 74, 30, 28, 54]) channel_b = np.array([65, 36, 123, 25, 45, 32, 26, 78, 57, 51, 34]) channel_c = np.array([82, 36, 21, 23, 25, 43, 52, 59, 60, 76, 95]) In\u00a0[81]: Copied! <pre>channel_a.mean(), channel_a.var()\n</pre> channel_a.mean(), channel_a.var() Out[81]: <pre>(52.0, 277.8181818181818)</pre> In\u00a0[82]: Copied! <pre>channel_b.mean(), channel_b.var()\n</pre> channel_b.mean(), channel_b.var() Out[82]: <pre>(52.0, 758.7272727272727)</pre> In\u00a0[83]: Copied! <pre>channel_c.mean(), channel_c.var()\n</pre> channel_c.mean(), channel_c.var() Out[83]: <pre>(52.0, 573.2727272727273)</pre> In\u00a0[84]: Copied! <pre># \u53ea\u6709pandas\u6709\u63cf\u8ff0\u6027\u7edf\u8ba1\u4fe1\u606f\uff0cnumpy\u6ca1\u6709\npd.Series(channel_a).describe()\n</pre> # \u53ea\u6709pandas\u6709\u63cf\u8ff0\u6027\u7edf\u8ba1\u4fe1\u606f\uff0cnumpy\u6ca1\u6709 pd.Series(channel_a).describe() Out[84]: <pre>count    11.000000\nmean     52.000000\nstd      17.481419\nmin      28.000000\n25%      38.500000\n50%      54.000000\n75%      64.500000\nmax      79.000000\ndtype: float64</pre> In\u00a0[85]: Copied! <pre>q1 = np.quantile(channel_a, 0.25)\nq1\n</pre> q1 = np.quantile(channel_a, 0.25) q1 Out[85]: <pre>38.5</pre> In\u00a0[86]: Copied! <pre>q3 = np.quantile(channel_a, 0.75)\nq3\n</pre> q3 = np.quantile(channel_a, 0.75) q3 Out[86]: <pre>64.5</pre> In\u00a0[87]: Copied! <pre># \u56db\u5206\u4f4d\u8ddd\u79bb, \u8d8a\u5c0f\u8bf4\u660e\u6570\u636e\u8d8a\u96c6\u4e2d\niqr = q3 - q1\niqr\n</pre> # \u56db\u5206\u4f4d\u8ddd\u79bb, \u8d8a\u5c0f\u8bf4\u660e\u6570\u636e\u8d8a\u96c6\u4e2d iqr = q3 - q1 iqr Out[87]: <pre>26.0</pre> In\u00a0[88]: Copied! <pre>array2 = np.array([5, 6, 6, 6, 6, 8, 10, 500])\narray2\n</pre> array2 = np.array([5, 6, 6, 6, 6, 8, 10, 500]) array2 Out[88]: <pre>array([  5,   6,   6,   6,   6,   8,  10, 500])</pre> <p>\u7528\u6570\u503c\u5224\u5b9a\u6cd5\u68c0\u6d4b\u7591\u4f3c\u5f02\u5e38\u503c\uff08\u79bb\u7fa4\u70b9\uff09\uff1a</p> <p>$$ data &lt; Q_1 - 1.5 \\times IQR $$ \u6216 $$ data &gt; Q_3 + 1.5 \\times IQR $$</p> In\u00a0[89]: Copied! <pre>q1, q3 = np.quantile(array2, [0.25, 0.75])\nq1, q3\n</pre> q1, q3 = np.quantile(array2, [0.25, 0.75]) q1, q3 Out[89]: <pre>(6.0, 8.5)</pre> In\u00a0[90]: Copied! <pre>iqr = q3 - q1\niqr\n</pre> iqr = q3 - q1 iqr Out[90]: <pre>2.5</pre> In\u00a0[91]: Copied! <pre>array2[(array2 &lt; q1 - 1.5 * iqr) | (array2 &gt; q3 + 1.5 * iqr)]\n</pre> array2[(array2 &lt; q1 - 1.5 * iqr) | (array2 &gt; q3 + 1.5 * iqr)] Out[91]: <pre>array([500])</pre> <p></p> In\u00a0[92]: Copied! <pre>def outerlies_by_zscore(array, threshold=3):\n    \"\"\"Z-score\u5224\u5b9a\u6cd5\u68c0\u6d4b\u79bb\u7fa4\u70b9\"\"\"\n    mu, sigma = array.mean(), array.std()\n    return array[np.abs((array - mu) / sigma) &gt; threshold]\n</pre> def outerlies_by_zscore(array, threshold=3):     \"\"\"Z-score\u5224\u5b9a\u6cd5\u68c0\u6d4b\u79bb\u7fa4\u70b9\"\"\"     mu, sigma = array.mean(), array.std()     return array[np.abs((array - mu) / sigma) &gt; threshold] In\u00a0[93]: Copied! <pre>array3 = np.arange(1, 11)\narray3[-1] = 500\narray3\n</pre> array3 = np.arange(1, 11) array3[-1] = 500 array3 Out[93]: <pre>array([  1,   2,   3,   4,   5,   6,   7,   8,   9, 500])</pre> In\u00a0[94]: Copied! <pre>outerlies_by_zscore(array3)\n</pre> outerlies_by_zscore(array3) Out[94]: <pre>array([], dtype=int32)</pre> In\u00a0[95]: Copied! <pre>np.tile(array3, 10) # tile \u662f 1 ~ 500 \u6b21\u5e8f\u91cd\u590d\uff0c\u800crepeat\u662f\u6bcf\u4e2a\u5143\u7d20\u5206\u522b\u91cd\u590d\n</pre> np.tile(array3, 10) # tile \u662f 1 ~ 500 \u6b21\u5e8f\u91cd\u590d\uff0c\u800crepeat\u662f\u6bcf\u4e2a\u5143\u7d20\u5206\u522b\u91cd\u590d Out[95]: <pre>array([  1,   2,   3,   4,   5,   6,   7,   8,   9, 500,   1,   2,   3,\n         4,   5,   6,   7,   8,   9, 500,   1,   2,   3,   4,   5,   6,\n         7,   8,   9, 500,   1,   2,   3,   4,   5,   6,   7,   8,   9,\n       500,   1,   2,   3,   4,   5,   6,   7,   8,   9, 500,   1,   2,\n         3,   4,   5,   6,   7,   8,   9, 500,   1,   2,   3,   4,   5,\n         6,   7,   8,   9, 500,   1,   2,   3,   4,   5,   6,   7,   8,\n         9, 500,   1,   2,   3,   4,   5,   6,   7,   8,   9, 500,   1,\n         2,   3,   4,   5,   6,   7,   8,   9, 500])</pre> In\u00a0[96]: Copied! <pre>array4 = np.repeat(array3[:-1], 10) # \u9664\u4e86\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5176\u4ed6\u90fd\u91cd\u590d10\u6b21\narray4\n</pre> array4 = np.repeat(array3[:-1], 10) # \u9664\u4e86\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5176\u4ed6\u90fd\u91cd\u590d10\u6b21 array4 Out[96]: <pre>array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3,\n       3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5,\n       5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7,\n       7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9,\n       9, 9])</pre> In\u00a0[97]: Copied! <pre>array4 = np.append(array4, array3[-1])\narray4\n</pre> array4 = np.append(array4, array3[-1]) array4 Out[97]: <pre>array([  1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   2,   2,   2,\n         2,   2,   2,   2,   2,   2,   2,   3,   3,   3,   3,   3,   3,\n         3,   3,   3,   3,   4,   4,   4,   4,   4,   4,   4,   4,   4,\n         4,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   6,   6,\n         6,   6,   6,   6,   6,   6,   6,   6,   7,   7,   7,   7,   7,\n         7,   7,   7,   7,   7,   8,   8,   8,   8,   8,   8,   8,   8,\n         8,   8,   9,   9,   9,   9,   9,   9,   9,   9,   9,   9, 500])</pre> In\u00a0[98]: Copied! <pre>outerlies_by_zscore(array4)\n</pre> outerlies_by_zscore(array4) Out[98]: <pre>array([500])</pre> In\u00a0[99]: Copied! <pre>array4.dtype\n</pre> array4.dtype Out[99]: <pre>dtype('int32')</pre> In\u00a0[100]: Copied! <pre>array4.astype(np.float64) # \u6ce8\u610f\u662f\u53ea\u6539\u53d8\u65b0\u8fd4\u56de\u7684\u6570\u7ec4\u7684\u6570\u636e\u7c7b\u578b\uff0c\u539f\u6570\u7ec4\u5e76\u6ca1\u6709\u53d8\n</pre> array4.astype(np.float64) # \u6ce8\u610f\u662f\u53ea\u6539\u53d8\u65b0\u8fd4\u56de\u7684\u6570\u7ec4\u7684\u6570\u636e\u7c7b\u578b\uff0c\u539f\u6570\u7ec4\u5e76\u6ca1\u6709\u53d8 Out[100]: <pre>array([  1.,   1.,   1.,   1.,   1.,   1.,   1.,   1.,   1.,   1.,   2.,\n         2.,   2.,   2.,   2.,   2.,   2.,   2.,   2.,   2.,   3.,   3.,\n         3.,   3.,   3.,   3.,   3.,   3.,   3.,   3.,   4.,   4.,   4.,\n         4.,   4.,   4.,   4.,   4.,   4.,   4.,   5.,   5.,   5.,   5.,\n         5.,   5.,   5.,   5.,   5.,   5.,   6.,   6.,   6.,   6.,   6.,\n         6.,   6.,   6.,   6.,   6.,   7.,   7.,   7.,   7.,   7.,   7.,\n         7.,   7.,   7.,   7.,   8.,   8.,   8.,   8.,   8.,   8.,   8.,\n         8.,   8.,   8.,   9.,   9.,   9.,   9.,   9.,   9.,   9.,   9.,\n         9.,   9., 500.])</pre> In\u00a0[101]: Copied! <pre>array4.dtype\n</pre> array4.dtype Out[101]: <pre>dtype('int32')</pre> <p>\u5e8f\u5217\u5316\uff1a\u628a\u5bf9\u8c61\u5904\u7406\u6210\u5b57\u7b26\u4e32\uff08str\uff09\u6216\u5b57\u8282\u4e32\uff08bytes\uff09</p> <p>\u53cd\u5e8f\u5217\u5316\uff1a\u628a\u5b57\u7b26\u4e32\u6216\u5b57\u8282\u4e32\u8fd8\u539f\u6210\u5bf9\u8c61</p> <ul> <li>json\u6a21\u5757\uff1a\u5bf9\u8c61 -&gt; \u5b57\u7b26\u4e32\uff08\u901a\u7528\uff0c\u8de8\u8bed\u8a00\uff09<ul> <li>dump/dumps: \u5e8f\u5217\u5316\uff0cdump\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u5176\u5199\u5165\u6587\u4ef6\uff1bdumps\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de\u8fd9\u4e2a\u5b57\u7b26\u4e32</li> <li>load/loads: \u53cd\u5e8f\u5217\u5316</li> </ul> </li> <li>pickle\u6a21\u5757\uff1a\u5bf9\u8c61 -&gt; \u5b57\u8282\u4e32\uff08\u4ec5python\u652f\u6301\uff09<ul> <li>dump/dumps</li> <li>load/loads</li> </ul> </li> </ul> In\u00a0[102]: Copied! <pre>type('hello')\n</pre> type('hello') Out[102]: <pre>str</pre> In\u00a0[103]: Copied! <pre>type(b'hello')\n</pre> type(b'hello') Out[103]: <pre>bytes</pre> In\u00a0[104]: Copied! <pre>import json\n\na = [1, 2, 3]\njson.dumps(a)\n</pre> import json  a = [1, 2, 3] json.dumps(a) Out[104]: <pre>'[1, 2, 3]'</pre> In\u00a0[105]: Copied! <pre>b = {'name': 'andrew', 'age': 42}\njson.dumps(b)\n</pre> b = {'name': 'andrew', 'age': 42} json.dumps(b) Out[105]: <pre>'{\"name\": \"andrew\", \"age\": 42}'</pre> In\u00a0[106]: Copied! <pre>import pickle\n\na = [1, 2, 3]\npickle.dumps(a)\n</pre> import pickle  a = [1, 2, 3] pickle.dumps(a) Out[106]: <pre>b'\\x80\\x04\\x95\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x00]\\x94(K\\x01K\\x02K\\x03e.'</pre> In\u00a0[107]: Copied! <pre>b = {'name': 'andrew', 'age': 42}\npickle.dumps(b)\n</pre> b = {'name': 'andrew', 'age': 42} pickle.dumps(b) Out[107]: <pre>b'\\x80\\x04\\x95\\x1d\\x00\\x00\\x00\\x00\\x00\\x00\\x00}\\x94(\\x8c\\x04name\\x94\\x8c\\x06andrew\\x94\\x8c\\x03age\\x94K*u.'</pre> In\u00a0[108]: Copied! <pre>with open('data/array3', 'wb') as file:\n    array3.dump(file)\n</pre> with open('data/array3', 'wb') as file:     array3.dump(file) In\u00a0[109]: Copied! <pre>with open('data/array3', 'rb') as file:\n    array6 = np.load(file, allow_pickle=True)\narray6\n</pre> with open('data/array3', 'rb') as file:     array6 = np.load(file, allow_pickle=True) array6 Out[109]: <pre>array([  1,   2,   3,   4,   5,   6,   7,   8,   9, 500])</pre> In\u00a0[110]: Copied! <pre>id(array3)\n</pre> id(array3) Out[110]: <pre>1823878305808</pre> In\u00a0[111]: Copied! <pre>id(array6)\n</pre> id(array6) Out[111]: <pre>1823878701776</pre> In\u00a0[112]: Copied! <pre>array3 is array6\n</pre> array3 is array6 Out[112]: <pre>False</pre> In\u00a0[113]: Copied! <pre>array6.fill(100)\narray6\n</pre> array6.fill(100) array6 Out[113]: <pre>array([100, 100, 100, 100, 100, 100, 100, 100, 100, 100])</pre> In\u00a0[114]: Copied! <pre>array7 = np.arange(1, 11).reshape(5, 2)\narray7\n</pre> array7 = np.arange(1, 11).reshape(5, 2) array7 Out[114]: <pre>array([[ 1,  2],\n       [ 3,  4],\n       [ 5,  6],\n       [ 7,  8],\n       [ 9, 10]])</pre> In\u00a0[115]: Copied! <pre>array7.flatten()    # \u884c\u4f18\u5148\n</pre> array7.flatten()    # \u884c\u4f18\u5148 Out[115]: <pre>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])</pre> In\u00a0[116]: Copied! <pre>array7.flatten('F') # \u5217\u4f18\u5148\n</pre> array7.flatten('F') # \u5217\u4f18\u5148 Out[116]: <pre>array([ 1,  3,  5,  7,  9,  2,  4,  6,  8, 10])</pre> In\u00a0[117]: Copied! <pre>array7.nonzero()    # \u8fd4\u56de\u6240\u6709\u975e\u96f6\u503c\u7684\u5750\u6807\n</pre> array7.nonzero()    # \u8fd4\u56de\u6240\u6709\u975e\u96f6\u503c\u7684\u5750\u6807 Out[117]: <pre>(array([0, 0, 1, 1, 2, 2, 3, 3, 4, 4], dtype=int64),\n array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1], dtype=int64))</pre> In\u00a0[118]: Copied! <pre>array8 = np.random.randint(1, 100, 10)\narray8\n</pre> array8 = np.random.randint(1, 100, 10) array8 Out[118]: <pre>array([84, 78, 60,  9, 96, 29, 79, 78, 42, 97])</pre> In\u00a0[119]: Copied! <pre>np.sort(array8) # \u539f\u6570\u7ec4\u4e0d\u53d8\uff0c\u8fd4\u56de\u65b0\u7684\u6392\u5e8f\u597d\u7684\u6570\u7ec4\n</pre> np.sort(array8) # \u539f\u6570\u7ec4\u4e0d\u53d8\uff0c\u8fd4\u56de\u65b0\u7684\u6392\u5e8f\u597d\u7684\u6570\u7ec4 Out[119]: <pre>array([ 9, 29, 42, 60, 78, 78, 79, 84, 96, 97])</pre> In\u00a0[120]: Copied! <pre>array8\n</pre> array8 Out[120]: <pre>array([84, 78, 60,  9, 96, 29, 79, 78, 42, 97])</pre> In\u00a0[121]: Copied! <pre>array8.sort() # \u5bf9array\u8fdb\u884c\u5c31\u5730\u6392\u5e8f\n</pre> array8.sort() # \u5bf9array\u8fdb\u884c\u5c31\u5730\u6392\u5e8f In\u00a0[122]: Copied! <pre>array8\n</pre> array8 Out[122]: <pre>array([ 9, 29, 42, 60, 78, 78, 79, 84, 96, 97])</pre> In\u00a0[123]: Copied! <pre>array7\n</pre> array7 Out[123]: <pre>array([[ 1,  2],\n       [ 3,  4],\n       [ 5,  6],\n       [ 7,  8],\n       [ 9, 10]])</pre> In\u00a0[124]: Copied! <pre>array7.transpose() # \u4ea4\u6362\u8f74\uff0c\u7b49\u4ef7\u4e8eswapaxes\n</pre> array7.transpose() # \u4ea4\u6362\u8f74\uff0c\u7b49\u4ef7\u4e8eswapaxes Out[124]: <pre>array([[ 1,  3,  5,  7,  9],\n       [ 2,  4,  6,  8, 10]])</pre> In\u00a0[125]: Copied! <pre>array7.swapaxes(0, 1)\n</pre> array7.swapaxes(0, 1) Out[125]: <pre>array([[ 1,  3,  5,  7,  9],\n       [ 2,  4,  6,  8, 10]])</pre> In\u00a0[126]: Copied! <pre>array7.tolist() # ndarray\u8f6c\u6362\u6210list\n</pre> array7.tolist() # ndarray\u8f6c\u6362\u6210list Out[126]: <pre>[[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]]</pre> In\u00a0[127]: Copied! <pre>array9 = np.array([1, 2, 1, 1, 1, 3, 3, 2, 1])\narray9\n</pre> array9 = np.array([1, 2, 1, 1, 1, 3, 3, 2, 1]) array9 Out[127]: <pre>array([1, 2, 1, 1, 1, 3, 3, 2, 1])</pre> In\u00a0[128]: Copied! <pre>np.unique(array9)\n</pre> np.unique(array9) Out[128]: <pre>array([1, 2, 3])</pre> In\u00a0[129]: Copied! <pre>array10 = np.array([[1, 1, 1], [2, 2, 2]]) # \u6ce8\u610f\u662f\u5927\u5217\u8868\u91cc\u653e\u82e5\u5e72\u4e2a\u5c0f\u5217\u8868\narray10\n</pre> array10 = np.array([[1, 1, 1], [2, 2, 2]]) # \u6ce8\u610f\u662f\u5927\u5217\u8868\u91cc\u653e\u82e5\u5e72\u4e2a\u5c0f\u5217\u8868 array10 Out[129]: <pre>array([[1, 1, 1],\n       [2, 2, 2]])</pre> In\u00a0[130]: Copied! <pre>array11 = np.array([[3, 3, 3], [4, 4, 4]])\narray11\n</pre> array11 = np.array([[3, 3, 3], [4, 4, 4]]) array11 Out[130]: <pre>array([[3, 3, 3],\n       [4, 4, 4]])</pre> In\u00a0[131]: Copied! <pre>np.hstack((array10, array11))\n</pre> np.hstack((array10, array11)) Out[131]: <pre>array([[1, 1, 1, 3, 3, 3],\n       [2, 2, 2, 4, 4, 4]])</pre> In\u00a0[132]: Copied! <pre>np.vstack((array10, array11))\n</pre> np.vstack((array10, array11)) Out[132]: <pre>array([[1, 1, 1],\n       [2, 2, 2],\n       [3, 3, 3],\n       [4, 4, 4]])</pre> In\u00a0[133]: Copied! <pre>np.stack((array10, array11), axis=0) # \u4e8c\u7ef4\u53d8\u4e09\u7ef4\n</pre> np.stack((array10, array11), axis=0) # \u4e8c\u7ef4\u53d8\u4e09\u7ef4 Out[133]: <pre>array([[[1, 1, 1],\n        [2, 2, 2]],\n\n       [[3, 3, 3],\n        [4, 4, 4]]])</pre> In\u00a0[134]: Copied! <pre>np.stack((array10, array11), axis=1) # \u4e8c\u7ef4\u53d8\u4e09\u7ef4\n</pre> np.stack((array10, array11), axis=1) # \u4e8c\u7ef4\u53d8\u4e09\u7ef4 Out[134]: <pre>array([[[1, 1, 1],\n        [3, 3, 3]],\n\n       [[2, 2, 2],\n        [4, 4, 4]]])</pre> In\u00a0[135]: Copied! <pre>array12 = np.concatenate((array10, array11), axis=0) # \u7b49\u4ef7\u4e8evstack\narray12\n</pre> array12 = np.concatenate((array10, array11), axis=0) # \u7b49\u4ef7\u4e8evstack array12  Out[135]: <pre>array([[1, 1, 1],\n       [2, 2, 2],\n       [3, 3, 3],\n       [4, 4, 4]])</pre> In\u00a0[136]: Copied! <pre>array13 = np.concatenate((array10, array11), axis=1) # \u7b49\u4ef7\u4e8ehstack\narray13\n</pre> array13 = np.concatenate((array10, array11), axis=1) # \u7b49\u4ef7\u4e8ehstack array13 Out[136]: <pre>array([[1, 1, 1, 3, 3, 3],\n       [2, 2, 2, 4, 4, 4]])</pre> In\u00a0[137]: Copied! <pre>array12\n</pre> array12 Out[137]: <pre>array([[1, 1, 1],\n       [2, 2, 2],\n       [3, 3, 3],\n       [4, 4, 4]])</pre> In\u00a0[138]: Copied! <pre>np.vsplit(array12, 2)\n</pre> np.vsplit(array12, 2) Out[138]: <pre>[array([[1, 1, 1],\n        [2, 2, 2]]),\n array([[3, 3, 3],\n        [4, 4, 4]])]</pre> In\u00a0[139]: Copied! <pre>np.hsplit(array12, 3)\n</pre> np.hsplit(array12, 3) Out[139]: <pre>[array([[1],\n        [2],\n        [3],\n        [4]]),\n array([[1],\n        [2],\n        [3],\n        [4]]),\n array([[1],\n        [2],\n        [3],\n        [4]])]</pre> In\u00a0[140]: Copied! <pre>array13\n</pre> array13 Out[140]: <pre>array([[1, 1, 1, 3, 3, 3],\n       [2, 2, 2, 4, 4, 4]])</pre> In\u00a0[141]: Copied! <pre>np.split(array13, 2)\n</pre> np.split(array13, 2) Out[141]: <pre>[array([[1, 1, 1, 3, 3, 3]]), array([[2, 2, 2, 4, 4, 4]])]</pre> In\u00a0[142]: Copied! <pre>np.split(array13, 3, axis=1)\n</pre> np.split(array13, 3, axis=1) Out[142]: <pre>[array([[1, 1],\n        [2, 2]]),\n array([[1, 3],\n        [2, 4]]),\n array([[3, 3],\n        [4, 4]])]</pre> In\u00a0[143]: Copied! <pre>array14 = np.random.randint(10, 100, 5)\narray14\n</pre> array14 = np.random.randint(10, 100, 5) array14 Out[143]: <pre>array([96, 54, 68, 60, 76])</pre> In\u00a0[144]: Copied! <pre>array14[array14 &lt;= 70]\n</pre> array14[array14 &lt;= 70] Out[144]: <pre>array([54, 68, 60])</pre> In\u00a0[145]: Copied! <pre>np.extract(array14 &lt;= 70, array14)\n</pre> np.extract(array14 &lt;= 70, array14) Out[145]: <pre>array([54, 68, 60])</pre> In\u00a0[146]: Copied! <pre># \u5bf9\u4e8e\u5076\u6570\u539f\u5c01\u4e0d\u52a8\uff0c\u5bf9\u4e8e\u5947\u6570\u8fdb\u884c\u5e73\u65b9\nnp.select([array14 % 2 == 0, array14 % 2 != 0], [array14, array14 ** 2])\n</pre> # \u5bf9\u4e8e\u5076\u6570\u539f\u5c01\u4e0d\u52a8\uff0c\u5bf9\u4e8e\u5947\u6570\u8fdb\u884c\u5e73\u65b9 np.select([array14 % 2 == 0, array14 % 2 != 0], [array14, array14 ** 2]) Out[146]: <pre>array([96, 54, 68, 60, 76])</pre> In\u00a0[147]: Copied! <pre># \u5bf9\u4e8e\u5076\u6570\u539f\u5c01\u4e0d\u52a8\uff0c\u5426\u5219\u8d4b\u503c0\nnp.where(array14 % 2 == 0, array14, 0)\n</pre> # \u5bf9\u4e8e\u5076\u6570\u539f\u5c01\u4e0d\u52a8\uff0c\u5426\u5219\u8d4b\u503c0 np.where(array14 % 2 == 0, array14, 0) Out[147]: <pre>array([96, 54, 68, 60, 76])</pre> In\u00a0[148]: Copied! <pre>array15 = np.arange(1, 10).reshape(3, 3)\narray15\n</pre> array15 = np.arange(1, 10).reshape(3, 3) array15 Out[148]: <pre>array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9]])</pre> In\u00a0[149]: Copied! <pre>np.resize(array15, (5, 3)) # reshape\u5fc5\u987b\u5143\u7d20\u4e2a\u6570\u4e00\u81f4\uff0cresize\u5219\u4e0d\u9700\u8981\n</pre> np.resize(array15, (5, 3)) # reshape\u5fc5\u987b\u5143\u7d20\u4e2a\u6570\u4e00\u81f4\uff0cresize\u5219\u4e0d\u9700\u8981 Out[149]: <pre>array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9],\n       [1, 2, 3],\n       [4, 5, 6]])</pre> In\u00a0[150]: Copied! <pre>np.put(array15, 5, 100) # \u66ff\u6362\u6570\u7ec4\u4e2d\u6307\u5b9a\u7d22\u5f15\u7684\u5143\u7d20\narray15\n</pre> np.put(array15, 5, 100) # \u66ff\u6362\u6570\u7ec4\u4e2d\u6307\u5b9a\u7d22\u5f15\u7684\u5143\u7d20 array15 Out[150]: <pre>array([[  1,   2,   3],\n       [  4,   5, 100],\n       [  7,   8,   9]])</pre> In\u00a0[151]: Copied! <pre>np.put(array15, [1, 2], 100)\narray15\n</pre> np.put(array15, [1, 2], 100) array15 Out[151]: <pre>array([[  1, 100, 100],\n       [  4,   5, 100],\n       [  7,   8,   9]])</pre> In\u00a0[152]: Copied! <pre>np.put(array15, array15 == 100, 99) # \u66ff\u6362\u6570\u7ec4\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20\narray15\n</pre> np.put(array15, array15 == 100, 99) # \u66ff\u6362\u6570\u7ec4\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20 array15 Out[152]: <pre>array([[ 99,  99, 100],\n       [  4,   5, 100],\n       [  7,   8,   9]])</pre> In\u00a0[153]: Copied! <pre>array16 = np.arange(1, 10).reshape((3, 3))\narray16\n</pre> array16 = np.arange(1, 10).reshape((3, 3)) array16 Out[153]: <pre>array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9]])</pre> In\u00a0[154]: Copied! <pre>array17 = np.array([1, 1, 1])\nprint(array16.shape, array17.shape)\n</pre> array17 = np.array([1, 1, 1]) print(array16.shape, array17.shape) <pre>(3, 3) (3,)\n</pre> In\u00a0[155]: Copied! <pre>array16 + array17\n</pre> array16 + array17 Out[155]: <pre>array([[ 2,  3,  4],\n       [ 5,  6,  7],\n       [ 8,  9, 10]])</pre> In\u00a0[156]: Copied! <pre>array18 = np.array([[1, 1, 1]])\nprint(array16.shape, array18.shape)\n</pre> array18 = np.array([[1, 1, 1]]) print(array16.shape, array18.shape) <pre>(3, 3) (1, 3)\n</pre> In\u00a0[157]: Copied! <pre>array16 + array18\n</pre> array16 + array18 Out[157]: <pre>array([[ 2,  3,  4],\n       [ 5,  6,  7],\n       [ 8,  9, 10]])</pre> In\u00a0[158]: Copied! <pre>x = np.linspace(-2 * np.pi, 2 * np.pi, 120)\nx\n</pre> x = np.linspace(-2 * np.pi, 2 * np.pi, 120) x Out[158]: <pre>array([-6.28318531, -6.17758555, -6.0719858 , -5.96638605, -5.86078629,\n       -5.75518654, -5.64958679, -5.54398704, -5.43838728, -5.33278753,\n       -5.22718778, -5.12158802, -5.01598827, -4.91038852, -4.80478876,\n       -4.69918901, -4.59358926, -4.48798951, -4.38238975, -4.27679   ,\n       -4.17119025, -4.06559049, -3.95999074, -3.85439099, -3.74879123,\n       -3.64319148, -3.53759173, -3.43199197, -3.32639222, -3.22079247,\n       -3.11519272, -3.00959296, -2.90399321, -2.79839346, -2.6927937 ,\n       -2.58719395, -2.4815942 , -2.37599444, -2.27039469, -2.16479494,\n       -2.05919518, -1.95359543, -1.84799568, -1.74239593, -1.63679617,\n       -1.53119642, -1.42559667, -1.31999691, -1.21439716, -1.10879741,\n       -1.00319765, -0.8975979 , -0.79199815, -0.68639839, -0.58079864,\n       -0.47519889, -0.36959914, -0.26399938, -0.15839963, -0.05279988,\n        0.05279988,  0.15839963,  0.26399938,  0.36959914,  0.47519889,\n        0.58079864,  0.68639839,  0.79199815,  0.8975979 ,  1.00319765,\n        1.10879741,  1.21439716,  1.31999691,  1.42559667,  1.53119642,\n        1.63679617,  1.74239593,  1.84799568,  1.95359543,  2.05919518,\n        2.16479494,  2.27039469,  2.37599444,  2.4815942 ,  2.58719395,\n        2.6927937 ,  2.79839346,  2.90399321,  3.00959296,  3.11519272,\n        3.22079247,  3.32639222,  3.43199197,  3.53759173,  3.64319148,\n        3.74879123,  3.85439099,  3.95999074,  4.06559049,  4.17119025,\n        4.27679   ,  4.38238975,  4.48798951,  4.59358926,  4.69918901,\n        4.80478876,  4.91038852,  5.01598827,  5.12158802,  5.22718778,\n        5.33278753,  5.43838728,  5.54398704,  5.64958679,  5.75518654,\n        5.86078629,  5.96638605,  6.0719858 ,  6.17758555,  6.28318531])</pre> In\u00a0[159]: Copied! <pre>y = np.sin(x)\ny\n</pre> y = np.sin(x) y Out[159]: <pre>array([ 2.44929360e-16,  1.05403600e-01,  2.09632904e-01,  3.11526698e-01,\n        4.09949789e-01,  5.03805651e-01,  5.92048639e-01,  6.73695644e-01,\n        7.47837039e-01,  8.13646821e-01,  8.70391805e-01,  9.17439797e-01,\n        9.54266640e-01,  9.80462047e-01,  9.95734176e-01,  9.99912882e-01,\n        9.92951609e-01,  9.74927912e-01,  9.46042594e-01,  9.06617463e-01,\n        8.57091753e-01,  7.98017227e-01,  7.30052033e-01,  6.53953365e-01,\n        5.70569037e-01,  4.80828028e-01,  3.85730138e-01,  2.86334849e-01,\n        1.83749518e-01,  7.91170425e-02, -2.63968718e-02, -1.31616700e-01,\n       -2.35370193e-01, -3.36501439e-01, -4.33883739e-01, -5.26432163e-01,\n       -6.13115633e-01, -6.92968413e-01, -7.65100867e-01, -8.28709371e-01,\n       -8.83085266e-01, -9.27622754e-01, -9.61825643e-01, -9.85312882e-01,\n       -9.97822801e-01, -9.99216026e-01, -9.89477037e-01, -9.68714334e-01,\n       -9.37159234e-01, -8.95163291e-01, -8.43194380e-01, -7.81831482e-01,\n       -7.11758240e-01, -6.33755336e-01, -5.48691796e-01, -4.57515308e-01,\n       -3.61241666e-01, -2.60943449e-01, -1.57738074e-01, -5.27753471e-02,\n        5.27753471e-02,  1.57738074e-01,  2.60943449e-01,  3.61241666e-01,\n        4.57515308e-01,  5.48691796e-01,  6.33755336e-01,  7.11758240e-01,\n        7.81831482e-01,  8.43194380e-01,  8.95163291e-01,  9.37159234e-01,\n        9.68714334e-01,  9.89477037e-01,  9.99216026e-01,  9.97822801e-01,\n        9.85312882e-01,  9.61825643e-01,  9.27622754e-01,  8.83085266e-01,\n        8.28709371e-01,  7.65100867e-01,  6.92968413e-01,  6.13115633e-01,\n        5.26432163e-01,  4.33883739e-01,  3.36501439e-01,  2.35370193e-01,\n        1.31616700e-01,  2.63968718e-02, -7.91170425e-02, -1.83749518e-01,\n       -2.86334849e-01, -3.85730138e-01, -4.80828028e-01, -5.70569037e-01,\n       -6.53953365e-01, -7.30052033e-01, -7.98017227e-01, -8.57091753e-01,\n       -9.06617463e-01, -9.46042594e-01, -9.74927912e-01, -9.92951609e-01,\n       -9.99912882e-01, -9.95734176e-01, -9.80462047e-01, -9.54266640e-01,\n       -9.17439797e-01, -8.70391805e-01, -8.13646821e-01, -7.47837039e-01,\n       -6.73695644e-01, -5.92048639e-01, -5.03805651e-01, -4.09949789e-01,\n       -3.11526698e-01, -2.09632904e-01, -1.05403600e-01, -2.44929360e-16])</pre> In\u00a0[160]: Copied! <pre>plt.plot(x, y)\nplt.show()\n</pre> plt.plot(x, y) plt.show() <p>$$ A \\cdot B = \\sum a_ib_i $$</p> <p>$$ A \\cdot B = |A||B|cos\\theta $$</p> In\u00a0[161]: Copied! <pre>a = np.array([1, 2, 3])\nb = np.array([3, 4, 5])\nnp.dot(a, b)\n</pre> a = np.array([1, 2, 3]) b = np.array([3, 4, 5]) np.dot(a, b) Out[161]: <pre>26</pre> In\u00a0[162]: Copied! <pre># linear algebra\nnp.linalg.norm(a) # a\u7684\u6a21\n</pre> # linear algebra np.linalg.norm(a) # a\u7684\u6a21 Out[162]: <pre>3.7416573867739413</pre> In\u00a0[163]: Copied! <pre>np.linalg.norm(b)\n</pre> np.linalg.norm(b) Out[163]: <pre>7.0710678118654755</pre> In\u00a0[164]: Copied! <pre>np.dot(a, b) / np.linalg.norm(a) / np.linalg.norm(b)\n</pre> np.dot(a, b) / np.linalg.norm(a) / np.linalg.norm(b) Out[164]: <pre>0.9827076298239907</pre> In\u00a0[165]: Copied! <pre>np.rad2deg(np.arccos(np.dot(a, b) / np.linalg.norm(a) / np.linalg.norm(b)))\n</pre> np.rad2deg(np.arccos(np.dot(a, b) / np.linalg.norm(a) / np.linalg.norm(b))) Out[165]: <pre>10.670695265781017</pre> In\u00a0[166]: Copied! <pre># numpy \u5b98\u65b9\u4e0d\u5efa\u8bae\u4f7f\u7528matrix\uff0c\u5e94\u5f53\u4f7f\u7528ndarray\nm1 = np.matrix('1 2; 3 4')\nm1\n</pre> # numpy \u5b98\u65b9\u4e0d\u5efa\u8bae\u4f7f\u7528matrix\uff0c\u5e94\u5f53\u4f7f\u7528ndarray m1 = np.matrix('1 2; 3 4') m1 Out[166]: <pre>matrix([[1, 2],\n        [3, 4]])</pre> In\u00a0[167]: Copied! <pre>m1.A\n</pre> m1.A Out[167]: <pre>array([[1, 2],\n       [3, 4]])</pre> In\u00a0[168]: Copied! <pre>m1.A1\n</pre> m1.A1 Out[168]: <pre>array([1, 2, 3, 4])</pre> In\u00a0[169]: Copied! <pre>m1.T # \u8f6c\u7f6e\n</pre> m1.T # \u8f6c\u7f6e Out[169]: <pre>matrix([[1, 3],\n        [2, 4]])</pre> In\u00a0[170]: Copied! <pre>m1.swapaxes(0, 1)\n</pre> m1.swapaxes(0, 1) Out[170]: <pre>matrix([[1, 3],\n        [2, 4]])</pre> In\u00a0[171]: Copied! <pre>m1.transpose()\n</pre> m1.transpose() Out[171]: <pre>matrix([[1, 3],\n        [2, 4]])</pre> In\u00a0[172]: Copied! <pre>m1.I # \u9006\u77e9\u9635\n</pre> m1.I # \u9006\u77e9\u9635 Out[172]: <pre>matrix([[-2. ,  1. ],\n        [ 1.5, -0.5]])</pre> In\u00a0[173]: Copied! <pre>m2 = np.matrix('1 0 2; -1 3 1')\nm2\n</pre> m2 = np.matrix('1 0 2; -1 3 1') m2 Out[173]: <pre>matrix([[ 1,  0,  2],\n        [-1,  3,  1]])</pre> In\u00a0[174]: Copied! <pre>m3 = np.mat([[3, 1], [2, 1], [1, 0]])\nm3\n</pre> m3 = np.mat([[3, 1], [2, 1], [1, 0]]) m3 Out[174]: <pre>matrix([[3, 1],\n        [2, 1],\n        [1, 0]])</pre> In\u00a0[175]: Copied! <pre>m2 * m3 # \u77e9\u9635\u4e58\u6cd5\uff08\u4e0d\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\uff09\n</pre> m2 * m3 # \u77e9\u9635\u4e58\u6cd5\uff08\u4e0d\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\uff09 Out[175]: <pre>matrix([[5, 1],\n        [4, 2]])</pre> In\u00a0[176]: Copied! <pre>m4 = np.asmatrix(np.arange(1, 10).reshape((3, 3)))\nm4\n</pre> m4 = np.asmatrix(np.arange(1, 10).reshape((3, 3))) m4 Out[176]: <pre>matrix([[1, 2, 3],\n        [4, 5, 6],\n        [7, 8, 9]])</pre> In\u00a0[177]: Copied! <pre>np.linalg.det(m4) # determinant, \u8ba1\u7b97\u77e9\u9635\u884c\u5217\u5f0f\u7684\u503c\uff0c\u4e3a0\u8868\u793a\u4e0d\u53ef\u9006\u77e9\u9635\n</pre> np.linalg.det(m4) # determinant, \u8ba1\u7b97\u77e9\u9635\u884c\u5217\u5f0f\u7684\u503c\uff0c\u4e3a0\u8868\u793a\u4e0d\u53ef\u9006\u77e9\u9635 Out[177]: <pre>-9.51619735392994e-16</pre> In\u00a0[178]: Copied! <pre>np.linalg.matrix_rank(m4) # \u8ba1\u7b97\u77e9\u9635\u7684\u79e9\uff08\u7ebf\u6027\u65e0\u5173\u7684\u5411\u91cf\u7684\u6570\u91cf\uff09\n</pre> np.linalg.matrix_rank(m4) # \u8ba1\u7b97\u77e9\u9635\u7684\u79e9\uff08\u7ebf\u6027\u65e0\u5173\u7684\u5411\u91cf\u7684\u6570\u91cf\uff09 Out[178]: <pre>2</pre> In\u00a0[179]: Copied! <pre>array2 = m2.A\narray2\n</pre> array2 = m2.A array2 Out[179]: <pre>array([[ 1,  0,  2],\n       [-1,  3,  1]])</pre> In\u00a0[180]: Copied! <pre>array3 = m3.A\narray3\n</pre> array3 = m3.A array3 Out[180]: <pre>array([[3, 1],\n       [2, 1],\n       [1, 0]])</pre> In\u00a0[181]: Copied! <pre># \u6570\u7ec4\u5bf9\u8c61\u7684\u77e9\u9635\u4e58\u6cd5\u662f @\narray2 @ array3\n</pre> # \u6570\u7ec4\u5bf9\u8c61\u7684\u77e9\u9635\u4e58\u6cd5\u662f @ array2 @ array3 Out[181]: <pre>array([[5, 1],\n       [4, 2]])</pre> In\u00a0[182]: Copied! <pre># \u6570\u7ec4\u5bf9\u8c61\u7684\u77e9\u9635\u6c42\u9006\u77e9\u9635\narray1 = m1.A\nnp.linalg.inv(array1)\n</pre> # \u6570\u7ec4\u5bf9\u8c61\u7684\u77e9\u9635\u6c42\u9006\u77e9\u9635 array1 = m1.A np.linalg.inv(array1) Out[182]: <pre>array([[-2. ,  1. ],\n       [ 1.5, -0.5]])</pre> In\u00a0[183]: Copied! <pre># \u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\nA = np.array([[1, 2, 1], [3, 7, 2], [2, 2, 1]])\nb = np.array([8, 23, 9]).reshape((-1, 1)) # -1 \u8868\u793a\u884c\u81ea\u52a8\u8ba1\u7b97\uff0c1\u662f\u6307\u5b9a\u4e00\u5217\n</pre> # \u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4 A = np.array([[1, 2, 1], [3, 7, 2], [2, 2, 1]]) b = np.array([8, 23, 9]).reshape((-1, 1)) # -1 \u8868\u793a\u884c\u81ea\u52a8\u8ba1\u7b97\uff0c1\u662f\u6307\u5b9a\u4e00\u5217 In\u00a0[184]: Copied! <pre>A\n</pre> A Out[184]: <pre>array([[1, 2, 1],\n       [3, 7, 2],\n       [2, 2, 1]])</pre> In\u00a0[185]: Copied! <pre>b\n</pre> b Out[185]: <pre>array([[ 8],\n       [23],\n       [ 9]])</pre> In\u00a0[186]: Copied! <pre>C = np.hstack((A, b))\nC\n</pre> C = np.hstack((A, b)) C Out[186]: <pre>array([[ 1,  2,  1,  8],\n       [ 3,  7,  2, 23],\n       [ 2,  2,  1,  9]])</pre> In\u00a0[187]: Copied! <pre>np.linalg.matrix_rank(A)\n</pre> np.linalg.matrix_rank(A) Out[187]: <pre>3</pre> In\u00a0[188]: Copied! <pre>np.linalg.matrix_rank(C)\n</pre> np.linalg.matrix_rank(C) Out[188]: <pre>3</pre> <p>$$ A \\cdot x = b $$</p> <p>$$ A^{-1} \\cdot A \\cdot x = A^{-1} \\cdot b $$</p> In\u00a0[189]: Copied! <pre>np.linalg.inv(A) @ b\n</pre> np.linalg.inv(A) @ b Out[189]: <pre>array([[1.],\n       [2.],\n       [3.]])</pre> In\u00a0[190]: Copied! <pre># \u76f4\u63a5\u7528solve\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\nnp.linalg.solve(A, b)\n</pre> # \u76f4\u63a5\u7528solve\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4 np.linalg.solve(A, b) Out[190]: <pre>array([[1.],\n       [2.],\n       [3.]])</pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/jupyter/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-numpy/#numpy","title":"\u5b9e\u64cdNumpy\u00b6","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/jupyter/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-numpy/","title":"\u8d44\u6599\u00b6","text":"<ul> <li>\u89c6\u9891</li> <li>\u6587\u6863</li> </ul>"},{"location":"%E8%AF%AD%E8%A8%80/Python/jupyter/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-numpy/#11","title":"1.1 \u70ed\u8eab\u7ec3\u4e60\u00b6","text":"<p>\u7528\u968f\u673a\u7684\u65b9\u5f0f\u751f\u62105\u4e2a\u5b66\u751f3\u95e8\u8bfe\u7a0b\u7684\u8003\u8bd5\u6210\u7ee9\uff0c\u5b8c\u6210\u4e0b\u5217\u64cd\u4f5c\uff1a</p> <ol> <li>\u7edf\u8ba1\u6bcf\u4e2a\u5b66\u751f\u7684\u8003\u8bd5\u5e73\u5747\u5206</li> <li>\u7edf\u8ba1\u6bcf\u95e8\u8bfe\u7684\u6700\u9ad8\u5206\u3001\u6700\u4f4e\u5206\u3001\u6807\u51c6\u5dee</li> <li>\u5c06\u5b66\u751f\u53ca\u5176\u8003\u8bd5\u6210\u7ee9\u4ee5\u884c\u7684\u65b9\u5f0f\u8f93\u51fa\uff08\u6309\u5e73\u5747\u5206\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\uff09</li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/jupyter/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-numpy/#12-python","title":"1.2 Python\u6570\u636e\u5206\u6790\u4e09\u5927\u795e\u5668\u00b6","text":"<pre><code>1. numpy - Numerial Python - ndarray - \u4fdd\u5b58\u6570\u636e\uff0c\u5b8c\u6210\u6279\u91cf\u7684\u8fd0\u7b97\u548c\u5904\u7406\n2. pandas - Panel Data Set - Series/DataFrame - \u5c01\u88c5\u4e86\u6570\u636e\u5206\u6790\u9700\u8981\u7684\u5404\u79cd\u65b9\u6cd5\n3. matplotlib - \u7ed8\u5236\u7edf\u8ba1\u56fe\u8868</code></pre> <p>\u5b89\u88c5\u547d\u4ee4:</p> <pre><code>pip install -U numpy pandas matplotlib\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/jupyter/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-numpy/#13-numpy","title":"1.3 NumPy\u7684\u5e94\u7528\u00b6","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/jupyter/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-numpy/#131-","title":"1.3.1 \u521b\u5efa\u6570\u7ec4\u5bf9\u8c61 - \u4e00\u7ef4\u6570\u7ec4\u00b6","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/jupyter/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-numpy/#132-","title":"1.3.2 \u521b\u5efa\u6570\u7ec4\u5bf9\u8c61 - \u4e8c\u7ef4\u6570\u7ec4\u00b6","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/jupyter/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-numpy/#133","title":"1.3.3 \u6570\u7ec4\u5bf9\u8c61\u7684\u7d22\u5f15\u548c\u5207\u7247\u00b6","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/jupyter/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-numpy/#134-ndarray","title":"1.3.4 ndarray\u5bf9\u8c61\u7684\u65b9\u6cd5\u00b6","text":"<pre><code>sum()/mean()/max()/min()/var()/std()/median()/cumsum()\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/jupyter/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-numpy/#135","title":"1.3.5 \u5e7f\u64ad\u673a\u5236\u00b6","text":"<p>\u5e7f\u64ad\u673a\u5236\u7684\u524d\u63d0\u6761\u4ef6\uff08\u5fc5\u987b\u6ee1\u8db3\u5176\u4e2d\u4e00\u4e2a\uff09\uff1a</p> <ol> <li>\u4e24\u4e2a\u6570\u7ec4\u7684\u540e\u7f18\u7ef4\u5ea6\uff08shape\u5c5e\u6027\u4ece\u540e\u5f80\u524d\u770b\uff09\u76f8\u540c\u3002</li> <li>\u4e24\u4e2a\u6570\u7ec4\u7684\u540e\u7f18\u7ef4\u5ea6\u4e0d\u540c\uff0c\u4f46\u662f\u5176\u4e2d\u4e00\u65b9\u4e3a1\u3002</li> </ol> <p>\u6ee1\u8db3\u5e7f\u64ad\u673a\u5236\u662f\u4e3a\u4e86\u6cbf\u7740\u7f3a\u5931\u7684\u8f74\u6216\u8005\u6cbf\u7740\u7ef4\u5ea6\u4e3a1\u7684\u8f74\u5e7f\u64ad\u81ea\u5df1\uff0c\u6700\u7ec8\u8ba9\u5f62\u72b6\u53d8\u5f97\u4e00\u81f4\u3002</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/jupyter/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-pandas/","title":"\u5b9e\u64cdPandas","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/jupyter/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-pandas/#pandas","title":"\u5b9e\u64cdPandas\u00b6","text":""},{"location":"%E8%AF%AD%E8%A8%80/Python/jupyter/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-pandas/","title":"\u8d44\u6599\u00b6","text":"<ul> <li>\u89c6\u9891</li> <li>\u6587\u6863</li> </ul>"},{"location":"%E8%AF%AD%E8%A8%80/Python/jupyter/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-pandas/#11-pandas","title":"1.1 Pandas\u7684\u5e94\u7528\u00b6","text":"<p>Pandas \u6838\u5fc3\u7684\u6570\u636e\u7c7b\u578b\u662fSeries\uff08\u6570\u636e\u7cfb\u5217\uff09\u3001DataFrame\uff08\u6570\u636e\u7a97/\u6570\u636e\u6846\uff09\uff0c\u5206\u522b\u7528\u4e8e\u5904\u7406\u4e00\u7ef4\u548c\u4e8c\u7ef4\u7684\u6570\u636e\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3aIndex\u7684\u7c7b\u578b\u53ca\u5176\u5b50\u7c7b\u578b\uff0c\u5b83\u4eec\u4e3aSeries\u548cDataFrame\u63d0\u4f9b\u4e86\u7d22\u5f15\u529f\u80fd\u3002</p> <ol> <li><code>Series</code>: \u6570\u636e\u7cfb\u5217\uff0c\u4ee3\u8868\u4e00\u7ef4\u6570\u636e\uff0c\u6bd4numpy\u4e2d\u7684\u4e00\u4f4d\u6570\u7ec4\u5f3a\u5927</li> <li><code>DataFrame</code>: \u6570\u636e\u7a97/\u6570\u636e\u6846/\u6570\u636e\u8868\uff0c\u4ee3\u8868\u4e8c\u7ef4\u6570\u636e\uff0c\u5c01\u88c5\u4e86\u6570\u636e\u5206\u6790\u5e38\u7528\u7684\u5404\u79cd\u65b9\u6cd5\u3002</li> <li><code>Index</code>: \u7d22\u5f15\uff0c\u4e3a<code>Series</code>\u548c<code>DataFrame</code>\u63d0\u4f9b\u6570\u636e\u7d22\u5f15\u670d\u52a1\u3002</li> </ol>"}]}